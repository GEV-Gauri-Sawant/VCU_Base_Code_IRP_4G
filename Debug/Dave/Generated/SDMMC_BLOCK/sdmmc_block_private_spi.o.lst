   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "sdmmc_block_private_spi.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_SPI_CH_GetStatusFlag,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_SPI_CH_GetStatusFlag:
  25              	.LFB254:
  26              	 .file 1 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_spi.h"
   1:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
   2:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @file xmc_spi.h
   3:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @date 2020-12-05
   4:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
   5:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @cond
   6:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *****************************************************************************
   7:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
   9:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * All rights reserved.
  11:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  12:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  14:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * do so, all subject to the following:
  20:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  21:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * The copyright notices in the Software and this entire statement, including
  22:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * the above license grant, this restriction and the following disclaimer,
  23:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * all derivative works of the Software, unless such copies or derivative
  25:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * works are solely in the form of machine-executable object code generated by
  26:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * a source language processor.
  27:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  28:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * DEALINGS IN THE SOFTWARE.
  35:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  36:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * To improve the quality of the software, users are encouraged to share
  37:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * at XMCSupport@infineon.com.
  39:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *****************************************************************************
  40:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  41:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Change History
  42:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * --------------
  43:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  44:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-02-20:
  45:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Initial
  46:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  47:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-05-20:
  48:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Documentation improved <br>
  49:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetSlaveSelectDelay(), XMC_SPI_CH_TriggerServiceRequest() and
  50:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_SelectInterruptNodePointer() <br>
  51:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetInterwordDelaySCLK() <br>
  52:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  53:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-06-20:
  54:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  55:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  56:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-24:
  57:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_SPI_CH_DisableDelayCompensation()
  58:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_EnableDelayCompensation() <br>
  59:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  60:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-27:
  61:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for external input for BRG configuration:XMC_SPI_CH_ConfigExternalInputSignalTo
  62:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  63:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-01:
  64:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br>
  65:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_EVENT_t enum for supporting XMC_SPI_CH_EnableEvent() and XMC_SPI_CH_Di
  66:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *       for supporting multiple events configuration <br>
  67:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  68:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-08:
  69:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Adding API for configuring the receiving clock phase in the slave:XMC_SPI_CH_DataLatchedIn
  70:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  71:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-04-10:
  72:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added an API for configuring the transmit mode:XMC_SPI_CH_SetTransmitMode() <br>
  73:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  74:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-05-20:
  75:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_EnableDataTransmission() and XMC_SPI_CH_DisableDataTransmission()
  76:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  77:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-03-30:
  78:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Fix XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX macro value
  79:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  80:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-05-07:
  81:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added normal_divider_mode to XMC_SPI_CH_CONFIG_t configuration structure.
  82:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *       It selects normal divider mode for baudrate generator instead of default fractional divide
  83:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetBaudrateEx()
  84:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  85:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 2019-09-04:
  86:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *    - Added XMC_SPI_CLOCK_MODE_t enum
  87:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  88:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 2020-12-05:
  89:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *    - Added XMC_SPI_CH_InitEx() that allows user select if automatic baudrate configuration shoul
  90:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  91:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @endcond
  92:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
  93:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
  94:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
  95:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #ifndef XMC_SPI_H
  96:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI_H
  97:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
  98:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
  99:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * HEADER FILES
 100:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 101:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #include "xmc_usic.h"
 102:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 103:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 104:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup XMClib XMC Peripheral Library
 105:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 106:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 107:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 108:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 109:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup SPI
 110:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @brief Synchronous serial channel driver for SPI-like communication.
 111:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 112:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * The SPI driver uses Universal Serial Interface Channel(USIC) module.
 113:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * The USIC module supports multiple data lines for SPI communication. \n
 114:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Full duplex communication with 2 separate lines for transmission and reception.
 115:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Half duplex communication with 1 common line shared for transmission and reception.
 116:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Dual mode communication with 2 common lines shared for transmission and reception.
 117:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Quad mode communication with 4 common lines shared for transmission and reception.<br><br>
 118:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 119:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver provides structures, enumerations and APIs for configuring the USIC channel for SPI c
 120:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * and also for data transaction.<br>
 121:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver features:
 122:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Configuration structure XMC_SPI_CH_CONFIG_t and SPI initialization function XMC_SPI_CH_Init()
 123:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of protocol word and frame length using XMC_SPI_CH_SetWordLength(), XMC_
 124:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows manipulation of data frame at runtime using XMC_SPI_CH_EnableSOF(), XMC_SPI_CH_EnableE
 125:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  XMC_SPI_CH_EnableSlaveSelect(), XMC_SPI_CH_DisableSlaveSelect()
 126:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides APIs for transmitting data and receiving data using XMC_SPI_CH_Transmit(), XMC_SPI_C
 127:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of shift clock using XMC_SPI_CH_ConfigureShiftClockOutput()
 128:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides enumeration of SPI protocol events using @ref XMC_SPI_CH_STATUS_FLAG_t
 129:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 130:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 131:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 132:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 133:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * MACROS
 134:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 135:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 136:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC0)
 137:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH0 XMC_USIC0_CH0 /**< SPI0 channel 0 base address */
 138:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH1 XMC_USIC0_CH1 /**< SPI0 channel 1 base address */
 139:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 140:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 141:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC1)
 142:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH0 XMC_USIC1_CH0 /**< SPI1 channel 0 base address */
 143:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH1 XMC_USIC1_CH1 /**< SPI1 channel 1 base address */
 144:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 145:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 146:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC2)
 147:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH0 XMC_USIC2_CH0 /**< SPI2 channel 0 base address */
 148:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH1 XMC_USIC2_CH1 /**< SPI2 channel 1 base address */
 149:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 150:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 151:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 152:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * ENUMS
 153:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 154:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 155:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 156:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines return status of SPI driver APIs
 157:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 158:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS
 159:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 160:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_OK,    /**< Status of the Module: OK */
 161:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_ERROR, /**< Status of the Module: ERROR */
 162:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_BUSY   /**< The Module is busy */
 163:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_t;
 164:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 165:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the SPI bus mode
 166:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 167:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BUS_MODE
 168:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 169:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_MASTER, /**< SPI Master */
 170:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_SLAVE   /**< SPI Slave */
 171:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BUS_MODE_t;
 172:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 173:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 174:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the slave select signals SELO[7:0] in relation to the master slave selec
 175:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 176:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SEL_MSLS_INV
 177:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 178:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_SAME_AS_MSLS = 0x0UL, /**< The SELO outputs have the same polarity as the MS
 179:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                   (active high) */
 180:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_INV_TO_MSLS = 0x1UL << USIC_CH_PCR_SSCMode_SELINV_Pos /**< The SELO outputs 
 181:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   polarity to the M
 182:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   (active low)*/
 183:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t;
 184:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 185:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 186:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the data inputs.
 187:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 188:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_DATA_POLARITY
 189:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 190:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_DIRECT = 0x0UL, /**< The polarity of the data line is not inverted */
 191:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_INVERT = 0x1UL << USIC_CH_DX2CR_DPOL_Pos /**< The polarity of the data l
 192:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_DATA_POLARITY_t;
 193:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 194:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 195:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines Slave Select lines
 196:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 197:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SELECT
 198:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 199:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_0 = 1UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 0 */
 200:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_1 = 2UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 1 */
 201:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_2 = 4UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 2 */
 202:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_3 = 8UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 3 */
 203:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_4 = 16UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 4 */
 204:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_5 = 32UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 5 */
 205:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_6 = 64UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 6 */
 206:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_7 = 128UL << USIC_CH_PCR_SSCMode_SELO_Pos /**< Slave Select line 7 */
 207:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SELECT_t;
 208:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 209:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 210:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI specific events
 211:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 212:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_EVENT
 213:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 214:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 215:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 216:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 217:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 218:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 219:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 220:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 221:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 222:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_PARITY_ERROR = USIC_CH_PCR_SSCMode_PARIEN_Msk >> 13U,       /**< Parity error ev
 223:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_MSLS_CHANGE =  USIC_CH_PCR_SSCMode_MSLSIEN_Msk >> 13U,      /**< Master slave se
 224:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DX2TIEN_ACTIVATED = USIC_CH_PCR_SSCMode_DX2TIEN_Msk >> 13U  /**< Slave select in
 225:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_EVENT_t;
 226:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 227:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 228:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI event status
 229:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 230:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS_FLAG
 231:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 232:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS = USIC_CH_PSR_SSCMode_MSLS_Msk,                          /**< Status 
 233:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             select(
 234:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2S = USIC_CH_PSR_SSCMode_DX2S_Msk,                          /**< Status 
 235:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input(D
 236:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS_EVENT_DETECTED = USIC_CH_PSR_SSCMode_MSLSEV_Msk,         /**< Status 
 237:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             output 
 238:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2T_EVENT_DETECTED = USIC_CH_PSR_SSCMode_DX2TEV_Msk,         /**< Status 
 239:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input s
 240:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_PARITY_ERROR_EVENT_DETECTED = USIC_CH_PSR_SSCMode_PARERR_Msk, /**< Indicat
 241:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             parity 
 242:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_SSCMode_RSIF_Msk,     /**< Status 
 243:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 244:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_SSCMode_DLIF_Msk,          /**< Status 
 245:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_SSCMode_TSIF_Msk,      /**< Status
 246:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 247:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_SSCMode_TBIF_Msk,    /**< Status 
 248:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 249:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_RIF_Msk,             /**< Status 
 250:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_AIF_Msk, /**< Status 
 251:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             receive
 252:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_SSCMode_BRGIF_Msk/**< Status 
 253:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             generat
 254:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_FLAG_t;
 255:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 256:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 257:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines input frequency sources for slave select signal delay configuration.
 258:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 259:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY
 260:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 261:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPDIV = 0x0UL, /**< Output of PDIV divider: FPDIV */
 262:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPPP  = 0x1UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< P
 263:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FSCLK = 0x2UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< S
 264:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FMCLK = 0x3UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos  /**< M
 265:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_t;
 266:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 267:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 268:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Define data and clock input stages
 269:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 270:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT
 271:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 272:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN0 = 0UL,         /**< Data input stage 0 */
 273:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SCLKIN = 1UL, /**< Clock input stage */
 274:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SELIN = 2UL,  /**< Slave select input stage */
 275:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN1 = 3UL,         /**< Data input stage 1 */
 276:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN2 = 4UL,         /**< Data input stage 2 */
 277:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN3 = 5UL          /**< Data input stage 3 */
 278:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_t;
 279:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 280:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 281:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Define SPI data transfer mode
 282:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 283:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_MODE
 284:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 285:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD = 0UL,            /**< SPI standard full duplex mode */
 286:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX = 5UL, /**< SPI standard half duplex mode */
 287:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_DUAL = 6UL,                /**< SPI half duplex mode with dual data lines */
 288:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_QUAD = 7UL                 /**< SPI half duplex mode with quad data lines */
 289:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_MODE_t;
 290:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 291:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 292:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 293:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock passive level
 294:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 295:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 296:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 297:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay disabled */
 298:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 299:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay disabled */
 300:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 301:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay enabled */
 302:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 303:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay enabled */
 304:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 305:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 306:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 307:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 308:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI clock modes
 309:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 310:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 311:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /* CPOL=0 is a clock which idles at 0, and each cycle consists of a pulse of 1. That is, the leadin
 312:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /* CPOL=1 is a clock which idles at 1, and each cycle consists of a pulse of 0. That is, the leadin
 313:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /* CPHA=0, the "out" side changes the data on the trailing edge of the preceding clock cycle, while
 314:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****    The out side holds the data valid until the trailing edge of the current clock cycle. For the fi
 315:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /* For CPHA=1, the "out" side changes the data on the leading edge of the current clock cycle, whil
 316:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   The out side holds the data valid until the leading edge of the following clock cycle. For the la
 317:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CLOCK_MODE
 318:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 319:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_0_CPHA_0 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
 320:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_0_CPHA_1 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
 321:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_1_CPHA_0 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
 322:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CPOL_1_CPHA_1 = XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED
 323:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CLOCK_MODE_t;
 324:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 325:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 326:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock output
 327:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** */
 328:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT
 329:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 330:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,  /**< Baudrate 
 331:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1  = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1   /**< Clock obta
 332:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 333:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 334:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 335:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI channel interrupt node pointers
 336:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 337:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INTERRUPT_NODE_POINTER
 338:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 339:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 340:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 341:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 342:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 343:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 344:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INTERRUPT_NODE_POINTER_t;
 345:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 346:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 347:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * DATA STRUCTURES
 348:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** ***************************************************************************************************
 349:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 350:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 351:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Structure for initializing SPI channel.
 352:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 353:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** typedef struct XMC_SPI_CH_CONFIG
 354:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 355:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   uint32_t baudrate;							                /**< Module baud rate for communication */
 356:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   bool normal_divider_mode;                       /**< Selects normal divider mode for baudrate gen
 357:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_t bus_mode;                 /**< Bus mode: Master/Slave */
 358:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t selo_inversion; /**< Enable inversion of Slave select signal rela
 359:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                                                        MSLS signal  */
 360:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;          /**< Enable parity check for transmit and receive
 361:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_CONFIG_t;
 362:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 363:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 364:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * API PROTOTYPES
 365:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 366:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 367:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #ifdef __cplusplus
 368:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** extern "C" {
 369:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 370:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 371:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 372:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 373:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 374:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 375:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param init_brg Selects if the baudrate generator should be configured automatically.
 376:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 377:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 378:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 379:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 380:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 381:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 382:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 383:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 384:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 385:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 386:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 387:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 388:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 389:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 390:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 391:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 392:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 393:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 394:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 395:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 396:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 397:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 398:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 399:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 400:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 401:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_InitEx(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const config, bool 
 402:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 403:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 404:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 405:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 406:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 407:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 408:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 409:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 410:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 411:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 412:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 413:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 414:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 415:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 416:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 417:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 418:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 419:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 420:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 421:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 422:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 423:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 424:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 425:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 426:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 427:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 428:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 429:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 430:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 431:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 432:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Init(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const
 433:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 434:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_InitEx(channel, config, true);
 435:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** }
 436:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 437:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 438:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 439:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 440:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 441:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 442:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 443:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected USIC channel to operate in SPI mode, by setting CCR.MODE bits.\n\n
 444:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * It should be executed after XMC_SPI_CH_Init() during initialization. By invoking XMC_SPI_CH_Stop
 445:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * to IDLE state. Call XMC_SPI_CH_Start() to set the SPI mode again, as needed later in the program
 446:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 447:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 448:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop()
 449:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 450:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Start(XMC_USIC_CH_t *const channel)
 451:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 452:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   /* USIC channel in SPI mode */
 453:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_SPI);
 454:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** }
 455:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 456:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 457:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 458:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 459:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for stopping is processed
 460:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the USIC channel is successfully put to IDLE mode. \n
 461:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_BUSY- If the USIC channel is busy transmitting data.
 462:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 463:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 464:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected SPI channel to IDLE mode, by clearing CCR.MODE bits.\n\n
 465:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * After calling XMC_SPI_CH_Stop, channel is IDLE mode. So no communication is supported. XMC_SPI_C
 466:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * invoked to start the communication again.
 467:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 468:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 469:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Start()
 470:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 471:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_Stop(XMC_USIC_CH_t *const channel);
 472:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 473:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 474:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 475:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 476:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 477:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 478:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 479:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 480:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 481:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 482:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 483:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 484:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 485:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 486:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 487:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 488:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 489:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 490:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 491:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 492:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param normal_divider_mode Selects normal divider mode for baudrate generator instead of default
 493:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 494:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 495:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 496:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 497:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 498:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 499:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 500:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 501:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 502:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop(), XMC_USIC_CH_GetSCLKFrequency()
 503:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 504:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, const uint32_t rate, boo
 505:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 506:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 507:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 508:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param slave Slave select signal.\n
 509:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ref XMC_SPI_CH_SLAVE_SELECT_t for valid values.
 510:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 511:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 512:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 513:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 514:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable the selected slave signal by setting PCR.SELO bits.\n\n
 515:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Each slave is connected with one slave select signal. This is not configured in XMC_SPI_CH_Init(
 516:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() with required \a slave to to start the communication. After finis
 517:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * communication XMC_SPI_CH_DisableSlaveSelect() can be invoked to disable the slaves.
 518:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 519:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 520:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableSlaveSelect()
 521:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 522:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableSlaveSelect(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_SLAVE_SELECT_t sla
 523:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 524:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 525:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant ponter to XMC_USIC_CH_t, pointing to the USIC channel base address.
 526:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 527:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 528:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 529:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 530:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Disable all the slave signals by clearing PCR.SELO bits.\n\n
 531:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() has to be invoked to start the communication with the desired sla
 532:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 533:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 534:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect()
 535:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 536:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableSlaveSelect(XMC_USIC_CH_t *const channel);
 537:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 538:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 539:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 540:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 541:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 542:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 543:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 544:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 545:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 546:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. \n\n
 547:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * By enabling this the direction of the data pin is updated by hardware itself. Before transmittin
 548:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * mode to ensure the proper communication.
 549:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 550:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 551:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Transmit()
 552:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 553:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetTransmitMode(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE
 554:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 555:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   channel->CCR = (channel->CCR & (uint32_t)(~USIC_CH_CCR_HPCEN_Msk)) |
 556:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****                  (((uint32_t) mode << USIC_CH_CCR_HPCEN_Pos) & (uint32_t)USIC_CH_CCR_HPCEN_Msk);
 557:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** }
 558:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 559:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 560:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 561:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param data Data to be transmitted
 562:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 563:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 564:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 565:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 566:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 567:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 568:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Puts the data into FIFO, if FIFO mode is enabled or else into standard buffer, by setting the pr
 569:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. By enabling this the 
 570:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * pin is updated by hardware itself. TCI(Transmit Control Information) allows dynamic control of b
 571:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * and pin direction during data transfers by writing to SCTR.DSM and SCTR.HPCDIR bit fields. To su
 572:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * update, TCSR.HPCMD(Hardware Port control) will be enabled during the initialization using XMC_SP
 573:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 574:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 575:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 576:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 577:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 578:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_SPI_CH_MODE_t
 579:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 580:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 581:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 582:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 583:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 584:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 585:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 586:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 587:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 588:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Transmits a dummy data(FFFFH) to provide clock for slave and receives the data from the slave.\n
 589:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive() receives the data and places it into buffer based on the FIFO selection. Af
 590:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be invoked to read the data from the buffers.
 591:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 592:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 593:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedDaa()
 594:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 595:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Receive(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE_t mode)
 596:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 597:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   /* Transmit dummy data */
 598:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_Transmit(channel, (uint16_t)0xffffU, (XMC_SPI_CH_MODE_t)((uint16_t)mode & 0xfffbU));
 599:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** }
 600:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 601:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 602:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 603:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 604:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint16_t Data read from the receive buffer.
 605:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 606:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 607:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Reads data from the receive buffer based on the FIFO selection.\n\n
 608:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Invocation of XMC_SPI_CH_Receive() receives the data and place it into receive buffer. After rec
 609:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be used to read the data from the buffer.
 610:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 611:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 612:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 613:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 614:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** uint16_t XMC_SPI_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 615:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 616:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 617:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 618:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 619:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 620:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 621:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 622:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from LSB to MSB, by clearing SCTR.SDIR bit.\n\n
 623:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. Invoke XMC_SPI_CH_SetBitOrderLsbFirst() to set di
 624:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * the program.
 625:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 626:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 627:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderMsbFirst()
 628:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 629:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderLsbFirst(XMC_USIC_CH_t *const channel)
 630:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 631:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR &= (uint32_t)~USIC_CH_SCTR_SDIR_Msk;
 632:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** }
 633:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 634:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 635:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 636:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 637:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 638:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 639:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 640:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from MSB to LSB, by setting SCTR.SDIR bit.\n\n
 641:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. This is not set during XMC_SPI_CH_Init().
 642:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Invoke XMC_SPI_CH_SetBitOrderMsbFirst() to set direction as needed in the program.
 643:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 644:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 645:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderLsbFirst()
 646:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 647:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderMsbFirst(XMC_USIC_CH_t *const channel)
 648:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
 649:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR |= (uint32_t)USIC_CH_SCTR_SDIR_Msk;
 650:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** }
 651:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 652:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 653:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 654:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be enabled.
 655:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 656:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 657:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 658:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 659:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 660:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 661:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Enables the SPI protocol specific events, by configuring PCR register.\n\n
 662:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Events can be enabled as needed using XMC_SPI_CH_EnableEvent().
 663:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent() can be used to disable the events.
 664:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 665:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 666:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent()
 667:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 668:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 669:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 670:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 671:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 672:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be disabled.
 673:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 674:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 675:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 676:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 677:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 678:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 679:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Disables the SPI protocol specific events, by configuring PCR register.\n\n
 680:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * After disabling the events, XMC_SPI_CH_EnableEvent() has to be invoked to re-enable the events.
 681:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 682:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 683:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableEvent()
 684:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 685:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 686:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** 
 687:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** /**
 688:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 689:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 690:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint32_t Status of SPI protocol events.
 691:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 692:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 693:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * Returns the status of the events, by reading PSR register.\n\n
 694:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * This indicates the status of the all the events, for SPI communication.
 695:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  *
 696:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 697:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_ClearStatusFlag()
 698:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****  */
 699:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE uint32_t XMC_SPI_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 700:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** {
  27              	 .loc 1 700 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 701:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h ****   return channel->PSR_SSCMode;
  43              	 .loc 1 701 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 9B6C     	 ldr r3,[r3,#72]
 702:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_spi.h **** }
  46              	 .loc 1 702 0
  47 000c 1846     	 mov r0,r3
  48 000e 0C37     	 adds r7,r7,#12
  49              	.LCFI3:
  50              	 .cfi_def_cfa_offset 4
  51 0010 BD46     	 mov sp,r7
  52              	.LCFI4:
  53              	 .cfi_def_cfa_register 13
  54              	 
  55 0012 5DF8047B 	 ldr r7,[sp],#4
  56              	.LCFI5:
  57              	 .cfi_restore 7
  58              	 .cfi_def_cfa_offset 0
  59 0016 7047     	 bx lr
  60              	 .cfi_endproc
  61              	.LFE254:
  63              	 .section .text.SPI_MASTER_GetFlagStatus,"ax",%progbits
  64              	 .align 2
  65              	 .thumb
  66              	 .thumb_func
  68              	SPI_MASTER_GetFlagStatus:
  69              	.LFB302:
  70              	 .file 2 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER/spi_master.h"
   1:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
   2:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @file spi_master.h
   3:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @date 2016-06-20
   4:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
   5:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * NOTE:
   6:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
   8:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @cond
   9:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  10:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPI_MASTER v4.3.30 - Configures the properties of USIC channel to support SPI mode of communicat
  11:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  12:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  13:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * All rights reserved.
  14:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  15:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * following conditions are met:
  17:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  18:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   disclaimer.
  20:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  21:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  24:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   products derived from this software without specific prior written permission.
  26:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  27:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  35:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  38:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  39:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Change History
  40:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * --------------
  41:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  42:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-02-16:
  43:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Initial version<br>
  44:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  45:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-02-20:
  46:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Added 'SPI_MASTER_INPUT_INVALID' in SPI_MASTER_INPUT_t to support dynamic mode change from
  47:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       as well<br>
  48:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  49:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-05-08:
  50:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_SetBaudRate() and SPI_MASTER_Transfer() are added<br>
  51:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - C++ guard applied to API section only<br>
  52:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - File guard updated according to the guidelines<br>
  53:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "SPI_MASTER_STATUS_BUFFER_INVALID" is added in SPI_MASTER_STATUS_t enum<br>
  54:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "leading_trailing_delay" is added in APP config structure<br>
  55:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "tx_data_dummy" is added in Dynamic config structure to support SPI_MASTER_Transfer() API<
  56:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - XMC_ASSERT() are for NULL handle check in inline APIs<br>
  57:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_lTransmitHandler(), SPI_MASTER_lReceiveHandler(), SPI_MASTER_lProtocolHandler()
  58:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       spi_master_conf.c file<br>
  59:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  60:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-06-20:
  61:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - For SPI_MASTER_Transfer(), SPI_MASTER_Receive(), SPI_MASTER_Transmit() APIs, the input dat
  62:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       from 16-bit to 8-bit.
  63:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - word_length fields is added in SPI_MASTER_DYNAMIC_CONFIG_t, to support runtime change.
  64:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Abort API are updated to return the status.
  65:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  66:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-07-07:
  67:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - DYNAMIC_CONFIG_t is renamed as RUNTIME_t
  68:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  69:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-09-30:
  70:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - New SPI_MASTER_STATUS_MODE_MISMATCH item is added in SPI_MASTER_STATUS_t
  71:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  72:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-10-08:
  73:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_DMA_MAXCOUNT is exposed to the user.
  74:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - dx0_input_half_duplex is added to support while changing the mode to half duplex mode.
  75:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_IsTxBusy() and SPI_MASTER_IsRxBusy() APIs are added to return the current state
  76:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Documentation update.
  77:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  78:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-10-14:
  79:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - new variable "spi_master_config_mode" to store the actual mode generated during initialisa
  80:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  81:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2016-04-07:
  82:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - runtime variable are made as volatile.
  83:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  84:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2021-01-08:
  85:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Modified check for minimum XMCLib version
  86:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  87:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcond
  88:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  89:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
  90:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
  91:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #ifndef SPI_MASTER_H
  92:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_H
  93:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
  94:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * HEADER FILES
  95:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  96:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #include "xmc_gpio.h"
  97:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #include "xmc_scu.h"
  98:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #include "xmc_spi.h"
  99:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #include "DAVE_Common.h"
 100:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #include "spi_master_conf.h"
 101:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 102:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #if((SPI_MASTER_DMA_TRANSMIT_MODE == 1U) || (SPI_MASTER_DMA_RECEIVE_MODE == 1U))
 103:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #include "GLOBAL_DMA/global_dma.h"
 104:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 105:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 106:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 107:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * MACROS
 108:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
 109:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_XMC_LIB_MAJOR_VERSION 2
 110:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_XMC_LIB_MINOR_VERSION 1
 111:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_XMC_LIB_PATCH_VERSION 6
 112:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 113:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #if !((XMC_LIB_MAJOR_VERSION > SPI_MASTER_XMC_LIB_MAJOR_VERSION) ||\
 114:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****       ((XMC_LIB_MAJOR_VERSION == SPI_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > SPI_
 115:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****       ((XMC_LIB_MAJOR_VERSION == SPI_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == SPI
 116:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #error "SPI_MASTER requires XMC Peripheral Library v2.1.6 or higher"
 117:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 118:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 119:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /*
 120:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Represents the maximum data size for DMA transaction*/
 121:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_DMA_MAXCOUNT (4095U)
 122:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 123:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * ENUMS
 124:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
 125:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 126:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @ingroup SPI_MASTER_enumerations
 127:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @{
 128:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 129:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 130:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Return status of the SPI_MASTER APP
 131:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 132:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_STATUS
 133:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
 134:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_SUCCESS = 0U,   /**< Status success */
 135:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_FAILURE,        /**< Status failure */
 136:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_BUSY,           /**< Busy state */
 137:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_BUFFER_INVALID,  /**< If input buffer and length is invalid */
 138:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_MODE_MISMATCH   /**< API invoked by a handle configured with different mode.
 139:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                          e.g, If SPI_MASTER_StartTransmitDMA is invoked for an inst
 140:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                          which has transmit mode configured as "Interrupt", will
 141:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                          return this status.*/
 142:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_STATUS_t;
 143:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 144:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 145:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Service ID for Transmit, Receive and Parity events
 146:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 147:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_SR_ID
 148:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
 149:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_0 = 0U, /**< SR-0 */
 150:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_1,      /**< SR-1 */
 151:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_2,      /**< SR-2 */
 152:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_3,      /**< SR-3 */
 153:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_4,      /**< SR-4 */
 154:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_5       /**< SR-5 */
 155:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_SR_ID_t;
 156:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 157:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 158:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Slave select signals
 159:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 160:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_SS_SIGNAL
 161:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
 162:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_0 = 0U, /**< Slave select 0 */
 163:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_1,      /**< Slave select 1 */
 164:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_2,      /**< Slave select 2 */
 165:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_3,      /**< Slave select 3 */
 166:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_4,      /**< Slave select 4 */
 167:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_5,      /**< Slave select 5 */
 168:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_6,      /**< Slave select 6 */
 169:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_7       /**< Slave select 7 */
 170:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_SS_SIGNAL_t;
 171:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 172:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 173:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enum type which defines Receive input list
 174:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 175:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_INPUT
 176:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
 177:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_A = 0U, /**< Input-A */
 178:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_B,      /**< Input-B */
 179:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_C,      /**< Input-C */
 180:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_D,      /**< Input-D */
 181:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_E,      /**< Input-E */
 182:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_F,      /**< Input-F */
 183:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_G,      /**< Input-G */
 184:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_INVALID /**< This is to check during mode switch */
 185:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_INPUT_t;
 186:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 187:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 188:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 189:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 190:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_TRANSFER_MODE
 191:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
 192:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 193:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 194:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 195:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_TRANSFER_MODE_t;
 196:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 197:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @}
 198:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 199:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 200:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** typedef void (*SPI_MASTER_functionhandler)(void);
 201:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** typedef SPI_MASTER_STATUS_t (*SPI_MASTER_lInit_functionhandler)(void);
 202:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 203:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 204:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** * DATA STRUCTURES
 205:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** ***************************************************************************************************
 206:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 207:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** * @ingroup SPI_MASTER_datastructures
 208:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** * @{
 209:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** */
 210:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 211:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 212:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Port pin selection for communication
 213:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 214:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_GPIO
 215:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
 216:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_PORT_t* port;  /**< Reference to the port configuration */
 217:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t pin;  /**< Selected pin */
 218:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_GPIO_t;
 219:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 220:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 221:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Pin configuration for the selected pins
 222:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 223:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_GPIO_CONFIG
 224:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
 225:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_CONFIG_t port_config;  /**< Properties of the port pin */
 226:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_HWCTRL_t hw_control;  /**<  hardware control characteristics of the pin */
 227:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_SLAVE_SELECT_t slave_select_ch;  /**<  Indicates the mapped slave select line  */
 228:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_GPIO_CONFIG_t;
 229:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 230:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 231:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Configuration parameters of SPI_MASTER APP
 232:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 233:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  typedef struct SPI_MASTER_CONFIG
 234:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
 235:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_CONFIG_t * const channel_config;         /**< Reference to SPI configuration structure
 236:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_lInit_functionhandler fptr_spi_master_config;  /**< Function pointer to configure the 
 237:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 238:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   /* Port configuration */
 239:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_0_pin;               /**< Reference to mosi 0 pin */
 240:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_0_pin_config; /**< Reference to mosi 0 pin configurati
 241:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_1_pin;               /**< Reference to mosi 1 pin */
 242:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_1_pin_config; /**< Reference to mosi 1 pin configurati
 243:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_2_pin;               /**< Reference to mosi 2 pin */
 244:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_2_pin_config; /**< Reference to mosi 2 pin configurati
 245:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_3_pin;               /**< Reference to mosi 3 pin */
 246:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_3_pin_config; /**< Reference to mosi 3 pin configurati
 247:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const sclk_out_pin;             /**< Reference to sclk out pin */
 248:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const sclk_out_pin_config;/**< Reference to shift clock pin confi
 249:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const slave_select_pin[8];      /**< Reference to slave select pin */
 250:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const slave_select_pin_config[8]; /**< Reference to slave select 
 251:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler tx_cbhandler;            /**< callback handler for end of transmission
 252:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler rx_cbhandler;            /**< callback handler for end of reception */
 253:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler parity_cbhandler;        /**< callback handler for end of parity error
 254:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   /* FIFO configuration */
 255:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_FIFO_SIZE_t tx_fifo_size;               /**< Number of FIFO entries assigned to the t
 256:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_FIFO_SIZE_t rx_fifo_size;               /**< Number of FIFO entries assigned to the r
 257:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 258:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   /* Clock Settings */
 259:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t shift_clk_passive_level; /**< Baudrate Generator shift
 260:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_t transmit_mode;           /**< Indicates how the transmit mode is being
 261:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_t receive_mode;            /**< Indicates how the receive mode is being 
 262:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_MODE_t  spi_master_config_mode;          /**< Defines the SPI transmit mode being used
 263:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t slave_select_lines;                         /**< Number of slave select lines being used 
 264:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t leading_trailing_delay;                     /**< Delay before and after each frame in ter
 265:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t tx_sr;                           /**< Service request number assigned to trans
 266:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t rx_sr;                           /**< Service request number assigned to recei
 267:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t parity_sr;                       /**< Service request number assigned to recei
 268:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_CONFIG_t;
 269:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 270:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 271:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Structure to hold the dynamic variables for the SPI_MASTER communication.
 272:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 273:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_RUNTIME
 274:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
 275:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t word_length;                              /**< Indicates the length of the data word */
 276:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t tx_data_count;                            /**< Number of bytes of data to be transmitted
 277:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile uint32_t tx_data_index;                   /**< Index to the byte to be transmitted next 
 278:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           buffer */
 279:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t rx_data_count;                            /**< Number of bytes of data to be received*/
 280:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile uint32_t rx_data_index;                   /**< Indicates the number of bytes currently a
 281:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           rx_data buffer */
 282:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t* rx_data;                                  /**< Pointer to the receive data buffer*/
 283:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t* tx_data;                                  /**< Pointer to the transmit data buffer*/
 284:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile XMC_SPI_CH_MODE_t  spi_master_mode;       /**< Defines the SPI transmit mode being used 
 285:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_t dx0_input;                      /**< DX0 input channel used for Rx input, This
 286:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           mode is changed to full duplex mode */
 287:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_t dx0_input_half_duplex;          /**< DX0 input channel used for Rx input, This
 288:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           mode is changed to half duplex mode */
 289:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  rx_busy;                            /**< Status flag to indicate busy when a recep
 290:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  tx_busy;                            /**< Status flag to indicate busy when a trans
 291:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  tx_data_dummy;                      /**< Status flag to indicate, dummy data is be
 292:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  rx_data_dummy;                      /**< Status flag to indicate, receive data has
 293:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           not */
 294:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  } SPI_MASTER_RUNTIME_t;
 295:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 296:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 297:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 298:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Initialization parameters of SPI_MASTER APP
 299:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 300:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER
 301:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
 302:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_t* const channel; /**< Reference to SPI channel */
 303:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_CONFIG_t * const config; /**< Reference to the SPI_MASTER configuration structur
 304:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_RUNTIME_t * const runtime;  /**< Reference to SPI_MASTER dynamic configuration structu
 305:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #if ((SPI_MASTER_DMA_TRANSMIT_MODE == 1U) || (SPI_MASTER_DMA_RECEIVE_MODE == 1U))
 306:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const GLOBAL_DMA_t * const global_dma;
 307:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 308:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 309:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const XMC_DMA_CH_CONFIG_t * const dma_ch_tx_config; /**< Reference to the DMA configuration struc
 310:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 311:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 312:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const XMC_DMA_CH_CONFIG_t * const dma_ch_rx_config; /**< Reference to the DMA configuration struc
 313:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const GLOBAL_DMA_t * const global_dma_rx;
 314:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const uint8_t dma_ch_rx_number;
 315:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 316:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 317:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   const uint8_t dma_ch_tx_number;
 318:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 319:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_t;
 320:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 321:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 322:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @}
 323:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 324:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 325:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** * API Prototypes
 326:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** ***************************************************************************************************
 327:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #ifdef __cplusplus
 328:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** extern "C" {
 329:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 330:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 331:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @ingroup SPI_MASTER_apidoc
 332:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @{
 333:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 334:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 335:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Get SPI_MASTER APP version
 336:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 337:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 338:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 339:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * The function can be used to check application software compatibility with a
 340:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * specific version of the APP.
 341:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 342:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 343:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 344:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 345:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 346:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 347:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 348:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_APP_VERSION_t app_version;
 349:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 350:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 351:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 352:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   app_version = SPI_MASTER_GetAppVersion();
 353:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 354:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if (app_version.major != 4U)
 355:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 356:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     // Probably, not the right version.
 357:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 358:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 359:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   while(1U)
 360:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 361:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 362:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   return 1;
 363:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 364:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 365:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 366:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** DAVE_APP_VERSION_t SPI_MASTER_GetAppVersion(void);
 367:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 368:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 369:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Initialize the SPI channel as per the configuration made in GUI.
 370:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 371:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return SPI_MASTER_STATUS_t: Status of SPI_MASTER driver initialization.\n
 372:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *                    SPI_MASTER_STATUS_SUCCESS - on successful initialization.\n
 373:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *                    SPI_MASTER_STATUS_FAILURE - if initialization fails.\n
 374:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 375:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 376:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Initializes IO pins used for the SPI_MASTER communication and configures USIC registers based on
 377:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * provided in the GUI. Calculates divider values PDIV and STEP for a precise baudrate. It also ena
 378:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * interrupt flags and service request values.
 379:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 380:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 381:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 382:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 383:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 384:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 385:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  int main(void)
 386:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  {
 387:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    DAVE_STATUS_t status;
 388:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 389:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 390:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 391:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    if(status == DAVE_STATUS_SUCCESS)
 392:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 393:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *        while(1U)
 394:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *        {
 395:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *        }
 396:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 397:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    else
 398:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 399:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     XMC_DEBUG("main: Application initialization failed");
 400:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(1U)
 401:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 402:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 403:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 404:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     return 1U;
 405:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 406:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  @endcode
 407:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 408:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Init(SPI_MASTER_t* const handle);
 409:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 410:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 411:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Set the communication mode along with required port configuration.
 412:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 413:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle handle Pointer to static and dynamic content of APP configuration.
 414:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param mode SPI working mode
 415:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 416:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 417:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS  : if updation of settings are successful\n
 418:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE  : if mode is not supported by the selected pins\n
 419:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY     : if SPI channel is busy with transmit or receive operation\
 420:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 421:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 422:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 423:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * To change the mode of communication, it is advised to generate the code in Quad/Dual mode initia
 424:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * the mode will be taken care by the APP.
 425:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <ul>
 426:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for Quad mode, it is possible to change to other modes like Dual, Half 
 427:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for Dual mode, it is possible to change to other modes like Half Duplex
 428:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for full-duplex mode, it is possible to change to Half Duplex only </li
 429:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * </ul>
 430:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * 
 431:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 432:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 433:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 434:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 435:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 436:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 437:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 438:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Precondition:
 439:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Configure the SPI_MASTER APP operation mode as 'Quad SPI'.
 440:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Description:
 441:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //The following code changes the SPI master device mode to Full duplex mode and starts sending 
 442:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //the buffer.
 443:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 444:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 445:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 446:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 447:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 448:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   SPI_MASTER_STATUS_t spi_status;
 449:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon DAVE application.";
 450:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 451:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 452:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 453:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 454:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    spi_status = SPI_MASTER_SetMode(&SPI_MASTER_0, XMC_SPI_CH_MODE_STANDARD);
 455:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    if(spi_status == SPI_MASTER_STATUS_SUCCESS)
 456:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 457:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
 458:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 459:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 460:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 461:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 462:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 463:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 464:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 465:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 466:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 467:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 468:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 469:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 470:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 471:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 472:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_SetMode(SPI_MASTER_t* const handle, const XMC_SPI_CH_MODE_t mode);
 473:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 474:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 475:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Set the required baud rate during runtime.
 476:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 477:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle handle Pointer to static and dynamic content of APP configuration.
 478:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param baud_rate required baud rate
 479:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 480:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 481:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS  : if updation of baud rate is successful\n
 482:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE  : if updation is failed\n
 483:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY     : if SPI channel is busy with other operation\n
 484:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 485:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 486:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 487:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * While setting the baud rate to avoid noise of the port pins, all the pins are changed to input. 
 488:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * required baud again ports are initialised with the configured settings.
 489:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 490:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 491:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 492:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 493:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 494:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 495:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 496:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Description:
 497:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //The following code changes the SPI master baud rate to 9600 and starts sending the data store
 498:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //the buffer.
 499:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 500:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 501:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 502:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 503:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   SPI_MASTER_STATUS_t spi_status;
 504:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon DAVE application.";
 505:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint32_t baud_rate;
 506:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 507:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 508:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 509:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 510:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     baud_rate = 9600U;
 511:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 512:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     spi_status = SPI_MASTER_SetBaudRate(&SPI_MASTER_0, baud_rate);
 513:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 514:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(spi_status == SPI_MASTER_STATUS_SUCCESS)
 515:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 516:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
 517:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 518:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 519:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 520:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 521:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 522:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 523:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 524:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 525:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 526:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 527:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 528:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 529:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 530:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_SetBaudRate(SPI_MASTER_t* const handle, const uint32_t baud_rate);
 531:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 532:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 533:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits the specified number of data words and execute the callback defined in GUI, if 
 534:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 535:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 536:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data
 537:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be transmitted
 538:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 539:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 540:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if transmit is successful\n
 541:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 542:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 543:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 544:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 545:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** * Transmits data using the SPI channel as a master device. Transmission is accomplished using the t
 546:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * as configured in the UI.<br>
 547:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Interrupt:</b><br>
 548:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure
 549:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * a callback function in the APP UI. When the data is fully transmitted, the callback
 550:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed. If transmit FIFO is enabled, the trigger limit is set to 1.
 551:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * So the transmit interrupt will be generated when all the data in FIFO is moved out of FIFO.
 552:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * The APP handle's runtime structure is used to store the data pointer, count, data index
 553:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * and status of transmission. This function only registers a data transmission request if
 554:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * there is no active transmission in progress. Actual data transmission happens in the transmit
 555:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * interrupt service routine. A trigger is generated for the transmit interrupt to start loading
 556:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * the data to the transmit buffer. If transmit FIFO is configured, the data is filled into the FIF
 557:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Transmit interrupt will be generated subsequently when the transmit FIFO is empty. At this
 558:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * point of time, if there is some more data to be transmitted, it is loaded to the FIFO again.
 559:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * When FIFO is not enabled, data is transmitted one byte at a time. On transmission of each byte
 560:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 561:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 562:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 563:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 564:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * the completion of data transmission or use SPI_MASTER_IsTxBusy() API.<br>
 565:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>DMA:</b><br>
 566:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * DMA mode is available only in XMC4x family of microcontrollers. A DMA channel is configured to p
 567:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * data to the SPI channel transmit buffer. This removes the load off the CPU. This API will only c
 568:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * and enable the DMA channel by specifying the data buffer and count of bytes to transmit. Rest is
 569:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * care without the CPU's intervention. User can configure a callback function in the APP UI. When 
 570:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * transmission is complete, the callback function will be executed. FIFO will not be used in DMA m
 571:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Receive start interrupt is configured for triggering the DMA channel. So each byte is transmitte
 572:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * the background through the DMA channel.
 573:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * If the callback function is not configured, \a handle->runtime->tx_busy flag can be checked to
 574:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * verify if the transmission is complete.
 575:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Direct:</b><br>
 576:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be transmitted using polling method. Status flags are used to check if data can be tra
 577:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is tr
 578:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 579:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 580:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 581:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 582:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 583:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 584:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 585:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" to the slave device.
 586:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 587:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 588:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 589:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 590:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 591:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 592:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
 593:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 594:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 595:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 596:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 597:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_STATUS_SUC
 598:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 599:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->tx_busy)
 600:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 601:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 602:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 603:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 604:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 605:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 606:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 607:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 608:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 609:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 610:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 611:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 612:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 613:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
 614:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 615:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 616:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Transmit(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_
 617:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 618:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 619:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Receives the specified number of data words and execute the callback defined in GUI, if e
 620:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 621:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 622:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data in which value is written
 623:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read
 624:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 625:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 626:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if read is successful\n
 627:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 628:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 629:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 630:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be received from the SPI slave synchronously. After the requested number of data bytes
 631:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * optionally, the user configured callback function will be executed.
 632:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data reception is accomplished using the receive mode selected in the UI.
 633:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Interrupt:</b><br>
 634:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Based on the UI configuration, either standard receive buffer(RBUF) or receive FIFO(OUT) is used
 635:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * for data reception. An interrupt is configured for reading received data from the bus. This func
 636:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * only registers a request to receive a number of data bytes from a USIC channel. If FIFO is
 637:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured for reception, the FIFO limit is dynamically configured to optimally utilize the
 638:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * CPU load. Before starting data reception, the receive buffers are flushed. So only those data, r
 639:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 640:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 641:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 642:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 643:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 644:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 645:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <br>
 646:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>DMA:</b><br>
 647:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * DMA mode is available only in XMC4x family of microcontrollers. In this mode, a DMA channel is
 648:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured for receiving data from standard receive buffer(RBUF) to the user buffer. By calling
 649:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * this API, the DMA channel destination address is configured to the user buffer and the channel i
 650:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * enabled. Receive FIFO will not be used when the receive mode is DMA.
 651:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Before starting data reception, the receive buffers are flushed. So only those data, received
 652:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 653:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 654:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 655:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 656:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 657:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 658:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <br>
 659:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Direct</b><br>
 660:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * In Direct receive mode, neither interrupt nor DMA is used. The API polls
 661:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * the receive flag to read the received data and waits for all the requested number of bytes to
 662:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * be received. Based on FIFO configuration, either RBUF or OUT register is used for reading receiv
 663:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * data. Before starting data reception, the receive buffers are flushed. So only those data, recei
 664:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 665:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is re
 666:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 667:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 668:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 669:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 670:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 671:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 672:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 673:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 674:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Receives 10 bytes of data from slave.
 675:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 676:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 677:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 678:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 679:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 680:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 681:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 682:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 683:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 684:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 10U))
 685:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 686:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->rx_busy)
 687:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 688:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 689:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 690:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 691:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 692:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 693:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 694:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 695:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 696:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 697:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 698:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 699:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 700:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 701:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 702:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Receive(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_t
 703:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 704:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 705:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits and Receives the specified number of data words and execute the receive callbac
 706:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *        in GUI.
 707:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 708:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 709:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param tx_dataptr Pointer to data buffer which has to be send
 710:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param rx_dataptr Pointer to data buffer where the received data has to be stored.
 711:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read and write
 712:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 713:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 714:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS   : if transfer of data is successful\n
 715:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE   : if transfer of data is failed (or) in other than standard
 716:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUFFER_INVALID : if passed buffers are NULL pointers (or) length of d
 717:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 718:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 719:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Transmits and receives data simultaneously using the SPI channel as a master device. API is appl
 720:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i>Full duplex</> operation mode. Data transfer happens based on the individual modes configured
 721:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * reception.<br>
 722:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Two data pins MOSI and MISO will be used for receiving and transmitting data respectively. A cal
 723:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured to execute after completing the transfer when 'Interrupt' or 'DMA' mode is used. The 
 724:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * should be configured for <i>End of receive/transfer callback</i> in the 'Interrupt Settings' tab
 725:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed when the last word of data is received.
 726:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 727:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 728:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 729:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 730:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 731:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 732:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 733:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 734:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition: Operation mode should be 'Full Duplex"
 735:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 736:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits and Receives 10 bytes of data from slave in parallel.
 737:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 738:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 739:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 740:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 741:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 742:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t SendData[10] = {0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA};
 743:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 744:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 745:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 746:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 747:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 748:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transfer(&SPI_MASTER_0, SendData, ReadData, 10);
 749:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 750:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 751:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 752:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     XMC_DEBUG("main: Application initialization failed");
 753:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(1U)
 754:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 755:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 756:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 757:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 758:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 759:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 760:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 761:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Transfer(const SPI_MASTER_t *const handle,
 762:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint8_t* tx_dataptr,
 763:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint8_t* rx_dataptr,
 764:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint32_t count);
 765:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 766:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_INTERRUPT_RECEIVE_MODE == 1U)
 767:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 768:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Receives the specified number of data words and execute the callback defined in GUI, if e
 769:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 770:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 771:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data in which value is written
 772:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read
 773:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 774:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 775:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if read is successful\n
 776:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 777:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_MODE_MISMATCH if receive mode is DMA.
 778:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 779:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 780:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * After receiving the specified number of words (word length configured), the user configured call
 781:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * is executed, if it is enabled. If a callback function is not configured on the APP UI, the user 
 782:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * the status of rx_busy variable of the APP handle structure. Based on the UI configuration, eithe
 783:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * buffer or receive FIFO is used for data reception. An interrupt is configured for received data 
 784:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * function only registers a request to receive a number of data bytes from a SPI channel. If FIFO 
 785:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.
 786:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_receive_irq_flow_chart">Click her
 787:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 788:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 789:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 790:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 791:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 792:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 793:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 794:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 795:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 796:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 797:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 798:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 799:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 800:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 801:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 802:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 803:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_StartReceiveIRQ(&SPI_MASTER_0, ReadData, 10U))
 804:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 805:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->rx_busy)
 806:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 807:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 808:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, ReadData, 10U);
 809:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 810:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 811:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 812:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 813:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 814:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 815:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 816:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 817:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 818:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 819:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 820:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 821:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 822:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveIRQ(const SPI_MASTER_t *const handle, uint8_t* dataptr, 
 823:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 824:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 825:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_INTERRUPT_TRANSMIT_MODE == 1U)
 826:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 827:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits the specified number of data words and execute the callback defined in GUI, if 
 828:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 829:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 830:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data
 831:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be transmitted
 832:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 833:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 834:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if transmit is successful\n
 835:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 836:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUFFER_INVALID : if the data_ptr is NULL or count is 0. \n
 837:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_MODE_MISMATCH : if transmit mode is DMA.
 838:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 839:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 840:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 841:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using transmit interrupt. After transmitting the total dat
 842:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * function is executed. If transmit FIFO is enabled, the trigger limit is set to 1. So the transmi
 843:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * generated when all the data in FIFO is moved from FIFO. The function uses APP handle's dynamic s
 844:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * the data pointer, count, data index and status of transmission. This function only registers a d
 845:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * request if there is no active transmission in progress. Actual data transmission happens in the 
 846:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * service routine. A trigger is generated for the transmit interrupt to start loading the data. If
 847:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured, the data is filled into the FIFO with trigger limit set to 1. Transmit interrupt wil
 848:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * when the transmit FIFO is empty. At this point of time, if there is some more data to be transmi
 849:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * to the FIFO again. When FIFO is not enabled, data is transmitted one byte at a time. On transmis
 850:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 851:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_transmit_irq_flow_chart">Click he
 852:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 853:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 854:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 855:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 856:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
 857:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 858:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Pre-condition:
 859:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmit mode should be configured as "Interrupt".
 860:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 861:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" data to slave.
 862:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 863:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 864:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 865:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 866:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 867:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
 868:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 869:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 870:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 871:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 872:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_StartTransmitIRQ(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_ST
 873:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 874:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->tx_busy)
 875:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 876:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 877:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 878:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 879:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 880:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 881:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 882:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 883:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 884:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 885:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 886:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 887:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 888:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
 889:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 890:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 891:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitIRQ(const SPI_MASTER_t *const handle, uint8_t *addr, ui
 892:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 893:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 894:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 895:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 896:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 897:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Registers a request for receiving data over SPI_MASTER channel using DMA.
 898:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 899:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 900:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  handle  Pointer to SPI_MASTER_t handle structure
 901:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param data_ptr  Pointer to data of type uint8_t.
 902:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  count  Total no of bytes to be received.\n
 903:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *                \b Range: minimum= 1, maximum= 4096.
 904:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 905:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t: Status for receive request.\n
 906:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_SUCCESS if the request is accepted.\n
 907:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUSY if a reception is in progress.\n
 908:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUFFER_INVALID if the data_ptr is NULL or count is
 909:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_MODE_MISMATCH : if receive mode is Interrupt \n
 910:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 911:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 912:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 913:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received,
 914:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * optionally, the user configured callback function will be executed.
 915:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 916:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 917:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 918:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 919:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 920:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 921:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * A maximum of 4096 bytes can be received in one API call. This limit is because of the DMA single
 922:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_receive_dma_flow_chart">Click her
 923:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 924:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 925:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 926:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 927:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 928:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 929:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Pre condition:
 930:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Receive mode should be configured to "DMA"
 931:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Description: Receive 10 bytes from slave.
 932:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 933:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 934:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   int main(void)
 935:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 936:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_STATUS_t init_status;
 937:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     uint8_t ReadData[10];
 938:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 939:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     init_status = (SPI_MASTER_STATUS_t)SPI_MASTER_Init(&SPI_MASTER_0);
 940:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(init_status == SPI_MASTER_STATUS_SUCCESS)
 941:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 942:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       if(SPI_MASTER_StartReceiveDMA(&SPI_MASTER_0, ReadData, 10) == SPI_MASTER_STATUS_SUCCESS)
 943:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 944:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *         while(SPI_MASTER_0.runtime->rx_busy)
 945:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *         {
 946:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *         }
 947:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 948:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 949:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     else
 950:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 951:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 952:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *      while(1U)
 953:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *      {
 954:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *      }
 955:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 956:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *      return 1U;
 957:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  }
 958:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  @endcode
 959:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 960:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 961:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveDMA(const SPI_MASTER_t  *const handle, uint8_t *addr, ui
 962:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 963:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
 964:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 965:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 966:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Registers a request for transmitting data over SPI_MASTER channel using DMA.
 967:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 968:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  handle  SPI_MASTER APP handle pointer of type @ref SPI_MASTER_t
 969:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  data_ptr Pointer to data of type uint8_t.
 970:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  count Total number of words to be transmitted.\n
 971:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \b Range: minimum= 1, maximum= 4096.
 972:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 973:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t: Status of transmit request.\n
 974:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_SUCCESS if the request is accepted.\n
 975:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUSY if a transmission is in progress.\n
 976:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER__STATUS_BUFFER_INVALID if the data_ptr is NULL or count i
 977:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_MODE_MISMATCH : if transmit mode is Interrupt \n
 978:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 979:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 980:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * request is registered.
 981:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 982:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 983:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 984:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * is fully transmitted, the callback function will be executed.
 985:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * The function uses APP handle's runtime structure to store the status of transmission.
 986:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 987:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * data transmission happens through DMA channel. A maximum of 4095 bytes can be transmitted in one
 988:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * is because of the DMA single block size. Callback function is executed when all the data bytes a
 989:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 990:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for the completion of data tran
 991:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 992:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * multiple calls to this API.
 993:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_transmit_dma_flow_chart">Click he
 994:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 995:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 996:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 997:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 998:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 999:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Pre-condition:
1000:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Transmit mode should be configured as "DMA".
1001:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Description: Transmits "Infineon" data to the slave
1002:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1003:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1004:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   int main(void)
1005:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1006:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_STATUS_t init_status;
1007:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     uint8_t Send_Data[] = "Infineon";
1008:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1009:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     init_status = (SPI_MASTER_STATUS_t)SPI_MASTER_Init(&SPI_MASTER_0);
1010:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(init_status == SPI_MASTER_STATUS_SUCCESS)
1011:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1012:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       if(SPI_MASTER_StartTransmitDMA(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_
1013:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1014:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *         while(SPI_MASTER_0.runtime->tx_busy)
1015:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *         {
1016:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *         }
1017:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1018:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1019:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     else
1020:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1021:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1022:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *      while(1U)
1023:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *      {
1024:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *      }
1025:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1026:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *      return 1U;
1027:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *  }
1028:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode
1029:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1030:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1031:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitDMA(const SPI_MASTER_t *const handle, uint8_t *addr, ui
1032:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
1033:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
1034:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1035:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Returns the state of the specified interrupt flag.
1036:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1037:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1038:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param flag Interrupt for which status is required
1039:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *             Use type @ref XMC_SPI_CH_STATUS_FLAG_t for the bitmask of events.
1040:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  uint32_t status of the interrupt
1041:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1042:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1043:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1044:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Returns the status of the events, by reading PSR register. This indicates the status of the all 
1045:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPI communication.
1046:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1047:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1048:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1049:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1050:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1051:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1052:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1053:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //It transmits "Infineon" to the SPI slave. After calling the transmit API, it will poll for the
1054:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //indication flag to know the data has shifted out or not.
1055:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1056:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1057:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1058:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1059:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1060:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1061:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1062:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1063:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1064:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1065:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(SPI_MASTER_GetFlagStatus(&SPI_MASTER_0, XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATI
1066:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1067:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1068:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1069:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1070:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1071:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1072:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1073:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1074:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1075:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1076:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1077:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1078:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1079:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
1080:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE uint32_t SPI_MASTER_GetFlagStatus(const SPI_MASTER_t* handle, const uint32_t flag)
1081:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
  71              	 .loc 2 1081 0
  72              	 .cfi_startproc
  73              	 
  74              	 
  75 0000 80B5     	 push {r7,lr}
  76              	.LCFI6:
  77              	 .cfi_def_cfa_offset 8
  78              	 .cfi_offset 7,-8
  79              	 .cfi_offset 14,-4
  80 0002 82B0     	 sub sp,sp,#8
  81              	.LCFI7:
  82              	 .cfi_def_cfa_offset 16
  83 0004 00AF     	 add r7,sp,#0
  84              	.LCFI8:
  85              	 .cfi_def_cfa_register 7
  86 0006 7860     	 str r0,[r7,#4]
  87 0008 3960     	 str r1,[r7]
1082:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_GetFlagStatus:handle NULL" , (handle != NULL));
1083:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   return (XMC_SPI_CH_GetStatusFlag(handle->channel) & flag);
  88              	 .loc 2 1083 0
  89 000a 7B68     	 ldr r3,[r7,#4]
  90 000c 1B68     	 ldr r3,[r3]
  91 000e 1846     	 mov r0,r3
  92 0010 FFF7FEFF 	 bl XMC_SPI_CH_GetStatusFlag
  93 0014 0246     	 mov r2,r0
  94 0016 3B68     	 ldr r3,[r7]
  95 0018 1340     	 ands r3,r3,r2
1084:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** }
  96              	 .loc 2 1084 0
  97 001a 1846     	 mov r0,r3
  98 001c 0837     	 adds r7,r7,#8
  99              	.LCFI9:
 100              	 .cfi_def_cfa_offset 8
 101 001e BD46     	 mov sp,r7
 102              	.LCFI10:
 103              	 .cfi_def_cfa_register 13
 104              	 
 105 0020 80BD     	 pop {r7,pc}
 106              	 .cfi_endproc
 107              	.LFE302:
 109 0022 00BF     	 .section .text.SPI_MASTER_EnableSlaveSelectSignal,"ax",%progbits
 110              	 .align 2
 111              	 .thumb
 112              	 .thumb_func
 114              	SPI_MASTER_EnableSlaveSelectSignal:
 115              	.LFB306:
1085:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
1086:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1087:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Clears the status of the specified interrupt flags.
1088:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1089:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1090:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param flag_mask Interrupt for which status has to be cleared
1091:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *             Use type @ref XMC_SPI_CH_STATUS_FLAG_t for the bitmask of events.
1092:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1093:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1094:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * During communication the events occurred has to be cleared to get the successive events.\n
1095:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * e.g: During transmission Transmit buffer event occurs to indicating data word transfer has start
1096:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * to be cleared after transmission of each data word. Otherwise next event is not considered as va
1097:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1098:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1099:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1100:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1101:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1102:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1103:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1104:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //It transmits "Infineon" to the SPI slave. After calling the transmit API, it will poll for the
1105:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //indication flag to know the data has shifted out or not, and clears the flag.
1106:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1107:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1108:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1109:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1110:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1111:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1112:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1113:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1114:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1115:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1116:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(SPI_MASTER_GetFlagStatus(&SPI_MASTER_0, (uint32_t)XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIF
1117:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_ClearFlag(&SPI_MASTER_0, (uint32_t)XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATI
1118:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1119:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1120:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1121:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1122:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1123:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1124:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1125:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1126:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1127:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1128:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1129:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1130:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_ClearFlag(const SPI_MASTER_t* handle, const uint32_t flag_mask)
1131:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
1132:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_ClearFlag:handle NULL" , (handle != NULL));
1133:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_SPI_CH_ClearStatusFlag(handle->channel, flag_mask);
1134:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** }
1135:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
1136:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1137:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief return the txbusy flag state
1138:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1139:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return bool : status of txbusy flag
1140:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1141:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1142:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1143:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * This is used to check whether any transmit process is going or not. If no process is going then 
1144:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * the new request is accepted. SPI_MASTER_AbortTransmit() can be used to stop the current process 
1145:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * start the new request.
1146:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1147:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1148:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1149:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1150:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1151:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1152:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1153:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1154:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" to the slave device.
1155:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1156:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1157:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1158:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1159:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1160:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1161:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1162:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1163:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1164:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1165:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1166:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_STATUS_SUC
1167:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1168:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_IsTxBusy(&SPI_MASTER_0))
1169:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1170:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1171:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1172:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1173:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1174:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1175:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1176:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1177:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1178:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1179:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1180:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1181:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1182:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
1183:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1184:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1185:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE bool SPI_MASTER_IsTxBusy(const SPI_MASTER_t* const handle)
1186:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
1187:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_IsTxBusy:handle NULL", (handle != NULL))
1188:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   return (handle->runtime->tx_busy);
1189:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** }
1190:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
1191:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1192:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief return the rxbusy flag state
1193:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1194:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return bool : status of rxbusy flag
1195:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1196:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1197:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1198:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * This is used to check whether any receive process is going or not. If no process is going then o
1199:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * the new request is accepted. SPI_MASTER_AbortReceive() can be used to stop the current process a
1200:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * start the new request.
1201:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1202:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1203:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1204:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1205:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1206:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1207:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1208:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1209:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Receives 10 bytes of data from slave.
1210:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1211:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1212:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1213:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1214:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
1215:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1216:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1217:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1218:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1219:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 10U))
1220:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1221:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_IsRxBusy(&SPI_MASTER_0))
1222:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1223:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1224:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1225:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1226:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1227:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1228:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1229:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1230:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1231:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1232:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1233:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1234:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1235:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1236:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1237:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE bool SPI_MASTER_IsRxBusy(const SPI_MASTER_t* const handle)
1238:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
1239:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_IsTxBusy:handle NULL", (handle != NULL))
1240:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****   return (handle->runtime->rx_busy);
1241:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** }
1242:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
1243:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
1244:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1245:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enables the specified slave select line
1246:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1247:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1248:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param slave which slave signal has to be enabled
1249:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1250:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1251:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Each slave is connected with one slave select signal. At a time only one slave can be communicat
1252:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * required slave to start the communication.
1253:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1254:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1255:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1256:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Generate code for multiple slave by configuring in "Advanced settings tab". Transmit the data to
1257:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1258:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1259:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1260:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1261:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition:
1262:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Configure to use two slaves".
1263:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1264:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits 10 bytes of data to slave-0 and disables the slave-o. Then enable the slave-1 and tr
1265:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1266:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1267:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1268:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1269:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1270:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1271:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1272:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1273:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1274:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1275:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
1276:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_1);
1277:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1278:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1279:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1280:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1281:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1282:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1283:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1284:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1285:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1286:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1287:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1288:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1289:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1290:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1291:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_EnableSlaveSelectSignal(const SPI_MASTER_t* handle, const SPI_MASTE
1292:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
 116              	 .loc 2 1292 0
 117              	 .cfi_startproc
 118              	 
 119              	 
 120 0000 80B5     	 push {r7,lr}
 121              	.LCFI11:
 122              	 .cfi_def_cfa_offset 8
 123              	 .cfi_offset 7,-8
 124              	 .cfi_offset 14,-4
 125 0002 82B0     	 sub sp,sp,#8
 126              	.LCFI12:
 127              	 .cfi_def_cfa_offset 16
 128 0004 00AF     	 add r7,sp,#0
 129              	.LCFI13:
 130              	 .cfi_def_cfa_register 7
 131 0006 7860     	 str r0,[r7,#4]
 132 0008 0B46     	 mov r3,r1
 133 000a FB70     	 strb r3,[r7,#3]
1293:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_EnableSlaveSelectSignal:handle NULL" , (handle != NULL));
1294:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_EnableSlaveSelectSignal:Invalid Slave selection" , ((slave == SPI_MASTER
1295:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1296:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1297:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1298:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1299:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1300:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1301:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                                (slave == SPI_MASTER
1302:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****                                                                               );
1303:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_SPI_CH_EnableSlaveSelect(handle->channel, handle->config->slave_select_pin_config[slave]->s
 134              	 .loc 2 1303 0
 135 000c 7B68     	 ldr r3,[r7,#4]
 136 000e 1968     	 ldr r1,[r3]
 137 0010 7B68     	 ldr r3,[r7,#4]
 138 0012 5B68     	 ldr r3,[r3,#4]
 139 0014 FA78     	 ldrb r2,[r7,#3]
 140 0016 1432     	 adds r2,r2,#20
 141 0018 53F82230 	 ldr r3,[r3,r2,lsl#2]
 142 001c 1B69     	 ldr r3,[r3,#16]
 143 001e 0846     	 mov r0,r1
 144 0020 1946     	 mov r1,r3
 145 0022 FFF7FEFF 	 bl XMC_SPI_CH_EnableSlaveSelect
1304:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** }
 146              	 .loc 2 1304 0
 147 0026 0837     	 adds r7,r7,#8
 148              	.LCFI14:
 149              	 .cfi_def_cfa_offset 8
 150 0028 BD46     	 mov sp,r7
 151              	.LCFI15:
 152              	 .cfi_def_cfa_register 13
 153              	 
 154 002a 80BD     	 pop {r7,pc}
 155              	 .cfi_endproc
 156              	.LFE306:
 158              	 .section .text.SPI_MASTER_DisableSlaveSelectSignal,"ax",%progbits
 159              	 .align 2
 160              	 .thumb
 161              	 .thumb_func
 163              	SPI_MASTER_DisableSlaveSelectSignal:
 164              	.LFB307:
1305:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** 
1306:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1307:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Disables the all the slave select lines
1308:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1309:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1310:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1311:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1312:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Disable all the slave signals by clearing PCR.SELO bits.
1313:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1314:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1315:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1316:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1317:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include "DAVE.h"
1318:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1319:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition:
1320:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Configure to use two slaves".
1321:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1322:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits 10 bytes of data to slave-0 and disables the slave-o. Then enable the slave-1 and tr
1323:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1324:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1325:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1326:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1327:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1328:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1329:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1330:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1331:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1332:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1333:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_DisableSlaveSelectSignal(&SPI_MASTER_0);
1334:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_EnableSlaveSelectSignal(&SPI_MASTER_0, SPI_MASTER_SS_SIGNAL_1);
1335:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1336:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1337:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1338:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1339:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1340:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1341:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1342:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1343:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1344:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1345:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1346:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1347:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1348:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1349:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1350:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE void SPI_MASTER_DisableSlaveSelectSignal(const SPI_MASTER_t* handle)
1351:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** {
 165              	 .loc 2 1351 0
 166              	 .cfi_startproc
 167              	 
 168              	 
 169 0000 80B5     	 push {r7,lr}
 170              	.LCFI16:
 171              	 .cfi_def_cfa_offset 8
 172              	 .cfi_offset 7,-8
 173              	 .cfi_offset 14,-4
 174 0002 82B0     	 sub sp,sp,#8
 175              	.LCFI17:
 176              	 .cfi_def_cfa_offset 16
 177 0004 00AF     	 add r7,sp,#0
 178              	.LCFI18:
 179              	 .cfi_def_cfa_register 7
 180 0006 7860     	 str r0,[r7,#4]
1352:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_ASSERT("SPI_MASTER_Transmit:handle NULL" , (handle != NULL));
1353:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h ****     XMC_SPI_CH_DisableSlaveSelect(handle->channel);
 181              	 .loc 2 1353 0
 182 0008 7B68     	 ldr r3,[r7,#4]
 183 000a 1B68     	 ldr r3,[r3]
 184 000c 1846     	 mov r0,r3
 185 000e FFF7FEFF 	 bl XMC_SPI_CH_DisableSlaveSelect
1354:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER\spi_master.h **** }
 186              	 .loc 2 1354 0
 187 0012 0837     	 adds r7,r7,#8
 188              	.LCFI19:
 189              	 .cfi_def_cfa_offset 8
 190 0014 BD46     	 mov sp,r7
 191              	.LCFI20:
 192              	 .cfi_def_cfa_register 13
 193              	 
 194 0016 80BD     	 pop {r7,pc}
 195              	 .cfi_endproc
 196              	.LFE307:
 198              	 .section .text.SDMMC_BLOCK_SPI_Init,"ax",%progbits
 199              	 .align 2
 200              	 .global SDMMC_BLOCK_SPI_Init
 201              	 .thumb
 202              	 .thumb_func
 204              	SDMMC_BLOCK_SPI_Init:
 205              	.LFB327:
 206              	 .file 3 "../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c"
   1:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /**
   2:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * @file sdmmc_block_private_spi.c
   3:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * @date 2019-06-06
   4:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
   5:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * NOTE:
   6:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
   8:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * @cond
   9:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  **************************************************************************************************
  10:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * SDMMC_BLOCK_SPI v4.0.30 - Configures the SPI channel to interface the SDMMC card.
  11:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
  12:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  13:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * All rights reserved.
  14:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
  15:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * following conditions are met:
  17:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
  18:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *   disclaimer.
  20:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
  21:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
  24:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
  27:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
  35:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  **************************************************************************************************
  38:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
  39:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * Change History
  40:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * --------------
  41:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
  42:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * 2016-01-20:
  43:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *     - Initial version. <br>
  44:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
  45:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * 2016-02-08:
  46:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *     - Help Doc updated. <br>
  47:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *     - Bug fixes done.<br>
  48:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
  49:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * 2016-04-05:
  50:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *     - Return status updates are done. <br>
  51:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *     - SDMMC_BLOCK_SPI_lUpdateCardInfo() is splitted in to SDMMC_BLOCK_SPI_lReadCid() and
  52:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *       SDMMC_BLOCK_SPI_lReadCsd.
  53:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *     - SDMMC_BLOCK_SPI_lEraseTimeOut() is added for erase operation to check for timeout.
  54:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *       if card is not able to finish the operation with in the time, returns as failure.
  55:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *     - SDMMC_BLOCK_SPI_TEST_HOOK_SendCommand() is added for to cover the cases by emulating the h
  56:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *       This is enabled during testing only.
  57:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *     - MISRA fixes.
  58:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *     - Bug fixes done for PR.<br>
  59:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * 
  60:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * 2019-06-06:
  61:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *     - Fix SDMMC_BLOCK_SPI_GetSectorCount()
  62:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * 
  63:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * @endcond
  64:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  *
  65:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  */
  66:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
  67:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /**************************************************************************************************
  68:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   * HEADER FILES
  69:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** ***************************************************************************************************
  70:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
  71:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #include "sdmmc_block.h"
  72:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #include "sdmmc_block_private_spi.h"
  73:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
  74:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /**************************************************************************************************
  75:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   * MACROS
  76:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** ***************************************************************************************************
  77:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
  78:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #ifdef SDMMC_BLOCK_SPI
  79:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #define SDMMC_BLOCK_SPI_CLK_TRAIN_MAX_CNT  (10U)
  80:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #define SDMMC_BLOCK_SPI_DUMMY_READ_MAX_CNT (4U)
  81:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #define SDMMC_BLOCK_SPI_INIT_SPEED         (300000U)
  82:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #define SDMMC_BLOCK_SPI_PARAM_ERROR        (0x40U)
  83:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
  84:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /**************************************************************************************************
  85:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   * LOCAL DATA
  86:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** ***************************************************************************************************
  87:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
  88:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
  89:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /**************************************************************************************************
  90:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   * LOCAL ROUTINES
  91:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** ***************************************************************************************************
  92:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
  93:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lInitializeCard(SDMMC_BLOCK_t *const obj);
  94:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
  95:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lErase(const SDMMC_BLOCK_t *const obj,
  96:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                         const uint32_t start_address,
  97:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                         const uint32_t end_address,
  98:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                         const uint32_t timeout_val);
  99:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 100:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lWriteSingleBlock(const SDMMC_BLOCK_t *const obj,
 101:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                    uint8_t *write_buf,
 102:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                    const uint32_t write_address);
 103:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 104:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lWriteMultipleBlocks(const SDMMC_BLOCK_t *const ob
 105:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                       uint8_t *write_buf,
 106:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                       const uint32_t write_address,
 107:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                       const uint32_t sector_count);
 108:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 109:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lReadMultipleBlocks(SDMMC_BLOCK_t *const obj,
 110:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                      uint8_t *read_buf,
 111:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                      const uint32_t read_address,
 112:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                      const uint32_t sector_count);
 113:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 114:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lReadSingleBlock(SDMMC_BLOCK_t *const obj,
 115:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                   uint8_t *read_buf,
 116:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                   const uint32_t read_address);
 117:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 118:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lQueryOperatingCondVoltage(SDMMC_BLOCK_t *const ob
 119:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 120:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lSDV1OperatingCondVoltage(SDMMC_BLOCK_t *const obj
 121:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 122:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lSDV2OperatingCondVoltage(SDMMC_BLOCK_t *const obj
 123:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 124:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lReadCid(SDMMC_BLOCK_t *const obj);
 125:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 126:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lReadCsd(SDMMC_BLOCK_t *const obj);
 127:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 128:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lReadCardRegister(SDMMC_BLOCK_SPI_t *const obj,
 129:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                    uint8_t *buffer,
 130:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                    const uint32_t buffer_length);
 131:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 132:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lSendCommand(const SDMMC_BLOCK_t *const obj,
 133:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                               const uint8_t cmd,
 134:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                               const uint32_t arg);
 135:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 136:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lSendACMD41(const SDMMC_BLOCK_t *const obj, const 
 137:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 138:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lReadData(SDMMC_BLOCK_SPI_t *const obj,
 139:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                            uint8_t *response_data,
 140:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                            const uint32_t num_of_bytes);
 141:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 142:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lSendData(SDMMC_BLOCK_SPI_t *const obj,
 143:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                            uint8_t *transmit_data,
 144:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                            const uint32_t num_of_bytes);
 145:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 146:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lCheckSectorBound(SDMMC_BLOCK_t *const obj,
 147:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                    const uint32_t sector_number,
 148:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                    const uint32_t sector_count);
 149:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 150:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lSetSpeed(SPI_MASTER_t *const obj,
 151:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                            const uint32_t baud_rate);
 152:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 153:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static void SDMMC_BLOCK_SPI_lGetWriteProtect(SDMMC_BLOCK_t *const obj);
 154:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 155:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static void SDMMC_BLOCK_SPI_lDummyRead(SDMMC_BLOCK_SPI_t *const obj, uint32_t count);
 156:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 157:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lWaitUntilBusy(SDMMC_BLOCK_SPI_t *const obj);
 158:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 159:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lEraseTimeOut(SDMMC_BLOCK_SPI_t *const obj,
 160:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                const uint32_t timeout_val);
 161:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 162:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static void SDMMC_BLOCK_SPI_lSend_Clocktrain(SDMMC_BLOCK_SPI_t* const obj, uint32_t count);
 163:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 164:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #ifdef SDMMC_BLOCK_TEST_HOOK_ENABLE
 165:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** __WEAK SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_TEST_HOOK_SendCommand(const SDMMC_BLOCK_t *const o
 166:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                        const uint8_t cmd,
 167:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                        const SDMMC_BLOCK_MODE_STATU
 168:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #endif
 169:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 170:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 171:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /**************************************************************************************************
 172:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   * API IMPLEMENTATION
 173:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** ***************************************************************************************************
 174:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_Init(SDMMC_BLOCK_t *const obj)
 175:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 207              	 .loc 3 175 0
 208              	 .cfi_startproc
 209              	 
 210              	 
 211 0000 80B5     	 push {r7,lr}
 212              	.LCFI21:
 213              	 .cfi_def_cfa_offset 8
 214              	 .cfi_offset 7,-8
 215              	 .cfi_offset 14,-4
 216 0002 84B0     	 sub sp,sp,#16
 217              	.LCFI22:
 218              	 .cfi_def_cfa_offset 24
 219 0004 00AF     	 add r7,sp,#0
 220              	.LCFI23:
 221              	 .cfi_def_cfa_register 7
 222 0006 7860     	 str r0,[r7,#4]
 176:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SPI_MASTER_STATUS_t spi_status;
 177:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 223              	 .loc 3 177 0
 224 0008 0023     	 movs r3,#0
 225 000a FB73     	 strb r3,[r7,#15]
 178:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 179:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   spi_status = SPI_MASTER_Init(obj->sdmmc_spi->spi_master_handle);
 226              	 .loc 3 179 0
 227 000c 7B68     	 ldr r3,[r7,#4]
 228 000e 1B68     	 ldr r3,[r3]
 229 0010 1B68     	 ldr r3,[r3]
 230 0012 1846     	 mov r0,r3
 231 0014 FFF7FEFF 	 bl SPI_MASTER_Init
 232 0018 0346     	 mov r3,r0
 233 001a BB73     	 strb r3,[r7,#14]
 180:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 181:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (spi_status != SPI_MASTER_STATUS_SUCCESS)
 234              	 .loc 3 181 0
 235 001c BB7B     	 ldrb r3,[r7,#14]
 236 001e 002B     	 cmp r3,#0
 237 0020 01D0     	 beq .L8
 182:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 183:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 238              	 .loc 3 183 0
 239 0022 0123     	 movs r3,#1
 240 0024 FB73     	 strb r3,[r7,#15]
 241              	.L8:
 184:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 185:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 186:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 242              	 .loc 3 186 0
 243 0026 FB7B     	 ldrb r3,[r7,#15]
 187:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 244              	 .loc 3 187 0
 245 0028 1846     	 mov r0,r3
 246 002a 1037     	 adds r7,r7,#16
 247              	.LCFI24:
 248              	 .cfi_def_cfa_offset 8
 249 002c BD46     	 mov sp,r7
 250              	.LCFI25:
 251              	 .cfi_def_cfa_register 13
 252              	 
 253 002e 80BD     	 pop {r7,pc}
 254              	 .cfi_endproc
 255              	.LFE327:
 257              	 .section .text.SDMMC_BLOCK_SPI_CardIdentificationProcess,"ax",%progbits
 258              	 .align 2
 259              	 .global SDMMC_BLOCK_SPI_CardIdentificationProcess
 260              	 .thumb
 261              	 .thumb_func
 263              	SDMMC_BLOCK_SPI_CardIdentificationProcess:
 264              	.LFB328:
 188:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 189:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_CardIdentificationProcess(SDMMC_BLOCK_t *const obj)
 190:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 265              	 .loc 3 190 0
 266              	 .cfi_startproc
 267              	 
 268              	 
 269 0000 80B5     	 push {r7,lr}
 270              	.LCFI26:
 271              	 .cfi_def_cfa_offset 8
 272              	 .cfi_offset 7,-8
 273              	 .cfi_offset 14,-4
 274 0002 84B0     	 sub sp,sp,#16
 275              	.LCFI27:
 276              	 .cfi_def_cfa_offset 24
 277 0004 00AF     	 add r7,sp,#0
 278              	.LCFI28:
 279              	 .cfi_def_cfa_register 7
 280 0006 7860     	 str r0,[r7,#4]
 191:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
 192:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 193:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (obj->sdmmc_spi->mode_init_flag == 1U)
 281              	 .loc 3 193 0
 282 0008 7B68     	 ldr r3,[r7,#4]
 283 000a 1B68     	 ldr r3,[r3]
 284 000c 93F87130 	 ldrb r3,[r3,#113]
 285 0010 002B     	 cmp r3,#0
 286 0012 02D0     	 beq .L11
 194:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 195:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 287              	 .loc 3 195 0
 288 0014 0023     	 movs r3,#0
 289 0016 FB73     	 strb r3,[r7,#15]
 290 0018 0CE0     	 b .L12
 291              	.L11:
 196:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 197:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
 198:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 199:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lInitializeCard(obj);
 292              	 .loc 3 199 0
 293 001a 7868     	 ldr r0,[r7,#4]
 294 001c FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lInitializeCard
 295 0020 0346     	 mov r3,r0
 296 0022 FB73     	 strb r3,[r7,#15]
 200:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 297              	 .loc 3 200 0
 298 0024 FB7B     	 ldrb r3,[r7,#15]
 299 0026 002B     	 cmp r3,#0
 300 0028 04D1     	 bne .L12
 201:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 202:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       obj->sdmmc_spi->mode_init_flag = 1U;
 301              	 .loc 3 202 0
 302 002a 7B68     	 ldr r3,[r7,#4]
 303 002c 1B68     	 ldr r3,[r3]
 304 002e 0122     	 movs r2,#1
 305 0030 83F87120 	 strb r2,[r3,#113]
 306              	.L12:
 203:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 204:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 205:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 206:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 307              	 .loc 3 206 0
 308 0034 FB7B     	 ldrb r3,[r7,#15]
 207:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 309              	 .loc 3 207 0
 310 0036 1846     	 mov r0,r3
 311 0038 1037     	 adds r7,r7,#16
 312              	.LCFI29:
 313              	 .cfi_def_cfa_offset 8
 314 003a BD46     	 mov sp,r7
 315              	.LCFI30:
 316              	 .cfi_def_cfa_register 13
 317              	 
 318 003c 80BD     	 pop {r7,pc}
 319              	 .cfi_endproc
 320              	.LFE328:
 322 003e 00BF     	 .section .text.SDMMC_BLOCK_SPI_ReadBlock,"ax",%progbits
 323              	 .align 2
 324              	 .global SDMMC_BLOCK_SPI_ReadBlock
 325              	 .thumb
 326              	 .thumb_func
 328              	SDMMC_BLOCK_SPI_ReadBlock:
 329              	.LFB329:
 208:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 209:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_STATUS_t SDMMC_BLOCK_SPI_ReadBlock(SDMMC_BLOCK_t *const obj,
 210:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                uint8_t *read_buf,
 211:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                const uint32_t sector_number,
 212:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                const uint32_t sector_count)
 213:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 330              	 .loc 3 213 0
 331              	 .cfi_startproc
 332              	 
 333              	 
 334 0000 80B5     	 push {r7,lr}
 335              	.LCFI31:
 336              	 .cfi_def_cfa_offset 8
 337              	 .cfi_offset 7,-8
 338              	 .cfi_offset 14,-4
 339 0002 88B0     	 sub sp,sp,#32
 340              	.LCFI32:
 341              	 .cfi_def_cfa_offset 40
 342 0004 00AF     	 add r7,sp,#0
 343              	.LCFI33:
 344              	 .cfi_def_cfa_register 7
 345 0006 F860     	 str r0,[r7,#12]
 346 0008 B960     	 str r1,[r7,#8]
 347 000a 7A60     	 str r2,[r7,#4]
 348 000c 3B60     	 str r3,[r7]
 214:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_STATUS_t status = SDMMC_BLOCK_STATUS_FAILURE;
 349              	 .loc 3 214 0
 350 000e 0123     	 movs r3,#1
 351 0010 FB77     	 strb r3,[r7,#31]
 215:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t mode_status;
 216:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 217:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_t* spi_handle;
 218:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t read_address;
 219:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t tmp_blk_cnt;
 220:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 221:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((obj->card_state & (uint8_t)SDMMC_BLOCK_CARD_STATE_NOT_INITIALIZED) != (uint8_t)0U)
 352              	 .loc 3 221 0
 353 0012 FB68     	 ldr r3,[r7,#12]
 354 0014 1B7A     	 ldrb r3,[r3,#8]
 355 0016 03F00103 	 and r3,r3,#1
 356 001a 002B     	 cmp r3,#0
 357 001c 02D0     	 beq .L15
 222:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 223:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_STATUS_NOTRDY;
 358              	 .loc 3 223 0
 359 001e 0323     	 movs r3,#3
 360 0020 FB77     	 strb r3,[r7,#31]
 361 0022 49E0     	 b .L16
 362              	.L15:
 224:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 225:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else if ((obj->card_state & (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED) != (uint8_t)0U)
 363              	 .loc 3 225 0
 364 0024 FB68     	 ldr r3,[r7,#12]
 365 0026 1B7A     	 ldrb r3,[r3,#8]
 366 0028 03F00803 	 and r3,r3,#8
 367 002c 002B     	 cmp r3,#0
 368 002e 02D0     	 beq .L17
 226:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 227:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_STATUS_LOCKED;
 369              	 .loc 3 227 0
 370 0030 0523     	 movs r3,#5
 371 0032 FB77     	 strb r3,[r7,#31]
 372 0034 40E0     	 b .L16
 373              	.L17:
 228:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 229:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
 230:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 231:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #ifdef SDMMC_BLOCK_SPI_CARD_LED_SIGNAL
 232:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if (obj->led != NULL)
 233:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 234:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       XMC_GPIO_SetOutputHigh(obj->led->port, obj->led->pin);
 235:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 236:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #endif
 237:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     mode_status = SDMMC_BLOCK_SPI_lCheckSectorBound(obj, sector_number, sector_count);
 374              	 .loc 3 237 0
 375 0036 F868     	 ldr r0,[r7,#12]
 376 0038 7968     	 ldr r1,[r7,#4]
 377 003a 3A68     	 ldr r2,[r7]
 378 003c FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lCheckSectorBound
 379 0040 0346     	 mov r3,r0
 380 0042 BB77     	 strb r3,[r7,#30]
 238:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 239:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if (mode_status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 381              	 .loc 3 239 0
 382 0044 BB7F     	 ldrb r3,[r7,#30]
 383 0046 002B     	 cmp r3,#0
 384 0048 34D1     	 bne .L18
 240:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 241:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       tmp_blk_cnt = sector_count;
 385              	 .loc 3 241 0
 386 004a 3B68     	 ldr r3,[r7]
 387 004c 7B61     	 str r3,[r7,#20]
 242:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       read_address = sector_number;
 388              	 .loc 3 242 0
 389 004e 7B68     	 ldr r3,[r7,#4]
 390 0050 BB61     	 str r3,[r7,#24]
 243:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       spi_handle = obj->sdmmc_spi;
 391              	 .loc 3 243 0
 392 0052 FB68     	 ldr r3,[r7,#12]
 393 0054 1B68     	 ldr r3,[r3]
 394 0056 3B61     	 str r3,[r7,#16]
 244:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 245:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /* Block Addressing or Byte Addressing */
 246:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if ((uint32_t)(obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING) ==  (uint32
 395              	 .loc 3 246 0
 396 0058 FB68     	 ldr r3,[r7,#12]
 397 005a 5B7A     	 ldrb r3,[r3,#9]
 398 005c 03F00803 	 and r3,r3,#8
 399 0060 002B     	 cmp r3,#0
 400 0062 02D1     	 bne .L19
 247:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 248:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         read_address = (uint32_t)(sector_number * SDMMC_BLOCK_SPI_BYTES_PER_SECTOR);
 401              	 .loc 3 248 0
 402 0064 7B68     	 ldr r3,[r7,#4]
 403 0066 5B02     	 lsls r3,r3,#9
 404 0068 BB61     	 str r3,[r7,#24]
 405              	.L19:
 249:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 250:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 251:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (tmp_blk_cnt == 1U)
 406              	 .loc 3 251 0
 407 006a 7B69     	 ldr r3,[r7,#20]
 408 006c 012B     	 cmp r3,#1
 409 006e 07D1     	 bne .L20
 252:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 253:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         mode_status = SDMMC_BLOCK_SPI_lReadSingleBlock(obj, read_buf, read_address);
 410              	 .loc 3 253 0
 411 0070 F868     	 ldr r0,[r7,#12]
 412 0072 B968     	 ldr r1,[r7,#8]
 413 0074 BA69     	 ldr r2,[r7,#24]
 414 0076 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadSingleBlock
 415 007a 0346     	 mov r3,r0
 416 007c BB77     	 strb r3,[r7,#30]
 417 007e 07E0     	 b .L21
 418              	.L20:
 254:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 255:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       else
 256:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 257:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         mode_status = SDMMC_BLOCK_SPI_lReadMultipleBlocks(obj, read_buf, read_address, sector_count
 419              	 .loc 3 257 0
 420 0080 F868     	 ldr r0,[r7,#12]
 421 0082 B968     	 ldr r1,[r7,#8]
 422 0084 BA69     	 ldr r2,[r7,#24]
 423 0086 3B68     	 ldr r3,[r7]
 424 0088 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadMultipleBlocks
 425 008c 0346     	 mov r3,r0
 426 008e BB77     	 strb r3,[r7,#30]
 427              	.L21:
 258:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 259:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 260:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /* Send Extra 8 Cycles */
 261:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       SDMMC_BLOCK_SPI_lSend_Clocktrain(spi_handle, 1U);
 428              	 .loc 3 261 0
 429 0090 3869     	 ldr r0,[r7,#16]
 430 0092 0121     	 movs r1,#1
 431 0094 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSend_Clocktrain
 262:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 263:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       mode_status = (SDMMC_BLOCK_MODE_STATUS_t)((uint32_t)mode_status |
 264:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                 (uint32_t)SDMMC_BLOCK_SPI_lWaitUntilBusy(spi_handle
 432              	 .loc 3 264 0
 433 0098 3869     	 ldr r0,[r7,#16]
 434 009a FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lWaitUntilBusy
 435 009e 0346     	 mov r3,r0
 436 00a0 1A46     	 mov r2,r3
 263:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                 (uint32_t)SDMMC_BLOCK_SPI_lWaitUntilBusy(spi_handle
 437              	 .loc 3 263 0
 438 00a2 BB7F     	 ldrb r3,[r7,#30]
 439 00a4 1343     	 orrs r3,r3,r2
 440 00a6 BB77     	 strb r3,[r7,#30]
 265:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 266:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (mode_status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 441              	 .loc 3 266 0
 442 00a8 BB7F     	 ldrb r3,[r7,#30]
 443 00aa 002B     	 cmp r3,#0
 444 00ac 04D1     	 bne .L16
 267:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 268:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         status = SDMMC_BLOCK_STATUS_SUCCESS;
 445              	 .loc 3 268 0
 446 00ae 0023     	 movs r3,#0
 447 00b0 FB77     	 strb r3,[r7,#31]
 448 00b2 01E0     	 b .L16
 449              	.L18:
 269:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 270:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 271:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
 272:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 273:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_STATUS_PARERR;
 450              	 .loc 3 273 0
 451 00b4 0423     	 movs r3,#4
 452 00b6 FB77     	 strb r3,[r7,#31]
 453              	.L16:
 274:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 275:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #ifdef SDMMC_BLOCK_SPI_CARD_LED_SIGNAL
 276:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if (obj->led != NULL)
 277:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 278:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       XMC_GPIO_SetOutputLow(obj->led->port, obj->led->pin);
 279:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 280:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #endif
 281:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 282:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 283:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 454              	 .loc 3 283 0
 455 00b8 FB7F     	 ldrb r3,[r7,#31]
 284:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 456              	 .loc 3 284 0
 457 00ba 1846     	 mov r0,r3
 458 00bc 2037     	 adds r7,r7,#32
 459              	.LCFI34:
 460              	 .cfi_def_cfa_offset 8
 461 00be BD46     	 mov sp,r7
 462              	.LCFI35:
 463              	 .cfi_def_cfa_register 13
 464              	 
 465 00c0 80BD     	 pop {r7,pc}
 466              	 .cfi_endproc
 467              	.LFE329:
 469 00c2 00BF     	 .section .text.SDMMC_BLOCK_SPI_WriteBlock,"ax",%progbits
 470              	 .align 2
 471              	 .global SDMMC_BLOCK_SPI_WriteBlock
 472              	 .thumb
 473              	 .thumb_func
 475              	SDMMC_BLOCK_SPI_WriteBlock:
 476              	.LFB330:
 285:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 286:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_STATUS_t SDMMC_BLOCK_SPI_WriteBlock(SDMMC_BLOCK_t *const obj,
 287:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                 uint8_t *write_buf,
 288:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                 const uint32_t sector_number,
 289:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                 const uint32_t sector_count)
 290:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 477              	 .loc 3 290 0
 478              	 .cfi_startproc
 479              	 
 480              	 
 481 0000 80B5     	 push {r7,lr}
 482              	.LCFI36:
 483              	 .cfi_def_cfa_offset 8
 484              	 .cfi_offset 7,-8
 485              	 .cfi_offset 14,-4
 486 0002 88B0     	 sub sp,sp,#32
 487              	.LCFI37:
 488              	 .cfi_def_cfa_offset 40
 489 0004 00AF     	 add r7,sp,#0
 490              	.LCFI38:
 491              	 .cfi_def_cfa_register 7
 492 0006 F860     	 str r0,[r7,#12]
 493 0008 B960     	 str r1,[r7,#8]
 494 000a 7A60     	 str r2,[r7,#4]
 495 000c 3B60     	 str r3,[r7]
 291:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_STATUS_t status = SDMMC_BLOCK_STATUS_FAILURE;
 496              	 .loc 3 291 0
 497 000e 0123     	 movs r3,#1
 498 0010 FB77     	 strb r3,[r7,#31]
 292:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t mode_status;
 293:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t write_address;
 294:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_t* spi_handle;
 295:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 296:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t tmp_blk_cnt; /* Added to avoid the update of the input variable inside the code */
 297:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 298:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((obj->card_state & (uint8_t)SDMMC_BLOCK_CARD_STATE_NOT_INITIALIZED) != 0U)
 499              	 .loc 3 298 0
 500 0012 FB68     	 ldr r3,[r7,#12]
 501 0014 1B7A     	 ldrb r3,[r3,#8]
 502 0016 03F00103 	 and r3,r3,#1
 503 001a 002B     	 cmp r3,#0
 504 001c 02D0     	 beq .L25
 299:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 300:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_STATUS_NOTRDY;
 505              	 .loc 3 300 0
 506 001e 0323     	 movs r3,#3
 507 0020 FB77     	 strb r3,[r7,#31]
 508 0022 56E0     	 b .L26
 509              	.L25:
 301:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 302:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else if ((obj->card_state & (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED) != (uint8_t)0U)
 510              	 .loc 3 302 0
 511 0024 FB68     	 ldr r3,[r7,#12]
 512 0026 1B7A     	 ldrb r3,[r3,#8]
 513 0028 03F00803 	 and r3,r3,#8
 514 002c 002B     	 cmp r3,#0
 515 002e 02D0     	 beq .L27
 303:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 304:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_STATUS_LOCKED;
 516              	 .loc 3 304 0
 517 0030 0523     	 movs r3,#5
 518 0032 FB77     	 strb r3,[r7,#31]
 519 0034 4DE0     	 b .L26
 520              	.L27:
 305:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 306:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
 307:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 308:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((obj->card_state & (uint8_t)SDMMC_BLOCK_CARD_STATE_WRITE_PROTECTED) != 0U)
 521              	 .loc 3 308 0
 522 0036 FB68     	 ldr r3,[r7,#12]
 523 0038 1B7A     	 ldrb r3,[r3,#8]
 524 003a 03F00403 	 and r3,r3,#4
 525 003e 002B     	 cmp r3,#0
 526 0040 02D0     	 beq .L28
 309:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 310:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_STATUS_WRPRT;
 527              	 .loc 3 310 0
 528 0042 0223     	 movs r3,#2
 529 0044 FB77     	 strb r3,[r7,#31]
 530 0046 44E0     	 b .L26
 531              	.L28:
 311:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 312:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #ifdef SDMMC_BLOCK_CARD_WRITE_PROTECT_SIGNAL
 313:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else if ((obj->sdwc != NULL) && (XMC_GPIO_GetInput(obj->sdwc->port, obj->sdwc->pin)))
 314:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 315:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_STATUS_WRPRT;
 316:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 317:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #endif
 318:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
 319:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 320:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #ifdef SDMMC_BLOCK_SPI_CARD_LED_SIGNAL
 321:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (obj->led != NULL)
 322:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 323:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         XMC_GPIO_SetOutputHigh(obj->led->port, obj->led->pin);
 324:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 325:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #endif
 326:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       mode_status = SDMMC_BLOCK_SPI_lCheckSectorBound(obj, sector_number, sector_count);
 532              	 .loc 3 326 0
 533 0048 F868     	 ldr r0,[r7,#12]
 534 004a 7968     	 ldr r1,[r7,#4]
 535 004c 3A68     	 ldr r2,[r7]
 536 004e FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lCheckSectorBound
 537 0052 0346     	 mov r3,r0
 538 0054 BB77     	 strb r3,[r7,#30]
 327:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 328:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (mode_status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 539              	 .loc 3 328 0
 540 0056 BB7F     	 ldrb r3,[r7,#30]
 541 0058 002B     	 cmp r3,#0
 542 005a 38D1     	 bne .L29
 329:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 330:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         tmp_blk_cnt = sector_count;
 543              	 .loc 3 330 0
 544 005c 3B68     	 ldr r3,[r7]
 545 005e 7B61     	 str r3,[r7,#20]
 331:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         write_address = sector_number;
 546              	 .loc 3 331 0
 547 0060 7B68     	 ldr r3,[r7,#4]
 548 0062 BB61     	 str r3,[r7,#24]
 332:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         spi_handle = obj->sdmmc_spi;
 549              	 .loc 3 332 0
 550 0064 FB68     	 ldr r3,[r7,#12]
 551 0066 1B68     	 ldr r3,[r3]
 552 0068 3B61     	 str r3,[r7,#16]
 333:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 334:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         /* Block Addressing or Byte Addressing */
 335:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         if ((uint32_t)(obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING) ==  (uint
 553              	 .loc 3 335 0
 554 006a FB68     	 ldr r3,[r7,#12]
 555 006c 5B7A     	 ldrb r3,[r3,#9]
 556 006e 03F00803 	 and r3,r3,#8
 557 0072 002B     	 cmp r3,#0
 558 0074 02D1     	 bne .L30
 336:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 337:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           write_address = (uint32_t)(sector_number * SDMMC_BLOCK_SPI_BYTES_PER_SECTOR);
 559              	 .loc 3 337 0
 560 0076 7B68     	 ldr r3,[r7,#4]
 561 0078 5B02     	 lsls r3,r3,#9
 562 007a BB61     	 str r3,[r7,#24]
 563              	.L30:
 338:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
 339:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 340:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         if (tmp_blk_cnt == 1U)
 564              	 .loc 3 340 0
 565 007c 7B69     	 ldr r3,[r7,#20]
 566 007e 012B     	 cmp r3,#1
 567 0080 07D1     	 bne .L31
 341:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 342:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           mode_status = SDMMC_BLOCK_SPI_lWriteSingleBlock(obj, write_buf, write_address);
 568              	 .loc 3 342 0
 569 0082 F868     	 ldr r0,[r7,#12]
 570 0084 B968     	 ldr r1,[r7,#8]
 571 0086 BA69     	 ldr r2,[r7,#24]
 572 0088 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lWriteSingleBlock
 573 008c 0346     	 mov r3,r0
 574 008e BB77     	 strb r3,[r7,#30]
 575 0090 07E0     	 b .L32
 576              	.L31:
 343:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
 344:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         else
 345:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 346:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           mode_status = SDMMC_BLOCK_SPI_lWriteMultipleBlocks(obj, write_buf, write_address, sector_
 577              	 .loc 3 346 0
 578 0092 F868     	 ldr r0,[r7,#12]
 579 0094 B968     	 ldr r1,[r7,#8]
 580 0096 BA69     	 ldr r2,[r7,#24]
 581 0098 3B68     	 ldr r3,[r7]
 582 009a FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lWriteMultipleBlocks
 583 009e 0346     	 mov r3,r0
 584 00a0 BB77     	 strb r3,[r7,#30]
 585              	.L32:
 347:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
 348:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 349:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         SDMMC_BLOCK_SPI_lDummyRead(spi_handle, 2U); /* Dummy Bytes */
 586              	 .loc 3 349 0
 587 00a2 3869     	 ldr r0,[r7,#16]
 588 00a4 0221     	 movs r1,#2
 589 00a6 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
 350:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 351:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         SDMMC_BLOCK_SPI_lSend_Clocktrain(spi_handle, 1U);
 590              	 .loc 3 351 0
 591 00aa 3869     	 ldr r0,[r7,#16]
 592 00ac 0121     	 movs r1,#1
 593 00ae FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSend_Clocktrain
 352:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 353:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         mode_status = (SDMMC_BLOCK_MODE_STATUS_t)((uint32_t)mode_status | 
 354:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                   (uint32_t)SDMMC_BLOCK_SPI_lWaitUntilBusy(spi_hand
 594              	 .loc 3 354 0
 595 00b2 3869     	 ldr r0,[r7,#16]
 596 00b4 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lWaitUntilBusy
 597 00b8 0346     	 mov r3,r0
 598 00ba 1A46     	 mov r2,r3
 353:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                   (uint32_t)SDMMC_BLOCK_SPI_lWaitUntilBusy(spi_hand
 599              	 .loc 3 353 0
 600 00bc BB7F     	 ldrb r3,[r7,#30]
 601 00be 1343     	 orrs r3,r3,r2
 602 00c0 BB77     	 strb r3,[r7,#30]
 355:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 356:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         if (mode_status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 603              	 .loc 3 356 0
 604 00c2 BB7F     	 ldrb r3,[r7,#30]
 605 00c4 002B     	 cmp r3,#0
 606 00c6 04D1     	 bne .L26
 357:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 358:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           status = SDMMC_BLOCK_STATUS_SUCCESS;
 607              	 .loc 3 358 0
 608 00c8 0023     	 movs r3,#0
 609 00ca FB77     	 strb r3,[r7,#31]
 610 00cc 01E0     	 b .L26
 611              	.L29:
 359:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
 360:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 361:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       else
 362:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 363:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         status = SDMMC_BLOCK_STATUS_PARERR;
 612              	 .loc 3 363 0
 613 00ce 0423     	 movs r3,#4
 614 00d0 FB77     	 strb r3,[r7,#31]
 615              	.L26:
 364:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 365:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #ifdef SDMMC_BLOCK_SPI_CARD_LED_SIGNAL
 366:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (obj->led != NULL)
 367:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 368:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         XMC_GPIO_SetOutputLow(obj->led->port, obj->led->pin);
 369:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 370:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #endif
 371:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 372:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 373:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 374:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 616              	 .loc 3 374 0
 617 00d2 FB7F     	 ldrb r3,[r7,#31]
 375:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 618              	 .loc 3 375 0
 619 00d4 1846     	 mov r0,r3
 620 00d6 2037     	 adds r7,r7,#32
 621              	.LCFI39:
 622              	 .cfi_def_cfa_offset 8
 623 00d8 BD46     	 mov sp,r7
 624              	.LCFI40:
 625              	 .cfi_def_cfa_register 13
 626              	 
 627 00da 80BD     	 pop {r7,pc}
 628              	 .cfi_endproc
 629              	.LFE330:
 631              	 .section .rodata
 632              	 .align 2
 633              	.LC0:
 634 0000 00000000 	 .word 0
 635 0004 20000000 	 .word 32
 636 0008 40000000 	 .word 64
 637 000c 80000000 	 .word 128
 638 0010 00010000 	 .word 256
 639 0014 00020000 	 .word 512
 640 0018 00040000 	 .word 1024
 641 001c 00080000 	 .word 2048
 642 0020 00100000 	 .word 4096
 643 0024 00200000 	 .word 8192
 644              	 .section .text.SDMMC_BLOCK_SPI_EraseBlock,"ax",%progbits
 645              	 .align 2
 646              	 .global SDMMC_BLOCK_SPI_EraseBlock
 647              	 .thumb
 648              	 .thumb_func
 650              	SDMMC_BLOCK_SPI_EraseBlock:
 651              	.LFB331:
 376:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 377:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /*
 378:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   * The function is used to erase data from the card.
 379:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** */
 380:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_EraseBlock(SDMMC_BLOCK_t *const obj,
 381:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                      const uint32_t start_address,
 382:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                      const uint32_t end_address)
 383:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 652              	 .loc 3 383 0
 653              	 .cfi_startproc
 654              	 
 655              	 
 656 0000 B0B5     	 push {r4,r5,r7,lr}
 657              	.LCFI41:
 658              	 .cfi_def_cfa_offset 16
 659              	 .cfi_offset 4,-16
 660              	 .cfi_offset 5,-12
 661              	 .cfi_offset 7,-8
 662              	 .cfi_offset 14,-4
 663 0002 9AB0     	 sub sp,sp,#104
 664              	.LCFI42:
 665              	 .cfi_def_cfa_offset 120
 666 0004 00AF     	 add r7,sp,#0
 667              	.LCFI43:
 668              	 .cfi_def_cfa_register 7
 669 0006 F860     	 str r0,[r7,#12]
 670 0008 B960     	 str r1,[r7,#8]
 671 000a 7A60     	 str r2,[r7,#4]
 384:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 672              	 .loc 3 384 0
 673 000c 0123     	 movs r3,#1
 674 000e 87F86730 	 strb r3,[r7,#103]
 385:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t tmp_start_addr;
 386:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t num_of_sectors = 0UL;
 675              	 .loc 3 386 0
 676 0012 0023     	 movs r3,#0
 677 0014 FB65     	 str r3,[r7,#92]
 387:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* Allocation Unit to No. of Sectors in 1 AU table mapping*/
 388:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t au_to_sectors[10] = { 0UL,   32UL,  64UL,  128UL,  256UL,
 678              	 .loc 3 388 0
 679 0016 524B     	 ldr r3,.L42
 680 0018 07F11404 	 add r4,r7,#20
 681 001c 1D46     	 mov r5,r3
 682 001e 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 683 0020 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 684 0022 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 685 0024 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 686 0026 95E80300 	 ldmia r5,{r0,r1}
 687 002a 84E80300 	 stmia r4,{r0,r1}
 389:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                  512UL, 1024UL, 2048UL, 4096UL, 8192UL
 390:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                };
 391:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t erase_size = 0U;
 688              	 .loc 3 391 0
 689 002e 0023     	 movs r3,#0
 690 0030 BB65     	 str r3,[r7,#88]
 392:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t erase_offset = 0U;
 691              	 .loc 3 392 0
 692 0032 0023     	 movs r3,#0
 693 0034 7B65     	 str r3,[r7,#84]
 393:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t erase_timeout = 0U;
 694              	 .loc 3 393 0
 695 0036 0023     	 movs r3,#0
 696 0038 3B65     	 str r3,[r7,#80]
 394:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t au_size = 0U;
 697              	 .loc 3 394 0
 698 003a 0023     	 movs r3,#0
 699 003c FB64     	 str r3,[r7,#76]
 395:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t sectors_in_au = 0UL;
 700              	 .loc 3 395 0
 701 003e 0023     	 movs r3,#0
 702 0040 BB64     	 str r3,[r7,#72]
 396:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t sectors_in_erase_cluster = 0U;
 703              	 .loc 3 396 0
 704 0042 0023     	 movs r3,#0
 705 0044 7B64     	 str r3,[r7,#68]
 397:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* Read SD Status  */
 398:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint8_t *sd_status;
 399:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t erase_timeout_per_cluster = 0U;
 706              	 .loc 3 399 0
 707 0046 0023     	 movs r3,#0
 708 0048 3B64     	 str r3,[r7,#64]
 400:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 401:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((obj->card_state & (uint8_t)SDMMC_BLOCK_CARD_STATE_WRITE_PROTECTED) != 0U)
 709              	 .loc 3 401 0
 710 004a FB68     	 ldr r3,[r7,#12]
 711 004c 1B7A     	 ldrb r3,[r3,#8]
 712 004e 03F00403 	 and r3,r3,#4
 713 0052 002B     	 cmp r3,#0
 714 0054 03D0     	 beq .L36
 402:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 403:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_WP_VIOLATION_ERROR;
 715              	 .loc 3 403 0
 716 0056 0F23     	 movs r3,#15
 717 0058 87F86730 	 strb r3,[r7,#103]
 718 005c 7AE0     	 b .L37
 719              	.L36:
 404:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 405:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #ifdef SDMMC_BLOCK_CARD_WRITE_PROTECT_SIGNAL
 406:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else if ((obj->sdwc != NULL) && (XMC_GPIO_GetInput(obj->sdwc->port, obj->sdwc->pin)))
 407:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 408:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_WP_VIOLATION_ERROR;
 409:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 410:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #endif
 411:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
 412:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 413:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     tmp_start_addr = start_address;
 720              	 .loc 3 413 0
 721 005e BB68     	 ldr r3,[r7,#8]
 722 0060 3B66     	 str r3,[r7,#96]
 414:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     num_of_sectors = (end_address - tmp_start_addr) + 1U;
 723              	 .loc 3 414 0
 724 0062 7A68     	 ldr r2,[r7,#4]
 725 0064 3B6E     	 ldr r3,[r7,#96]
 726 0066 D31A     	 subs r3,r2,r3
 727 0068 0133     	 adds r3,r3,#1
 728 006a FB65     	 str r3,[r7,#92]
 415:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 416:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #ifdef SDMMC_BLOCK_SPI_CARD_LED_SIGNAL
 417:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if (obj->led != NULL)
 418:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 419:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       XMC_GPIO_SetOutputHigh(obj->led->port, obj->led->pin);
 420:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 421:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #endif
 422:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* Check Sector number is not out of bound */
 423:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lCheckSectorBound(obj, tmp_start_addr, num_of_sectors);
 729              	 .loc 3 423 0
 730 006c F868     	 ldr r0,[r7,#12]
 731 006e 396E     	 ldr r1,[r7,#96]
 732 0070 FA6D     	 ldr r2,[r7,#92]
 733 0072 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lCheckSectorBound
 734 0076 0346     	 mov r3,r0
 735 0078 87F86730 	 strb r3,[r7,#103]
 424:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 425:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 736              	 .loc 3 425 0
 737 007c 97F86730 	 ldrb r3,[r7,#103]
 738 0080 002B     	 cmp r3,#0
 739 0082 67D1     	 bne .L37
 426:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 427:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       sd_status = obj->sdmmc_spi->card_info.sd_status;
 740              	 .loc 3 427 0
 741 0084 FB68     	 ldr r3,[r7,#12]
 742 0086 1B68     	 ldr r3,[r3]
 743 0088 3033     	 adds r3,r3,#48
 744 008a FB63     	 str r3,[r7,#60]
 428:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /* Erase Timeout Calculation */
 429:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /* Get SD Status */
 430:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status  = SDMMC_BLOCK_SPI_GetSdStatus(obj, sd_status);
 745              	 .loc 3 430 0
 746 008c F868     	 ldr r0,[r7,#12]
 747 008e F96B     	 ldr r1,[r7,#60]
 748 0090 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_GetSdStatus
 749 0094 0346     	 mov r3,r0
 750 0096 87F86730 	 strb r3,[r7,#103]
 431:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 432:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 751              	 .loc 3 432 0
 752 009a 97F86730 	 ldrb r3,[r7,#103]
 753 009e 002B     	 cmp r3,#0
 754 00a0 58D1     	 bne .L37
 433:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 434:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         /*
 435:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          * Using Nth Byte = 7 + (N-1) * 8 Logic Here ..
 436:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          * This gives the MSB bit number of the Nth Byte.
 437:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          * Ex: 51st Byte ---- =  7 + (51 -1)*8
 438:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          * 407 is the MSB bit of the 51st Byte.
 439:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          * Here 51st byte means 50th byte if we take 0th byte as first byte.
 440:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          * 407,406,405,404,403,402,401,400
 441:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          */
 442:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         /* Bits 400-401 in SD status is Erase Offset */
 443:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         erase_offset = ((uint32_t)sd_status[50] & 0x03U);
 755              	 .loc 3 443 0
 756 00a2 FB6B     	 ldr r3,[r7,#60]
 757 00a4 3233     	 adds r3,r3,#50
 758 00a6 1B78     	 ldrb r3,[r3]
 759 00a8 03F00303 	 and r3,r3,#3
 760 00ac 7B65     	 str r3,[r7,#84]
 444:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 445:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         /* Bits 402-407 in SD status is Erase Timeout */
 446:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         erase_timeout = (((uint32_t) sd_status[50] & 0xFCU) >> 2U);
 761              	 .loc 3 446 0
 762 00ae FB6B     	 ldr r3,[r7,#60]
 763 00b0 3233     	 adds r3,r3,#50
 764 00b2 1B78     	 ldrb r3,[r3]
 765 00b4 9B08     	 lsrs r3,r3,#2
 766 00b6 DBB2     	 uxtb r3,r3
 767 00b8 3B65     	 str r3,[r7,#80]
 447:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 448:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         /* Bits 408-423 in SD status is Erase Size */
 449:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         erase_size =  (((uint32_t) sd_status[51] & 0xFFU) | (((uint32_t) sd_status[52] & 0xFFU) << 
 768              	 .loc 3 449 0
 769 00ba FB6B     	 ldr r3,[r7,#60]
 770 00bc 3333     	 adds r3,r3,#51
 771 00be 1B78     	 ldrb r3,[r3]
 772 00c0 1A46     	 mov r2,r3
 773 00c2 FB6B     	 ldr r3,[r7,#60]
 774 00c4 3433     	 adds r3,r3,#52
 775 00c6 1B78     	 ldrb r3,[r3]
 776 00c8 1B02     	 lsls r3,r3,#8
 777 00ca 1343     	 orrs r3,r3,r2
 778 00cc BB65     	 str r3,[r7,#88]
 450:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 451:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         /* Bits 428-431 in SD status is Allocation unit Size*/
 452:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         au_size  =  (((uint32_t)sd_status[53] & 0xF0U) >> 4U);
 779              	 .loc 3 452 0
 780 00ce FB6B     	 ldr r3,[r7,#60]
 781 00d0 3533     	 adds r3,r3,#53
 782 00d2 1B78     	 ldrb r3,[r3]
 783 00d4 1B09     	 lsrs r3,r3,#4
 784 00d6 DBB2     	 uxtb r3,r3
 785 00d8 FB64     	 str r3,[r7,#76]
 453:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 454:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         /* Erase Timeout Calculations */
 455:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         erase_timeout_per_cluster = (erase_timeout / erase_size) + erase_offset ;
 786              	 .loc 3 455 0
 787 00da 3A6D     	 ldr r2,[r7,#80]
 788 00dc BB6D     	 ldr r3,[r7,#88]
 789 00de B2FBF3F2 	 udiv r2,r2,r3
 790 00e2 7B6D     	 ldr r3,[r7,#84]
 791 00e4 1344     	 add r3,r3,r2
 792 00e6 3B64     	 str r3,[r7,#64]
 456:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 457:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         /* Number of Sectors in 1AU */
 458:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         sectors_in_au = au_to_sectors[au_size];
 793              	 .loc 3 458 0
 794 00e8 FB6C     	 ldr r3,[r7,#76]
 795 00ea 9B00     	 lsls r3,r3,#2
 796 00ec 07F16802 	 add r2,r7,#104
 797 00f0 1344     	 add r3,r3,r2
 798 00f2 53F8543C 	 ldr r3,[r3,#-84]
 799 00f6 BB64     	 str r3,[r7,#72]
 459:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 460:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         sectors_in_erase_cluster = sectors_in_au * erase_size;
 800              	 .loc 3 460 0
 801 00f8 BB6C     	 ldr r3,[r7,#72]
 802 00fa BA6D     	 ldr r2,[r7,#88]
 803 00fc 02FB03F3 	 mul r3,r2,r3
 804 0100 7B64     	 str r3,[r7,#68]
 461:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 462:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         while ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (num_of_sectors >= sectors_in_erase_c
 805              	 .loc 3 462 0
 806 0102 13E0     	 b .L38
 807              	.L40:
 463:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 464:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           status = SDMMC_BLOCK_SPI_lErase(obj,
 808              	 .loc 3 464 0
 809 0104 3A6E     	 ldr r2,[r7,#96]
 810 0106 7B6C     	 ldr r3,[r7,#68]
 811 0108 1344     	 add r3,r3,r2
 812 010a F868     	 ldr r0,[r7,#12]
 813 010c 396E     	 ldr r1,[r7,#96]
 814 010e 1A46     	 mov r2,r3
 815 0110 3B6C     	 ldr r3,[r7,#64]
 816 0112 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lErase
 817 0116 0346     	 mov r3,r0
 818 0118 87F86730 	 strb r3,[r7,#103]
 465:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                           tmp_start_addr,
 466:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                           (tmp_start_addr + sectors_in_erase_cluster),
 467:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                           erase_timeout_per_cluster);
 468:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 469:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           tmp_start_addr  = tmp_start_addr + sectors_in_erase_cluster;
 819              	 .loc 3 469 0
 820 011c 3A6E     	 ldr r2,[r7,#96]
 821 011e 7B6C     	 ldr r3,[r7,#68]
 822 0120 1344     	 add r3,r3,r2
 823 0122 3B66     	 str r3,[r7,#96]
 470:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           num_of_sectors = num_of_sectors - sectors_in_erase_cluster;
 824              	 .loc 3 470 0
 825 0124 FA6D     	 ldr r2,[r7,#92]
 826 0126 7B6C     	 ldr r3,[r7,#68]
 827 0128 D31A     	 subs r3,r2,r3
 828 012a FB65     	 str r3,[r7,#92]
 829              	.L38:
 462:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 830              	 .loc 3 462 0
 831 012c 97F86730 	 ldrb r3,[r7,#103]
 832 0130 002B     	 cmp r3,#0
 833 0132 03D1     	 bne .L39
 462:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 834              	 .loc 3 462 0 is_stmt 0 discriminator 1
 835 0134 FA6D     	 ldr r2,[r7,#92]
 836 0136 7B6C     	 ldr r3,[r7,#68]
 837 0138 9A42     	 cmp r2,r3
 838 013a E3D2     	 bcs .L40
 839              	.L39:
 471:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
 472:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         if (num_of_sectors != 0UL )
 840              	 .loc 3 472 0 is_stmt 1
 841 013c FB6D     	 ldr r3,[r7,#92]
 842 013e 002B     	 cmp r3,#0
 843 0140 08D0     	 beq .L37
 473:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 474:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           status = SDMMC_BLOCK_SPI_lErase(obj, tmp_start_addr, end_address, erase_timeout_per_clust
 844              	 .loc 3 474 0
 845 0142 F868     	 ldr r0,[r7,#12]
 846 0144 396E     	 ldr r1,[r7,#96]
 847 0146 7A68     	 ldr r2,[r7,#4]
 848 0148 3B6C     	 ldr r3,[r7,#64]
 849 014a FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lErase
 850 014e 0346     	 mov r3,r0
 851 0150 87F86730 	 strb r3,[r7,#103]
 852              	.L37:
 475:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
 476:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 477:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 478:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #ifdef SDMMC_BLOCK_SPI_CARD_LED_SIGNAL
 479:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if (obj->led != NULL)
 480:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 481:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       XMC_GPIO_SetOutputHigh(obj->led->port, obj->led->pin);
 482:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 483:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #endif
 484:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 485:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 853              	 .loc 3 485 0
 854 0154 97F86730 	 ldrb r3,[r7,#103]
 486:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 855              	 .loc 3 486 0
 856 0158 1846     	 mov r0,r3
 857 015a 6837     	 adds r7,r7,#104
 858              	.LCFI44:
 859              	 .cfi_def_cfa_offset 16
 860 015c BD46     	 mov sp,r7
 861              	.LCFI45:
 862              	 .cfi_def_cfa_register 13
 863              	 
 864 015e B0BD     	 pop {r4,r5,r7,pc}
 865              	.L43:
 866              	 .align 2
 867              	.L42:
 868 0160 00000000 	 .word .LC0
 869              	 .cfi_endproc
 870              	.LFE331:
 872              	 .section .text.SDMMC_BLOCK_SPI_GetSectorCount,"ax",%progbits
 873              	 .align 2
 874              	 .global SDMMC_BLOCK_SPI_GetSectorCount
 875              	 .thumb
 876              	 .thumb_func
 878              	SDMMC_BLOCK_SPI_GetSectorCount:
 879              	.LFB332:
 487:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 488:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /*
 489:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   * This function is use to get number of sectors present on the card.
 490:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** */
 491:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_GetSectorCount(SDMMC_BLOCK_t *const obj, uint32_t *sector
 492:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 880              	 .loc 3 492 0
 881              	 .cfi_startproc
 882              	 
 883              	 
 884              	 
 885 0000 80B4     	 push {r7}
 886              	.LCFI46:
 887              	 .cfi_def_cfa_offset 4
 888              	 .cfi_offset 7,-4
 889 0002 87B0     	 sub sp,sp,#28
 890              	.LCFI47:
 891              	 .cfi_def_cfa_offset 32
 892 0004 00AF     	 add r7,sp,#0
 893              	.LCFI48:
 894              	 .cfi_def_cfa_register 7
 895 0006 7860     	 str r0,[r7,#4]
 896 0008 3960     	 str r1,[r7]
 493:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (((uint32_t)obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_HIGH_CAPACITY) != (uint32_t)0)
 897              	 .loc 3 493 0
 898 000a 7B68     	 ldr r3,[r7,#4]
 899 000c 5B7A     	 ldrb r3,[r3,#9]
 900 000e 03F00403 	 and r3,r3,#4
 901 0012 002B     	 cmp r3,#0
 902 0014 0CD0     	 beq .L45
 903              	.LBB2:
 494:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 495:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     SDMMC_BLOCK_SDV2_CSD_t *tmp_csd = (SDMMC_BLOCK_SDV2_CSD_t *)&obj->sdmmc_spi->card_info.csd;
 904              	 .loc 3 495 0
 905 0016 7B68     	 ldr r3,[r7,#4]
 906 0018 1B68     	 ldr r3,[r3]
 907 001a 1833     	 adds r3,r3,#24
 908 001c 7B61     	 str r3,[r7,#20]
 496:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 497:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /*
 498:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****      * For High Capacity SD card, (C_SIZE field value + 1) * 1024
 499:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****      * gives the sector count
 500:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****      */
 501:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     *sector_count = (uint32_t)(((uint32_t)tmp_csd->dev_size + (uint32_t)1) << (uint32_t)10);
 909              	 .loc 3 501 0
 910 001e 7B69     	 ldr r3,[r7,#20]
 911 0020 9B68     	 ldr r3,[r3,#8]
 912 0022 C3F31503 	 ubfx r3,r3,#0,#22
 913 0026 0133     	 adds r3,r3,#1
 914 0028 9A02     	 lsls r2,r3,#10
 915 002a 3B68     	 ldr r3,[r7]
 916 002c 1A60     	 str r2,[r3]
 917              	.LBE2:
 918 002e 18E0     	 b .L46
 919              	.L45:
 920              	.LBB3:
 502:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 503:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
 504:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 505:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     SDMMC_BLOCK_SDV1_CSD_t *tmp_csd = (SDMMC_BLOCK_SDV1_CSD_t *)&obj->sdmmc_spi->card_info.csd;
 921              	 .loc 3 505 0
 922 0030 7B68     	 ldr r3,[r7,#4]
 923 0032 1B68     	 ldr r3,[r3]
 924 0034 1833     	 adds r3,r3,#24
 925 0036 3B61     	 str r3,[r7,#16]
 506:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 507:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /*
 508:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****      * For standard capacity SD card BLOCKNR = (C_SIZE+1) * MULT where MULT = 2^(C_SIZE_MULT+2) and
 509:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****      */
 510:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     uint32_t multiplier = (uint32_t)(1 << ((uint32_t)tmp_csd->dev_size_mult + 2));
 926              	 .loc 3 510 0
 927 0038 3B69     	 ldr r3,[r7,#16]
 928 003a 5B68     	 ldr r3,[r3,#4]
 929 003c C3F3C233 	 ubfx r3,r3,#15,#3
 930 0040 DBB2     	 uxtb r3,r3
 931 0042 0233     	 adds r3,r3,#2
 932 0044 1A46     	 mov r2,r3
 933 0046 0123     	 movs r3,#1
 934 0048 9340     	 lsls r3,r3,r2
 935 004a FB60     	 str r3,[r7,#12]
 511:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     *sector_count = ((uint32_t)tmp_csd->dev_size + 1) * multiplier;
 936              	 .loc 3 511 0
 937 004c 3B69     	 ldr r3,[r7,#16]
 938 004e 1B89     	 ldrh r3,[r3,#8]
 939 0050 C3F30B03 	 ubfx r3,r3,#0,#12
 940 0054 9BB2     	 uxth r3,r3
 941 0056 0133     	 adds r3,r3,#1
 942 0058 FA68     	 ldr r2,[r7,#12]
 943 005a 02FB03F2 	 mul r2,r2,r3
 944 005e 3B68     	 ldr r3,[r7]
 945 0060 1A60     	 str r2,[r3]
 946              	.L46:
 947              	.LBE3:
 512:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 513:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 514:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 948              	 .loc 3 514 0
 949 0062 0023     	 movs r3,#0
 515:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 950              	 .loc 3 515 0
 951 0064 1846     	 mov r0,r3
 952 0066 1C37     	 adds r7,r7,#28
 953              	.LCFI49:
 954              	 .cfi_def_cfa_offset 4
 955 0068 BD46     	 mov sp,r7
 956              	.LCFI50:
 957              	 .cfi_def_cfa_register 13
 958              	 
 959 006a 5DF8047B 	 ldr r7,[sp],#4
 960              	.LCFI51:
 961              	 .cfi_restore 7
 962              	 .cfi_def_cfa_offset 0
 963 006e 7047     	 bx lr
 964              	 .cfi_endproc
 965              	.LFE332:
 967              	 .section .text.SDMMC_BLOCK_SPI_GetSdStatus,"ax",%progbits
 968              	 .align 2
 969              	 .global SDMMC_BLOCK_SPI_GetSdStatus
 970              	 .thumb
 971              	 .thumb_func
 973              	SDMMC_BLOCK_SPI_GetSdStatus:
 974              	.LFB333:
 516:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 517:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_GetSdStatus(const SDMMC_BLOCK_t *const obj, uint8_t *buff
 518:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 975              	 .loc 3 518 0
 976              	 .cfi_startproc
 977              	 
 978              	 
 979 0000 80B5     	 push {r7,lr}
 980              	.LCFI52:
 981              	 .cfi_def_cfa_offset 8
 982              	 .cfi_offset 7,-8
 983              	 .cfi_offset 14,-4
 984 0002 86B0     	 sub sp,sp,#24
 985              	.LCFI53:
 986              	 .cfi_def_cfa_offset 32
 987 0004 00AF     	 add r7,sp,#0
 988              	.LCFI54:
 989              	 .cfi_def_cfa_register 7
 990 0006 7860     	 str r0,[r7,#4]
 991 0008 3960     	 str r1,[r7]
 519:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
 520:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_t * spi_handle;
 521:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t timeout_count = 0U;
 992              	 .loc 3 521 0
 993 000a 0023     	 movs r3,#0
 994 000c 3B61     	 str r3,[r7,#16]
 522:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 523:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* Send the Application Specific Command i.e. Command 55.*/
 524:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD55, SDMMC_BLOCK_ARGUMENT0);
 995              	 .loc 3 524 0
 996 000e 7868     	 ldr r0,[r7,#4]
 997 0010 7721     	 movs r1,#119
 998 0012 0022     	 movs r2,#0
 999 0014 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 1000 0018 0346     	 mov r3,r0
 1001 001a FB75     	 strb r3,[r7,#23]
 525:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response == 0U))
 1002              	 .loc 3 525 0
 1003 001c FB7D     	 ldrb r3,[r7,#23]
 1004 001e 002B     	 cmp r3,#0
 1005 0020 45D1     	 bne .L49
 1006              	 .loc 3 525 0 is_stmt 0 discriminator 1
 1007 0022 7B68     	 ldr r3,[r7,#4]
 1008 0024 1B68     	 ldr r3,[r3]
 1009 0026 93F87030 	 ldrb r3,[r3,#112]
 1010 002a 002B     	 cmp r3,#0
 1011 002c 3FD1     	 bne .L49
 526:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 527:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     spi_handle = obj->sdmmc_spi;
 1012              	 .loc 3 527 0 is_stmt 1
 1013 002e 7B68     	 ldr r3,[r7,#4]
 1014 0030 1B68     	 ldr r3,[r3]
 1015 0032 FB60     	 str r3,[r7,#12]
 528:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 529:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* Read the SD status from the data line */
 530:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD13, SDMMC_BLOCK_ARGUMENT0);
 1016              	 .loc 3 530 0
 1017 0034 7868     	 ldr r0,[r7,#4]
 1018 0036 4D21     	 movs r1,#77
 1019 0038 0022     	 movs r2,#0
 1020 003a FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 1021 003e 0346     	 mov r3,r0
 1022 0040 FB75     	 strb r3,[r7,#23]
 531:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 532:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (spi_handle->cmd_response == 0U))
 1023              	 .loc 3 532 0
 1024 0042 FB7D     	 ldrb r3,[r7,#23]
 1025 0044 002B     	 cmp r3,#0
 1026 0046 2ED1     	 bne .L50
 1027              	 .loc 3 532 0 is_stmt 0 discriminator 1
 1028 0048 FB68     	 ldr r3,[r7,#12]
 1029 004a 93F87030 	 ldrb r3,[r3,#112]
 1030 004e 002B     	 cmp r3,#0
 1031 0050 29D1     	 bne .L50
 533:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 534:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /*
 535:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****        * The function gets the current SD Bus status from the card.
 536:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****        * The SD Status contains status bits that are related to the SD
 537:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****        * Memory Card proprietary features and may be used for future
 538:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****        * application-specific usage.
 539:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****        * SD Status is of 512 bits so buffer of 64bytes needs to be passed
 540:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****        * to this function.
 541:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****        */
 542:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       timeout_count = 0U;
 1032              	 .loc 3 542 0 is_stmt 1
 1033 0052 0023     	 movs r3,#0
 1034 0054 3B61     	 str r3,[r7,#16]
 1035              	.L53:
 543:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 544:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       do
 545:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 546:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         status = SDMMC_BLOCK_SPI_lReadData(spi_handle, &spi_handle->cmd_response, 1U);
 1036              	 .loc 3 546 0
 1037 0056 FB68     	 ldr r3,[r7,#12]
 1038 0058 7033     	 adds r3,r3,#112
 1039 005a F868     	 ldr r0,[r7,#12]
 1040 005c 1946     	 mov r1,r3
 1041 005e 0122     	 movs r2,#1
 1042 0060 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 1043 0064 0346     	 mov r3,r0
 1044 0066 FB75     	 strb r3,[r7,#23]
 547:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         if (timeout_count++ > 0xFFFEU)
 1045              	 .loc 3 547 0
 1046 0068 3B69     	 ldr r3,[r7,#16]
 1047 006a 5A1C     	 adds r2,r3,#1
 1048 006c 3A61     	 str r2,[r7,#16]
 1049 006e 4FF6FE72 	 movw r2,#65534
 1050 0072 9342     	 cmp r3,r2
 1051 0074 02D9     	 bls .L51
 548:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 549:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           status = SDMMC_BLOCK_MODE_STATUS_COMMAND_TIMEOUT_ERROR;
 1052              	 .loc 3 549 0
 1053 0076 0223     	 movs r3,#2
 1054 0078 FB75     	 strb r3,[r7,#23]
 550:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           XMC_DEBUG("SDMMC_BLOCK_SPI_GetSdStatus : CMD13 Timeout error")
 551:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           break;
 1055              	 .loc 3 551 0
 1056 007a 04E0     	 b .L52
 1057              	.L51:
 552:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
 553:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       } while (spi_handle->cmd_response != SDMMC_BLOCK_SPI_START_BLOCK_TOKEN);
 1058              	 .loc 3 553 0
 1059 007c FB68     	 ldr r3,[r7,#12]
 1060 007e 93F87030 	 ldrb r3,[r3,#112]
 1061 0082 FE2B     	 cmp r3,#254
 1062 0084 E7D1     	 bne .L53
 1063              	.L52:
 554:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 555:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 1064              	 .loc 3 555 0
 1065 0086 FB7D     	 ldrb r3,[r7,#23]
 1066 0088 002B     	 cmp r3,#0
 1067 008a 0BD1     	 bne .L54
 556:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 557:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         status = SDMMC_BLOCK_SPI_lReadCardRegister(spi_handle, buffer, 64U);
 1068              	 .loc 3 557 0
 1069 008c F868     	 ldr r0,[r7,#12]
 1070 008e 3968     	 ldr r1,[r7]
 1071 0090 4022     	 movs r2,#64
 1072 0092 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadCardRegister
 1073 0096 0346     	 mov r3,r0
 1074 0098 FB75     	 strb r3,[r7,#23]
 558:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         /* 16 bit crc follows data */
 559:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         SDMMC_BLOCK_SPI_lDummyRead(spi_handle, SDMMC_BLOCK_SPI_CRC_BYTES);
 1075              	 .loc 3 559 0
 1076 009a F868     	 ldr r0,[r7,#12]
 1077 009c 0221     	 movs r1,#2
 1078 009e FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
 555:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 1079              	 .loc 3 555 0
 1080 00a2 03E0     	 b .L55
 1081              	.L54:
 1082 00a4 02E0     	 b .L55
 1083              	.L50:
 560:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 561:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 562:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
 563:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 564:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1084              	 .loc 3 564 0
 1085 00a6 0123     	 movs r3,#1
 1086 00a8 FB75     	 strb r3,[r7,#23]
 532:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 1087              	 .loc 3 532 0
 1088 00aa 02E0     	 b .L56
 1089              	.L55:
 532:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 1090              	 .loc 3 532 0 is_stmt 0 discriminator 1
 1091 00ac 01E0     	 b .L56
 1092              	.L49:
 565:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 566:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 567:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
 568:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 569:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1093              	 .loc 3 569 0 is_stmt 1
 1094 00ae 0123     	 movs r3,#1
 1095 00b0 FB75     	 strb r3,[r7,#23]
 1096              	.L56:
 570:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 571:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 1097              	 .loc 3 571 0
 1098 00b2 FB7D     	 ldrb r3,[r7,#23]
 572:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 1099              	 .loc 3 572 0
 1100 00b4 1846     	 mov r0,r3
 1101 00b6 1837     	 adds r7,r7,#24
 1102              	.LCFI55:
 1103              	 .cfi_def_cfa_offset 8
 1104 00b8 BD46     	 mov sp,r7
 1105              	.LCFI56:
 1106              	 .cfi_def_cfa_register 13
 1107              	 
 1108 00ba 80BD     	 pop {r7,pc}
 1109              	 .cfi_endproc
 1110              	.LFE333:
 1112              	 .section .text.SDMMC_BLOCK_SPI_GetLockStatus,"ax",%progbits
 1113              	 .align 2
 1114              	 .global SDMMC_BLOCK_SPI_GetLockStatus
 1115              	 .thumb
 1116              	 .thumb_func
 1118              	SDMMC_BLOCK_SPI_GetLockStatus:
 1119              	.LFB334:
 573:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 574:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_GetLockStatus(SDMMC_BLOCK_t *const obj,
 575:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                         SDMMC_BLOCK_CARD_LOCK_STATUS_t * lock_statu
 576:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 1120              	 .loc 3 576 0
 1121              	 .cfi_startproc
 1122              	 
 1123              	 
 1124 0000 80B5     	 push {r7,lr}
 1125              	.LCFI57:
 1126              	 .cfi_def_cfa_offset 8
 1127              	 .cfi_offset 7,-8
 1128              	 .cfi_offset 14,-4
 1129 0002 84B0     	 sub sp,sp,#16
 1130              	.LCFI58:
 1131              	 .cfi_def_cfa_offset 24
 1132 0004 00AF     	 add r7,sp,#0
 1133              	.LCFI59:
 1134              	 .cfi_def_cfa_register 7
 1135 0006 7860     	 str r0,[r7,#4]
 1136 0008 3960     	 str r1,[r7]
 577:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint8_t card_status;
 578:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1137              	 .loc 3 578 0
 1138 000a 0123     	 movs r3,#1
 1139 000c FB73     	 strb r3,[r7,#15]
 579:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 580:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* Send CMD13 to read card status  */
 581:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD13, SDMMC_BLOCK_ARGUMENT0);
 1140              	 .loc 3 581 0
 1141 000e 7868     	 ldr r0,[r7,#4]
 1142 0010 4D21     	 movs r1,#77
 1143 0012 0022     	 movs r2,#0
 1144 0014 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 1145 0018 0346     	 mov r3,r0
 1146 001a FB73     	 strb r3,[r7,#15]
 582:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 583:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response == 0U))
 1147              	 .loc 3 583 0
 1148 001c FB7B     	 ldrb r3,[r7,#15]
 1149 001e 002B     	 cmp r3,#0
 1150 0020 34D1     	 bne .L59
 1151              	 .loc 3 583 0 is_stmt 0 discriminator 1
 1152 0022 7B68     	 ldr r3,[r7,#4]
 1153 0024 1B68     	 ldr r3,[r3]
 1154 0026 93F87030 	 ldrb r3,[r3,#112]
 1155 002a 002B     	 cmp r3,#0
 1156 002c 2ED1     	 bne .L59
 584:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 585:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* Get one more bytes of response */
 586:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lReadData(obj->sdmmc_spi, &card_status, 1U);
 1157              	 .loc 3 586 0 is_stmt 1
 1158 002e 7B68     	 ldr r3,[r7,#4]
 1159 0030 1A68     	 ldr r2,[r3]
 1160 0032 07F10E03 	 add r3,r7,#14
 1161 0036 1046     	 mov r0,r2
 1162 0038 1946     	 mov r1,r3
 1163 003a 0122     	 movs r2,#1
 1164 003c FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 1165 0040 0346     	 mov r3,r0
 1166 0042 FB73     	 strb r3,[r7,#15]
 587:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 588:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if (((uint32_t)card_status & (uint32_t)SDMMC_BLOCK_SPI_CSR_CARD_LOCK_ERROR_MSK) != (uint32_t)0)
 1167              	 .loc 3 588 0
 1168 0044 BB7B     	 ldrb r3,[r7,#14]
 1169 0046 03F00203 	 and r3,r3,#2
 1170 004a 002B     	 cmp r3,#0
 1171 004c 02D0     	 beq .L60
 589:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 590:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_LOCK_UNLOCK_ERROR;
 1172              	 .loc 3 590 0
 1173 004e 1023     	 movs r3,#16
 1174 0050 FB73     	 strb r3,[r7,#15]
 1175 0052 1AE0     	 b .L61
 1176              	.L60:
 591:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 592:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
 593:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 594:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /* Lock/Unlock Status bit in the CSR Register */
 595:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (((uint32_t)card_status & (uint32_t)SDMMC_BLOCK_SPI_CSR_CARD_LOCK_STATUS_MSK) != (uint32_t
 1177              	 .loc 3 595 0
 1178 0054 BB7B     	 ldrb r3,[r7,#14]
 1179 0056 03F00103 	 and r3,r3,#1
 1180 005a 002B     	 cmp r3,#0
 1181 005c 0AD0     	 beq .L62
 596:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 597:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         *lock_status = SDMMC_BLOCK_CARD_LOCK_STATUS_LOCKED;
 1182              	 .loc 3 597 0
 1183 005e 3B68     	 ldr r3,[r7]
 1184 0060 0122     	 movs r2,#1
 1185 0062 1A70     	 strb r2,[r3]
 598:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         obj->card_state |= (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED ;
 1186              	 .loc 3 598 0
 1187 0064 7B68     	 ldr r3,[r7,#4]
 1188 0066 1B7A     	 ldrb r3,[r3,#8]
 1189 0068 43F00803 	 orr r3,r3,#8
 1190 006c DAB2     	 uxtb r2,r3
 1191 006e 7B68     	 ldr r3,[r7,#4]
 1192 0070 1A72     	 strb r2,[r3,#8]
 1193 0072 0AE0     	 b .L61
 1194              	.L62:
 599:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 600:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       else
 601:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 602:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         *lock_status = SDMMC_BLOCK_CARD_LOCK_STATUS_UNLOCKED;
 1195              	 .loc 3 602 0
 1196 0074 3B68     	 ldr r3,[r7]
 1197 0076 0022     	 movs r2,#0
 1198 0078 1A70     	 strb r2,[r3]
 603:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         obj->card_state &= (uint8_t)~((uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED);
 1199              	 .loc 3 603 0
 1200 007a 7B68     	 ldr r3,[r7,#4]
 1201 007c 1B7A     	 ldrb r3,[r3,#8]
 1202 007e 23F00803 	 bic r3,r3,#8
 1203 0082 DAB2     	 uxtb r2,r3
 1204 0084 7B68     	 ldr r3,[r7,#4]
 1205 0086 1A72     	 strb r2,[r3,#8]
 588:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 1206              	 .loc 3 588 0
 1207 0088 02E0     	 b .L63
 1208              	.L61:
 1209 008a 01E0     	 b .L63
 1210              	.L59:
 604:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 605:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 606:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 607:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
 608:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 609:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1211              	 .loc 3 609 0
 1212 008c 0123     	 movs r3,#1
 1213 008e FB73     	 strb r3,[r7,#15]
 1214              	.L63:
 610:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 611:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 612:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 1215              	 .loc 3 612 0
 1216 0090 FB7B     	 ldrb r3,[r7,#15]
 613:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 1217              	 .loc 3 613 0
 1218 0092 1846     	 mov r0,r3
 1219 0094 1037     	 adds r7,r7,#16
 1220              	.LCFI60:
 1221              	 .cfi_def_cfa_offset 8
 1222 0096 BD46     	 mov sp,r7
 1223              	.LCFI61:
 1224              	 .cfi_def_cfa_register 13
 1225              	 
 1226 0098 80BD     	 pop {r7,pc}
 1227              	 .cfi_endproc
 1228              	.LFE334:
 1230 009a 00BF     	 .section .text.SDMMC_BLOCK_SPI_GetCsd,"ax",%progbits
 1231              	 .align 2
 1232              	 .global SDMMC_BLOCK_SPI_GetCsd
 1233              	 .thumb
 1234              	 .thumb_func
 1236              	SDMMC_BLOCK_SPI_GetCsd:
 1237              	.LFB335:
 614:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 615:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_GetCsd(SDMMC_BLOCK_t *const obj, void *buffer)
 616:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 1238              	 .loc 3 616 0
 1239              	 .cfi_startproc
 1240              	 
 1241              	 
 1242 0000 80B5     	 push {r7,lr}
 1243              	.LCFI62:
 1244              	 .cfi_def_cfa_offset 8
 1245              	 .cfi_offset 7,-8
 1246              	 .cfi_offset 14,-4
 1247 0002 82B0     	 sub sp,sp,#8
 1248              	.LCFI63:
 1249              	 .cfi_def_cfa_offset 16
 1250 0004 00AF     	 add r7,sp,#0
 1251              	.LCFI64:
 1252              	 .cfi_def_cfa_register 7
 1253 0006 7860     	 str r0,[r7,#4]
 1254 0008 3960     	 str r1,[r7]
 617:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /*
 618:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * Csd Structure includes 7-bit CRC  1-bit fixed bit which is not sent by the card.
 619:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * So while copying skip one byte and copy in the structure
 620:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    */
 621:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   memcpy(((uint8_t *)buffer),(void *)obj->sdmmc_spi->card_info.csd, SDMMC_BLOCK_SPI_CSD_CID_LENGTH)
 1255              	 .loc 3 621 0
 1256 000a 7B68     	 ldr r3,[r7,#4]
 1257 000c 1B68     	 ldr r3,[r3]
 1258 000e 1833     	 adds r3,r3,#24
 1259 0010 3868     	 ldr r0,[r7]
 1260 0012 1946     	 mov r1,r3
 1261 0014 1022     	 movs r2,#16
 1262 0016 FFF7FEFF 	 bl memcpy
 622:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 623:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 1263              	 .loc 3 623 0
 1264 001a 0023     	 movs r3,#0
 624:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 1265              	 .loc 3 624 0
 1266 001c 1846     	 mov r0,r3
 1267 001e 0837     	 adds r7,r7,#8
 1268              	.LCFI65:
 1269              	 .cfi_def_cfa_offset 8
 1270 0020 BD46     	 mov sp,r7
 1271              	.LCFI66:
 1272              	 .cfi_def_cfa_register 13
 1273              	 
 1274 0022 80BD     	 pop {r7,pc}
 1275              	 .cfi_endproc
 1276              	.LFE335:
 1278              	 .section .text.SDMMC_BLOCK_SPI_GetCid,"ax",%progbits
 1279              	 .align 2
 1280              	 .global SDMMC_BLOCK_SPI_GetCid
 1281              	 .thumb
 1282              	 .thumb_func
 1284              	SDMMC_BLOCK_SPI_GetCid:
 1285              	.LFB336:
 625:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 626:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_GetCid(SDMMC_BLOCK_t *const obj, void *buffer)
 627:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 1286              	 .loc 3 627 0
 1287              	 .cfi_startproc
 1288              	 
 1289              	 
 1290              	 
 1291 0000 80B4     	 push {r7}
 1292              	.LCFI67:
 1293              	 .cfi_def_cfa_offset 4
 1294              	 .cfi_offset 7,-4
 1295 0002 85B0     	 sub sp,sp,#20
 1296              	.LCFI68:
 1297              	 .cfi_def_cfa_offset 24
 1298 0004 00AF     	 add r7,sp,#0
 1299              	.LCFI69:
 1300              	 .cfi_def_cfa_register 7
 1301 0006 7860     	 str r0,[r7,#4]
 1302 0008 3960     	 str r1,[r7]
 628:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_CID_t *cid = (SDMMC_BLOCK_CID_t *)buffer;
 1303              	 .loc 3 628 0
 1304 000a 3B68     	 ldr r3,[r7]
 1305 000c FB60     	 str r3,[r7,#12]
 629:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   const uint8_t * tmp_cid;
 630:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 631:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   tmp_cid = obj->sdmmc_spi->card_info.cid;
 1306              	 .loc 3 631 0
 1307 000e 7B68     	 ldr r3,[r7,#4]
 1308 0010 1B68     	 ldr r3,[r3]
 1309 0012 0833     	 adds r3,r3,#8
 1310 0014 BB60     	 str r3,[r7,#8]
 632:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 633:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   cid->manufacturing_date = (uint16_t)((uint16_t)((uint16_t)tmp_cid[2] & 0x0FU) << 8);
 1311              	 .loc 3 633 0
 1312 0016 BB68     	 ldr r3,[r7,#8]
 1313 0018 0233     	 adds r3,r3,#2
 1314 001a 1B78     	 ldrb r3,[r3]
 1315 001c 9BB2     	 uxth r3,r3
 1316 001e 03F00F03 	 and r3,r3,#15
 1317 0022 9BB2     	 uxth r3,r3
 1318 0024 1B02     	 lsls r3,r3,#8
 1319 0026 9AB2     	 uxth r2,r3
 1320 0028 FB68     	 ldr r3,[r7,#12]
 1321 002a 1A80     	 strh r2,[r3]
 634:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   cid->manufacturing_date |= ((uint16_t)tmp_cid[1] & 0xFFU);
 1322              	 .loc 3 634 0
 1323 002c FB68     	 ldr r3,[r7,#12]
 1324 002e 1A88     	 ldrh r2,[r3]
 1325 0030 BB68     	 ldr r3,[r7,#8]
 1326 0032 0133     	 adds r3,r3,#1
 1327 0034 1B78     	 ldrb r3,[r3]
 1328 0036 9BB2     	 uxth r3,r3
 1329 0038 1343     	 orrs r3,r3,r2
 1330 003a 9AB2     	 uxth r2,r3
 1331 003c FB68     	 ldr r3,[r7,#12]
 1332 003e 1A80     	 strh r2,[r3]
 635:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   cid->product_serial_num = tmp_cid[3];
 1333              	 .loc 3 635 0
 1334 0040 BB68     	 ldr r3,[r7,#8]
 1335 0042 0333     	 adds r3,r3,#3
 1336 0044 1B78     	 ldrb r3,[r3]
 1337 0046 1A46     	 mov r2,r3
 1338 0048 FB68     	 ldr r3,[r7,#12]
 1339 004a 5A60     	 str r2,[r3,#4]
 636:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   cid->product_serial_num |= (((uint32_t)tmp_cid[4] << 8) | ((uint32_t)tmp_cid[5] << 16) | ((uint32
 1340              	 .loc 3 636 0
 1341 004c FB68     	 ldr r3,[r7,#12]
 1342 004e 5A68     	 ldr r2,[r3,#4]
 1343 0050 BB68     	 ldr r3,[r7,#8]
 1344 0052 0433     	 adds r3,r3,#4
 1345 0054 1B78     	 ldrb r3,[r3]
 1346 0056 1902     	 lsls r1,r3,#8
 1347 0058 BB68     	 ldr r3,[r7,#8]
 1348 005a 0533     	 adds r3,r3,#5
 1349 005c 1B78     	 ldrb r3,[r3]
 1350 005e 1B04     	 lsls r3,r3,#16
 1351 0060 1943     	 orrs r1,r1,r3
 1352 0062 BB68     	 ldr r3,[r7,#8]
 1353 0064 0633     	 adds r3,r3,#6
 1354 0066 1B78     	 ldrb r3,[r3]
 1355 0068 1B06     	 lsls r3,r3,#24
 1356 006a 0B43     	 orrs r3,r3,r1
 1357 006c 1A43     	 orrs r2,r2,r3
 1358 006e FB68     	 ldr r3,[r7,#12]
 1359 0070 5A60     	 str r2,[r3,#4]
 637:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   cid->product_rev = (tmp_cid[7] & 0xFFU);
 1360              	 .loc 3 637 0
 1361 0072 BB68     	 ldr r3,[r7,#8]
 1362 0074 0733     	 adds r3,r3,#7
 1363 0076 1A78     	 ldrb r2,[r3]
 1364 0078 FB68     	 ldr r3,[r7,#12]
 1365 007a 1A72     	 strb r2,[r3,#8]
 638:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   cid->product_name[0] = tmp_cid[12];
 1366              	 .loc 3 638 0
 1367 007c BB68     	 ldr r3,[r7,#8]
 1368 007e 1A7B     	 ldrb r2,[r3,#12]
 1369 0080 FB68     	 ldr r3,[r7,#12]
 1370 0082 5A72     	 strb r2,[r3,#9]
 639:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   cid->product_name[1] = tmp_cid[11];
 1371              	 .loc 3 639 0
 1372 0084 BB68     	 ldr r3,[r7,#8]
 1373 0086 DA7A     	 ldrb r2,[r3,#11]
 1374 0088 FB68     	 ldr r3,[r7,#12]
 1375 008a 9A72     	 strb r2,[r3,#10]
 640:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   cid->product_name[2] = tmp_cid[10];
 1376              	 .loc 3 640 0
 1377 008c BB68     	 ldr r3,[r7,#8]
 1378 008e 9A7A     	 ldrb r2,[r3,#10]
 1379 0090 FB68     	 ldr r3,[r7,#12]
 1380 0092 DA72     	 strb r2,[r3,#11]
 641:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   cid->product_name[3] = tmp_cid[9];
 1381              	 .loc 3 641 0
 1382 0094 BB68     	 ldr r3,[r7,#8]
 1383 0096 5A7A     	 ldrb r2,[r3,#9]
 1384 0098 FB68     	 ldr r3,[r7,#12]
 1385 009a 1A73     	 strb r2,[r3,#12]
 642:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   cid->product_name[4] = tmp_cid[8];
 1386              	 .loc 3 642 0
 1387 009c BB68     	 ldr r3,[r7,#8]
 1388 009e 1A7A     	 ldrb r2,[r3,#8]
 1389 00a0 FB68     	 ldr r3,[r7,#12]
 1390 00a2 5A73     	 strb r2,[r3,#13]
 643:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   cid->app_oem_id[0] = tmp_cid[14];
 1391              	 .loc 3 643 0
 1392 00a4 BB68     	 ldr r3,[r7,#8]
 1393 00a6 9A7B     	 ldrb r2,[r3,#14]
 1394 00a8 FB68     	 ldr r3,[r7,#12]
 1395 00aa 9A73     	 strb r2,[r3,#14]
 644:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   cid->app_oem_id[1] = tmp_cid[13];
 1396              	 .loc 3 644 0
 1397 00ac BB68     	 ldr r3,[r7,#8]
 1398 00ae 5A7B     	 ldrb r2,[r3,#13]
 1399 00b0 FB68     	 ldr r3,[r7,#12]
 1400 00b2 DA73     	 strb r2,[r3,#15]
 645:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   cid->manufacturer_id = tmp_cid[15];
 1401              	 .loc 3 645 0
 1402 00b4 BB68     	 ldr r3,[r7,#8]
 1403 00b6 DA7B     	 ldrb r2,[r3,#15]
 1404 00b8 FB68     	 ldr r3,[r7,#12]
 1405 00ba 1A74     	 strb r2,[r3,#16]
 646:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 647:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 1406              	 .loc 3 647 0
 1407 00bc 0023     	 movs r3,#0
 648:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 1408              	 .loc 3 648 0
 1409 00be 1846     	 mov r0,r3
 1410 00c0 1437     	 adds r7,r7,#20
 1411              	.LCFI70:
 1412              	 .cfi_def_cfa_offset 4
 1413 00c2 BD46     	 mov sp,r7
 1414              	.LCFI71:
 1415              	 .cfi_def_cfa_register 13
 1416              	 
 1417 00c4 5DF8047B 	 ldr r7,[sp],#4
 1418              	.LCFI72:
 1419              	 .cfi_restore 7
 1420              	 .cfi_def_cfa_offset 0
 1421 00c8 7047     	 bx lr
 1422              	 .cfi_endproc
 1423              	.LFE336:
 1425 00ca 00BF     	 .section .text.SDMMC_BLOCK_SPI_GetOcr,"ax",%progbits
 1426              	 .align 2
 1427              	 .global SDMMC_BLOCK_SPI_GetOcr
 1428              	 .thumb
 1429              	 .thumb_func
 1431              	SDMMC_BLOCK_SPI_GetOcr:
 1432              	.LFB337:
 649:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 650:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_GetOcr(const SDMMC_BLOCK_t *const obj, void *buffer)
 651:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 1433              	 .loc 3 651 0
 1434              	 .cfi_startproc
 1435              	 
 1436              	 
 1437 0000 80B5     	 push {r7,lr}
 1438              	.LCFI73:
 1439              	 .cfi_def_cfa_offset 8
 1440              	 .cfi_offset 7,-8
 1441              	 .cfi_offset 14,-4
 1442 0002 82B0     	 sub sp,sp,#8
 1443              	.LCFI74:
 1444              	 .cfi_def_cfa_offset 16
 1445 0004 00AF     	 add r7,sp,#0
 1446              	.LCFI75:
 1447              	 .cfi_def_cfa_register 7
 1448 0006 7860     	 str r0,[r7,#4]
 1449 0008 3960     	 str r1,[r7]
 652:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   memcpy(((uint8_t *)buffer),(void *)obj->sdmmc_spi->card_info.ocr, SDMMC_BLOCK_SPI_OCR_LENGTH);
 1450              	 .loc 3 652 0
 1451 000a 7B68     	 ldr r3,[r7,#4]
 1452 000c 1B68     	 ldr r3,[r3]
 1453 000e 0433     	 adds r3,r3,#4
 1454 0010 3868     	 ldr r0,[r7]
 1455 0012 1946     	 mov r1,r3
 1456 0014 0422     	 movs r2,#4
 1457 0016 FFF7FEFF 	 bl memcpy
 653:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 654:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 1458              	 .loc 3 654 0
 1459 001a 0023     	 movs r3,#0
 655:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 1460              	 .loc 3 655 0
 1461 001c 1846     	 mov r0,r3
 1462 001e 0837     	 adds r7,r7,#8
 1463              	.LCFI76:
 1464              	 .cfi_def_cfa_offset 8
 1465 0020 BD46     	 mov sp,r7
 1466              	.LCFI77:
 1467              	 .cfi_def_cfa_register 13
 1468              	 
 1469 0022 80BD     	 pop {r7,pc}
 1470              	 .cfi_endproc
 1471              	.LFE337:
 1473              	 .section .text.SDMMC_BLOCK_SPI_GetBlockSize,"ax",%progbits
 1474              	 .align 2
 1475              	 .global SDMMC_BLOCK_SPI_GetBlockSize
 1476              	 .thumb
 1477              	 .thumb_func
 1479              	SDMMC_BLOCK_SPI_GetBlockSize:
 1480              	.LFB338:
 656:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 657:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_GetBlockSize(SDMMC_BLOCK_t *const obj, uint32_t *block_si
 658:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 1481              	 .loc 3 658 0
 1482              	 .cfi_startproc
 1483              	 
 1484              	 
 1485              	 
 1486 0000 80B4     	 push {r7}
 1487              	.LCFI78:
 1488              	 .cfi_def_cfa_offset 4
 1489              	 .cfi_offset 7,-4
 1490 0002 85B0     	 sub sp,sp,#20
 1491              	.LCFI79:
 1492              	 .cfi_def_cfa_offset 24
 1493 0004 00AF     	 add r7,sp,#0
 1494              	.LCFI80:
 1495              	 .cfi_def_cfa_register 7
 1496 0006 7860     	 str r0,[r7,#4]
 1497 0008 3960     	 str r1,[r7]
 659:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* SD High capacity card i.e. CSD V2*/
 660:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (((uint32_t)obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_HIGH_CAPACITY) != 0U)
 1498              	 .loc 3 660 0
 1499 000a 7B68     	 ldr r3,[r7,#4]
 1500 000c 5B7A     	 ldrb r3,[r3,#9]
 1501 000e 03F00403 	 and r3,r3,#4
 1502 0012 002B     	 cmp r3,#0
 1503 0014 0CD0     	 beq .L72
 1504              	.LBB4:
 661:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 662:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     SDMMC_BLOCK_SDV2_CSD_t *temp_csd_v2 = (SDMMC_BLOCK_SDV2_CSD_t *)&obj->sdmmc_spi->card_info.csd;
 1505              	 .loc 3 662 0
 1506 0016 7B68     	 ldr r3,[r7,#4]
 1507 0018 1B68     	 ldr r3,[r3]
 1508 001a 1833     	 adds r3,r3,#24
 1509 001c FB60     	 str r3,[r7,#12]
 663:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     *block_size = (uint32_t)((uint32_t)temp_csd_v2->erase_sector_size + 1U);
 1510              	 .loc 3 663 0
 1511 001e FB68     	 ldr r3,[r7,#12]
 1512 0020 9B88     	 ldrh r3,[r3,#4]
 1513 0022 C3F3C613 	 ubfx r3,r3,#7,#7
 1514 0026 DBB2     	 uxtb r3,r3
 1515 0028 5A1C     	 adds r2,r3,#1
 1516 002a 3B68     	 ldr r3,[r7]
 1517 002c 1A60     	 str r2,[r3]
 1518              	.LBE4:
 1519 002e 0BE0     	 b .L73
 1520              	.L72:
 1521              	.LBB5:
 664:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 665:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* SD standard capacity card i.e. CSD V1*/
 666:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
 667:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 668:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     SDMMC_BLOCK_SDV1_CSD_t *temp_csd_v1  = (SDMMC_BLOCK_SDV1_CSD_t *)&obj->sdmmc_spi->card_info.csd
 1522              	 .loc 3 668 0
 1523 0030 7B68     	 ldr r3,[r7,#4]
 1524 0032 1B68     	 ldr r3,[r3]
 1525 0034 1833     	 adds r3,r3,#24
 1526 0036 BB60     	 str r3,[r7,#8]
 669:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     *block_size = (uint32_t)((uint32_t)temp_csd_v1->erase_sector_size + 1U);
 1527              	 .loc 3 669 0
 1528 0038 BB68     	 ldr r3,[r7,#8]
 1529 003a 9B88     	 ldrh r3,[r3,#4]
 1530 003c C3F3C613 	 ubfx r3,r3,#7,#7
 1531 0040 DBB2     	 uxtb r3,r3
 1532 0042 5A1C     	 adds r2,r3,#1
 1533 0044 3B68     	 ldr r3,[r7]
 1534 0046 1A60     	 str r2,[r3]
 1535              	.L73:
 1536              	.LBE5:
 670:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 671:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 672:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 1537              	 .loc 3 672 0
 1538 0048 0023     	 movs r3,#0
 673:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 1539              	 .loc 3 673 0
 1540 004a 1846     	 mov r0,r3
 1541 004c 1437     	 adds r7,r7,#20
 1542              	.LCFI81:
 1543              	 .cfi_def_cfa_offset 4
 1544 004e BD46     	 mov sp,r7
 1545              	.LCFI82:
 1546              	 .cfi_def_cfa_register 13
 1547              	 
 1548 0050 5DF8047B 	 ldr r7,[sp],#4
 1549              	.LCFI83:
 1550              	 .cfi_restore 7
 1551              	 .cfi_def_cfa_offset 0
 1552 0054 7047     	 bx lr
 1553              	 .cfi_endproc
 1554              	.LFE338:
 1556 0056 00BF     	 .section .text.SDMMC_BLOCK_SPI_EjectCard,"ax",%progbits
 1557              	 .align 2
 1558              	 .global SDMMC_BLOCK_SPI_EjectCard
 1559              	 .thumb
 1560              	 .thumb_func
 1562              	SDMMC_BLOCK_SPI_EjectCard:
 1563              	.LFB339:
 674:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 675:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /*
 676:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   * This function is use to  de-activate the  Card
 677:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** */
 678:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_EjectCard(SDMMC_BLOCK_t *const obj)
 679:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 1564              	 .loc 3 679 0
 1565              	 .cfi_startproc
 1566              	 
 1567              	 
 1568 0000 80B5     	 push {r7,lr}
 1569              	.LCFI84:
 1570              	 .cfi_def_cfa_offset 8
 1571              	 .cfi_offset 7,-8
 1572              	 .cfi_offset 14,-4
 1573 0002 84B0     	 sub sp,sp,#16
 1574              	.LCFI85:
 1575              	 .cfi_def_cfa_offset 24
 1576 0004 00AF     	 add r7,sp,#0
 1577              	.LCFI86:
 1578              	 .cfi_def_cfa_register 7
 1579 0006 7860     	 str r0,[r7,#4]
 680:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1580              	 .loc 3 680 0
 1581 0008 0123     	 movs r3,#1
 1582 000a FB73     	 strb r3,[r7,#15]
 681:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 682:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((obj->card_state & (uint8_t)SDMMC_BLOCK_CARD_STATE_NO_CARD) == 0U)
 1583              	 .loc 3 682 0
 1584 000c 7B68     	 ldr r3,[r7,#4]
 1585 000e 1B7A     	 ldrb r3,[r3,#8]
 1586 0010 03F00203 	 and r3,r3,#2
 1587 0014 002B     	 cmp r3,#0
 1588 0016 2AD1     	 bne .L76
 683:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 684:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****      /*
 685:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       * Reset the card. i.e CMD0
 686:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       * Resetting a card (using CMD0) will terminate any pending or active programming
 687:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       * operation. This may destroy the data contents on the card. It is the host's responsibility 
 688:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       * this.
 689:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       */
 690:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD0, SDMMC_BLOCK_ARGUMENT0);
 1589              	 .loc 3 690 0
 1590 0018 7868     	 ldr r0,[r7,#4]
 1591 001a 4021     	 movs r1,#64
 1592 001c 0022     	 movs r2,#0
 1593 001e FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 1594 0022 0346     	 mov r3,r0
 1595 0024 FB73     	 strb r3,[r7,#15]
 691:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 692:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response != SDMMC_BLOCK
 1596              	 .loc 3 692 0
 1597 0026 FB7B     	 ldrb r3,[r7,#15]
 1598 0028 002B     	 cmp r3,#0
 1599 002a 08D1     	 bne .L77
 1600              	 .loc 3 692 0 is_stmt 0 discriminator 1
 1601 002c 7B68     	 ldr r3,[r7,#4]
 1602 002e 1B68     	 ldr r3,[r3]
 1603 0030 93F87030 	 ldrb r3,[r3,#112]
 1604 0034 012B     	 cmp r3,#1
 1605 0036 02D0     	 beq .L77
 693:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 694:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_COMMAND_TIMEOUT_ERROR;
 1606              	 .loc 3 694 0 is_stmt 1
 1607 0038 0223     	 movs r3,#2
 1608 003a FB73     	 strb r3,[r7,#15]
 1609 003c 01E0     	 b .L78
 1610              	.L77:
 695:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       XMC_DEBUG("SDMMC_BLOCK_SPI_EjectCard : CMD0 Timeout error")
 696:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 697:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
 698:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 699:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 1611              	 .loc 3 699 0
 1612 003e 0023     	 movs r3,#0
 1613 0040 FB73     	 strb r3,[r7,#15]
 1614              	.L78:
 700:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 701:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 702:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* Card Cleanup */
 703:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     memset((void*)&obj->sdmmc_spi->card_info, 0, sizeof(obj->sdmmc_spi->card_info));
 1615              	 .loc 3 703 0
 1616 0042 7B68     	 ldr r3,[r7,#4]
 1617 0044 1B68     	 ldr r3,[r3]
 1618 0046 0433     	 adds r3,r3,#4
 1619 0048 1846     	 mov r0,r3
 1620 004a 0021     	 movs r1,#0
 1621 004c 6C22     	 movs r2,#108
 1622 004e FFF7FEFF 	 bl memset
 704:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     obj->card_type = (uint8_t)0;
 1623              	 .loc 3 704 0
 1624 0052 7B68     	 ldr r3,[r7,#4]
 1625 0054 0022     	 movs r2,#0
 1626 0056 5A72     	 strb r2,[r3,#9]
 705:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     obj->card_state = (uint8_t)SDMMC_BLOCK_CARD_STATE_NO_CARD;
 1627              	 .loc 3 705 0
 1628 0058 7B68     	 ldr r3,[r7,#4]
 1629 005a 0222     	 movs r2,#2
 1630 005c 1A72     	 strb r2,[r3,#8]
 706:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     obj->card_capacity = (uint8_t)SDMMC_BLOCK_CARD_CAPACITY_UNKNOWN;
 1631              	 .loc 3 706 0
 1632 005e 7B68     	 ldr r3,[r7,#4]
 1633 0060 0022     	 movs r2,#0
 1634 0062 9A72     	 strb r2,[r3,#10]
 707:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     obj->sdmmc_spi->mode_init_flag = 0U;
 1635              	 .loc 3 707 0
 1636 0064 7B68     	 ldr r3,[r7,#4]
 1637 0066 1B68     	 ldr r3,[r3]
 1638 0068 0022     	 movs r2,#0
 1639 006a 83F87120 	 strb r2,[r3,#113]
 1640              	.L76:
 708:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 709:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 710:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 1641              	 .loc 3 710 0
 1642 006e FB7B     	 ldrb r3,[r7,#15]
 711:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 1643              	 .loc 3 711 0
 1644 0070 1846     	 mov r0,r3
 1645 0072 1037     	 adds r7,r7,#16
 1646              	.LCFI87:
 1647              	 .cfi_def_cfa_offset 8
 1648 0074 BD46     	 mov sp,r7
 1649              	.LCFI88:
 1650              	 .cfi_def_cfa_register 13
 1651              	 
 1652 0076 80BD     	 pop {r7,pc}
 1653              	 .cfi_endproc
 1654              	.LFE339:
 1656              	 .section .text.SDMMC_BLOCK_SPI_LockUnlockCard,"ax",%progbits
 1657              	 .align 2
 1658              	 .global SDMMC_BLOCK_SPI_LockUnlockCard
 1659              	 .thumb
 1660              	 .thumb_func
 1662              	SDMMC_BLOCK_SPI_LockUnlockCard:
 1663              	.LFB340:
 712:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 713:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_LockUnlockCard(SDMMC_BLOCK_t *const obj,
 714:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                          SDMMC_BLOCK_LOCK_STRUCTURE_t *lock,
 715:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                          const SDMMC_BLOCK_CARD_LOCK_STATUS_t expec
 716:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 1664              	 .loc 3 716 0
 1665              	 .cfi_startproc
 1666              	 
 1667              	 
 1668 0000 80B5     	 push {r7,lr}
 1669              	.LCFI89:
 1670              	 .cfi_def_cfa_offset 8
 1671              	 .cfi_offset 7,-8
 1672              	 .cfi_offset 14,-4
 1673 0002 88B0     	 sub sp,sp,#32
 1674              	.LCFI90:
 1675              	 .cfi_def_cfa_offset 40
 1676 0004 00AF     	 add r7,sp,#0
 1677              	.LCFI91:
 1678              	 .cfi_def_cfa_register 7
 1679 0006 F860     	 str r0,[r7,#12]
 1680 0008 B960     	 str r1,[r7,#8]
 1681 000a 1346     	 mov r3,r2
 1682 000c FB71     	 strb r3,[r7,#7]
 717:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t mode_status;
 718:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_CARD_LOCK_STATUS_t lock_status;
 719:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t data_length;
 720:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint8_t send_data;
 721:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_t *spi_handle;
 722:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 723:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* Password data + mode + password length */
 724:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   data_length = ((uint32_t)((uint32_t)((uint32_t)lock->pwd_len + 1U) >> 1U) << 1U) + 2U;
 1683              	 .loc 3 724 0
 1684 000e BB68     	 ldr r3,[r7,#8]
 1685 0010 5B78     	 ldrb r3,[r3,#1]
 1686 0012 0133     	 adds r3,r3,#1
 1687 0014 23F00103 	 bic r3,r3,#1
 1688 0018 0233     	 adds r3,r3,#2
 1689 001a BB61     	 str r3,[r7,#24]
 725:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 726:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   mode_status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD16, data_length);
 1690              	 .loc 3 726 0
 1691 001c F868     	 ldr r0,[r7,#12]
 1692 001e 5021     	 movs r1,#80
 1693 0020 BA69     	 ldr r2,[r7,#24]
 1694 0022 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 1695 0026 0346     	 mov r3,r0
 1696 0028 FB77     	 strb r3,[r7,#31]
 727:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 728:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((mode_status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response == 0U))
 1697              	 .loc 3 728 0
 1698 002a FB7F     	 ldrb r3,[r7,#31]
 1699 002c 002B     	 cmp r3,#0
 1700 002e 40F09D80 	 bne .L81
 1701              	 .loc 3 728 0 is_stmt 0 discriminator 1
 1702 0032 FB68     	 ldr r3,[r7,#12]
 1703 0034 1B68     	 ldr r3,[r3]
 1704 0036 93F87030 	 ldrb r3,[r3,#112]
 1705 003a 002B     	 cmp r3,#0
 1706 003c 40F09680 	 bne .L81
 729:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 730:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     mode_status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD42, SDMMC_BLOCK_ARGUMENT0);
 1707              	 .loc 3 730 0 is_stmt 1
 1708 0040 F868     	 ldr r0,[r7,#12]
 1709 0042 6A21     	 movs r1,#106
 1710 0044 0022     	 movs r2,#0
 1711 0046 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 1712 004a 0346     	 mov r3,r0
 1713 004c FB77     	 strb r3,[r7,#31]
 731:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 732:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((mode_status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response != 0U))
 1714              	 .loc 3 732 0
 1715 004e FB7F     	 ldrb r3,[r7,#31]
 1716 0050 002B     	 cmp r3,#0
 1717 0052 08D1     	 bne .L82
 1718              	 .loc 3 732 0 is_stmt 0 discriminator 1
 1719 0054 FB68     	 ldr r3,[r7,#12]
 1720 0056 1B68     	 ldr r3,[r3]
 1721 0058 93F87030 	 ldrb r3,[r3,#112]
 1722 005c 002B     	 cmp r3,#0
 1723 005e 02D0     	 beq .L82
 733:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 734:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       mode_status = SDMMC_BLOCK_MODE_STATUS_COMMAND_TIMEOUT_ERROR;
 1724              	 .loc 3 734 0 is_stmt 1
 1725 0060 0223     	 movs r3,#2
 1726 0062 FB77     	 strb r3,[r7,#31]
 1727 0064 68E0     	 b .L83
 1728              	.L82:
 735:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       XMC_DEBUG("SDMMC_BLOCK_SPI_LockUnlockCard : CMD42 Timeout error")
 736:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 737:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
 738:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 739:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       spi_handle = obj->sdmmc_spi;
 1729              	 .loc 3 739 0
 1730 0066 FB68     	 ldr r3,[r7,#12]
 1731 0068 1B68     	 ldr r3,[r3]
 1732 006a 7B61     	 str r3,[r7,#20]
 740:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 741:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /* This has to be dummy clock */
 742:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       SDMMC_BLOCK_SPI_lSend_Clocktrain(spi_handle, 1U);
 1733              	 .loc 3 742 0
 1734 006c 7869     	 ldr r0,[r7,#20]
 1735 006e 0121     	 movs r1,#1
 1736 0070 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSend_Clocktrain
 743:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 744:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       send_data = (uint8_t)SDMMC_BLOCK_SPI_START_BLOCK_TOKEN;
 1737              	 .loc 3 744 0
 1738 0074 FE23     	 movs r3,#254
 1739 0076 BB74     	 strb r3,[r7,#18]
 745:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 746:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       mode_status = SDMMC_BLOCK_SPI_lSendData(spi_handle, &send_data, 1U);
 1740              	 .loc 3 746 0
 1741 0078 07F11203 	 add r3,r7,#18
 1742 007c 7869     	 ldr r0,[r7,#20]
 1743 007e 1946     	 mov r1,r3
 1744 0080 0122     	 movs r2,#1
 1745 0082 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendData
 1746 0086 0346     	 mov r3,r0
 1747 0088 FB77     	 strb r3,[r7,#31]
 747:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 748:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (mode_status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 1748              	 .loc 3 748 0
 1749 008a FB7F     	 ldrb r3,[r7,#31]
 1750 008c 002B     	 cmp r3,#0
 1751 008e 0AD1     	 bne .L84
 749:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 750:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         mode_status = SDMMC_BLOCK_SPI_lSendData(spi_handle, (uint8_t *)lock, data_length);
 1752              	 .loc 3 750 0
 1753 0090 7869     	 ldr r0,[r7,#20]
 1754 0092 B968     	 ldr r1,[r7,#8]
 1755 0094 BA69     	 ldr r2,[r7,#24]
 1756 0096 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendData
 1757 009a 0346     	 mov r3,r0
 1758 009c FB77     	 strb r3,[r7,#31]
 751:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 752:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         SDMMC_BLOCK_SPI_lDummyRead(spi_handle, SDMMC_BLOCK_SPI_CRC_BYTES);
 1759              	 .loc 3 752 0
 1760 009e 7869     	 ldr r0,[r7,#20]
 1761 00a0 0221     	 movs r1,#2
 1762 00a2 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
 1763              	.L84:
 753:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 754:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 755:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       mode_status = SDMMC_BLOCK_SPI_lReadData(spi_handle, &obj->sdmmc_spi->cmd_response, 1U);
 1764              	 .loc 3 755 0
 1765 00a6 FB68     	 ldr r3,[r7,#12]
 1766 00a8 1B68     	 ldr r3,[r3]
 1767 00aa 7033     	 adds r3,r3,#112
 1768 00ac 7869     	 ldr r0,[r7,#20]
 1769 00ae 1946     	 mov r1,r3
 1770 00b0 0122     	 movs r2,#1
 1771 00b2 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 1772 00b6 0346     	 mov r3,r0
 1773 00b8 FB77     	 strb r3,[r7,#31]
 756:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 757:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if ((obj->sdmmc_spi->cmd_response & SDMMC_BLOCK_SPI_DR_MSK) != SDMMC_BLOCK_SPI_DR_ACCEPT)
 1774              	 .loc 3 757 0
 1775 00ba FB68     	 ldr r3,[r7,#12]
 1776 00bc 1B68     	 ldr r3,[r3]
 1777 00be 93F87030 	 ldrb r3,[r3,#112]
 1778 00c2 03F01F03 	 and r3,r3,#31
 1779 00c6 052B     	 cmp r3,#5
 1780 00c8 01D0     	 beq .L85
 758:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 759:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         mode_status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1781              	 .loc 3 759 0
 1782 00ca 0123     	 movs r3,#1
 1783 00cc FB77     	 strb r3,[r7,#31]
 1784              	.L85:
 760:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 761:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 762:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (mode_status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 1785              	 .loc 3 762 0
 1786 00ce FB7F     	 ldrb r3,[r7,#31]
 1787 00d0 002B     	 cmp r3,#0
 1788 00d2 31D1     	 bne .L83
 1789              	.L87:
 763:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 764:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         do
 765:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 766:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           mode_status = SDMMC_BLOCK_SPI_lReadData(spi_handle, &obj->sdmmc_spi->cmd_response, 1U);
 1790              	 .loc 3 766 0 discriminator 2
 1791 00d4 FB68     	 ldr r3,[r7,#12]
 1792 00d6 1B68     	 ldr r3,[r3]
 1793 00d8 7033     	 adds r3,r3,#112
 1794 00da 7869     	 ldr r0,[r7,#20]
 1795 00dc 1946     	 mov r1,r3
 1796 00de 0122     	 movs r2,#1
 1797 00e0 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 1798 00e4 0346     	 mov r3,r0
 1799 00e6 FB77     	 strb r3,[r7,#31]
 767:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         } while ((mode_status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response 
 1800              	 .loc 3 767 0 discriminator 2
 1801 00e8 FB7F     	 ldrb r3,[r7,#31]
 1802 00ea 002B     	 cmp r3,#0
 1803 00ec 05D1     	 bne .L86
 1804              	 .loc 3 767 0 is_stmt 0 discriminator 1
 1805 00ee FB68     	 ldr r3,[r7,#12]
 1806 00f0 1B68     	 ldr r3,[r3]
 1807 00f2 93F87030 	 ldrb r3,[r3,#112]
 1808 00f6 FF2B     	 cmp r3,#255
 1809 00f8 ECD1     	 bne .L87
 1810              	.L86:
 768:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 769:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         mode_status = SDMMC_BLOCK_SPI_GetLockStatus(obj, &lock_status);
 1811              	 .loc 3 769 0 is_stmt 1
 1812 00fa 07F11303 	 add r3,r7,#19
 1813 00fe F868     	 ldr r0,[r7,#12]
 1814 0100 1946     	 mov r1,r3
 1815 0102 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_GetLockStatus
 1816 0106 0346     	 mov r3,r0
 1817 0108 FB77     	 strb r3,[r7,#31]
 770:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 771:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         if (mode_status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 1818              	 .loc 3 771 0
 1819 010a FB7F     	 ldrb r3,[r7,#31]
 1820 010c 002B     	 cmp r3,#0
 1821 010e 13D1     	 bne .L83
 772:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 773:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           if ((expected_state == SDMMC_BLOCK_CARD_LOCK_STATUS_LOCKED) &&
 1822              	 .loc 3 773 0
 1823 0110 FB79     	 ldrb r3,[r7,#7]
 1824 0112 012B     	 cmp r3,#1
 1825 0114 05D1     	 bne .L88
 774:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****               (lock_status == SDMMC_BLOCK_CARD_LOCK_STATUS_UNLOCKED))
 1826              	 .loc 3 774 0 discriminator 1
 1827 0116 FB7C     	 ldrb r3,[r7,#19]
 773:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****               (lock_status == SDMMC_BLOCK_CARD_LOCK_STATUS_UNLOCKED))
 1828              	 .loc 3 773 0 discriminator 1
 1829 0118 002B     	 cmp r3,#0
 1830 011a 02D1     	 bne .L88
 775:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           {
 776:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             mode_status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1831              	 .loc 3 776 0
 1832 011c 0123     	 movs r3,#1
 1833 011e FB77     	 strb r3,[r7,#31]
 1834 0120 0AE0     	 b .L83
 1835              	.L88:
 777:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           }
 778:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           /* For unlock, card state must be "unlocked" */
 779:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           else if ((expected_state == SDMMC_BLOCK_CARD_LOCK_STATUS_UNLOCKED) &&
 1836              	 .loc 3 779 0
 1837 0122 FB79     	 ldrb r3,[r7,#7]
 1838 0124 002B     	 cmp r3,#0
 1839 0126 05D1     	 bne .L89
 780:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                    (lock_status == SDMMC_BLOCK_CARD_LOCK_STATUS_LOCKED))
 1840              	 .loc 3 780 0 discriminator 1
 1841 0128 FB7C     	 ldrb r3,[r7,#19]
 779:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                    (lock_status == SDMMC_BLOCK_CARD_LOCK_STATUS_LOCKED))
 1842              	 .loc 3 779 0 discriminator 1
 1843 012a 012B     	 cmp r3,#1
 1844 012c 02D1     	 bne .L89
 781:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           {
 782:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             mode_status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1845              	 .loc 3 782 0
 1846 012e 0123     	 movs r3,#1
 1847 0130 FB77     	 strb r3,[r7,#31]
 1848 0132 01E0     	 b .L83
 1849              	.L89:
 783:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           }
 784:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           else
 785:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           {
 786:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             mode_status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 1850              	 .loc 3 786 0
 1851 0134 0023     	 movs r3,#0
 1852 0136 FB77     	 strb r3,[r7,#31]
 1853              	.L83:
 787:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           }
 788:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
 789:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 790:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 791:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 792:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     mode_status = (SDMMC_BLOCK_MODE_STATUS_t)((uint32_t)mode_status |
 793:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                               (uint32_t)SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLO
 1854              	 .loc 3 793 0
 1855 0138 F868     	 ldr r0,[r7,#12]
 1856 013a 5021     	 movs r1,#80
 1857 013c 4FF40072 	 mov r2,#512
 1858 0140 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 1859 0144 0346     	 mov r3,r0
 1860 0146 1A46     	 mov r2,r3
 792:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                               (uint32_t)SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLO
 1861              	 .loc 3 792 0
 1862 0148 FB7F     	 ldrb r3,[r7,#31]
 1863 014a 1343     	 orrs r3,r3,r2
 1864 014c FB77     	 strb r3,[r7,#31]
 794:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 795:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((mode_status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response == 0U))
 1865              	 .loc 3 795 0
 1866 014e FB7F     	 ldrb r3,[r7,#31]
 1867 0150 002B     	 cmp r3,#0
 1868 0152 08D1     	 bne .L90
 1869              	 .loc 3 795 0 is_stmt 0 discriminator 1
 1870 0154 FB68     	 ldr r3,[r7,#12]
 1871 0156 1B68     	 ldr r3,[r3]
 1872 0158 93F87030 	 ldrb r3,[r3,#112]
 1873 015c 002B     	 cmp r3,#0
 1874 015e 02D1     	 bne .L90
 796:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 797:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       mode_status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 1875              	 .loc 3 797 0 is_stmt 1
 1876 0160 0023     	 movs r3,#0
 1877 0162 FB77     	 strb r3,[r7,#31]
 795:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 1878              	 .loc 3 795 0
 1879 0164 04E0     	 b .L92
 1880              	.L90:
 798:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 799:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
 800:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 801:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       mode_status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1881              	 .loc 3 801 0
 1882 0166 0123     	 movs r3,#1
 1883 0168 FB77     	 strb r3,[r7,#31]
 795:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 1884              	 .loc 3 795 0
 1885 016a 01E0     	 b .L92
 1886              	.L81:
 802:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 803:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 804:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
 805:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 806:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     mode_status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1887              	 .loc 3 806 0
 1888 016c 0123     	 movs r3,#1
 1889 016e FB77     	 strb r3,[r7,#31]
 1890              	.L92:
 807:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 808:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 809:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return mode_status;
 1891              	 .loc 3 809 0
 1892 0170 FB7F     	 ldrb r3,[r7,#31]
 810:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 1893              	 .loc 3 810 0
 1894 0172 1846     	 mov r0,r3
 1895 0174 2037     	 adds r7,r7,#32
 1896              	.LCFI92:
 1897              	 .cfi_def_cfa_offset 8
 1898 0176 BD46     	 mov sp,r7
 1899              	.LCFI93:
 1900              	 .cfi_def_cfa_register 13
 1901              	 
 1902 0178 80BD     	 pop {r7,pc}
 1903              	 .cfi_endproc
 1904              	.LFE340:
 1906 017a 00BF     	 .section .text.SDMMC_BLOCK_SPI_lInitializeCard,"ax",%progbits
 1907              	 .align 2
 1908              	 .thumb
 1909              	 .thumb_func
 1911              	SDMMC_BLOCK_SPI_lInitializeCard:
 1912              	.LFB341:
 811:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 812:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /**************************************************************************************************
 813:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   * LOCAL API IMPLEMENTATION
 814:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** ***************************************************************************************************
 815:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 816:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lInitializeCard(SDMMC_BLOCK_t *const obj)
 817:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 1913              	 .loc 3 817 0
 1914              	 .cfi_startproc
 1915              	 
 1916              	 
 1917 0000 80B5     	 push {r7,lr}
 1918              	.LCFI94:
 1919              	 .cfi_def_cfa_offset 8
 1920              	 .cfi_offset 7,-8
 1921              	 .cfi_offset 14,-4
 1922 0002 86B0     	 sub sp,sp,#24
 1923              	.LCFI95:
 1924              	 .cfi_def_cfa_offset 32
 1925 0004 00AF     	 add r7,sp,#0
 1926              	.LCFI96:
 1927              	 .cfi_def_cfa_register 7
 1928 0006 7860     	 str r0,[r7,#4]
 818:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
 819:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t count = 10U;
 1929              	 .loc 3 819 0
 1930 0008 0A23     	 movs r3,#10
 1931 000a 3B61     	 str r3,[r7,#16]
 820:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_CARD_LOCK_STATUS_t lock_status;
 821:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_t *spi_handle;
 822:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   spi_handle = obj->sdmmc_spi;
 1932              	 .loc 3 822 0
 1933 000c 7B68     	 ldr r3,[r7,#4]
 1934 000e 1B68     	 ldr r3,[r3]
 1935 0010 FB60     	 str r3,[r7,#12]
 823:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* During initialization recommended baud rate is 300K only */
 824:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_lSetSpeed(spi_handle->spi_master_handle, SDMMC_BLOCK_SPI_INIT_SPEED);
 1936              	 .loc 3 824 0
 1937 0012 FB68     	 ldr r3,[r7,#12]
 1938 0014 1B68     	 ldr r3,[r3]
 1939 0016 1846     	 mov r0,r3
 1940 0018 3A49     	 ldr r1,.L100
 1941 001a FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSetSpeed
 1942 001e 0346     	 mov r3,r0
 1943 0020 FB75     	 strb r3,[r7,#23]
 825:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 826:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 1944              	 .loc 3 826 0
 1945 0022 FB7D     	 ldrb r3,[r7,#23]
 1946 0024 002B     	 cmp r3,#0
 1947 0026 68D1     	 bne .L95
 827:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 828:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /*
 829:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****      * Init SPI with a very slow transfer rate first !
 830:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****      * Give minimum 74 SPI clock pulses before sending commands dummy write 80 clock.
 831:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****      */
 832:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     SDMMC_BLOCK_SPI_lSend_Clocktrain(spi_handle, count);
 1948              	 .loc 3 832 0
 1949 0028 F868     	 ldr r0,[r7,#12]
 1950 002a 3969     	 ldr r1,[r7,#16]
 1951 002c FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSend_Clocktrain
 833:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 834:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* Reset the card. i.e CMD0 */
 835:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD0, SDMMC_BLOCK_ARGUMENT0);
 1952              	 .loc 3 835 0
 1953 0030 7868     	 ldr r0,[r7,#4]
 1954 0032 4021     	 movs r1,#64
 1955 0034 0022     	 movs r2,#0
 1956 0036 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 1957 003a 0346     	 mov r3,r0
 1958 003c FB75     	 strb r3,[r7,#23]
 836:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 837:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (spi_handle->cmd_response != SDMMC_BLOCK_IN_
 1959              	 .loc 3 837 0
 1960 003e FB7D     	 ldrb r3,[r7,#23]
 1961 0040 002B     	 cmp r3,#0
 1962 0042 07D1     	 bne .L96
 1963              	 .loc 3 837 0 is_stmt 0 discriminator 1
 1964 0044 FB68     	 ldr r3,[r7,#12]
 1965 0046 93F87030 	 ldrb r3,[r3,#112]
 1966 004a 012B     	 cmp r3,#1
 1967 004c 02D0     	 beq .L96
 838:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 839:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_COMMAND_TIMEOUT_ERROR;
 1968              	 .loc 3 839 0 is_stmt 1
 1969 004e 0223     	 movs r3,#2
 1970 0050 FB75     	 strb r3,[r7,#23]
 1971 0052 52E0     	 b .L95
 1972              	.L96:
 840:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       XMC_DEBUG("SDMMC_BLOCK_SPI_lInitializeCard : CMD0 Timeout error")
 841:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 842:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
 843:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 844:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /* Query the Operation Condition Info from the card.*/
 845:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lQueryOperatingCondVoltage(obj);
 1973              	 .loc 3 845 0
 1974 0054 7868     	 ldr r0,[r7,#4]
 1975 0056 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lQueryOperatingCondVoltage
 1976 005a 0346     	 mov r3,r0
 1977 005c FB75     	 strb r3,[r7,#23]
 846:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 847:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 1978              	 .loc 3 847 0
 1979 005e FB7D     	 ldrb r3,[r7,#23]
 1980 0060 002B     	 cmp r3,#0
 1981 0062 4AD1     	 bne .L95
 848:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 849:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         status = SDMMC_BLOCK_SPI_lReadCid(obj);
 1982              	 .loc 3 849 0
 1983 0064 7868     	 ldr r0,[r7,#4]
 1984 0066 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadCid
 1985 006a 0346     	 mov r3,r0
 1986 006c FB75     	 strb r3,[r7,#23]
 850:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 1987              	 .loc 3 850 0
 1988 006e FB7D     	 ldrb r3,[r7,#23]
 1989 0070 002B     	 cmp r3,#0
 1990 0072 42D1     	 bne .L95
 851:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 852:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           status = SDMMC_BLOCK_SPI_lReadCsd(obj);
 1991              	 .loc 3 852 0
 1992 0074 7868     	 ldr r0,[r7,#4]
 1993 0076 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadCsd
 1994 007a 0346     	 mov r3,r0
 1995 007c FB75     	 strb r3,[r7,#23]
 853:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 1996              	 .loc 3 853 0
 1997 007e FB7D     	 ldrb r3,[r7,#23]
 1998 0080 002B     	 cmp r3,#0
 1999 0082 3AD1     	 bne .L95
 854:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           {
 855:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             /* Get Write protection flags */
 856:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             SDMMC_BLOCK_SPI_lGetWriteProtect(obj);
 2000              	 .loc 3 856 0
 2001 0084 7868     	 ldr r0,[r7,#4]
 2002 0086 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lGetWriteProtect
 857:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             /* Check the card Lock/ Unlock Status */
 858:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             status = SDMMC_BLOCK_SPI_GetLockStatus(obj, &lock_status);
 2003              	 .loc 3 858 0
 2004 008a 07F10B03 	 add r3,r7,#11
 2005 008e 7868     	 ldr r0,[r7,#4]
 2006 0090 1946     	 mov r1,r3
 2007 0092 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_GetLockStatus
 2008 0096 0346     	 mov r3,r0
 2009 0098 FB75     	 strb r3,[r7,#23]
 859:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 860:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 2010              	 .loc 3 860 0
 2011 009a FB7D     	 ldrb r3,[r7,#23]
 2012 009c 002B     	 cmp r3,#0
 2013 009e 2CD1     	 bne .L95
 861:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             {
 862:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****               if (lock_status == SDMMC_BLOCK_CARD_LOCK_STATUS_LOCKED)
 2014              	 .loc 3 862 0
 2015 00a0 FB7A     	 ldrb r3,[r7,#11]
 2016 00a2 012B     	 cmp r3,#1
 2017 00a4 01D1     	 bne .L97
 863:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****               {
 864:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                 status = SDMMC_BLOCK_MODE_STATUS_INITIALIZED_BUT_LOCKED;
 2018              	 .loc 3 864 0
 2019 00a6 2B23     	 movs r3,#43
 2020 00a8 FB75     	 strb r3,[r7,#23]
 2021              	.L97:
 865:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****               }
 866:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****               /* Since the channel is disabled inside the set baud, this check is needed to avaoid 
 867:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****               while (SPI_MASTER_GetFlagStatus(spi_handle->spi_master_handle, (uint32_t)XMC_SPI_CH_S
 2022              	 .loc 3 867 0
 2023 00aa 00BF     	 nop
 2024              	.L98:
 2025              	 .loc 3 867 0 is_stmt 0 discriminator 1
 2026 00ac FB68     	 ldr r3,[r7,#12]
 2027 00ae 1B68     	 ldr r3,[r3]
 2028 00b0 1846     	 mov r0,r3
 2029 00b2 0121     	 movs r1,#1
 2030 00b4 FFF7FEFF 	 bl SPI_MASTER_GetFlagStatus
 2031 00b8 0346     	 mov r3,r0
 2032 00ba 002B     	 cmp r3,#0
 2033 00bc F6D1     	 bne .L98
 868:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****               {
 869:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                 /* To abide coding guidelines */
 870:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****               }
 871:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 872:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****               status = SDMMC_BLOCK_SPI_lSetSpeed(spi_handle->spi_master_handle,
 2034              	 .loc 3 872 0 is_stmt 1
 2035 00be FB68     	 ldr r3,[r7,#12]
 2036 00c0 1A68     	 ldr r2,[r3]
 873:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                  spi_handle->spi_master_handle->config->channel_con
 2037              	 .loc 3 873 0
 2038 00c2 FB68     	 ldr r3,[r7,#12]
 2039 00c4 1B68     	 ldr r3,[r3]
 2040 00c6 5B68     	 ldr r3,[r3,#4]
 2041 00c8 1B68     	 ldr r3,[r3]
 872:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                  spi_handle->spi_master_handle->config->channel_con
 2042              	 .loc 3 872 0
 2043 00ca 1B68     	 ldr r3,[r3]
 2044 00cc 1046     	 mov r0,r2
 2045 00ce 1946     	 mov r1,r3
 2046 00d0 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSetSpeed
 2047 00d4 0346     	 mov r3,r0
 2048 00d6 FB75     	 strb r3,[r7,#23]
 874:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****               if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 2049              	 .loc 3 874 0
 2050 00d8 FB7D     	 ldrb r3,[r7,#23]
 2051 00da 002B     	 cmp r3,#0
 2052 00dc 0DD1     	 bne .L95
 875:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****               {
 876:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                 /* Update card initialization Status */
 877:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                 obj->card_state &= (uint8_t)~((uint8_t)SDMMC_BLOCK_CARD_STATE_NOT_INITIALIZED);
 2053              	 .loc 3 877 0
 2054 00de 7B68     	 ldr r3,[r7,#4]
 2055 00e0 1B7A     	 ldrb r3,[r3,#8]
 2056 00e2 23F00103 	 bic r3,r3,#1
 2057 00e6 DAB2     	 uxtb r2,r3
 2058 00e8 7B68     	 ldr r3,[r7,#4]
 2059 00ea 1A72     	 strb r2,[r3,#8]
 878:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                 obj->card_state &= (uint8_t)~((uint8_t)SDMMC_BLOCK_CARD_STATE_NO_CARD);
 2060              	 .loc 3 878 0
 2061 00ec 7B68     	 ldr r3,[r7,#4]
 2062 00ee 1B7A     	 ldrb r3,[r3,#8]
 2063 00f0 23F00203 	 bic r3,r3,#2
 2064 00f4 DAB2     	 uxtb r2,r3
 2065 00f6 7B68     	 ldr r3,[r7,#4]
 2066 00f8 1A72     	 strb r2,[r3,#8]
 2067              	.L95:
 879:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****               }
 880:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             }
 881:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           }
 882:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
 883:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
 884:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 885:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 886:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 2068              	 .loc 3 886 0
 2069 00fa FB7D     	 ldrb r3,[r7,#23]
 887:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 2070              	 .loc 3 887 0
 2071 00fc 1846     	 mov r0,r3
 2072 00fe 1837     	 adds r7,r7,#24
 2073              	.LCFI97:
 2074              	 .cfi_def_cfa_offset 8
 2075 0100 BD46     	 mov sp,r7
 2076              	.LCFI98:
 2077              	 .cfi_def_cfa_register 13
 2078              	 
 2079 0102 80BD     	 pop {r7,pc}
 2080              	.L101:
 2081              	 .align 2
 2082              	.L100:
 2083 0104 E0930400 	 .word 300000
 2084              	 .cfi_endproc
 2085              	.LFE341:
 2087              	 .section .text.SDMMC_BLOCK_SPI_lReadCid,"ax",%progbits
 2088              	 .align 2
 2089              	 .thumb
 2090              	 .thumb_func
 2092              	SDMMC_BLOCK_SPI_lReadCid:
 2093              	.LFB342:
 888:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 889:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lReadCid(SDMMC_BLOCK_t *const obj)
 890:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 2094              	 .loc 3 890 0
 2095              	 .cfi_startproc
 2096              	 
 2097              	 
 2098 0000 80B5     	 push {r7,lr}
 2099              	.LCFI99:
 2100              	 .cfi_def_cfa_offset 8
 2101              	 .cfi_offset 7,-8
 2102              	 .cfi_offset 14,-4
 2103 0002 86B0     	 sub sp,sp,#24
 2104              	.LCFI100:
 2105              	 .cfi_def_cfa_offset 32
 2106 0004 00AF     	 add r7,sp,#0
 2107              	.LCFI101:
 2108              	 .cfi_def_cfa_register 7
 2109 0006 7860     	 str r0,[r7,#4]
 891:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
 892:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_CARD_INFORMATION_t* card_info;
 893:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_t* spi_handle;
 894:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t retry;
 895:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 896:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   card_info = &obj->sdmmc_spi->card_info;
 2110              	 .loc 3 896 0
 2111 0008 7B68     	 ldr r3,[r7,#4]
 2112 000a 1B68     	 ldr r3,[r3]
 2113 000c 0433     	 adds r3,r3,#4
 2114 000e FB60     	 str r3,[r7,#12]
 897:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   spi_handle = obj->sdmmc_spi;
 2115              	 .loc 3 897 0
 2116 0010 7B68     	 ldr r3,[r7,#4]
 2117 0012 1B68     	 ldr r3,[r3]
 2118 0014 BB60     	 str r3,[r7,#8]
 898:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 899:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* Read CID */
 900:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD10, SDMMC_BLOCK_ARGUMENT0);
 2119              	 .loc 3 900 0
 2120 0016 7868     	 ldr r0,[r7,#4]
 2121 0018 4A21     	 movs r1,#74
 2122 001a 0022     	 movs r2,#0
 2123 001c FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 2124 0020 0346     	 mov r3,r0
 2125 0022 FB75     	 strb r3,[r7,#23]
 901:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 902:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (spi_handle->cmd_response == 0U))
 2126              	 .loc 3 902 0
 2127 0024 FB7D     	 ldrb r3,[r7,#23]
 2128 0026 002B     	 cmp r3,#0
 2129 0028 34D1     	 bne .L103
 2130              	 .loc 3 902 0 is_stmt 0 discriminator 1
 2131 002a BB68     	 ldr r3,[r7,#8]
 2132 002c 93F87030 	 ldrb r3,[r3,#112]
 2133 0030 002B     	 cmp r3,#0
 2134 0032 2FD1     	 bne .L103
 903:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 904:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     retry = 0U;
 2135              	 .loc 3 904 0 is_stmt 1
 2136 0034 0023     	 movs r3,#0
 2137 0036 3B61     	 str r3,[r7,#16]
 2138              	.L105:
 905:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     do
 906:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 907:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lReadData(spi_handle, &spi_handle->cmd_response, 1U);
 2139              	 .loc 3 907 0
 2140 0038 BB68     	 ldr r3,[r7,#8]
 2141 003a 7033     	 adds r3,r3,#112
 2142 003c B868     	 ldr r0,[r7,#8]
 2143 003e 1946     	 mov r1,r3
 2144 0040 0122     	 movs r2,#1
 2145 0042 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 2146 0046 0346     	 mov r3,r0
 2147 0048 FB75     	 strb r3,[r7,#23]
 908:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       retry++;
 2148              	 .loc 3 908 0
 2149 004a 3B69     	 ldr r3,[r7,#16]
 2150 004c 0133     	 adds r3,r3,#1
 2151 004e 3B61     	 str r3,[r7,#16]
 909:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     } while ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) &&
 910:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****              (spi_handle->cmd_response != SDMMC_BLOCK_SPI_START_BLOCK_TOKEN) &&
 911:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****              (retry < 255U));
 2152              	 .loc 3 911 0
 2153 0050 FB7D     	 ldrb r3,[r7,#23]
 2154 0052 002B     	 cmp r3,#0
 2155 0054 07D1     	 bne .L104
 910:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****              (retry < 255U));
 2156              	 .loc 3 910 0
 2157 0056 BB68     	 ldr r3,[r7,#8]
 2158 0058 93F87030 	 ldrb r3,[r3,#112]
 909:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     } while ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) &&
 2159              	 .loc 3 909 0
 2160 005c FE2B     	 cmp r3,#254
 2161 005e 02D0     	 beq .L104
 910:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****              (retry < 255U));
 2162              	 .loc 3 910 0
 2163 0060 3B69     	 ldr r3,[r7,#16]
 2164 0062 FE2B     	 cmp r3,#254
 2165 0064 E8D9     	 bls .L105
 2166              	.L104:
 912:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 913:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (retry < 255U))
 2167              	 .loc 3 913 0
 2168 0066 FB7D     	 ldrb r3,[r7,#23]
 2169 0068 002B     	 cmp r3,#0
 2170 006a 0CD1     	 bne .L106
 2171              	 .loc 3 913 0 is_stmt 0 discriminator 1
 2172 006c 3B69     	 ldr r3,[r7,#16]
 2173 006e FE2B     	 cmp r3,#254
 2174 0070 09D8     	 bhi .L106
 914:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 915:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lReadCardRegister(spi_handle, card_info->cid, SDMMC_BLOCK_SPI_CSD_CI
 2175              	 .loc 3 915 0 is_stmt 1
 2176 0072 FB68     	 ldr r3,[r7,#12]
 2177 0074 0433     	 adds r3,r3,#4
 2178 0076 B868     	 ldr r0,[r7,#8]
 2179 0078 1946     	 mov r1,r3
 2180 007a 1022     	 movs r2,#16
 2181 007c FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadCardRegister
 2182 0080 0346     	 mov r3,r0
 2183 0082 FB75     	 strb r3,[r7,#23]
 2184 0084 01E0     	 b .L107
 2185              	.L106:
 916:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 917:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
 918:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 919:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2186              	 .loc 3 919 0
 2187 0086 0123     	 movs r3,#1
 2188 0088 FB75     	 strb r3,[r7,#23]
 2189              	.L107:
 920:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 921:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* 16 bit CRC follows data */
 922:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     SDMMC_BLOCK_SPI_lDummyRead(spi_handle, SDMMC_BLOCK_SPI_CRC_BYTES);
 2190              	 .loc 3 922 0
 2191 008a B868     	 ldr r0,[r7,#8]
 2192 008c 0221     	 movs r1,#2
 2193 008e FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
 2194 0092 01E0     	 b .L108
 2195              	.L103:
 923:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 924:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
 925:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 926:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2196              	 .loc 3 926 0
 2197 0094 0123     	 movs r3,#1
 2198 0096 FB75     	 strb r3,[r7,#23]
 2199              	.L108:
 927:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 928:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 929:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 2200              	 .loc 3 929 0
 2201 0098 FB7D     	 ldrb r3,[r7,#23]
 930:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 2202              	 .loc 3 930 0
 2203 009a 1846     	 mov r0,r3
 2204 009c 1837     	 adds r7,r7,#24
 2205              	.LCFI102:
 2206              	 .cfi_def_cfa_offset 8
 2207 009e BD46     	 mov sp,r7
 2208              	.LCFI103:
 2209              	 .cfi_def_cfa_register 13
 2210              	 
 2211 00a0 80BD     	 pop {r7,pc}
 2212              	 .cfi_endproc
 2213              	.LFE342:
 2215 00a2 00BF     	 .section .text.SDMMC_BLOCK_SPI_lReadCsd,"ax",%progbits
 2216              	 .align 2
 2217              	 .thumb
 2218              	 .thumb_func
 2220              	SDMMC_BLOCK_SPI_lReadCsd:
 2221              	.LFB343:
 931:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 932:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lReadCsd(SDMMC_BLOCK_t *const obj)
 933:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 2222              	 .loc 3 933 0
 2223              	 .cfi_startproc
 2224              	 
 2225              	 
 2226 0000 80B5     	 push {r7,lr}
 2227              	.LCFI104:
 2228              	 .cfi_def_cfa_offset 8
 2229              	 .cfi_offset 7,-8
 2230              	 .cfi_offset 14,-4
 2231 0002 86B0     	 sub sp,sp,#24
 2232              	.LCFI105:
 2233              	 .cfi_def_cfa_offset 32
 2234 0004 00AF     	 add r7,sp,#0
 2235              	.LCFI106:
 2236              	 .cfi_def_cfa_register 7
 2237 0006 7860     	 str r0,[r7,#4]
 934:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
 935:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_CARD_INFORMATION_t* card_info;
 936:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_t* spi_handle;
 937:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t retry;
 938:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 939:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   card_info = &obj->sdmmc_spi->card_info;
 2238              	 .loc 3 939 0
 2239 0008 7B68     	 ldr r3,[r7,#4]
 2240 000a 1B68     	 ldr r3,[r3]
 2241 000c 0433     	 adds r3,r3,#4
 2242 000e FB60     	 str r3,[r7,#12]
 940:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   spi_handle = obj->sdmmc_spi;
 2243              	 .loc 3 940 0
 2244 0010 7B68     	 ldr r3,[r7,#4]
 2245 0012 1B68     	 ldr r3,[r3]
 2246 0014 BB60     	 str r3,[r7,#8]
 941:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 942:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* Read CID */
 943:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD9, SDMMC_BLOCK_ARGUMENT0);
 2247              	 .loc 3 943 0
 2248 0016 7868     	 ldr r0,[r7,#4]
 2249 0018 4921     	 movs r1,#73
 2250 001a 0022     	 movs r2,#0
 2251 001c FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 2252 0020 0346     	 mov r3,r0
 2253 0022 FB75     	 strb r3,[r7,#23]
 944:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 945:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (spi_handle->cmd_response == 0U))
 2254              	 .loc 3 945 0
 2255 0024 FB7D     	 ldrb r3,[r7,#23]
 2256 0026 002B     	 cmp r3,#0
 2257 0028 34D1     	 bne .L111
 2258              	 .loc 3 945 0 is_stmt 0 discriminator 1
 2259 002a BB68     	 ldr r3,[r7,#8]
 2260 002c 93F87030 	 ldrb r3,[r3,#112]
 2261 0030 002B     	 cmp r3,#0
 2262 0032 2FD1     	 bne .L111
 946:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 947:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     retry = 0U;
 2263              	 .loc 3 947 0 is_stmt 1
 2264 0034 0023     	 movs r3,#0
 2265 0036 3B61     	 str r3,[r7,#16]
 2266              	.L113:
 948:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     do
 949:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 950:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lReadData(spi_handle, &spi_handle->cmd_response, 1U);
 2267              	 .loc 3 950 0
 2268 0038 BB68     	 ldr r3,[r7,#8]
 2269 003a 7033     	 adds r3,r3,#112
 2270 003c B868     	 ldr r0,[r7,#8]
 2271 003e 1946     	 mov r1,r3
 2272 0040 0122     	 movs r2,#1
 2273 0042 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 2274 0046 0346     	 mov r3,r0
 2275 0048 FB75     	 strb r3,[r7,#23]
 951:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       retry++;
 2276              	 .loc 3 951 0
 2277 004a 3B69     	 ldr r3,[r7,#16]
 2278 004c 0133     	 adds r3,r3,#1
 2279 004e 3B61     	 str r3,[r7,#16]
 952:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     } while ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) &&
 953:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****              (spi_handle->cmd_response != SDMMC_BLOCK_SPI_START_BLOCK_TOKEN) &&
 954:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****              (retry < 255U));
 2280              	 .loc 3 954 0
 2281 0050 FB7D     	 ldrb r3,[r7,#23]
 2282 0052 002B     	 cmp r3,#0
 2283 0054 07D1     	 bne .L112
 953:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****              (retry < 255U));
 2284              	 .loc 3 953 0
 2285 0056 BB68     	 ldr r3,[r7,#8]
 2286 0058 93F87030 	 ldrb r3,[r3,#112]
 952:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     } while ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) &&
 2287              	 .loc 3 952 0
 2288 005c FE2B     	 cmp r3,#254
 2289 005e 02D0     	 beq .L112
 953:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****              (retry < 255U));
 2290              	 .loc 3 953 0
 2291 0060 3B69     	 ldr r3,[r7,#16]
 2292 0062 FE2B     	 cmp r3,#254
 2293 0064 E8D9     	 bls .L113
 2294              	.L112:
 955:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 956:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (retry < 255U))
 2295              	 .loc 3 956 0
 2296 0066 FB7D     	 ldrb r3,[r7,#23]
 2297 0068 002B     	 cmp r3,#0
 2298 006a 0CD1     	 bne .L114
 2299              	 .loc 3 956 0 is_stmt 0 discriminator 1
 2300 006c 3B69     	 ldr r3,[r7,#16]
 2301 006e FE2B     	 cmp r3,#254
 2302 0070 09D8     	 bhi .L114
 957:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 958:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lReadCardRegister(spi_handle, card_info->csd, SDMMC_BLOCK_SPI_CSD_CI
 2303              	 .loc 3 958 0 is_stmt 1
 2304 0072 FB68     	 ldr r3,[r7,#12]
 2305 0074 1433     	 adds r3,r3,#20
 2306 0076 B868     	 ldr r0,[r7,#8]
 2307 0078 1946     	 mov r1,r3
 2308 007a 1022     	 movs r2,#16
 2309 007c FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadCardRegister
 2310 0080 0346     	 mov r3,r0
 2311 0082 FB75     	 strb r3,[r7,#23]
 2312 0084 01E0     	 b .L115
 2313              	.L114:
 959:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 960:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
 961:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 962:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2314              	 .loc 3 962 0
 2315 0086 0123     	 movs r3,#1
 2316 0088 FB75     	 strb r3,[r7,#23]
 2317              	.L115:
 963:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
 964:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* 16 bit CRC follows data */
 965:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     SDMMC_BLOCK_SPI_lDummyRead(spi_handle, SDMMC_BLOCK_SPI_CRC_BYTES);
 2318              	 .loc 3 965 0
 2319 008a B868     	 ldr r0,[r7,#8]
 2320 008c 0221     	 movs r1,#2
 2321 008e FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
 2322 0092 01E0     	 b .L116
 2323              	.L111:
 966:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 967:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
 968:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 969:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2324              	 .loc 3 969 0
 2325 0094 0123     	 movs r3,#1
 2326 0096 FB75     	 strb r3,[r7,#23]
 2327              	.L116:
 970:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
 971:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 972:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 2328              	 .loc 3 972 0
 2329 0098 FB7D     	 ldrb r3,[r7,#23]
 973:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 2330              	 .loc 3 973 0
 2331 009a 1846     	 mov r0,r3
 2332 009c 1837     	 adds r7,r7,#24
 2333              	.LCFI107:
 2334              	 .cfi_def_cfa_offset 8
 2335 009e BD46     	 mov sp,r7
 2336              	.LCFI108:
 2337              	 .cfi_def_cfa_register 13
 2338              	 
 2339 00a0 80BD     	 pop {r7,pc}
 2340              	 .cfi_endproc
 2341              	.LFE343:
 2343 00a2 00BF     	 .section .text.SDMMC_BLOCK_SPI_lQueryOperatingCondVoltage,"ax",%progbits
 2344              	 .align 2
 2345              	 .thumb
 2346              	 .thumb_func
 2348              	SDMMC_BLOCK_SPI_lQueryOperatingCondVoltage:
 2349              	.LFB344:
 974:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 975:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lQueryOperatingCondVoltage(SDMMC_BLOCK_t *const ob
 976:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 2350              	 .loc 3 976 0
 2351              	 .cfi_startproc
 2352              	 
 2353              	 
 2354 0000 80B5     	 push {r7,lr}
 2355              	.LCFI109:
 2356              	 .cfi_def_cfa_offset 8
 2357              	 .cfi_offset 7,-8
 2358              	 .cfi_offset 14,-4
 2359 0002 84B0     	 sub sp,sp,#16
 2360              	.LCFI110:
 2361              	 .cfi_def_cfa_offset 24
 2362 0004 00AF     	 add r7,sp,#0
 2363              	.LCFI111:
 2364              	 .cfi_def_cfa_register 7
 2365 0006 7860     	 str r0,[r7,#4]
 977:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
 978:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t count = 0xFFU;
 2366              	 .loc 3 978 0
 2367 0008 FF23     	 movs r3,#255
 2368 000a BB60     	 str r3,[r7,#8]
 979:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 980:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* Standard Capacity V1 Card */
 981:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   obj->card_capacity = (uint8_t)SDMMC_BLOCK_CARD_CAPACITY_UNKNOWN;
 2369              	 .loc 3 981 0
 2370 000c 7B68     	 ldr r3,[r7,#4]
 2371 000e 0022     	 movs r2,#0
 2372 0010 9A72     	 strb r2,[r3,#10]
 982:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   obj->card_type = (uint8_t)SDMMC_BLOCK_CARD_TYPE_STANDARD_CAPACITY_V1X;
 2373              	 .loc 3 982 0
 2374 0012 7B68     	 ldr r3,[r7,#4]
 2375 0014 0222     	 movs r2,#2
 2376 0016 5A72     	 strb r2,[r3,#9]
 2377              	.L120:
 983:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 984:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /*
 985:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * CMD8 has to be send for SDHC cards to expand ACMD41 functions
 986:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * Check pattern = 0x22 Bits 7..0 (calculated for crc=0x95
 987:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * VHS Voltage supplied 2.7-3.6V 0b0001 Bits 11..8
 988:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * SEND_IF_COND
 989:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    */
 990:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   do
 991:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
 992:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD8, SDMMC_BLOCK_SD_CMD8_ARG);
 2378              	 .loc 3 992 0
 2379 0018 7868     	 ldr r0,[r7,#4]
 2380 001a 4821     	 movs r1,#72
 2381 001c 4FF4D572 	 mov r2,#426
 2382 0020 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 2383 0024 0346     	 mov r3,r0
 2384 0026 FB73     	 strb r3,[r7,#15]
 993:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     count--;
 2385              	 .loc 3 993 0
 2386 0028 BB68     	 ldr r3,[r7,#8]
 2387 002a 013B     	 subs r3,r3,#1
 2388 002c BB60     	 str r3,[r7,#8]
 994:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   } while ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) &&
 995:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****            ((obj->sdmmc_spi->cmd_response & SDMMC_BLOCK_SPI_PARAM_ERROR) != 0U) &&
 996:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****            (count > 0U));
 2389              	 .loc 3 996 0
 2390 002e FB7B     	 ldrb r3,[r7,#15]
 2391 0030 002B     	 cmp r3,#0
 2392 0032 0AD1     	 bne .L119
 995:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****            (count > 0U));
 2393              	 .loc 3 995 0
 2394 0034 7B68     	 ldr r3,[r7,#4]
 2395 0036 1B68     	 ldr r3,[r3]
 2396 0038 93F87030 	 ldrb r3,[r3,#112]
 2397 003c 03F04003 	 and r3,r3,#64
 994:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   } while ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) &&
 2398              	 .loc 3 994 0
 2399 0040 002B     	 cmp r3,#0
 2400 0042 02D0     	 beq .L119
 995:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****            (count > 0U));
 2401              	 .loc 3 995 0
 2402 0044 BB68     	 ldr r3,[r7,#8]
 2403 0046 002B     	 cmp r3,#0
 2404 0048 E6D1     	 bne .L120
 2405              	.L119:
 997:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
 998:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 2406              	 .loc 3 998 0
 2407 004a FB7B     	 ldrb r3,[r7,#15]
 2408 004c 002B     	 cmp r3,#0
 2409 004e 18D1     	 bne .L121
 999:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1000:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if (count == 0U)
 2410              	 .loc 3 1000 0
 2411 0050 BB68     	 ldr r3,[r7,#8]
 2412 0052 002B     	 cmp r3,#0
 2413 0054 02D1     	 bne .L122
1001:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1002:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_OUT_OF_RANGE_ERROR;
 2414              	 .loc 3 1002 0
 2415 0056 0A23     	 movs r3,#10
 2416 0058 FB73     	 strb r3,[r7,#15]
 2417 005a 12E0     	 b .L121
 2418              	.L122:
1003:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1004:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else if ((obj->sdmmc_spi->cmd_response & SDMMC_BLOCK_ILLEGAL_COMMAND) == 0U)
 2419              	 .loc 3 1004 0
 2420 005c 7B68     	 ldr r3,[r7,#4]
 2421 005e 1B68     	 ldr r3,[r3]
 2422 0060 93F87030 	 ldrb r3,[r3,#112]
 2423 0064 03F00403 	 and r3,r3,#4
 2424 0068 002B     	 cmp r3,#0
 2425 006a 05D1     	 bne .L123
1005:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1006:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /* SD card V2.xx */
1007:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lSDV2OperatingCondVoltage(obj);
 2426              	 .loc 3 1007 0
 2427 006c 7868     	 ldr r0,[r7,#4]
 2428 006e FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSDV2OperatingCondVoltage
 2429 0072 0346     	 mov r3,r0
 2430 0074 FB73     	 strb r3,[r7,#15]
 2431 0076 04E0     	 b .L121
 2432              	.L123:
1008:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1009:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else /* SD card V1.xx */
1010:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1011:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lSDV1OperatingCondVoltage(obj);
 2433              	 .loc 3 1011 0
 2434 0078 7868     	 ldr r0,[r7,#4]
 2435 007a FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSDV1OperatingCondVoltage
 2436 007e 0346     	 mov r3,r0
 2437 0080 FB73     	 strb r3,[r7,#15]
 2438              	.L121:
1012:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1013:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1014:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1015:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 2439              	 .loc 3 1015 0
 2440 0082 FB7B     	 ldrb r3,[r7,#15]
1016:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 2441              	 .loc 3 1016 0
 2442 0084 1846     	 mov r0,r3
 2443 0086 1037     	 adds r7,r7,#16
 2444              	.LCFI112:
 2445              	 .cfi_def_cfa_offset 8
 2446 0088 BD46     	 mov sp,r7
 2447              	.LCFI113:
 2448              	 .cfi_def_cfa_register 13
 2449              	 
 2450 008a 80BD     	 pop {r7,pc}
 2451              	 .cfi_endproc
 2452              	.LFE344:
 2454              	 .section .text.SDMMC_BLOCK_SPI_lSDV2OperatingCondVoltage,"ax",%progbits
 2455              	 .align 2
 2456              	 .thumb
 2457              	 .thumb_func
 2459              	SDMMC_BLOCK_SPI_lSDV2OperatingCondVoltage:
 2460              	.LFB345:
1017:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1018:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lSDV2OperatingCondVoltage(SDMMC_BLOCK_t *const obj
1019:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 2461              	 .loc 3 1019 0
 2462              	 .cfi_startproc
 2463              	 
 2464              	 
 2465 0000 80B5     	 push {r7,lr}
 2466              	.LCFI114:
 2467              	 .cfi_def_cfa_offset 8
 2468              	 .cfi_offset 7,-8
 2469              	 .cfi_offset 14,-4
 2470 0002 84B0     	 sub sp,sp,#16
 2471              	.LCFI115:
 2472              	 .cfi_def_cfa_offset 24
 2473 0004 00AF     	 add r7,sp,#0
 2474              	.LCFI116:
 2475              	 .cfi_def_cfa_register 7
 2476 0006 7860     	 str r0,[r7,#4]
1020:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1021:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint8_t response[4] = {0U};
 2477              	 .loc 3 1021 0
 2478 0008 0023     	 movs r3,#0
 2479 000a BB60     	 str r3,[r7,#8]
1022:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1023:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /*Support Standard V2.x*/
1024:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_lReadData(obj->sdmmc_spi, response, 4U);
 2480              	 .loc 3 1024 0
 2481 000c 7B68     	 ldr r3,[r7,#4]
 2482 000e 1A68     	 ldr r2,[r3]
 2483 0010 07F10803 	 add r3,r7,#8
 2484 0014 1046     	 mov r0,r2
 2485 0016 1946     	 mov r1,r3
 2486 0018 0422     	 movs r2,#4
 2487 001a FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 2488 001e 0346     	 mov r3,r0
 2489 0020 FB73     	 strb r3,[r7,#15]
1025:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1026:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /*
1027:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * Check whether Check pattern matches in the Argument,Response and
1028:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * Check the Voltage Supplied is Accepted by the card in the response
1029:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    */
1030:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) &&
 2490              	 .loc 3 1030 0
 2491 0022 FB7B     	 ldrb r3,[r7,#15]
 2492 0024 002B     	 cmp r3,#0
 2493 0026 0ED1     	 bne .L126
1031:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       ((response[2] != SDMMC_BLOCK_SD_VHS_PATTERN_2_7_3_6_VALUE) ||
 2494              	 .loc 3 1031 0 discriminator 1
 2495 0028 BB7A     	 ldrb r3,[r7,#10]
1030:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       ((response[2] != SDMMC_BLOCK_SD_VHS_PATTERN_2_7_3_6_VALUE) ||
 2496              	 .loc 3 1030 0 discriminator 1
 2497 002a 012B     	 cmp r3,#1
 2498 002c 02D1     	 bne .L127
1032:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****        (response[3] != SDMMC_BLOCK_SD_CMD8_CHECK_PATTERN_VALUE)))
 2499              	 .loc 3 1032 0
 2500 002e FB7A     	 ldrb r3,[r7,#11]
1031:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       ((response[2] != SDMMC_BLOCK_SD_VHS_PATTERN_2_7_3_6_VALUE) ||
 2501              	 .loc 3 1031 0
 2502 0030 AA2B     	 cmp r3,#170
 2503 0032 08D0     	 beq .L126
 2504              	.L127:
1033:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1034:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* Test voltage range failed */
1035:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if (response[3] == 0x01U)
 2505              	 .loc 3 1035 0
 2506 0034 FB7A     	 ldrb r3,[r7,#11]
 2507 0036 012B     	 cmp r3,#1
 2508 0038 02D1     	 bne .L128
1036:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1037:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /*Test Voltage range failed */
1038:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_VOLTAGE_ERROR;
 2509              	 .loc 3 1038 0
 2510 003a 3423     	 movs r3,#52
 2511 003c FB73     	 strb r3,[r7,#15]
1035:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 2512              	 .loc 3 1035 0
 2513 003e 58E0     	 b .L130
 2514              	.L128:
1039:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1040:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
1041:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1042:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /* Test pattern failed */
1043:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_PATTERN_ERROR;
 2515              	 .loc 3 1043 0
 2516 0040 3523     	 movs r3,#53
 2517 0042 FB73     	 strb r3,[r7,#15]
1035:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 2518              	 .loc 3 1035 0
 2519 0044 55E0     	 b .L130
 2520              	.L126:
1044:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1045:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1046:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
1047:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1048:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lSendACMD41(obj, SDMMC_BLOCK_SD_ACMD41_F81_ARG);
 2521              	 .loc 3 1048 0
 2522 0046 7868     	 ldr r0,[r7,#4]
 2523 0048 2C49     	 ldr r1,.L136
 2524 004a FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendACMD41
 2525 004e 0346     	 mov r3,r0
 2526 0050 FB73     	 strb r3,[r7,#15]
1049:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1050:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS))
 2527              	 .loc 3 1050 0
 2528 0052 FB7B     	 ldrb r3,[r7,#15]
 2529 0054 002B     	 cmp r3,#0
 2530 0056 4CD1     	 bne .L130
1051:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1052:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /* Send CMD58 Read OCR */
1053:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD58, SDMMC_BLOCK_ARGUMENT0);
 2531              	 .loc 3 1053 0
 2532 0058 7868     	 ldr r0,[r7,#4]
 2533 005a 7A21     	 movs r1,#122
 2534 005c 0022     	 movs r2,#0
 2535 005e FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 2536 0062 0346     	 mov r3,r0
 2537 0064 FB73     	 strb r3,[r7,#15]
1054:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1055:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response == 0U))
 2538              	 .loc 3 1055 0
 2539 0066 FB7B     	 ldrb r3,[r7,#15]
 2540 0068 002B     	 cmp r3,#0
 2541 006a 40D1     	 bne .L131
 2542              	 .loc 3 1055 0 is_stmt 0 discriminator 1
 2543 006c 7B68     	 ldr r3,[r7,#4]
 2544 006e 1B68     	 ldr r3,[r3]
 2545 0070 93F87030 	 ldrb r3,[r3,#112]
 2546 0074 002B     	 cmp r3,#0
 2547 0076 3AD1     	 bne .L131
1056:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
1057:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         status = SDMMC_BLOCK_SPI_lReadCardRegister(obj->sdmmc_spi,
 2548              	 .loc 3 1057 0 is_stmt 1
 2549 0078 7B68     	 ldr r3,[r7,#4]
 2550 007a 1A68     	 ldr r2,[r3]
1058:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                    obj->sdmmc_spi->card_info.ocr,
 2551              	 .loc 3 1058 0
 2552 007c 7B68     	 ldr r3,[r7,#4]
 2553 007e 1B68     	 ldr r3,[r3]
 2554 0080 0433     	 adds r3,r3,#4
1057:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                    obj->sdmmc_spi->card_info.ocr,
 2555              	 .loc 3 1057 0
 2556 0082 1046     	 mov r0,r2
 2557 0084 1946     	 mov r1,r3
 2558 0086 0422     	 movs r2,#4
 2559 0088 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadCardRegister
 2560 008c 0346     	 mov r3,r0
 2561 008e FB73     	 strb r3,[r7,#15]
1059:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                    SDMMC_BLOCK_SPI_OCR_LENGTH);
1060:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         if  (status ==  SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 2562              	 .loc 3 1060 0
 2563 0090 FB7B     	 ldrb r3,[r7,#15]
 2564 0092 002B     	 cmp r3,#0
 2565 0094 2AD1     	 bne .L132
1061:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
1062:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           /* Check CCS bit in the OCR register, CCS=1 means High Capacity  card*/
1063:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           if (obj->sdmmc_spi->card_info.ocr[3] & SDMMC_BLOCK_SPI_OCR_CCS_BIT_MSK)
 2566              	 .loc 3 1063 0
 2567 0096 7B68     	 ldr r3,[r7,#4]
 2568 0098 1B68     	 ldr r3,[r3]
 2569 009a DB79     	 ldrb r3,[r3,#7]
 2570 009c 03F04003 	 and r3,r3,#64
 2571 00a0 002B     	 cmp r3,#0
 2572 00a2 06D0     	 beq .L133
1064:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           {
1065:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             /* High capacity card if bit 30 of OCR is set */
1066:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             obj->card_capacity = (uint8_t)SDMMC_BLOCK_CARD_CAPACITY_SDHC;
 2573              	 .loc 3 1066 0
 2574 00a4 7B68     	 ldr r3,[r7,#4]
 2575 00a6 0322     	 movs r2,#3
 2576 00a8 9A72     	 strb r2,[r3,#10]
1067:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             /* High capacity card SDHC Type */
1068:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             obj->card_type = ((uint8_t)SDMMC_BLOCK_CARD_TYPE_HIGH_CAPACITY |
 2577              	 .loc 3 1068 0
 2578 00aa 7B68     	 ldr r3,[r7,#4]
 2579 00ac 0C22     	 movs r2,#12
 2580 00ae 5A72     	 strb r2,[r3,#9]
 2581 00b0 1CE0     	 b .L132
 2582              	.L133:
1069:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                               (uint8_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING);
1070:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           }
1071:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           /* CCS=0 means Standard Capacity Version2 */
1072:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           else
1073:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           {
1074:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             obj->card_capacity = (uint8_t)SDMMC_BLOCK_CARD_CAPACITY_SD; /* High capacity card if bi
 2583              	 .loc 3 1074 0
 2584 00b2 7B68     	 ldr r3,[r7,#4]
 2585 00b4 0222     	 movs r2,#2
 2586 00b6 9A72     	 strb r2,[r3,#10]
1075:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             obj->card_type = (uint8_t)SDMMC_BLOCK_CARD_TYPE_STANDARD_CAPACITY_V2;
 2587              	 .loc 3 1075 0
 2588 00b8 7B68     	 ldr r3,[r7,#4]
 2589 00ba 0122     	 movs r2,#1
 2590 00bc 5A72     	 strb r2,[r3,#9]
1076:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             /* Set Block Length as 512 CMD16  */
1077:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD16, SDMMC_BLOCK_SPI_BYTES
 2591              	 .loc 3 1077 0
 2592 00be 7868     	 ldr r0,[r7,#4]
 2593 00c0 5021     	 movs r1,#80
 2594 00c2 4FF40072 	 mov r2,#512
 2595 00c6 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 2596 00ca 0346     	 mov r3,r0
 2597 00cc FB73     	 strb r3,[r7,#15]
1078:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1079:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response == 0U)
 2598              	 .loc 3 1079 0
 2599 00ce FB7B     	 ldrb r3,[r7,#15]
 2600 00d0 002B     	 cmp r3,#0
 2601 00d2 08D1     	 bne .L134
 2602              	 .loc 3 1079 0 is_stmt 0 discriminator 1
 2603 00d4 7B68     	 ldr r3,[r7,#4]
 2604 00d6 1B68     	 ldr r3,[r3]
 2605 00d8 93F87030 	 ldrb r3,[r3,#112]
 2606 00dc 002B     	 cmp r3,#0
 2607 00de 02D1     	 bne .L134
1080:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             {
1081:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 2608              	 .loc 3 1081 0 is_stmt 1
 2609 00e0 0023     	 movs r3,#0
 2610 00e2 FB73     	 strb r3,[r7,#15]
 2611 00e4 02E0     	 b .L132
 2612              	.L134:
1082:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             }
1083:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             else
1084:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             {
1085:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2613              	 .loc 3 1085 0
 2614 00e6 0123     	 movs r3,#1
 2615 00e8 FB73     	 strb r3,[r7,#15]
1060:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 2616              	 .loc 3 1060 0
 2617 00ea 02E0     	 b .L130
 2618              	.L132:
 2619 00ec 01E0     	 b .L130
 2620              	.L131:
1086:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             }
1087:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           }
1088:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
1089:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
1090:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       else
1091:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
1092:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2621              	 .loc 3 1092 0
 2622 00ee 0123     	 movs r3,#1
 2623 00f0 FB73     	 strb r3,[r7,#15]
 2624              	.L130:
1093:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
1094:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1095:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1096:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1097:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 2625              	 .loc 3 1097 0
 2626 00f2 FB7B     	 ldrb r3,[r7,#15]
1098:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 2627              	 .loc 3 1098 0
 2628 00f4 1846     	 mov r0,r3
 2629 00f6 1037     	 adds r7,r7,#16
 2630              	.LCFI117:
 2631              	 .cfi_def_cfa_offset 8
 2632 00f8 BD46     	 mov sp,r7
 2633              	.LCFI118:
 2634              	 .cfi_def_cfa_register 13
 2635              	 
 2636 00fa 80BD     	 pop {r7,pc}
 2637              	.L137:
 2638              	 .align 2
 2639              	.L136:
 2640 00fc 00001040 	 .word 1074790400
 2641              	 .cfi_endproc
 2642              	.LFE345:
 2644              	 .section .text.SDMMC_BLOCK_SPI_lSDV1OperatingCondVoltage,"ax",%progbits
 2645              	 .align 2
 2646              	 .thumb
 2647              	 .thumb_func
 2649              	SDMMC_BLOCK_SPI_lSDV1OperatingCondVoltage:
 2650              	.LFB346:
1099:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1100:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lSDV1OperatingCondVoltage(SDMMC_BLOCK_t *const obj
1101:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 2651              	 .loc 3 1101 0
 2652              	 .cfi_startproc
 2653              	 
 2654              	 
 2655 0000 80B5     	 push {r7,lr}
 2656              	.LCFI119:
 2657              	 .cfi_def_cfa_offset 8
 2658              	 .cfi_offset 7,-8
 2659              	 .cfi_offset 14,-4
 2660 0002 84B0     	 sub sp,sp,#16
 2661              	.LCFI120:
 2662              	 .cfi_def_cfa_offset 24
 2663 0004 00AF     	 add r7,sp,#0
 2664              	.LCFI121:
 2665              	 .cfi_def_cfa_register 7
 2666 0006 7860     	 str r0,[r7,#4]
1102:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1103:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1104:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* CMD 8 response bytes */
1105:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_lDummyRead(obj->sdmmc_spi, 4U);
 2667              	 .loc 3 1105 0
 2668 0008 7B68     	 ldr r3,[r7,#4]
 2669 000a 1B68     	 ldr r3,[r3]
 2670 000c 1846     	 mov r0,r3
 2671 000e 0421     	 movs r1,#4
 2672 0010 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
1106:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /*
1107:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * CMD8 illegal command
1108:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * Note: CMD1 is not supported by all SD cards ?
1109:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * Thin 1,4mm cards don't accept CMD1 before sending ACMD41
1110:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * Try ACMD41 first here !
1111:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * nSend CMD55
1112:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * SEND_APP_CMD
1113:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    */
1114:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* Send Command55 for Application Specific Command with default Argument as 0*/
1115:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD55, SDMMC_BLOCK_ARGUMENT0);
 2673              	 .loc 3 1115 0
 2674 0014 7868     	 ldr r0,[r7,#4]
 2675 0016 7721     	 movs r1,#119
 2676 0018 0022     	 movs r2,#0
 2677 001a FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 2678 001e 0346     	 mov r3,r0
 2679 0020 FB73     	 strb r3,[r7,#15]
1116:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1117:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 2680              	 .loc 3 1117 0
 2681 0022 FB7B     	 ldrb r3,[r7,#15]
 2682 0024 002B     	 cmp r3,#0
 2683 0026 2FD1     	 bne .L139
1118:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1119:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((obj->sdmmc_spi->cmd_response & SDMMC_BLOCK_ILLEGAL_COMMAND) == 0U) /* SD card V1.xx */
 2684              	 .loc 3 1119 0
 2685 0028 7B68     	 ldr r3,[r7,#4]
 2686 002a 1B68     	 ldr r3,[r3]
 2687 002c 93F87030 	 ldrb r3,[r3,#112]
 2688 0030 03F00403 	 and r3,r3,#4
 2689 0034 002B     	 cmp r3,#0
 2690 0036 25D1     	 bne .L140
1120:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1121:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /*Support Standard V1.x*/
1122:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       obj->card_type = (uint8_t)SDMMC_BLOCK_CARD_TYPE_STANDARD_CAPACITY_V1X; /* MMC don't know CMD5
 2691              	 .loc 3 1122 0
 2692 0038 7B68     	 ldr r3,[r7,#4]
 2693 003a 0222     	 movs r2,#2
 2694 003c 5A72     	 strb r2,[r3,#9]
1123:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       obj->card_capacity = (uint8_t)SDMMC_BLOCK_CARD_CAPACITY_SD;
 2695              	 .loc 3 1123 0
 2696 003e 7B68     	 ldr r3,[r7,#4]
 2697 0040 0222     	 movs r2,#2
 2698 0042 9A72     	 strb r2,[r3,#10]
1124:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1125:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lSendACMD41(obj, SDMMC_BLOCK_ARGUMENT0);
 2699              	 .loc 3 1125 0
 2700 0044 7868     	 ldr r0,[r7,#4]
 2701 0046 0021     	 movs r1,#0
 2702 0048 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendACMD41
 2703 004c 0346     	 mov r3,r0
 2704 004e FB73     	 strb r3,[r7,#15]
1126:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1127:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 2705              	 .loc 3 1127 0
 2706 0050 FB7B     	 ldrb r3,[r7,#15]
 2707 0052 002B     	 cmp r3,#0
 2708 0054 18D1     	 bne .L139
1128:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
1129:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          /* Set Block Length as 512 CMD16, This is ideal if above condition is successful  */
1130:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD16, SDMMC_BLOCK_SPI_BYTES_PE
 2709              	 .loc 3 1130 0
 2710 0056 7868     	 ldr r0,[r7,#4]
 2711 0058 5021     	 movs r1,#80
 2712 005a 4FF40072 	 mov r2,#512
 2713 005e FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 2714 0062 0346     	 mov r3,r0
 2715 0064 FB73     	 strb r3,[r7,#15]
1131:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1132:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response == 0U))
 2716              	 .loc 3 1132 0
 2717 0066 FB7B     	 ldrb r3,[r7,#15]
 2718 0068 002B     	 cmp r3,#0
 2719 006a 08D1     	 bne .L142
 2720              	 .loc 3 1132 0 is_stmt 0 discriminator 1
 2721 006c 7B68     	 ldr r3,[r7,#4]
 2722 006e 1B68     	 ldr r3,[r3]
 2723 0070 93F87030 	 ldrb r3,[r3,#112]
 2724 0074 002B     	 cmp r3,#0
 2725 0076 02D1     	 bne .L142
1133:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          {
1134:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 2726              	 .loc 3 1134 0 is_stmt 1
 2727 0078 0023     	 movs r3,#0
 2728 007a FB73     	 strb r3,[r7,#15]
 2729 007c 04E0     	 b .L139
 2730              	.L142:
1135:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          }
1136:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          else
1137:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          {
1138:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2731              	 .loc 3 1138 0
 2732 007e 0123     	 movs r3,#1
 2733 0080 FB73     	 strb r3,[r7,#15]
 2734 0082 01E0     	 b .L139
 2735              	.L140:
1139:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          }
1140:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1141:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
1142:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1143:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
1144:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1145:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2736              	 .loc 3 1145 0
 2737 0084 0123     	 movs r3,#1
 2738 0086 FB73     	 strb r3,[r7,#15]
 2739              	.L139:
1146:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1147:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1148:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1149:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 2740              	 .loc 3 1149 0
 2741 0088 FB7B     	 ldrb r3,[r7,#15]
1150:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 2742              	 .loc 3 1150 0
 2743 008a 1846     	 mov r0,r3
 2744 008c 1037     	 adds r7,r7,#16
 2745              	.LCFI122:
 2746              	 .cfi_def_cfa_offset 8
 2747 008e BD46     	 mov sp,r7
 2748              	.LCFI123:
 2749              	 .cfi_def_cfa_register 13
 2750              	 
 2751 0090 80BD     	 pop {r7,pc}
 2752              	 .cfi_endproc
 2753              	.LFE346:
 2755 0092 00BF     	 .section .text.SDMMC_BLOCK_SPI_lSetSpeed,"ax",%progbits
 2756              	 .align 2
 2757              	 .thumb
 2758              	 .thumb_func
 2760              	SDMMC_BLOCK_SPI_lSetSpeed:
 2761              	.LFB347:
1151:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1152:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lSetSpeed(SPI_MASTER_t *const obj, const uint32_t 
1153:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 2762              	 .loc 3 1153 0
 2763              	 .cfi_startproc
 2764              	 
 2765              	 
 2766 0000 80B5     	 push {r7,lr}
 2767              	.LCFI124:
 2768              	 .cfi_def_cfa_offset 8
 2769              	 .cfi_offset 7,-8
 2770              	 .cfi_offset 14,-4
 2771 0002 84B0     	 sub sp,sp,#16
 2772              	.LCFI125:
 2773              	 .cfi_def_cfa_offset 24
 2774 0004 00AF     	 add r7,sp,#0
 2775              	.LCFI126:
 2776              	 .cfi_def_cfa_register 7
 2777 0006 7860     	 str r0,[r7,#4]
 2778 0008 3960     	 str r1,[r7]
1154:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 2779              	 .loc 3 1154 0
 2780 000a 0023     	 movs r3,#0
 2781 000c FB73     	 strb r3,[r7,#15]
1155:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SPI_MASTER_STATUS_t spi_status;
1156:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1157:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   spi_status = SPI_MASTER_SetBaudRate(obj, baud_rate);
 2782              	 .loc 3 1157 0
 2783 000e 7868     	 ldr r0,[r7,#4]
 2784 0010 3968     	 ldr r1,[r7]
 2785 0012 FFF7FEFF 	 bl SPI_MASTER_SetBaudRate
 2786 0016 0346     	 mov r3,r0
 2787 0018 BB73     	 strb r3,[r7,#14]
1158:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1159:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (spi_status !=  SPI_MASTER_STATUS_SUCCESS)
 2788              	 .loc 3 1159 0
 2789 001a BB7B     	 ldrb r3,[r7,#14]
 2790 001c 002B     	 cmp r3,#0
 2791 001e 01D0     	 beq .L145
1160:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1161:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2792              	 .loc 3 1161 0
 2793 0020 0123     	 movs r3,#1
 2794 0022 FB73     	 strb r3,[r7,#15]
 2795              	.L145:
1162:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1163:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1164:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 2796              	 .loc 3 1164 0
 2797 0024 FB7B     	 ldrb r3,[r7,#15]
1165:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 2798              	 .loc 3 1165 0
 2799 0026 1846     	 mov r0,r3
 2800 0028 1037     	 adds r7,r7,#16
 2801              	.LCFI127:
 2802              	 .cfi_def_cfa_offset 8
 2803 002a BD46     	 mov sp,r7
 2804              	.LCFI128:
 2805              	 .cfi_def_cfa_register 13
 2806              	 
 2807 002c 80BD     	 pop {r7,pc}
 2808              	 .cfi_endproc
 2809              	.LFE347:
 2811 002e 00BF     	 .section .text.SDMMC_BLOCK_SPI_lGetWriteProtect,"ax",%progbits
 2812              	 .align 2
 2813              	 .thumb
 2814              	 .thumb_func
 2816              	SDMMC_BLOCK_SPI_lGetWriteProtect:
 2817              	.LFB348:
1166:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1167:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static void SDMMC_BLOCK_SPI_lGetWriteProtect(SDMMC_BLOCK_t *const obj)
1168:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 2818              	 .loc 3 1168 0
 2819              	 .cfi_startproc
 2820              	 
 2821              	 
 2822              	 
 2823 0000 80B4     	 push {r7}
 2824              	.LCFI129:
 2825              	 .cfi_def_cfa_offset 4
 2826              	 .cfi_offset 7,-4
 2827 0002 85B0     	 sub sp,sp,#20
 2828              	.LCFI130:
 2829              	 .cfi_def_cfa_offset 24
 2830 0004 00AF     	 add r7,sp,#0
 2831              	.LCFI131:
 2832              	 .cfi_def_cfa_register 7
 2833 0006 7860     	 str r0,[r7,#4]
1169:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* SD High capacity card i.e. CSD V2*/
1170:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (((uint32_t)obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_HIGH_CAPACITY) != (uint32_t)0)
 2834              	 .loc 3 1170 0
 2835 0008 7B68     	 ldr r3,[r7,#4]
 2836 000a 5B7A     	 ldrb r3,[r3,#9]
 2837 000c 03F00403 	 and r3,r3,#4
 2838 0010 002B     	 cmp r3,#0
 2839 0012 1AD0     	 beq .L148
 2840              	.LBB6:
1171:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1172:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     SDMMC_BLOCK_SDV2_CSD_t* temp_csd;
1173:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     temp_csd = (SDMMC_BLOCK_SDV2_CSD_t *)&obj->sdmmc_spi->card_info.csd;
 2841              	 .loc 3 1173 0
 2842 0014 7B68     	 ldr r3,[r7,#4]
 2843 0016 1B68     	 ldr r3,[r3]
 2844 0018 1833     	 adds r3,r3,#24
 2845 001a FB60     	 str r3,[r7,#12]
1174:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((temp_csd->temp_write_prot) || (temp_csd->perm_write_prot))
 2846              	 .loc 3 1174 0
 2847 001c FB68     	 ldr r3,[r7,#12]
 2848 001e 5B78     	 ldrb r3,[r3,#1]
 2849 0020 03F01003 	 and r3,r3,#16
 2850 0024 DBB2     	 uxtb r3,r3
 2851 0026 002B     	 cmp r3,#0
 2852 0028 06D1     	 bne .L149
 2853              	 .loc 3 1174 0 is_stmt 0 discriminator 1
 2854 002a FB68     	 ldr r3,[r7,#12]
 2855 002c 5B78     	 ldrb r3,[r3,#1]
 2856 002e 03F02003 	 and r3,r3,#32
 2857 0032 DBB2     	 uxtb r3,r3
 2858 0034 002B     	 cmp r3,#0
 2859 0036 07D0     	 beq .L150
 2860              	.L149:
1175:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1176:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       obj->card_state |= (uint8_t)SDMMC_BLOCK_CARD_STATE_WRITE_PROTECTED;
 2861              	 .loc 3 1176 0 is_stmt 1
 2862 0038 7B68     	 ldr r3,[r7,#4]
 2863 003a 1B7A     	 ldrb r3,[r3,#8]
 2864 003c 43F00403 	 orr r3,r3,#4
 2865 0040 DAB2     	 uxtb r2,r3
 2866 0042 7B68     	 ldr r3,[r7,#4]
 2867 0044 1A72     	 strb r2,[r3,#8]
 2868              	.LBE6:
 2869 0046 19E0     	 b .L147
 2870              	.L150:
 2871 0048 18E0     	 b .L147
 2872              	.L148:
 2873              	.LBB7:
1177:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1178:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1179:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else /* SD standard capacity card i.e. CSD V1*/
1180:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1181:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     SDMMC_BLOCK_SDV1_CSD_t* temp_csd;
1182:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     temp_csd  = (SDMMC_BLOCK_SDV1_CSD_t *)obj->sdmmc_spi->card_info.csd;
 2874              	 .loc 3 1182 0
 2875 004a 7B68     	 ldr r3,[r7,#4]
 2876 004c 1B68     	 ldr r3,[r3]
 2877 004e 1833     	 adds r3,r3,#24
 2878 0050 BB60     	 str r3,[r7,#8]
1183:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((temp_csd->temp_write_prot) || (temp_csd->perm_write_prot))
 2879              	 .loc 3 1183 0
 2880 0052 BB68     	 ldr r3,[r7,#8]
 2881 0054 5B78     	 ldrb r3,[r3,#1]
 2882 0056 03F01003 	 and r3,r3,#16
 2883 005a DBB2     	 uxtb r3,r3
 2884 005c 002B     	 cmp r3,#0
 2885 005e 06D1     	 bne .L152
 2886              	 .loc 3 1183 0 is_stmt 0 discriminator 1
 2887 0060 BB68     	 ldr r3,[r7,#8]
 2888 0062 5B78     	 ldrb r3,[r3,#1]
 2889 0064 03F02003 	 and r3,r3,#32
 2890 0068 DBB2     	 uxtb r3,r3
 2891 006a 002B     	 cmp r3,#0
 2892 006c 06D0     	 beq .L147
 2893              	.L152:
1184:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1185:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       obj->card_state |= (uint8_t)SDMMC_BLOCK_CARD_STATE_WRITE_PROTECTED;
 2894              	 .loc 3 1185 0 is_stmt 1
 2895 006e 7B68     	 ldr r3,[r7,#4]
 2896 0070 1B7A     	 ldrb r3,[r3,#8]
 2897 0072 43F00403 	 orr r3,r3,#4
 2898 0076 DAB2     	 uxtb r2,r3
 2899 0078 7B68     	 ldr r3,[r7,#4]
 2900 007a 1A72     	 strb r2,[r3,#8]
 2901              	.L147:
 2902              	.LBE7:
1186:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1187:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1188:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 2903              	 .loc 3 1188 0
 2904 007c 1437     	 adds r7,r7,#20
 2905              	.LCFI132:
 2906              	 .cfi_def_cfa_offset 4
 2907 007e BD46     	 mov sp,r7
 2908              	.LCFI133:
 2909              	 .cfi_def_cfa_register 13
 2910              	 
 2911 0080 5DF8047B 	 ldr r7,[sp],#4
 2912              	.LCFI134:
 2913              	 .cfi_restore 7
 2914              	 .cfi_def_cfa_offset 0
 2915 0084 7047     	 bx lr
 2916              	 .cfi_endproc
 2917              	.LFE348:
 2919 0086 00BF     	 .section .text.SDMMC_BLOCK_SPI_lWriteMultipleBlocks,"ax",%progbits
 2920              	 .align 2
 2921              	 .thumb
 2922              	 .thumb_func
 2924              	SDMMC_BLOCK_SPI_lWriteMultipleBlocks:
 2925              	.LFB349:
1189:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1190:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lWriteMultipleBlocks(const SDMMC_BLOCK_t *const ob
1191:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                       uint8_t *write_buf,
1192:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                       const uint32_t write_address,
1193:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                       const uint32_t sector_count)
1194:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 2926              	 .loc 3 1194 0
 2927              	 .cfi_startproc
 2928              	 
 2929              	 
 2930 0000 80B5     	 push {r7,lr}
 2931              	.LCFI135:
 2932              	 .cfi_def_cfa_offset 8
 2933              	 .cfi_offset 7,-8
 2934              	 .cfi_offset 14,-4
 2935 0002 88B0     	 sub sp,sp,#32
 2936              	.LCFI136:
 2937              	 .cfi_def_cfa_offset 40
 2938 0004 00AF     	 add r7,sp,#0
 2939              	.LCFI137:
 2940              	 .cfi_def_cfa_register 7
 2941 0006 F860     	 str r0,[r7,#12]
 2942 0008 B960     	 str r1,[r7,#8]
 2943 000a 7A60     	 str r2,[r7,#4]
 2944 000c 3B60     	 str r3,[r7]
1195:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1196:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint8_t send_data;
1197:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t tmp_blk_cnt;
1198:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_t* spi_handle;
1199:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1200:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD25, write_address);
 2945              	 .loc 3 1200 0
 2946 000e F868     	 ldr r0,[r7,#12]
 2947 0010 5921     	 movs r1,#89
 2948 0012 7A68     	 ldr r2,[r7,#4]
 2949 0014 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 2950 0018 0346     	 mov r3,r0
 2951 001a FB77     	 strb r3,[r7,#31]
1201:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1202:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response == 0U))
 2952              	 .loc 3 1202 0
 2953 001c FB7F     	 ldrb r3,[r7,#31]
 2954 001e 002B     	 cmp r3,#0
 2955 0020 5DD1     	 bne .L154
 2956              	 .loc 3 1202 0 is_stmt 0 discriminator 1
 2957 0022 FB68     	 ldr r3,[r7,#12]
 2958 0024 1B68     	 ldr r3,[r3]
 2959 0026 93F87030 	 ldrb r3,[r3,#112]
 2960 002a 002B     	 cmp r3,#0
 2961 002c 57D1     	 bne .L154
1203:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1204:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     spi_handle = obj->sdmmc_spi;
 2962              	 .loc 3 1204 0 is_stmt 1
 2963 002e FB68     	 ldr r3,[r7,#12]
 2964 0030 1B68     	 ldr r3,[r3]
 2965 0032 7B61     	 str r3,[r7,#20]
1205:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     tmp_blk_cnt = sector_count;
 2966              	 .loc 3 1205 0
 2967 0034 3B68     	 ldr r3,[r7]
 2968 0036 BB61     	 str r3,[r7,#24]
1206:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1207:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* multiple start block token for next sector */
1208:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     send_data = (uint8_t)SDMMC_BLOCK_SPI_START_MULTI_BLOCK_TOKEN;
 2969              	 .loc 3 1208 0
 2970 0038 FC23     	 movs r3,#252
 2971 003a FB74     	 strb r3,[r7,#19]
 2972              	.L158:
1209:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1210:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     do
1211:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1212:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lSendData(spi_handle, &send_data, 1U);
 2973              	 .loc 3 1212 0
 2974 003c 07F11303 	 add r3,r7,#19
 2975 0040 7869     	 ldr r0,[r7,#20]
 2976 0042 1946     	 mov r1,r3
 2977 0044 0122     	 movs r2,#1
 2978 0046 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendData
 2979 004a 0346     	 mov r3,r0
 2980 004c FB77     	 strb r3,[r7,#31]
1213:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1214:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 2981              	 .loc 3 1214 0
 2982 004e FB7F     	 ldrb r3,[r7,#31]
 2983 0050 002B     	 cmp r3,#0
 2984 0052 2FD1     	 bne .L155
1215:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
1216:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         status = SDMMC_BLOCK_SPI_lSendData(spi_handle,
1217:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                            write_buf + (SDMMC_BLOCK_SPI_BYTES_PER_SECTOR * (sector_
 2985              	 .loc 3 1217 0
 2986 0054 3A68     	 ldr r2,[r7]
 2987 0056 BB69     	 ldr r3,[r7,#24]
 2988 0058 D31A     	 subs r3,r2,r3
 2989 005a 5B02     	 lsls r3,r3,#9
1216:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                            write_buf + (SDMMC_BLOCK_SPI_BYTES_PER_SECTOR * (sector_
 2990              	 .loc 3 1216 0
 2991 005c BA68     	 ldr r2,[r7,#8]
 2992 005e 1344     	 add r3,r3,r2
 2993 0060 7869     	 ldr r0,[r7,#20]
 2994 0062 1946     	 mov r1,r3
 2995 0064 4FF40072 	 mov r2,#512
 2996 0068 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendData
 2997 006c 0346     	 mov r3,r0
 2998 006e FB77     	 strb r3,[r7,#31]
1218:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                            SDMMC_BLOCK_SPI_BYTES_PER_SECTOR);
1219:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1220:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         SDMMC_BLOCK_SPI_lDummyRead(spi_handle, SDMMC_BLOCK_SPI_CRC_BYTES);
 2999              	 .loc 3 1220 0
 3000 0070 7869     	 ldr r0,[r7,#20]
 3001 0072 0221     	 movs r1,#2
 3002 0074 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
1221:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1222:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         /* After data write, card will send a response stating if the card was accepted or if an er
1223:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         status = SDMMC_BLOCK_SPI_lReadData(spi_handle, &spi_handle->cmd_response, 1U);
 3003              	 .loc 3 1223 0
 3004 0078 7B69     	 ldr r3,[r7,#20]
 3005 007a 7033     	 adds r3,r3,#112
 3006 007c 7869     	 ldr r0,[r7,#20]
 3007 007e 1946     	 mov r1,r3
 3008 0080 0122     	 movs r2,#1
 3009 0082 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 3010 0086 0346     	 mov r3,r0
 3011 0088 FB77     	 strb r3,[r7,#31]
1224:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1225:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3012              	 .loc 3 1225 0
 3013 008a FB7F     	 ldrb r3,[r7,#31]
 3014 008c 002B     	 cmp r3,#0
 3015 008e 11D1     	 bne .L155
1226:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
1227:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           if ((spi_handle->cmd_response & SDMMC_BLOCK_SPI_DR_MSK) != SDMMC_BLOCK_SPI_DR_ACCEPT)
 3016              	 .loc 3 1227 0
 3017 0090 7B69     	 ldr r3,[r7,#20]
 3018 0092 93F87030 	 ldrb r3,[r3,#112]
 3019 0096 03F01F03 	 and r3,r3,#31
 3020 009a 052B     	 cmp r3,#5
 3021 009c 05D0     	 beq .L156
1228:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           {
1229:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             SDMMC_BLOCK_SPI_lDummyRead(spi_handle, 2U); /* Dummy Bytes */
 3022              	 .loc 3 1229 0
 3023 009e 7869     	 ldr r0,[r7,#20]
 3024 00a0 0221     	 movs r1,#2
 3025 00a2 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
1230:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1231:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3026              	 .loc 3 1231 0
 3027 00a6 0123     	 movs r3,#1
 3028 00a8 FB77     	 strb r3,[r7,#31]
 3029              	.L156:
1232:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           }
1233:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1234:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           status = SDMMC_BLOCK_SPI_lWaitUntilBusy(spi_handle);
 3030              	 .loc 3 1234 0
 3031 00aa 7869     	 ldr r0,[r7,#20]
 3032 00ac FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lWaitUntilBusy
 3033 00b0 0346     	 mov r3,r0
 3034 00b2 FB77     	 strb r3,[r7,#31]
 3035              	.L155:
1235:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
1236:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
1237:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       tmp_blk_cnt--;
 3036              	 .loc 3 1237 0
 3037 00b4 BB69     	 ldr r3,[r7,#24]
 3038 00b6 013B     	 subs r3,r3,#1
 3039 00b8 BB61     	 str r3,[r7,#24]
1238:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     } while ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (tmp_blk_cnt > 0U));
 3040              	 .loc 3 1238 0
 3041 00ba FB7F     	 ldrb r3,[r7,#31]
 3042 00bc 002B     	 cmp r3,#0
 3043 00be 02D1     	 bne .L157
 3044              	 .loc 3 1238 0 is_stmt 0 discriminator 1
 3045 00c0 BB69     	 ldr r3,[r7,#24]
 3046 00c2 002B     	 cmp r3,#0
 3047 00c4 BAD1     	 bne .L158
 3048              	.L157:
1239:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1240:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* Send 'stop transmission token' */
1241:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     send_data = SDMMC_BLOCK_SPI_STOP_TRANSMISSION;
 3049              	 .loc 3 1241 0 is_stmt 1
 3050 00c6 FD23     	 movs r3,#253
 3051 00c8 FB74     	 strb r3,[r7,#19]
1242:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lSendData(spi_handle, &send_data, 1U);
 3052              	 .loc 3 1242 0
 3053 00ca 07F11303 	 add r3,r7,#19
 3054 00ce 7869     	 ldr r0,[r7,#20]
 3055 00d0 1946     	 mov r1,r3
 3056 00d2 0122     	 movs r2,#1
 3057 00d4 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendData
 3058 00d8 0346     	 mov r3,r0
 3059 00da FB77     	 strb r3,[r7,#31]
 3060 00dc 01E0     	 b .L159
 3061              	.L154:
1243:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1244:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
1245:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1246:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3062              	 .loc 3 1246 0
 3063 00de 0123     	 movs r3,#1
 3064 00e0 FB77     	 strb r3,[r7,#31]
 3065              	.L159:
1247:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1248:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1249:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 3066              	 .loc 3 1249 0
 3067 00e2 FB7F     	 ldrb r3,[r7,#31]
1250:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 3068              	 .loc 3 1250 0
 3069 00e4 1846     	 mov r0,r3
 3070 00e6 2037     	 adds r7,r7,#32
 3071              	.LCFI138:
 3072              	 .cfi_def_cfa_offset 8
 3073 00e8 BD46     	 mov sp,r7
 3074              	.LCFI139:
 3075              	 .cfi_def_cfa_register 13
 3076              	 
 3077 00ea 80BD     	 pop {r7,pc}
 3078              	 .cfi_endproc
 3079              	.LFE349:
 3081              	 .section .text.SDMMC_BLOCK_SPI_lWriteSingleBlock,"ax",%progbits
 3082              	 .align 2
 3083              	 .thumb
 3084              	 .thumb_func
 3086              	SDMMC_BLOCK_SPI_lWriteSingleBlock:
 3087              	.LFB350:
1251:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1252:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lWriteSingleBlock(const SDMMC_BLOCK_t *const obj,
1253:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                    uint8_t *write_buf,
1254:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                    const uint32_t write_address)
1255:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 3088              	 .loc 3 1255 0
 3089              	 .cfi_startproc
 3090              	 
 3091              	 
 3092 0000 80B5     	 push {r7,lr}
 3093              	.LCFI140:
 3094              	 .cfi_def_cfa_offset 8
 3095              	 .cfi_offset 7,-8
 3096              	 .cfi_offset 14,-4
 3097 0002 88B0     	 sub sp,sp,#32
 3098              	.LCFI141:
 3099              	 .cfi_def_cfa_offset 40
 3100 0004 00AF     	 add r7,sp,#0
 3101              	.LCFI142:
 3102              	 .cfi_def_cfa_register 7
 3103 0006 F860     	 str r0,[r7,#12]
 3104 0008 B960     	 str r1,[r7,#8]
 3105 000a 7A60     	 str r2,[r7,#4]
1256:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3106              	 .loc 3 1256 0
 3107 000c 0123     	 movs r3,#1
 3108 000e FB77     	 strb r3,[r7,#31]
1257:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint8_t send_data;
1258:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_t* spi_handle;
1259:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1260:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1261:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD24, write_address);
 3109              	 .loc 3 1261 0
 3110 0010 F868     	 ldr r0,[r7,#12]
 3111 0012 5821     	 movs r1,#88
 3112 0014 7A68     	 ldr r2,[r7,#4]
 3113 0016 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 3114 001a 0346     	 mov r3,r0
 3115 001c FB77     	 strb r3,[r7,#31]
1262:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1263:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response == 0U))
 3116              	 .loc 3 1263 0
 3117 001e FB7F     	 ldrb r3,[r7,#31]
 3118 0020 002B     	 cmp r3,#0
 3119 0022 3DD1     	 bne .L162
 3120              	 .loc 3 1263 0 is_stmt 0 discriminator 1
 3121 0024 FB68     	 ldr r3,[r7,#12]
 3122 0026 1B68     	 ldr r3,[r3]
 3123 0028 93F87030 	 ldrb r3,[r3,#112]
 3124 002c 002B     	 cmp r3,#0
 3125 002e 37D1     	 bne .L162
1264:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1265:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     spi_handle = obj->sdmmc_spi;
 3126              	 .loc 3 1265 0 is_stmt 1
 3127 0030 FB68     	 ldr r3,[r7,#12]
 3128 0032 1B68     	 ldr r3,[r3]
 3129 0034 BB61     	 str r3,[r7,#24]
1266:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1267:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* multiple start block token for next sector */
1268:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     send_data = (uint8_t)SDMMC_BLOCK_SPI_START_BLOCK_TOKEN;
 3130              	 .loc 3 1268 0
 3131 0036 FE23     	 movs r3,#254
 3132 0038 FB75     	 strb r3,[r7,#23]
1269:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1270:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lSendData(spi_handle, &send_data, 1U);
 3133              	 .loc 3 1270 0
 3134 003a 07F11703 	 add r3,r7,#23
 3135 003e B869     	 ldr r0,[r7,#24]
 3136 0040 1946     	 mov r1,r3
 3137 0042 0122     	 movs r2,#1
 3138 0044 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendData
 3139 0048 0346     	 mov r3,r0
 3140 004a FB77     	 strb r3,[r7,#31]
1271:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1272:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3141              	 .loc 3 1272 0
 3142 004c FB7F     	 ldrb r3,[r7,#31]
 3143 004e 002B     	 cmp r3,#0
 3144 0050 25D1     	 bne .L163
1273:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1274:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lSendData(spi_handle, write_buf, SDMMC_BLOCK_SPI_BYTES_PER_SECTOR);
 3145              	 .loc 3 1274 0
 3146 0052 B869     	 ldr r0,[r7,#24]
 3147 0054 B968     	 ldr r1,[r7,#8]
 3148 0056 4FF40072 	 mov r2,#512
 3149 005a FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendData
 3150 005e 0346     	 mov r3,r0
 3151 0060 FB77     	 strb r3,[r7,#31]
1275:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1276:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       SDMMC_BLOCK_SPI_lDummyRead(spi_handle, SDMMC_BLOCK_SPI_CRC_BYTES);
 3152              	 .loc 3 1276 0
 3153 0062 B869     	 ldr r0,[r7,#24]
 3154 0064 0221     	 movs r1,#2
 3155 0066 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
1277:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1278:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lReadData(spi_handle, &spi_handle->cmd_response, 1U);
 3156              	 .loc 3 1278 0
 3157 006a BB69     	 ldr r3,[r7,#24]
 3158 006c 7033     	 adds r3,r3,#112
 3159 006e B869     	 ldr r0,[r7,#24]
 3160 0070 1946     	 mov r1,r3
 3161 0072 0122     	 movs r2,#1
 3162 0074 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 3163 0078 0346     	 mov r3,r0
 3164 007a FB77     	 strb r3,[r7,#31]
1279:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1280:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3165              	 .loc 3 1280 0
 3166 007c FB7F     	 ldrb r3,[r7,#31]
 3167 007e 002B     	 cmp r3,#0
 3168 0080 0DD1     	 bne .L163
1281:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
1282:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         if ((spi_handle->cmd_response & SDMMC_BLOCK_SPI_DR_MSK) != SDMMC_BLOCK_SPI_DR_ACCEPT)
 3169              	 .loc 3 1282 0
 3170 0082 BB69     	 ldr r3,[r7,#24]
 3171 0084 93F87030 	 ldrb r3,[r3,#112]
 3172 0088 03F01F03 	 and r3,r3,#31
 3173 008c 052B     	 cmp r3,#5
 3174 008e 06D0     	 beq .L163
1283:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
1284:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           SDMMC_BLOCK_SPI_lDummyRead(spi_handle, 2U); /* Dummy Bytes */
 3175              	 .loc 3 1284 0
 3176 0090 B869     	 ldr r0,[r7,#24]
 3177 0092 0221     	 movs r1,#2
 3178 0094 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
1285:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1286:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3179              	 .loc 3 1286 0
 3180 0098 0123     	 movs r3,#1
 3181 009a FB77     	 strb r3,[r7,#31]
1272:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 3182              	 .loc 3 1272 0
 3183 009c 02E0     	 b .L164
 3184              	.L163:
 3185 009e 01E0     	 b .L164
 3186              	.L162:
1287:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
1288:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
1289:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1290:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1291:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
1292:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1293:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3187              	 .loc 3 1293 0
 3188 00a0 0123     	 movs r3,#1
 3189 00a2 FB77     	 strb r3,[r7,#31]
 3190              	.L164:
1294:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1295:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1296:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 3191              	 .loc 3 1296 0
 3192 00a4 FB7F     	 ldrb r3,[r7,#31]
1297:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 3193              	 .loc 3 1297 0
 3194 00a6 1846     	 mov r0,r3
 3195 00a8 2037     	 adds r7,r7,#32
 3196              	.LCFI143:
 3197              	 .cfi_def_cfa_offset 8
 3198 00aa BD46     	 mov sp,r7
 3199              	.LCFI144:
 3200              	 .cfi_def_cfa_register 13
 3201              	 
 3202 00ac 80BD     	 pop {r7,pc}
 3203              	 .cfi_endproc
 3204              	.LFE350:
 3206              	 .section .text.SDMMC_BLOCK_SPI_lReadMultipleBlocks,"ax",%progbits
 3207              	 .align 2
 3208              	 .thumb
 3209              	 .thumb_func
 3211              	SDMMC_BLOCK_SPI_lReadMultipleBlocks:
 3212              	.LFB351:
1298:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1299:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lReadMultipleBlocks(SDMMC_BLOCK_t *const obj,
1300:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                      uint8_t *read_buf,
1301:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                      const uint32_t read_address,
1302:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                      const uint32_t sector_count)
1303:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 3213              	 .loc 3 1303 0
 3214              	 .cfi_startproc
 3215              	 
 3216              	 
 3217 0000 80B5     	 push {r7,lr}
 3218              	.LCFI145:
 3219              	 .cfi_def_cfa_offset 8
 3220              	 .cfi_offset 7,-8
 3221              	 .cfi_offset 14,-4
 3222 0002 8AB0     	 sub sp,sp,#40
 3223              	.LCFI146:
 3224              	 .cfi_def_cfa_offset 48
 3225 0004 00AF     	 add r7,sp,#0
 3226              	.LCFI147:
 3227              	 .cfi_def_cfa_register 7
 3228 0006 F860     	 str r0,[r7,#12]
 3229 0008 B960     	 str r1,[r7,#8]
 3230 000a 7A60     	 str r2,[r7,#4]
 3231 000c 3B60     	 str r3,[r7]
1304:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1305:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_t* spi_handle;
1306:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t card_sector_count;
1307:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t count;
1308:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1309:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t tmp_blk_cnt;
1310:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1311:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_GetSectorCount(obj, &card_sector_count);
 3232              	 .loc 3 1311 0
 3233 000e 07F11403 	 add r3,r7,#20
 3234 0012 F868     	 ldr r0,[r7,#12]
 3235 0014 1946     	 mov r1,r3
 3236 0016 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_GetSectorCount
 3237 001a 0346     	 mov r3,r0
 3238 001c 87F82730 	 strb r3,[r7,#39]
1312:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1313:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3239              	 .loc 3 1313 0
 3240 0020 97F82730 	 ldrb r3,[r7,#39]
 3241 0024 002B     	 cmp r3,#0
 3242 0026 40F0B480 	 bne .L167
1314:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1315:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD18, read_address);
 3243              	 .loc 3 1315 0
 3244 002a F868     	 ldr r0,[r7,#12]
 3245 002c 5221     	 movs r1,#82
 3246 002e 7A68     	 ldr r2,[r7,#4]
 3247 0030 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 3248 0034 0346     	 mov r3,r0
 3249 0036 87F82730 	 strb r3,[r7,#39]
1316:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1317:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response == 0U))
 3250              	 .loc 3 1317 0
 3251 003a 97F82730 	 ldrb r3,[r7,#39]
 3252 003e 002B     	 cmp r3,#0
 3253 0040 40F0A480 	 bne .L168
 3254              	 .loc 3 1317 0 is_stmt 0 discriminator 1
 3255 0044 FB68     	 ldr r3,[r7,#12]
 3256 0046 1B68     	 ldr r3,[r3]
 3257 0048 93F87030 	 ldrb r3,[r3,#112]
 3258 004c 002B     	 cmp r3,#0
 3259 004e 40F09D80 	 bne .L168
1318:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1319:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       spi_handle = obj->sdmmc_spi;
 3260              	 .loc 3 1319 0 is_stmt 1
 3261 0052 FB68     	 ldr r3,[r7,#12]
 3262 0054 1B68     	 ldr r3,[r3]
 3263 0056 BB61     	 str r3,[r7,#24]
1320:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       tmp_blk_cnt = sector_count;
 3264              	 .loc 3 1320 0
 3265 0058 3B68     	 ldr r3,[r7]
 3266 005a FB61     	 str r3,[r7,#28]
 3267              	.L174:
1321:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1322:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       do
1323:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
1324:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         count = 0xFFFEU;
 3268              	 .loc 3 1324 0
 3269 005c 4FF6FE73 	 movw r3,#65534
 3270 0060 3B62     	 str r3,[r7,#32]
 3271              	.L170:
1325:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         do
1326:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
1327:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           status = SDMMC_BLOCK_SPI_lReadData(spi_handle, &spi_handle->cmd_response, 1U);
 3272              	 .loc 3 1327 0 discriminator 2
 3273 0062 BB69     	 ldr r3,[r7,#24]
 3274 0064 7033     	 adds r3,r3,#112
 3275 0066 B869     	 ldr r0,[r7,#24]
 3276 0068 1946     	 mov r1,r3
 3277 006a 0122     	 movs r2,#1
 3278 006c FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 3279 0070 0346     	 mov r3,r0
 3280 0072 87F82730 	 strb r3,[r7,#39]
1328:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           count--;
 3281              	 .loc 3 1328 0 discriminator 2
 3282 0076 3B6A     	 ldr r3,[r7,#32]
 3283 0078 013B     	 subs r3,r3,#1
 3284 007a 3B62     	 str r3,[r7,#32]
1329:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         } while ((spi_handle->cmd_response != SDMMC_BLOCK_SPI_START_BLOCK_TOKEN) && (count > 0U));
 3285              	 .loc 3 1329 0 discriminator 2
 3286 007c BB69     	 ldr r3,[r7,#24]
 3287 007e 93F87030 	 ldrb r3,[r3,#112]
 3288 0082 FE2B     	 cmp r3,#254
 3289 0084 02D0     	 beq .L169
 3290              	 .loc 3 1329 0 is_stmt 0 discriminator 1
 3291 0086 3B6A     	 ldr r3,[r7,#32]
 3292 0088 002B     	 cmp r3,#0
 3293 008a EAD1     	 bne .L170
 3294              	.L169:
1330:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1331:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (spi_handle->cmd_response == SDMMC_BLOCK
 3295              	 .loc 3 1331 0 is_stmt 1
 3296 008c 97F82730 	 ldrb r3,[r7,#39]
 3297 0090 002B     	 cmp r3,#0
 3298 0092 1FD1     	 bne .L171
 3299              	 .loc 3 1331 0 is_stmt 0 discriminator 1
 3300 0094 BB69     	 ldr r3,[r7,#24]
 3301 0096 93F87030 	 ldrb r3,[r3,#112]
 3302 009a FE2B     	 cmp r3,#254
 3303 009c 1AD1     	 bne .L171
1332:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
1333:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           status = SDMMC_BLOCK_SPI_lReadData(spi_handle,
1334:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                              read_buf+(SDMMC_BLOCK_SPI_BYTES_PER_SECTOR * (sector_c
 3304              	 .loc 3 1334 0 is_stmt 1
 3305 009e 3A68     	 ldr r2,[r7]
 3306 00a0 FB69     	 ldr r3,[r7,#28]
 3307 00a2 D31A     	 subs r3,r2,r3
 3308 00a4 5B02     	 lsls r3,r3,#9
1333:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                              read_buf+(SDMMC_BLOCK_SPI_BYTES_PER_SECTOR * (sector_c
 3309              	 .loc 3 1333 0
 3310 00a6 BA68     	 ldr r2,[r7,#8]
 3311 00a8 1344     	 add r3,r3,r2
 3312 00aa B869     	 ldr r0,[r7,#24]
 3313 00ac 1946     	 mov r1,r3
 3314 00ae 4FF40072 	 mov r2,#512
 3315 00b2 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 3316 00b6 0346     	 mov r3,r0
 3317 00b8 87F82730 	 strb r3,[r7,#39]
1335:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                              SDMMC_BLOCK_SPI_BYTES_PER_SECTOR);
1336:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1337:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           SDMMC_BLOCK_SPI_lDummyRead(spi_handle, SDMMC_BLOCK_SPI_CRC_BYTES);
 3318              	 .loc 3 1337 0
 3319 00bc B869     	 ldr r0,[r7,#24]
 3320 00be 0221     	 movs r1,#2
 3321 00c0 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
1338:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1339:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           /* Send Extra 8 Cycles */
1340:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           SDMMC_BLOCK_SPI_lSend_Clocktrain(spi_handle, 1U);
 3322              	 .loc 3 1340 0
 3323 00c4 B869     	 ldr r0,[r7,#24]
 3324 00c6 0121     	 movs r1,#1
 3325 00c8 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSend_Clocktrain
1341:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1342:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           /* Decrement Number of blocks Variable */
1343:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           tmp_blk_cnt--;
 3326              	 .loc 3 1343 0
 3327 00cc FB69     	 ldr r3,[r7,#28]
 3328 00ce 013B     	 subs r3,r3,#1
 3329 00d0 FB61     	 str r3,[r7,#28]
 3330 00d2 06E0     	 b .L172
 3331              	.L171:
1344:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
1345:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         else
1346:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
1347:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           SDMMC_BLOCK_SPI_lDummyRead(spi_handle, 1U);
 3332              	 .loc 3 1347 0
 3333 00d4 B869     	 ldr r0,[r7,#24]
 3334 00d6 0121     	 movs r1,#1
 3335 00d8 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
1348:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1349:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3336              	 .loc 3 1349 0
 3337 00dc 0123     	 movs r3,#1
 3338 00de 87F82730 	 strb r3,[r7,#39]
 3339              	.L172:
1350:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
1351:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       } while ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (tmp_blk_cnt > 0U));
 3340              	 .loc 3 1351 0
 3341 00e2 97F82730 	 ldrb r3,[r7,#39]
 3342 00e6 002B     	 cmp r3,#0
 3343 00e8 02D1     	 bne .L173
 3344              	 .loc 3 1351 0 is_stmt 0 discriminator 1
 3345 00ea FB69     	 ldr r3,[r7,#28]
 3346 00ec 002B     	 cmp r3,#0
 3347 00ee B5D1     	 bne .L174
 3348              	.L173:
1352:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1353:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if (tmp_blk_cnt == 0U)
 3349              	 .loc 3 1353 0 is_stmt 1
 3350 00f0 FB69     	 ldr r3,[r7,#28]
 3351 00f2 002B     	 cmp r3,#0
 3352 00f4 45D1     	 bne .L175
1354:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
1355:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD12, SDMMC_BLOCK_ARGUMENT0);
 3353              	 .loc 3 1355 0
 3354 00f6 F868     	 ldr r0,[r7,#12]
 3355 00f8 4C21     	 movs r1,#76
 3356 00fa 0022     	 movs r2,#0
 3357 00fc FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 3358 0100 0346     	 mov r3,r0
 3359 0102 87F82730 	 strb r3,[r7,#39]
1356:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1357:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         count = 255U;
 3360              	 .loc 3 1357 0
 3361 0106 FF23     	 movs r3,#255
 3362 0108 3B62     	 str r3,[r7,#32]
1358:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         while ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (spi_handle->cmd_response != 0U) && (
 3363              	 .loc 3 1358 0
 3364 010a 22E0     	 b .L176
 3365              	.L181:
1359:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
1360:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           if (card_sector_count == (read_address + sector_count))
 3366              	 .loc 3 1360 0
 3367 010c 7A68     	 ldr r2,[r7,#4]
 3368 010e 3B68     	 ldr r3,[r7]
 3369 0110 1A44     	 add r2,r2,r3
 3370 0112 7B69     	 ldr r3,[r7,#20]
 3371 0114 9A42     	 cmp r2,r3
 3372 0116 08D1     	 bne .L177
1361:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           {
1362:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             /*
1363:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****              * When the last block of user area is read using CMD18, the host should ignore OUT_OF_
1364:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****              * That may occur even the sequence is correct.
1365:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****              */
1366:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             spi_handle->cmd_response &= 0xBFU;
 3373              	 .loc 3 1366 0
 3374 0118 BB69     	 ldr r3,[r7,#24]
 3375 011a 93F87030 	 ldrb r3,[r3,#112]
 3376 011e 23F04003 	 bic r3,r3,#64
 3377 0122 DAB2     	 uxtb r2,r3
 3378 0124 BB69     	 ldr r3,[r7,#24]
 3379 0126 83F87020 	 strb r2,[r3,#112]
 3380              	.L177:
1367:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           }
1368:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           if (spi_handle->cmd_response != 0U)
 3381              	 .loc 3 1368 0
 3382 012a BB69     	 ldr r3,[r7,#24]
 3383 012c 93F87030 	 ldrb r3,[r3,#112]
 3384 0130 002B     	 cmp r3,#0
 3385 0132 0AD0     	 beq .L178
1369:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           {
1370:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             status = SDMMC_BLOCK_SPI_lReadData(spi_handle, &spi_handle->cmd_response, 1U);
 3386              	 .loc 3 1370 0
 3387 0134 BB69     	 ldr r3,[r7,#24]
 3388 0136 7033     	 adds r3,r3,#112
 3389 0138 B869     	 ldr r0,[r7,#24]
 3390 013a 1946     	 mov r1,r3
 3391 013c 0122     	 movs r2,#1
 3392 013e FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 3393 0142 0346     	 mov r3,r0
 3394 0144 87F82730 	 strb r3,[r7,#39]
 3395 0148 00E0     	 b .L183
 3396              	.L178:
1371:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           }
1372:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           else
1373:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           {
1374:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             break;
 3397              	 .loc 3 1374 0
 3398 014a 0EE0     	 b .L180
 3399              	.L183:
1375:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           }
1376:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1377:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           count--;
 3400              	 .loc 3 1377 0
 3401 014c 3B6A     	 ldr r3,[r7,#32]
 3402 014e 013B     	 subs r3,r3,#1
 3403 0150 3B62     	 str r3,[r7,#32]
 3404              	.L176:
1358:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 3405              	 .loc 3 1358 0
 3406 0152 97F82730 	 ldrb r3,[r7,#39]
 3407 0156 002B     	 cmp r3,#0
 3408 0158 07D1     	 bne .L180
1358:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 3409              	 .loc 3 1358 0 is_stmt 0 discriminator 1
 3410 015a BB69     	 ldr r3,[r7,#24]
 3411 015c 93F87030 	 ldrb r3,[r3,#112]
 3412 0160 002B     	 cmp r3,#0
 3413 0162 02D0     	 beq .L180
1358:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
 3414              	 .loc 3 1358 0 discriminator 2
 3415 0164 3B6A     	 ldr r3,[r7,#32]
 3416 0166 002B     	 cmp r3,#0
 3417 0168 D0D1     	 bne .L181
 3418              	.L180:
1378:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
1379:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1380:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3419              	 .loc 3 1380 0 is_stmt 1
 3420 016a 97F82730 	 ldrb r3,[r7,#39]
 3421 016e 002B     	 cmp r3,#0
 3422 0170 07D1     	 bne .L175
1381:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
1382:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           if (spi_handle->cmd_response != 0x0U)
 3423              	 .loc 3 1382 0
 3424 0172 BB69     	 ldr r3,[r7,#24]
 3425 0174 93F87030 	 ldrb r3,[r3,#112]
 3426 0178 002B     	 cmp r3,#0
 3427 017a 02D0     	 beq .L175
1383:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           {
1384:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3428              	 .loc 3 1384 0
 3429 017c 0123     	 movs r3,#1
 3430 017e 87F82730 	 strb r3,[r7,#39]
 3431              	.L175:
1385:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           }
1386:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
1387:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
1388:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       SDMMC_BLOCK_SPI_lDummyRead(spi_handle, 2U); /* Dummy Read */
 3432              	 .loc 3 1388 0
 3433 0182 B869     	 ldr r0,[r7,#24]
 3434 0184 0221     	 movs r1,#2
 3435 0186 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
 3436 018a 02E0     	 b .L167
 3437              	.L168:
1389:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1390:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
1391:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1392:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3438              	 .loc 3 1392 0
 3439 018c 0123     	 movs r3,#1
 3440 018e 87F82730 	 strb r3,[r7,#39]
 3441              	.L167:
1393:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1394:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1395:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1396:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 3442              	 .loc 3 1396 0
 3443 0192 97F82730 	 ldrb r3,[r7,#39]
1397:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 3444              	 .loc 3 1397 0
 3445 0196 1846     	 mov r0,r3
 3446 0198 2837     	 adds r7,r7,#40
 3447              	.LCFI148:
 3448              	 .cfi_def_cfa_offset 8
 3449 019a BD46     	 mov sp,r7
 3450              	.LCFI149:
 3451              	 .cfi_def_cfa_register 13
 3452              	 
 3453 019c 80BD     	 pop {r7,pc}
 3454              	 .cfi_endproc
 3455              	.LFE351:
 3457 019e 00BF     	 .section .text.SDMMC_BLOCK_SPI_lReadSingleBlock,"ax",%progbits
 3458              	 .align 2
 3459              	 .thumb
 3460              	 .thumb_func
 3462              	SDMMC_BLOCK_SPI_lReadSingleBlock:
 3463              	.LFB352:
1398:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1399:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lReadSingleBlock(SDMMC_BLOCK_t *const obj,
1400:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                   uint8_t *read_buf,
1401:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                   const uint32_t read_address)
1402:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 3464              	 .loc 3 1402 0
 3465              	 .cfi_startproc
 3466              	 
 3467              	 
 3468 0000 80B5     	 push {r7,lr}
 3469              	.LCFI150:
 3470              	 .cfi_def_cfa_offset 8
 3471              	 .cfi_offset 7,-8
 3472              	 .cfi_offset 14,-4
 3473 0002 88B0     	 sub sp,sp,#32
 3474              	.LCFI151:
 3475              	 .cfi_def_cfa_offset 40
 3476 0004 00AF     	 add r7,sp,#0
 3477              	.LCFI152:
 3478              	 .cfi_def_cfa_register 7
 3479 0006 F860     	 str r0,[r7,#12]
 3480 0008 B960     	 str r1,[r7,#8]
 3481 000a 7A60     	 str r2,[r7,#4]
1403:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1404:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_t* spi_handle;
1405:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t count;
1406:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1407:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD17, read_address);
 3482              	 .loc 3 1407 0
 3483 000c F868     	 ldr r0,[r7,#12]
 3484 000e 5121     	 movs r1,#81
 3485 0010 7A68     	 ldr r2,[r7,#4]
 3486 0012 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 3487 0016 0346     	 mov r3,r0
 3488 0018 FB77     	 strb r3,[r7,#31]
1408:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1409:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response == 0U))
 3489              	 .loc 3 1409 0
 3490 001a FB7F     	 ldrb r3,[r7,#31]
 3491 001c 002B     	 cmp r3,#0
 3492 001e 3FD1     	 bne .L185
 3493              	 .loc 3 1409 0 is_stmt 0 discriminator 1
 3494 0020 FB68     	 ldr r3,[r7,#12]
 3495 0022 1B68     	 ldr r3,[r3]
 3496 0024 93F87030 	 ldrb r3,[r3,#112]
 3497 0028 002B     	 cmp r3,#0
 3498 002a 39D1     	 bne .L185
1410:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1411:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     spi_handle = obj->sdmmc_spi;
 3499              	 .loc 3 1411 0 is_stmt 1
 3500 002c FB68     	 ldr r3,[r7,#12]
 3501 002e 1B68     	 ldr r3,[r3]
 3502 0030 7B61     	 str r3,[r7,#20]
1412:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     count = 0xFFFEU;
 3503              	 .loc 3 1412 0
 3504 0032 4FF6FE73 	 movw r3,#65534
 3505 0036 BB61     	 str r3,[r7,#24]
 3506              	.L187:
1413:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     do
1414:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1415:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lReadData(spi_handle, &spi_handle->cmd_response, 1U);
 3507              	 .loc 3 1415 0 discriminator 2
 3508 0038 7B69     	 ldr r3,[r7,#20]
 3509 003a 7033     	 adds r3,r3,#112
 3510 003c 7869     	 ldr r0,[r7,#20]
 3511 003e 1946     	 mov r1,r3
 3512 0040 0122     	 movs r2,#1
 3513 0042 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 3514 0046 0346     	 mov r3,r0
 3515 0048 FB77     	 strb r3,[r7,#31]
1416:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       count--;
 3516              	 .loc 3 1416 0 discriminator 2
 3517 004a BB69     	 ldr r3,[r7,#24]
 3518 004c 013B     	 subs r3,r3,#1
 3519 004e BB61     	 str r3,[r7,#24]
1417:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     } while ((spi_handle->cmd_response != SDMMC_BLOCK_SPI_START_BLOCK_TOKEN) && (count > 0U));
 3520              	 .loc 3 1417 0 discriminator 2
 3521 0050 7B69     	 ldr r3,[r7,#20]
 3522 0052 93F87030 	 ldrb r3,[r3,#112]
 3523 0056 FE2B     	 cmp r3,#254
 3524 0058 02D0     	 beq .L186
 3525              	 .loc 3 1417 0 is_stmt 0 discriminator 1
 3526 005a BB69     	 ldr r3,[r7,#24]
 3527 005c 002B     	 cmp r3,#0
 3528 005e EBD1     	 bne .L187
 3529              	.L186:
1418:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1419:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (spi_handle->cmd_response == SDMMC_BLOCK_SPI
 3530              	 .loc 3 1419 0 is_stmt 1
 3531 0060 FB7F     	 ldrb r3,[r7,#31]
 3532 0062 002B     	 cmp r3,#0
 3533 0064 15D1     	 bne .L188
 3534              	 .loc 3 1419 0 is_stmt 0 discriminator 1
 3535 0066 7B69     	 ldr r3,[r7,#20]
 3536 0068 93F87030 	 ldrb r3,[r3,#112]
 3537 006c FE2B     	 cmp r3,#254
 3538 006e 10D1     	 bne .L188
1420:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1421:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lReadData(spi_handle, read_buf, SDMMC_BLOCK_SPI_BYTES_PER_SECTOR);
 3539              	 .loc 3 1421 0 is_stmt 1
 3540 0070 7869     	 ldr r0,[r7,#20]
 3541 0072 B968     	 ldr r1,[r7,#8]
 3542 0074 4FF40072 	 mov r2,#512
 3543 0078 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 3544 007c 0346     	 mov r3,r0
 3545 007e FB77     	 strb r3,[r7,#31]
1422:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1423:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       SDMMC_BLOCK_SPI_lDummyRead(spi_handle, SDMMC_BLOCK_SPI_CRC_BYTES);
 3546              	 .loc 3 1423 0
 3547 0080 7869     	 ldr r0,[r7,#20]
 3548 0082 0221     	 movs r1,#2
 3549 0084 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
1424:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1425:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       /* Send Extra 8 Cycles */
1426:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       SDMMC_BLOCK_SPI_lSend_Clocktrain(spi_handle, 1U);
 3550              	 .loc 3 1426 0
 3551 0088 7869     	 ldr r0,[r7,#20]
 3552 008a 0121     	 movs r1,#1
 3553 008c FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSend_Clocktrain
1419:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 3554              	 .loc 3 1419 0
 3555 0090 08E0     	 b .L190
 3556              	.L188:
1427:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1428:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
1429:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1430:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       SDMMC_BLOCK_SPI_lDummyRead(spi_handle, 1U);
 3557              	 .loc 3 1430 0
 3558 0092 7869     	 ldr r0,[r7,#20]
 3559 0094 0121     	 movs r1,#1
 3560 0096 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lDummyRead
1431:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1432:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3561              	 .loc 3 1432 0
 3562 009a 0123     	 movs r3,#1
 3563 009c FB77     	 strb r3,[r7,#31]
1419:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 3564              	 .loc 3 1419 0
 3565 009e 01E0     	 b .L190
 3566              	.L185:
1433:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1434:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1435:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
1436:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1437:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3567              	 .loc 3 1437 0
 3568 00a0 0123     	 movs r3,#1
 3569 00a2 FB77     	 strb r3,[r7,#31]
 3570              	.L190:
1438:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1439:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1440:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 3571              	 .loc 3 1440 0
 3572 00a4 FB7F     	 ldrb r3,[r7,#31]
1441:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 3573              	 .loc 3 1441 0
 3574 00a6 1846     	 mov r0,r3
 3575 00a8 2037     	 adds r7,r7,#32
 3576              	.LCFI153:
 3577              	 .cfi_def_cfa_offset 8
 3578 00aa BD46     	 mov sp,r7
 3579              	.LCFI154:
 3580              	 .cfi_def_cfa_register 13
 3581              	 
 3582 00ac 80BD     	 pop {r7,pc}
 3583              	 .cfi_endproc
 3584              	.LFE352:
 3586 00ae 00BF     	 .section .text.SDMMC_BLOCK_SPI_lErase,"ax",%progbits
 3587              	 .align 2
 3588              	 .thumb
 3589              	 .thumb_func
 3591              	SDMMC_BLOCK_SPI_lErase:
 3592              	.LFB353:
1442:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1443:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /*
1444:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   * The function performs the actual erase operation.
1445:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** */
1446:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lErase(const SDMMC_BLOCK_t *const obj,
1447:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                         const uint32_t start_address,
1448:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                         const uint32_t end_address,
1449:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                         const uint32_t timeout_val)
1450:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 3593              	 .loc 3 1450 0
 3594              	 .cfi_startproc
 3595              	 
 3596              	 
 3597 0000 80B5     	 push {r7,lr}
 3598              	.LCFI155:
 3599              	 .cfi_def_cfa_offset 8
 3600              	 .cfi_offset 7,-8
 3601              	 .cfi_offset 14,-4
 3602 0002 88B0     	 sub sp,sp,#32
 3603              	.LCFI156:
 3604              	 .cfi_def_cfa_offset 40
 3605 0004 00AF     	 add r7,sp,#0
 3606              	.LCFI157:
 3607              	 .cfi_def_cfa_register 7
 3608 0006 F860     	 str r0,[r7,#12]
 3609 0008 B960     	 str r1,[r7,#8]
 3610 000a 7A60     	 str r2,[r7,#4]
 3611 000c 3B60     	 str r3,[r7]
1451:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1452:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t tmp_start_addr = start_address;
 3612              	 .loc 3 1452 0
 3613 000e BB68     	 ldr r3,[r7,#8]
 3614 0010 BB61     	 str r3,[r7,#24]
1453:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t tmp_end_addr = end_address;
 3615              	 .loc 3 1453 0
 3616 0012 7B68     	 ldr r3,[r7,#4]
 3617 0014 7B61     	 str r3,[r7,#20]
1454:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_t * spi_handle;
1455:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1456:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   spi_handle = obj->sdmmc_spi;
 3618              	 .loc 3 1456 0
 3619 0016 FB68     	 ldr r3,[r7,#12]
 3620 0018 1B68     	 ldr r3,[r3]
 3621 001a 3B61     	 str r3,[r7,#16]
1457:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1458:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((obj->card_type & (uint8_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING) == 0U)
 3622              	 .loc 3 1458 0
 3623 001c FB68     	 ldr r3,[r7,#12]
 3624 001e 5B7A     	 ldrb r3,[r3,#9]
 3625 0020 03F00803 	 and r3,r3,#8
 3626 0024 002B     	 cmp r3,#0
 3627 0026 05D1     	 bne .L193
1459:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1460:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     tmp_start_addr *= SDMMC_BLOCK_SPI_BYTES_PER_SECTOR;
 3628              	 .loc 3 1460 0
 3629 0028 BB69     	 ldr r3,[r7,#24]
 3630 002a 5B02     	 lsls r3,r3,#9
 3631 002c BB61     	 str r3,[r7,#24]
1461:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     tmp_end_addr *=  SDMMC_BLOCK_SPI_BYTES_PER_SECTOR;
 3632              	 .loc 3 1461 0
 3633 002e 7B69     	 ldr r3,[r7,#20]
 3634 0030 5B02     	 lsls r3,r3,#9
 3635 0032 7B61     	 str r3,[r7,#20]
 3636              	.L193:
1462:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1463:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* SD Erase Start Command */
1464:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD32, tmp_start_addr);
 3637              	 .loc 3 1464 0
 3638 0034 F868     	 ldr r0,[r7,#12]
 3639 0036 6021     	 movs r1,#96
 3640 0038 BA69     	 ldr r2,[r7,#24]
 3641 003a FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 3642 003e 0346     	 mov r3,r0
 3643 0040 FB77     	 strb r3,[r7,#31]
1465:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1466:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (spi_handle->cmd_response == 0U))
 3644              	 .loc 3 1466 0
 3645 0042 FB7F     	 ldrb r3,[r7,#31]
 3646 0044 002B     	 cmp r3,#0
 3647 0046 39D1     	 bne .L194
 3648              	 .loc 3 1466 0 is_stmt 0 discriminator 1
 3649 0048 3B69     	 ldr r3,[r7,#16]
 3650 004a 93F87030 	 ldrb r3,[r3,#112]
 3651 004e 002B     	 cmp r3,#0
 3652 0050 34D1     	 bne .L194
1467:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1468:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* SD Erase End Command */
1469:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD33, tmp_end_addr);
 3653              	 .loc 3 1469 0 is_stmt 1
 3654 0052 F868     	 ldr r0,[r7,#12]
 3655 0054 6121     	 movs r1,#97
 3656 0056 7A69     	 ldr r2,[r7,#20]
 3657 0058 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 3658 005c 0346     	 mov r3,r0
 3659 005e FB77     	 strb r3,[r7,#31]
1470:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1471:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (spi_handle->cmd_response == 0U))
 3660              	 .loc 3 1471 0
 3661 0060 FB7F     	 ldrb r3,[r7,#31]
 3662 0062 002B     	 cmp r3,#0
 3663 0064 26D1     	 bne .L195
 3664              	 .loc 3 1471 0 is_stmt 0 discriminator 1
 3665 0066 3B69     	 ldr r3,[r7,#16]
 3666 0068 93F87030 	 ldrb r3,[r3,#112]
 3667 006c 002B     	 cmp r3,#0
 3668 006e 21D1     	 bne .L195
1472:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1473:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD38, tmp_start_addr);
 3669              	 .loc 3 1473 0 is_stmt 1
 3670 0070 F868     	 ldr r0,[r7,#12]
 3671 0072 6621     	 movs r1,#102
 3672 0074 BA69     	 ldr r2,[r7,#24]
 3673 0076 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 3674 007a 0346     	 mov r3,r0
 3675 007c FB77     	 strb r3,[r7,#31]
1474:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1475:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (spi_handle->cmd_response == 0U))
 3676              	 .loc 3 1475 0
 3677 007e FB7F     	 ldrb r3,[r7,#31]
 3678 0080 002B     	 cmp r3,#0
 3679 0082 14D1     	 bne .L196
 3680              	 .loc 3 1475 0 is_stmt 0 discriminator 1
 3681 0084 3B69     	 ldr r3,[r7,#16]
 3682 0086 93F87030 	 ldrb r3,[r3,#112]
 3683 008a 002B     	 cmp r3,#0
 3684 008c 0FD1     	 bne .L196
1476:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
1477:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         /*
1478:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          * Card will respond with the DATA OUT line pulled low if the card is still busy
1479:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          * erasing. Continue checking DATA OUT line until line is released high.
1480:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****          */
1481:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         /* Send Extra 8 Cycles */
1482:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         SDMMC_BLOCK_SPI_lSend_Clocktrain(spi_handle, 1U);
 3685              	 .loc 3 1482 0 is_stmt 1
 3686 008e 3869     	 ldr r0,[r7,#16]
 3687 0090 0121     	 movs r1,#1
 3688 0092 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSend_Clocktrain
1483:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1484:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         status = (SDMMC_BLOCK_MODE_STATUS_t)((uint32_t)status |
1485:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                              (uint32_t)SDMMC_BLOCK_SPI_lEraseTimeOut(obj->sdmmc_spi
 3689              	 .loc 3 1485 0
 3690 0096 FB68     	 ldr r3,[r7,#12]
 3691 0098 1B68     	 ldr r3,[r3]
 3692 009a 1846     	 mov r0,r3
 3693 009c 3968     	 ldr r1,[r7]
 3694 009e FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lEraseTimeOut
 3695 00a2 0346     	 mov r3,r0
 3696 00a4 1A46     	 mov r2,r3
1484:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                              (uint32_t)SDMMC_BLOCK_SPI_lEraseTimeOut(obj->sdmmc_spi
 3697              	 .loc 3 1484 0
 3698 00a6 FB7F     	 ldrb r3,[r7,#31]
 3699 00a8 1343     	 orrs r3,r3,r2
 3700 00aa FB77     	 strb r3,[r7,#31]
1475:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 3701              	 .loc 3 1475 0
 3702 00ac 05E0     	 b .L198
 3703              	.L196:
1486:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
1487:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       else
1488:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
1489:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3704              	 .loc 3 1489 0
 3705 00ae 0123     	 movs r3,#1
 3706 00b0 FB77     	 strb r3,[r7,#31]
1475:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
 3707              	 .loc 3 1475 0
 3708 00b2 02E0     	 b .L198
 3709              	.L195:
1490:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       }
1491:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1492:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     else
1493:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1494:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3710              	 .loc 3 1494 0
 3711 00b4 0123     	 movs r3,#1
 3712 00b6 FB77     	 strb r3,[r7,#31]
1471:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 3713              	 .loc 3 1471 0
 3714 00b8 02E0     	 b .L199
 3715              	.L198:
1471:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
 3716              	 .loc 3 1471 0 is_stmt 0 discriminator 1
 3717 00ba 01E0     	 b .L199
 3718              	.L194:
1495:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1496:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1497:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   else
1498:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1499:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3719              	 .loc 3 1499 0 is_stmt 1
 3720 00bc 0123     	 movs r3,#1
 3721 00be FB77     	 strb r3,[r7,#31]
 3722              	.L199:
1500:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1501:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1502:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 3723              	 .loc 3 1502 0
 3724 00c0 FB7F     	 ldrb r3,[r7,#31]
1503:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 3725              	 .loc 3 1503 0
 3726 00c2 1846     	 mov r0,r3
 3727 00c4 2037     	 adds r7,r7,#32
 3728              	.LCFI158:
 3729              	 .cfi_def_cfa_offset 8
 3730 00c6 BD46     	 mov sp,r7
 3731              	.LCFI159:
 3732              	 .cfi_def_cfa_register 13
 3733              	 
 3734 00c8 80BD     	 pop {r7,pc}
 3735              	 .cfi_endproc
 3736              	.LFE353:
 3738 00ca 00BF     	 .section .text.SDMMC_BLOCK_SPI_lReadData,"ax",%progbits
 3739              	 .align 2
 3740              	 .thumb
 3741              	 .thumb_func
 3743              	SDMMC_BLOCK_SPI_lReadData:
 3744              	.LFB354:
1504:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1505:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /*
1506:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   * This function reads for the response received for the command issued.
1507:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** */
1508:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lReadData(SDMMC_BLOCK_SPI_t *const obj,
1509:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                            uint8_t *response_data,
1510:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                            const uint32_t num_of_bytes)
1511:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 3745              	 .loc 3 1511 0
 3746              	 .cfi_startproc
 3747              	 
 3748              	 
 3749 0000 80B5     	 push {r7,lr}
 3750              	.LCFI160:
 3751              	 .cfi_def_cfa_offset 8
 3752              	 .cfi_offset 7,-8
 3753              	 .cfi_offset 14,-4
 3754 0002 86B0     	 sub sp,sp,#24
 3755              	.LCFI161:
 3756              	 .cfi_def_cfa_offset 32
 3757 0004 00AF     	 add r7,sp,#0
 3758              	.LCFI162:
 3759              	 .cfi_def_cfa_register 7
 3760 0006 F860     	 str r0,[r7,#12]
 3761 0008 B960     	 str r1,[r7,#8]
 3762 000a 7A60     	 str r2,[r7,#4]
1512:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 3763              	 .loc 3 1512 0
 3764 000c 0023     	 movs r3,#0
 3765 000e FB75     	 strb r3,[r7,#23]
1513:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SPI_MASTER_STATUS_t spi_status;
1514:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1515:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   spi_status = SPI_MASTER_Receive(obj->spi_master_handle, response_data, num_of_bytes);
 3766              	 .loc 3 1515 0
 3767 0010 FB68     	 ldr r3,[r7,#12]
 3768 0012 1B68     	 ldr r3,[r3]
 3769 0014 1846     	 mov r0,r3
 3770 0016 B968     	 ldr r1,[r7,#8]
 3771 0018 7A68     	 ldr r2,[r7,#4]
 3772 001a FFF7FEFF 	 bl SPI_MASTER_Receive
 3773 001e 0346     	 mov r3,r0
 3774 0020 BB75     	 strb r3,[r7,#22]
1516:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   while (obj->spi_master_handle->runtime->tx_busy == true)
 3775              	 .loc 3 1516 0
 3776 0022 00BF     	 nop
 3777              	.L202:
 3778              	 .loc 3 1516 0 is_stmt 0 discriminator 1
 3779 0024 FB68     	 ldr r3,[r7,#12]
 3780 0026 1B68     	 ldr r3,[r3]
 3781 0028 9B68     	 ldr r3,[r3,#8]
 3782 002a 93F82030 	 ldrb r3,[r3,#32]
 3783 002e DBB2     	 uxtb r3,r3
 3784 0030 002B     	 cmp r3,#0
 3785 0032 F7D1     	 bne .L202
1517:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   { }
1518:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   while (obj->spi_master_handle->runtime->rx_busy == true)
 3786              	 .loc 3 1518 0 is_stmt 1
 3787 0034 00BF     	 nop
 3788              	.L203:
 3789              	 .loc 3 1518 0 is_stmt 0 discriminator 1
 3790 0036 FB68     	 ldr r3,[r7,#12]
 3791 0038 1B68     	 ldr r3,[r3]
 3792 003a 9B68     	 ldr r3,[r3,#8]
 3793 003c DB7F     	 ldrb r3,[r3,#31]
 3794 003e DBB2     	 uxtb r3,r3
 3795 0040 002B     	 cmp r3,#0
 3796 0042 F8D1     	 bne .L203
1519:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   { }
1520:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1521:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (spi_status != SPI_MASTER_STATUS_SUCCESS)
 3797              	 .loc 3 1521 0 is_stmt 1
 3798 0044 BB7D     	 ldrb r3,[r7,#22]
 3799 0046 002B     	 cmp r3,#0
 3800 0048 01D0     	 beq .L204
1522:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1523:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_COMMUNICATION_ERROR;
 3801              	 .loc 3 1523 0
 3802 004a 3623     	 movs r3,#54
 3803 004c FB75     	 strb r3,[r7,#23]
 3804              	.L204:
1524:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1525:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1526:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 3805              	 .loc 3 1526 0
 3806 004e FB7D     	 ldrb r3,[r7,#23]
1527:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 3807              	 .loc 3 1527 0
 3808 0050 1846     	 mov r0,r3
 3809 0052 1837     	 adds r7,r7,#24
 3810              	.LCFI163:
 3811              	 .cfi_def_cfa_offset 8
 3812 0054 BD46     	 mov sp,r7
 3813              	.LCFI164:
 3814              	 .cfi_def_cfa_register 13
 3815              	 
 3816 0056 80BD     	 pop {r7,pc}
 3817              	 .cfi_endproc
 3818              	.LFE354:
 3820              	 .section .text.SDMMC_BLOCK_SPI_lSendData,"ax",%progbits
 3821              	 .align 2
 3822              	 .thumb
 3823              	 .thumb_func
 3825              	SDMMC_BLOCK_SPI_lSendData:
 3826              	.LFB355:
1528:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1529:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lSendData(SDMMC_BLOCK_SPI_t *const obj,
1530:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                            uint8_t *transmit_data,
1531:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                            const uint32_t num_of_bytes)
1532:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 3827              	 .loc 3 1532 0
 3828              	 .cfi_startproc
 3829              	 
 3830              	 
 3831 0000 80B5     	 push {r7,lr}
 3832              	.LCFI165:
 3833              	 .cfi_def_cfa_offset 8
 3834              	 .cfi_offset 7,-8
 3835              	 .cfi_offset 14,-4
 3836 0002 86B0     	 sub sp,sp,#24
 3837              	.LCFI166:
 3838              	 .cfi_def_cfa_offset 32
 3839 0004 00AF     	 add r7,sp,#0
 3840              	.LCFI167:
 3841              	 .cfi_def_cfa_register 7
 3842 0006 F860     	 str r0,[r7,#12]
 3843 0008 B960     	 str r1,[r7,#8]
 3844 000a 7A60     	 str r2,[r7,#4]
1533:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 3845              	 .loc 3 1533 0
 3846 000c 0023     	 movs r3,#0
 3847 000e FB75     	 strb r3,[r7,#23]
1534:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SPI_MASTER_STATUS_t spi_status;
1535:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1536:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   spi_status = SPI_MASTER_Transmit(obj->spi_master_handle, transmit_data, num_of_bytes);
 3848              	 .loc 3 1536 0
 3849 0010 FB68     	 ldr r3,[r7,#12]
 3850 0012 1B68     	 ldr r3,[r3]
 3851 0014 1846     	 mov r0,r3
 3852 0016 B968     	 ldr r1,[r7,#8]
 3853 0018 7A68     	 ldr r2,[r7,#4]
 3854 001a FFF7FEFF 	 bl SPI_MASTER_Transmit
 3855 001e 0346     	 mov r3,r0
 3856 0020 BB75     	 strb r3,[r7,#22]
1537:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   while (obj->spi_master_handle->runtime->tx_busy == true)
 3857              	 .loc 3 1537 0
 3858 0022 00BF     	 nop
 3859              	.L207:
 3860              	 .loc 3 1537 0 is_stmt 0 discriminator 1
 3861 0024 FB68     	 ldr r3,[r7,#12]
 3862 0026 1B68     	 ldr r3,[r3]
 3863 0028 9B68     	 ldr r3,[r3,#8]
 3864 002a 93F82030 	 ldrb r3,[r3,#32]
 3865 002e DBB2     	 uxtb r3,r3
 3866 0030 002B     	 cmp r3,#0
 3867 0032 F7D1     	 bne .L207
1538:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   { }
1539:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1540:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (spi_status != SPI_MASTER_STATUS_SUCCESS)
 3868              	 .loc 3 1540 0 is_stmt 1
 3869 0034 BB7D     	 ldrb r3,[r7,#22]
 3870 0036 002B     	 cmp r3,#0
 3871 0038 01D0     	 beq .L208
1541:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1542:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_COMMUNICATION_ERROR;
 3872              	 .loc 3 1542 0
 3873 003a 3623     	 movs r3,#54
 3874 003c FB75     	 strb r3,[r7,#23]
 3875              	.L208:
1543:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1544:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1545:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 3876              	 .loc 3 1545 0
 3877 003e FB7D     	 ldrb r3,[r7,#23]
1546:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 3878              	 .loc 3 1546 0
 3879 0040 1846     	 mov r0,r3
 3880 0042 1837     	 adds r7,r7,#24
 3881              	.LCFI168:
 3882              	 .cfi_def_cfa_offset 8
 3883 0044 BD46     	 mov sp,r7
 3884              	.LCFI169:
 3885              	 .cfi_def_cfa_register 13
 3886              	 
 3887 0046 80BD     	 pop {r7,pc}
 3888              	 .cfi_endproc
 3889              	.LFE355:
 3891              	 .section .text.SDMMC_BLOCK_SPI_lSendCommand,"ax",%progbits
 3892              	 .align 2
 3893              	 .thumb
 3894              	 .thumb_func
 3896              	SDMMC_BLOCK_SPI_lSendCommand:
 3897              	.LFB356:
1547:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1548:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /*
1549:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  * This function issues the command.
1550:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****  */
1551:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lSendCommand(const SDMMC_BLOCK_t *const obj,
1552:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                               const uint8_t cmd,
1553:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                               const uint32_t arg)
1554:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 3898              	 .loc 3 1554 0
 3899              	 .cfi_startproc
 3900              	 
 3901              	 
 3902 0000 80B5     	 push {r7,lr}
 3903              	.LCFI170:
 3904              	 .cfi_def_cfa_offset 8
 3905              	 .cfi_offset 7,-8
 3906              	 .cfi_offset 14,-4
 3907 0002 8CB0     	 sub sp,sp,#48
 3908              	.LCFI171:
 3909              	 .cfi_def_cfa_offset 56
 3910 0004 00AF     	 add r7,sp,#0
 3911              	.LCFI172:
 3912              	 .cfi_def_cfa_register 7
 3913 0006 F860     	 str r0,[r7,#12]
 3914 0008 0B46     	 mov r3,r1
 3915 000a 7A60     	 str r2,[r7,#4]
 3916 000c FB72     	 strb r3,[r7,#11]
1555:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 3917              	 .loc 3 1555 0
 3918 000e 0023     	 movs r3,#0
 3919 0010 87F82F30 	 strb r3,[r7,#47]
1556:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t retry = 0U;
 3920              	 .loc 3 1556 0
 3921 0014 0023     	 movs r3,#0
 3922 0016 BB62     	 str r3,[r7,#40]
1557:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t exp_res;
1558:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t num_of_tries;
1559:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_SPI_t * spi_handle;
1560:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1561:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint8_t send_data[7] = {0xffU,
 3923              	 .loc 3 1561 0
 3924 0018 FF23     	 movs r3,#255
 3925 001a 3B75     	 strb r3,[r7,#20]
 3926 001c FB7A     	 ldrb r3,[r7,#11]
 3927 001e 7B75     	 strb r3,[r7,#21]
1562:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                           cmd,
1563:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                           (uint8_t)(((uint32_t)arg >> 24) & 0xffU),
 3928              	 .loc 3 1563 0
 3929 0020 7B68     	 ldr r3,[r7,#4]
 3930 0022 1B0E     	 lsrs r3,r3,#24
 3931 0024 DBB2     	 uxtb r3,r3
1561:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                           cmd,
 3932              	 .loc 3 1561 0
 3933 0026 BB75     	 strb r3,[r7,#22]
1564:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                           (uint8_t)(((uint32_t)arg >> 16) & 0xffU),
 3934              	 .loc 3 1564 0
 3935 0028 7B68     	 ldr r3,[r7,#4]
 3936 002a 1B0C     	 lsrs r3,r3,#16
 3937 002c DBB2     	 uxtb r3,r3
1561:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                           cmd,
 3938              	 .loc 3 1561 0
 3939 002e FB75     	 strb r3,[r7,#23]
1565:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                           (uint8_t)(((uint32_t)arg >> 8) & 0xffU),
 3940              	 .loc 3 1565 0
 3941 0030 7B68     	 ldr r3,[r7,#4]
 3942 0032 1B0A     	 lsrs r3,r3,#8
 3943 0034 DBB2     	 uxtb r3,r3
1561:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                           cmd,
 3944              	 .loc 3 1561 0
 3945 0036 3B76     	 strb r3,[r7,#24]
1566:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                           (uint8_t)((uint32_t)arg & 0xffU),
 3946              	 .loc 3 1566 0
 3947 0038 7B68     	 ldr r3,[r7,#4]
 3948 003a DBB2     	 uxtb r3,r3
1561:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                           cmd,
 3949              	 .loc 3 1561 0
 3950 003c 7B76     	 strb r3,[r7,#25]
 3951 003e FF23     	 movs r3,#255
 3952 0040 BB76     	 strb r3,[r7,#26]
1567:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                            0xffU
1568:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                           };
1569:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1570:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   spi_handle = obj->sdmmc_spi;
 3953              	 .loc 3 1570 0
 3954 0042 FB68     	 ldr r3,[r7,#12]
 3955 0044 1B68     	 ldr r3,[r3]
 3956 0046 FB61     	 str r3,[r7,#28]
1571:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1572:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   switch (cmd)
 3957              	 .loc 3 1572 0
 3958 0048 FB7A     	 ldrb r3,[r7,#11]
 3959 004a 403B     	 subs r3,r3,#64
 3960 004c 192B     	 cmp r3,#25
 3961 004e 69D8     	 bhi .L211
 3962 0050 01A2     	 adr r2,.L213
 3963 0052 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 3964 0056 00BF     	 .p2align 2
 3965              	.L213:
 3966 0058 C1000000 	 .word .L212+1
 3967 005c CF000000 	 .word .L214+1
 3968 0060 25010000 	 .word .L211+1
 3969 0064 25010000 	 .word .L211+1
 3970 0068 25010000 	 .word .L211+1
 3971 006c 25010000 	 .word .L211+1
 3972 0070 25010000 	 .word .L211+1
 3973 0074 25010000 	 .word .L211+1
 3974 0078 DB000000 	 .word .L215+1
 3975 007c E9000000 	 .word .L216+1
 3976 0080 F3000000 	 .word .L217+1
 3977 0084 25010000 	 .word .L211+1
 3978 0088 25010000 	 .word .L211+1
 3979 008c 25010000 	 .word .L211+1
 3980 0090 25010000 	 .word .L211+1
 3981 0094 25010000 	 .word .L211+1
 3982 0098 25010000 	 .word .L211+1
 3983 009c FD000000 	 .word .L218+1
 3984 00a0 07010000 	 .word .L219+1
 3985 00a4 25010000 	 .word .L211+1
 3986 00a8 25010000 	 .word .L211+1
 3987 00ac 25010000 	 .word .L211+1
 3988 00b0 25010000 	 .word .L211+1
 3989 00b4 25010000 	 .word .L211+1
 3990 00b8 11010000 	 .word .L220+1
 3991 00bc 1B010000 	 .word .L221+1
 3992              	 .p2align 1
 3993              	.L212:
1573:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1574:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     case SDMMC_BLOCK_SPI_CMD0:
1575:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       send_data[6] = 0x95U;
 3994              	 .loc 3 1575 0
 3995 00c0 9523     	 movs r3,#149
 3996 00c2 BB76     	 strb r3,[r7,#26]
1576:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       exp_res = SDMMC_BLOCK_IN_IDLE_STATE;
 3997              	 .loc 3 1576 0
 3998 00c4 0123     	 movs r3,#1
 3999 00c6 7B62     	 str r3,[r7,#36]
1577:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       num_of_tries = 255U;
 4000              	 .loc 3 1577 0
 4001 00c8 FF23     	 movs r3,#255
 4002 00ca 3B62     	 str r3,[r7,#32]
1578:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       break;
 4003              	 .loc 3 1578 0
 4004 00cc 2FE0     	 b .L222
 4005              	.L214:
1579:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1580:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     case SDMMC_BLOCK_SPI_CMD1:
1581:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       exp_res = 0U;
 4006              	 .loc 3 1581 0
 4007 00ce 0023     	 movs r3,#0
 4008 00d0 7B62     	 str r3,[r7,#36]
1582:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       num_of_tries = 1024U;
 4009              	 .loc 3 1582 0
 4010 00d2 4FF48063 	 mov r3,#1024
 4011 00d6 3B62     	 str r3,[r7,#32]
1583:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       break;
 4012              	 .loc 3 1583 0
 4013 00d8 29E0     	 b .L222
 4014              	.L215:
1584:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1585:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     case SDMMC_BLOCK_SPI_CMD8:
1586:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       send_data[6] = 0x87U;
 4015              	 .loc 3 1586 0
 4016 00da 8723     	 movs r3,#135
 4017 00dc BB76     	 strb r3,[r7,#26]
1587:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       exp_res = 0U;
 4018              	 .loc 3 1587 0
 4019 00de 0023     	 movs r3,#0
 4020 00e0 7B62     	 str r3,[r7,#36]
1588:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       num_of_tries = 1U;
 4021              	 .loc 3 1588 0
 4022 00e2 0123     	 movs r3,#1
 4023 00e4 3B62     	 str r3,[r7,#32]
1589:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       break;
 4024              	 .loc 3 1589 0
 4025 00e6 22E0     	 b .L222
 4026              	.L216:
1590:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1591:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     case SDMMC_BLOCK_SPI_CMD9:
1592:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       exp_res = 0U;
 4027              	 .loc 3 1592 0
 4028 00e8 0023     	 movs r3,#0
 4029 00ea 7B62     	 str r3,[r7,#36]
1593:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       num_of_tries = 255U;
 4030              	 .loc 3 1593 0
 4031 00ec FF23     	 movs r3,#255
 4032 00ee 3B62     	 str r3,[r7,#32]
1594:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       break;
 4033              	 .loc 3 1594 0
 4034 00f0 1DE0     	 b .L222
 4035              	.L217:
1595:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1596:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     case SDMMC_BLOCK_SPI_CMD10:
1597:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       exp_res = 0U;
 4036              	 .loc 3 1597 0
 4037 00f2 0023     	 movs r3,#0
 4038 00f4 7B62     	 str r3,[r7,#36]
1598:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       num_of_tries = 255U;
 4039              	 .loc 3 1598 0
 4040 00f6 FF23     	 movs r3,#255
 4041 00f8 3B62     	 str r3,[r7,#32]
1599:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       break;
 4042              	 .loc 3 1599 0
 4043 00fa 18E0     	 b .L222
 4044              	.L218:
1600:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1601:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     case SDMMC_BLOCK_SPI_CMD17:
1602:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       exp_res = 0U;
 4045              	 .loc 3 1602 0
 4046 00fc 0023     	 movs r3,#0
 4047 00fe 7B62     	 str r3,[r7,#36]
1603:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       num_of_tries = 255U;
 4048              	 .loc 3 1603 0
 4049 0100 FF23     	 movs r3,#255
 4050 0102 3B62     	 str r3,[r7,#32]
1604:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       break;
 4051              	 .loc 3 1604 0
 4052 0104 13E0     	 b .L222
 4053              	.L219:
1605:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1606:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     case SDMMC_BLOCK_SPI_CMD18:
1607:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       exp_res = 0U;
 4054              	 .loc 3 1607 0
 4055 0106 0023     	 movs r3,#0
 4056 0108 7B62     	 str r3,[r7,#36]
1608:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       num_of_tries = 255U;
 4057              	 .loc 3 1608 0
 4058 010a FF23     	 movs r3,#255
 4059 010c 3B62     	 str r3,[r7,#32]
1609:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       break;
 4060              	 .loc 3 1609 0
 4061 010e 0EE0     	 b .L222
 4062              	.L220:
1610:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1611:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     case SDMMC_BLOCK_SPI_CMD24:
1612:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       exp_res = 0U;
 4063              	 .loc 3 1612 0
 4064 0110 0023     	 movs r3,#0
 4065 0112 7B62     	 str r3,[r7,#36]
1613:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       num_of_tries = 255U;
 4066              	 .loc 3 1613 0
 4067 0114 FF23     	 movs r3,#255
 4068 0116 3B62     	 str r3,[r7,#32]
1614:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       break;
 4069              	 .loc 3 1614 0
 4070 0118 09E0     	 b .L222
 4071              	.L221:
1615:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1616:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     case SDMMC_BLOCK_SPI_CMD25:
1617:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       exp_res = 0U;
 4072              	 .loc 3 1617 0
 4073 011a 0023     	 movs r3,#0
 4074 011c 7B62     	 str r3,[r7,#36]
1618:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       num_of_tries = 255U;
 4075              	 .loc 3 1618 0
 4076 011e FF23     	 movs r3,#255
 4077 0120 3B62     	 str r3,[r7,#32]
1619:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       break;
 4078              	 .loc 3 1619 0
 4079 0122 04E0     	 b .L222
 4080              	.L211:
1620:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1621:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     default :
1622:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       exp_res = 0U;
 4081              	 .loc 3 1622 0
 4082 0124 0023     	 movs r3,#0
 4083 0126 7B62     	 str r3,[r7,#36]
1623:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       num_of_tries = 1U;
 4084              	 .loc 3 1623 0
 4085 0128 0123     	 movs r3,#1
 4086 012a 3B62     	 str r3,[r7,#32]
1624:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       break;
 4087              	 .loc 3 1624 0
 4088 012c 00BF     	 nop
 4089              	.L222:
1625:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1626:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1627:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   do
1628:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1629:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     SDMMC_BLOCK_SPI_lSend_Clocktrain(spi_handle, 1U);
 4090              	 .loc 3 1629 0
 4091 012e F869     	 ldr r0,[r7,#28]
 4092 0130 0121     	 movs r1,#1
 4093 0132 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSend_Clocktrain
1630:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1631:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lSendData(spi_handle, &send_data[1], 6U);
 4094              	 .loc 3 1631 0
 4095 0136 07F11403 	 add r3,r7,#20
 4096 013a 0133     	 adds r3,r3,#1
 4097 013c F869     	 ldr r0,[r7,#28]
 4098 013e 1946     	 mov r1,r3
 4099 0140 0622     	 movs r2,#6
 4100 0142 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendData
 4101 0146 0346     	 mov r3,r0
 4102 0148 87F82F30 	 strb r3,[r7,#47]
1632:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1633:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4103              	 .loc 3 1633 0
 4104 014c 97F82F30 	 ldrb r3,[r7,#47]
 4105 0150 002B     	 cmp r3,#0
 4106 0152 23D1     	 bne .L223
1634:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1635:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       retry = 0U;
 4107              	 .loc 3 1635 0
 4108 0154 0023     	 movs r3,#0
 4109 0156 BB62     	 str r3,[r7,#40]
 4110              	.L227:
1636:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       do
1637:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       {
1638:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         status = SDMMC_BLOCK_SPI_lReadData(spi_handle, &spi_handle->cmd_response, 1U);
 4111              	 .loc 3 1638 0
 4112 0158 FB69     	 ldr r3,[r7,#28]
 4113 015a 7033     	 adds r3,r3,#112
 4114 015c F869     	 ldr r0,[r7,#28]
 4115 015e 1946     	 mov r1,r3
 4116 0160 0122     	 movs r2,#1
 4117 0162 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 4118 0166 0346     	 mov r3,r0
 4119 0168 87F82F30 	 strb r3,[r7,#47]
1639:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1640:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         if ((retry++ > SDMMC_BLOCK_SPI_CMD_TIMOUT) || (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS))
 4120              	 .loc 3 1640 0
 4121 016c BB6A     	 ldr r3,[r7,#40]
 4122 016e 5A1C     	 adds r2,r3,#1
 4123 0170 BA62     	 str r2,[r7,#40]
 4124 0172 B3F5FA5F 	 cmp r3,#8000
 4125 0176 03D8     	 bhi .L224
 4126              	 .loc 3 1640 0 is_stmt 0 discriminator 1
 4127 0178 97F82F30 	 ldrb r3,[r7,#47]
 4128 017c 002B     	 cmp r3,#0
 4129 017e 08D0     	 beq .L225
 4130              	.L224:
1641:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         {
1642:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4131              	 .loc 3 1642 0 is_stmt 1
 4132 0180 97F82F30 	 ldrb r3,[r7,#47]
 4133 0184 002B     	 cmp r3,#0
 4134 0186 03D0     	 beq .L226
1643:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           {
1644:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****             status = SDMMC_BLOCK_MODE_STATUS_COMMUNICATION_ERROR;
 4135              	 .loc 3 1644 0
 4136 0188 3623     	 movs r3,#54
 4137 018a 87F82F30 	 strb r3,[r7,#47]
1645:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           }
1646:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****           break;      /* time out error */
 4138              	 .loc 3 1646 0
 4139 018e 05E0     	 b .L223
 4140              	.L226:
 4141 0190 04E0     	 b .L223
 4142              	.L225:
1647:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****         }
1648:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       } while (spi_handle->cmd_response == 0xffU);  /* wait response */
 4143              	 .loc 3 1648 0
 4144 0192 FB69     	 ldr r3,[r7,#28]
 4145 0194 93F87030 	 ldrb r3,[r3,#112]
 4146 0198 FF2B     	 cmp r3,#255
 4147 019a DDD0     	 beq .L227
 4148              	.L223:
1649:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1650:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     num_of_tries--;
 4149              	 .loc 3 1650 0
 4150 019c 3B6A     	 ldr r3,[r7,#32]
 4151 019e 013B     	 subs r3,r3,#1
 4152 01a0 3B62     	 str r3,[r7,#32]
1651:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   } while ((spi_handle->cmd_response != exp_res) && (num_of_tries > 0U));
 4153              	 .loc 3 1651 0
 4154 01a2 FB69     	 ldr r3,[r7,#28]
 4155 01a4 93F87030 	 ldrb r3,[r3,#112]
 4156 01a8 1A46     	 mov r2,r3
 4157 01aa 7B6A     	 ldr r3,[r7,#36]
 4158 01ac 9A42     	 cmp r2,r3
 4159 01ae 02D0     	 beq .L228
 4160              	 .loc 3 1651 0 is_stmt 0 discriminator 1
 4161 01b0 3B6A     	 ldr r3,[r7,#32]
 4162 01b2 002B     	 cmp r3,#0
 4163 01b4 BBD1     	 bne .L222
 4164              	.L228:
1652:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1653:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #ifdef SDMMC_BLOCK_TEST_HOOK_ENABLE
1654:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (sdmmc_block_test_hook_expected_command == (cmd - 64U))
1655:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1656:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_TEST_HOOK_SendCommand(obj, cmd, status);
1657:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1658:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** #endif
1659:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1660:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 4165              	 .loc 3 1660 0 is_stmt 1
 4166 01b6 97F82F30 	 ldrb r3,[r7,#47]
1661:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 4167              	 .loc 3 1661 0
 4168 01ba 1846     	 mov r0,r3
 4169 01bc 3037     	 adds r7,r7,#48
 4170              	.LCFI173:
 4171              	 .cfi_def_cfa_offset 8
 4172 01be BD46     	 mov sp,r7
 4173              	.LCFI174:
 4174              	 .cfi_def_cfa_register 13
 4175              	 
 4176 01c0 80BD     	 pop {r7,pc}
 4177              	 .cfi_endproc
 4178              	.LFE356:
 4180 01c2 00BF     	 .section .text.SDMMC_BLOCK_SPI_lSendACMD41,"ax",%progbits
 4181              	 .align 2
 4182              	 .thumb
 4183              	 .thumb_func
 4185              	SDMMC_BLOCK_SPI_lSendACMD41:
 4186              	.LFB357:
1662:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1663:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lSendACMD41(const SDMMC_BLOCK_t *const obj, const 
1664:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 4187              	 .loc 3 1664 0
 4188              	 .cfi_startproc
 4189              	 
 4190              	 
 4191 0000 80B5     	 push {r7,lr}
 4192              	.LCFI175:
 4193              	 .cfi_def_cfa_offset 8
 4194              	 .cfi_offset 7,-8
 4195              	 .cfi_offset 14,-4
 4196 0002 84B0     	 sub sp,sp,#16
 4197              	.LCFI176:
 4198              	 .cfi_def_cfa_offset 24
 4199 0004 00AF     	 add r7,sp,#0
 4200              	.LCFI177:
 4201              	 .cfi_def_cfa_register 7
 4202 0006 7860     	 str r0,[r7,#4]
 4203 0008 3960     	 str r1,[r7]
1665:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 4204              	 .loc 3 1665 0
 4205 000a 0023     	 movs r3,#0
 4206 000c FB73     	 strb r3,[r7,#15]
1666:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t count = 1024U;
 4207              	 .loc 3 1666 0
 4208 000e 4FF48063 	 mov r3,#1024
 4209 0012 BB60     	 str r3,[r7,#8]
 4210              	.L232:
1667:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1668:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   do
1669:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1670:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* Send Command55 for Application Specific Command with default Argument as 0*/
1671:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     (void)SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_CMD55, SDMMC_BLOCK_ARGUMENT0);
 4211              	 .loc 3 1671 0 discriminator 3
 4212 0014 7868     	 ldr r0,[r7,#4]
 4213 0016 7721     	 movs r1,#119
 4214 0018 0022     	 movs r2,#0
 4215 001a FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
1672:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* Send ACMD41 to query the card's voltage window */
1673:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lSendCommand(obj, SDMMC_BLOCK_SPI_ACMD41, arg);
 4216              	 .loc 3 1673 0 discriminator 3
 4217 001e 7868     	 ldr r0,[r7,#4]
 4218 0020 6921     	 movs r1,#105
 4219 0022 3A68     	 ldr r2,[r7]
 4220 0024 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lSendCommand
 4221 0028 0346     	 mov r3,r0
 4222 002a FB73     	 strb r3,[r7,#15]
1674:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1675:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     count--;
 4223              	 .loc 3 1675 0 discriminator 3
 4224 002c BB68     	 ldr r3,[r7,#8]
 4225 002e 013B     	 subs r3,r3,#1
 4226 0030 BB60     	 str r3,[r7,#8]
1676:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   } while ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (obj->sdmmc_spi->cmd_response != 0U) && (
 4227              	 .loc 3 1676 0 discriminator 3
 4228 0032 FB7B     	 ldrb r3,[r7,#15]
 4229 0034 002B     	 cmp r3,#0
 4230 0036 08D1     	 bne .L231
 4231              	 .loc 3 1676 0 is_stmt 0 discriminator 1
 4232 0038 7B68     	 ldr r3,[r7,#4]
 4233 003a 1B68     	 ldr r3,[r3]
 4234 003c 93F87030 	 ldrb r3,[r3,#112]
 4235 0040 002B     	 cmp r3,#0
 4236 0042 02D0     	 beq .L231
 4237              	 .loc 3 1676 0 discriminator 2
 4238 0044 BB68     	 ldr r3,[r7,#8]
 4239 0046 002B     	 cmp r3,#0
 4240 0048 E4D1     	 bne .L232
 4241              	.L231:
1677:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1678:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if ((obj->sdmmc_spi->cmd_response != 0U) && (count == 0U))
 4242              	 .loc 3 1678 0 is_stmt 1
 4243 004a 7B68     	 ldr r3,[r7,#4]
 4244 004c 1B68     	 ldr r3,[r3]
 4245 004e 93F87030 	 ldrb r3,[r3,#112]
 4246 0052 002B     	 cmp r3,#0
 4247 0054 04D0     	 beq .L233
 4248              	 .loc 3 1678 0 is_stmt 0 discriminator 1
 4249 0056 BB68     	 ldr r3,[r7,#8]
 4250 0058 002B     	 cmp r3,#0
 4251 005a 01D1     	 bne .L233
1679:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1680:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_COMMAND_TIMEOUT_ERROR;
 4252              	 .loc 3 1680 0 is_stmt 1
 4253 005c 0223     	 movs r3,#2
 4254 005e FB73     	 strb r3,[r7,#15]
 4255              	.L233:
1681:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     XMC_DEBUG("SDMMC_BLOCK_SPI_lInitializeCard : ACMD41 Timeout error")
1682:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1683:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1684:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 4256              	 .loc 3 1684 0
 4257 0060 FB7B     	 ldrb r3,[r7,#15]
1685:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 4258              	 .loc 3 1685 0
 4259 0062 1846     	 mov r0,r3
 4260 0064 1037     	 adds r7,r7,#16
 4261              	.LCFI178:
 4262              	 .cfi_def_cfa_offset 8
 4263 0066 BD46     	 mov sp,r7
 4264              	.LCFI179:
 4265              	 .cfi_def_cfa_register 13
 4266              	 
 4267 0068 80BD     	 pop {r7,pc}
 4268              	 .cfi_endproc
 4269              	.LFE357:
 4271 006a 00BF     	 .section .text.SDMMC_BLOCK_SPI_lCheckSectorBound,"ax",%progbits
 4272              	 .align 2
 4273              	 .thumb
 4274              	 .thumb_func
 4276              	SDMMC_BLOCK_SPI_lCheckSectorBound:
 4277              	.LFB358:
1686:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1687:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** /**
1688:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   * This function is used to check the sector address is out of bound or not.
1689:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** */
1690:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lCheckSectorBound(SDMMC_BLOCK_t *const obj,
1691:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                    const uint32_t sector_number,
1692:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                    const uint32_t sector_count)
1693:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 4278              	 .loc 3 1693 0
 4279              	 .cfi_startproc
 4280              	 
 4281              	 
 4282 0000 80B5     	 push {r7,lr}
 4283              	.LCFI180:
 4284              	 .cfi_def_cfa_offset 8
 4285              	 .cfi_offset 7,-8
 4286              	 .cfi_offset 14,-4
 4287 0002 86B0     	 sub sp,sp,#24
 4288              	.LCFI181:
 4289              	 .cfi_def_cfa_offset 32
 4290 0004 00AF     	 add r7,sp,#0
 4291              	.LCFI182:
 4292              	 .cfi_def_cfa_register 7
 4293 0006 F860     	 str r0,[r7,#12]
 4294 0008 B960     	 str r1,[r7,#8]
 4295 000a 7A60     	 str r2,[r7,#4]
1694:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1695:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t max_sector_count;
1696:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1697:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* Get Sector Count function   */
1698:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_GetSectorCount(obj, &max_sector_count);
 4296              	 .loc 3 1698 0
 4297 000c 07F11003 	 add r3,r7,#16
 4298 0010 F868     	 ldr r0,[r7,#12]
 4299 0012 1946     	 mov r1,r3
 4300 0014 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_GetSectorCount
 4301 0018 0346     	 mov r3,r0
 4302 001a FB75     	 strb r3,[r7,#23]
1699:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1700:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4303              	 .loc 3 1700 0
 4304 001c FB7D     	 ldrb r3,[r7,#23]
 4305 001e 002B     	 cmp r3,#0
 4306 0020 07D1     	 bne .L236
1701:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1702:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* Check the Sector Count limit */
1703:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     if ((sector_number + sector_count) > max_sector_count)
 4307              	 .loc 3 1703 0
 4308 0022 BA68     	 ldr r2,[r7,#8]
 4309 0024 7B68     	 ldr r3,[r7,#4]
 4310 0026 1A44     	 add r2,r2,r3
 4311 0028 3B69     	 ldr r3,[r7,#16]
 4312 002a 9A42     	 cmp r2,r3
 4313 002c 01D9     	 bls .L236
1704:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     {
1705:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       status = SDMMC_BLOCK_MODE_STATUS_SECTOR_OUT_OF_BOUND;
 4314              	 .loc 3 1705 0
 4315 002e 3323     	 movs r3,#51
 4316 0030 FB75     	 strb r3,[r7,#23]
 4317              	.L236:
1706:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1707:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1708:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 4318              	 .loc 3 1708 0
 4319 0032 FB7D     	 ldrb r3,[r7,#23]
1709:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 4320              	 .loc 3 1709 0
 4321 0034 1846     	 mov r0,r3
 4322 0036 1837     	 adds r7,r7,#24
 4323              	.LCFI183:
 4324              	 .cfi_def_cfa_offset 8
 4325 0038 BD46     	 mov sp,r7
 4326              	.LCFI184:
 4327              	 .cfi_def_cfa_register 13
 4328              	 
 4329 003a 80BD     	 pop {r7,pc}
 4330              	 .cfi_endproc
 4331              	.LFE358:
 4333              	 .section .text.SDMMC_BLOCK_SPI_lReadCardRegister,"ax",%progbits
 4334              	 .align 2
 4335              	 .thumb
 4336              	 .thumb_func
 4338              	SDMMC_BLOCK_SPI_lReadCardRegister:
 4339              	.LFB359:
1710:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1711:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lReadCardRegister(SDMMC_BLOCK_SPI_t *const obj,
1712:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                    uint8_t *buffer,
1713:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                    const uint32_t buffer_length)
1714:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 4340              	 .loc 3 1714 0
 4341              	 .cfi_startproc
 4342              	 
 4343              	 
 4344 0000 80B5     	 push {r7,lr}
 4345              	.LCFI185:
 4346              	 .cfi_def_cfa_offset 8
 4347              	 .cfi_offset 7,-8
 4348              	 .cfi_offset 14,-4
 4349 0002 8AB0     	 sub sp,sp,#40
 4350              	.LCFI186:
 4351              	 .cfi_def_cfa_offset 48
 4352 0004 00AF     	 add r7,sp,#0
 4353              	.LCFI187:
 4354              	 .cfi_def_cfa_register 7
 4355 0006 F860     	 str r0,[r7,#12]
 4356 0008 B960     	 str r1,[r7,#8]
 4357 000a 7A60     	 str r2,[r7,#4]
1715:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 4358              	 .loc 3 1715 0
 4359 000c 0123     	 movs r3,#1
 4360 000e FB77     	 strb r3,[r7,#31]
1716:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1717:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    /*
1718:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     * Since tshe first byte is CRC field hence it is ignored.
1719:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     * And also 0th bit is always 1 and it is not used as in spec
1720:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     * Csd Struture includes 7-bit CRC  1-bit fixed bit which is not sent by the card.
1721:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     * So while copying skip one byte and copy in the structure
1722:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     */
1723:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t left_index;
1724:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t right_index;
1725:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t count;
1726:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint8_t temp;
1727:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1728:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   status = SDMMC_BLOCK_SPI_lReadData(obj, buffer, buffer_length);
 4361              	 .loc 3 1728 0
 4362 0010 F868     	 ldr r0,[r7,#12]
 4363 0012 B968     	 ldr r1,[r7,#8]
 4364 0014 7A68     	 ldr r2,[r7,#4]
 4365 0016 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 4366 001a 0346     	 mov r3,r0
 4367 001c FB77     	 strb r3,[r7,#31]
1729:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1730:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4368              	 .loc 3 1730 0
 4369 001e FB7F     	 ldrb r3,[r7,#31]
 4370 0020 002B     	 cmp r3,#0
 4371 0022 24D1     	 bne .L239
1731:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1732:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     count = buffer_length >> 1U;
 4372              	 .loc 3 1732 0
 4373 0024 7B68     	 ldr r3,[r7,#4]
 4374 0026 5B08     	 lsrs r3,r3,#1
 4375 0028 BB61     	 str r3,[r7,#24]
1733:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     left_index = 0U;
 4376              	 .loc 3 1733 0
 4377 002a 0023     	 movs r3,#0
 4378 002c 7B62     	 str r3,[r7,#36]
1734:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     right_index = buffer_length - 1U;
 4379              	 .loc 3 1734 0
 4380 002e 7B68     	 ldr r3,[r7,#4]
 4381 0030 013B     	 subs r3,r3,#1
 4382 0032 3B62     	 str r3,[r7,#32]
1735:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1736:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     /* Reverse the buffer to align the word according the register */
1737:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     while (left_index < count){
 4383              	 .loc 3 1737 0
 4384 0034 17E0     	 b .L240
 4385              	.L241:
1738:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       temp = buffer[left_index];
 4386              	 .loc 3 1738 0
 4387 0036 BA68     	 ldr r2,[r7,#8]
 4388 0038 7B6A     	 ldr r3,[r7,#36]
 4389 003a 1344     	 add r3,r3,r2
 4390 003c 1B78     	 ldrb r3,[r3]
 4391 003e FB75     	 strb r3,[r7,#23]
1739:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       buffer[left_index] = buffer[right_index];
 4392              	 .loc 3 1739 0
 4393 0040 BA68     	 ldr r2,[r7,#8]
 4394 0042 7B6A     	 ldr r3,[r7,#36]
 4395 0044 1344     	 add r3,r3,r2
 4396 0046 B968     	 ldr r1,[r7,#8]
 4397 0048 3A6A     	 ldr r2,[r7,#32]
 4398 004a 0A44     	 add r2,r2,r1
 4399 004c 1278     	 ldrb r2,[r2]
 4400 004e 1A70     	 strb r2,[r3]
1740:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       buffer[right_index] = temp;
 4401              	 .loc 3 1740 0
 4402 0050 BA68     	 ldr r2,[r7,#8]
 4403 0052 3B6A     	 ldr r3,[r7,#32]
 4404 0054 1344     	 add r3,r3,r2
 4405 0056 FA7D     	 ldrb r2,[r7,#23]
 4406 0058 1A70     	 strb r2,[r3]
1741:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       left_index++;
 4407              	 .loc 3 1741 0
 4408 005a 7B6A     	 ldr r3,[r7,#36]
 4409 005c 0133     	 adds r3,r3,#1
 4410 005e 7B62     	 str r3,[r7,#36]
1742:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       right_index--;
 4411              	 .loc 3 1742 0
 4412 0060 3B6A     	 ldr r3,[r7,#32]
 4413 0062 013B     	 subs r3,r3,#1
 4414 0064 3B62     	 str r3,[r7,#32]
 4415              	.L240:
1737:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****       temp = buffer[left_index];
 4416              	 .loc 3 1737 0
 4417 0066 7A6A     	 ldr r2,[r7,#36]
 4418 0068 BB69     	 ldr r3,[r7,#24]
 4419 006a 9A42     	 cmp r2,r3
 4420 006c E3D3     	 bcc .L241
 4421              	.L239:
1743:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     }
1744:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1745:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1746:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 4422              	 .loc 3 1746 0
 4423 006e FB7F     	 ldrb r3,[r7,#31]
1747:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 4424              	 .loc 3 1747 0
 4425 0070 1846     	 mov r0,r3
 4426 0072 2837     	 adds r7,r7,#40
 4427              	.LCFI188:
 4428              	 .cfi_def_cfa_offset 8
 4429 0074 BD46     	 mov sp,r7
 4430              	.LCFI189:
 4431              	 .cfi_def_cfa_register 13
 4432              	 
 4433 0076 80BD     	 pop {r7,pc}
 4434              	 .cfi_endproc
 4435              	.LFE359:
 4437              	 .section .text.SDMMC_BLOCK_SPI_lDummyRead,"ax",%progbits
 4438              	 .align 2
 4439              	 .thumb
 4440              	 .thumb_func
 4442              	SDMMC_BLOCK_SPI_lDummyRead:
 4443              	.LFB360:
1748:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1749:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static void SDMMC_BLOCK_SPI_lDummyRead(SDMMC_BLOCK_SPI_t *const obj, uint32_t count)
1750:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 4444              	 .loc 3 1750 0
 4445              	 .cfi_startproc
 4446              	 
 4447              	 
 4448 0000 80B5     	 push {r7,lr}
 4449              	.LCFI190:
 4450              	 .cfi_def_cfa_offset 8
 4451              	 .cfi_offset 7,-8
 4452              	 .cfi_offset 14,-4
 4453 0002 84B0     	 sub sp,sp,#16
 4454              	.LCFI191:
 4455              	 .cfi_def_cfa_offset 24
 4456 0004 00AF     	 add r7,sp,#0
 4457              	.LCFI192:
 4458              	 .cfi_def_cfa_register 7
 4459 0006 7860     	 str r0,[r7,#4]
 4460 0008 3960     	 str r1,[r7]
1751:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint8_t dummy[SDMMC_BLOCK_SPI_DUMMY_READ_MAX_CNT];
1752:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1753:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /* Read out CRC */
1754:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   (void)SDMMC_BLOCK_SPI_lReadData(obj, dummy, count);
 4461              	 .loc 3 1754 0
 4462 000a 07F10C03 	 add r3,r7,#12
 4463 000e 7868     	 ldr r0,[r7,#4]
 4464 0010 1946     	 mov r1,r3
 4465 0012 3A68     	 ldr r2,[r7]
 4466 0014 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
1755:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 4467              	 .loc 3 1755 0
 4468 0018 1037     	 adds r7,r7,#16
 4469              	.LCFI193:
 4470              	 .cfi_def_cfa_offset 8
 4471 001a BD46     	 mov sp,r7
 4472              	.LCFI194:
 4473              	 .cfi_def_cfa_register 13
 4474              	 
 4475 001c 80BD     	 pop {r7,pc}
 4476              	 .cfi_endproc
 4477              	.LFE360:
 4479 001e 00BF     	 .section .text.SDMMC_BLOCK_SPI_lSend_Clocktrain,"ax",%progbits
 4480              	 .align 2
 4481              	 .thumb
 4482              	 .thumb_func
 4484              	SDMMC_BLOCK_SPI_lSend_Clocktrain:
 4485              	.LFB361:
1756:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1757:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static void SDMMC_BLOCK_SPI_lSend_Clocktrain(SDMMC_BLOCK_SPI_t* const obj, uint32_t count)
1758:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 4486              	 .loc 3 1758 0
 4487              	 .cfi_startproc
 4488              	 
 4489              	 
 4490 0000 80B5     	 push {r7,lr}
 4491              	.LCFI195:
 4492              	 .cfi_def_cfa_offset 8
 4493              	 .cfi_offset 7,-8
 4494              	 .cfi_offset 14,-4
 4495 0002 86B0     	 sub sp,sp,#24
 4496              	.LCFI196:
 4497              	 .cfi_def_cfa_offset 32
 4498 0004 00AF     	 add r7,sp,#0
 4499              	.LCFI197:
 4500              	 .cfi_def_cfa_register 7
 4501 0006 7860     	 str r0,[r7,#4]
 4502 0008 3960     	 str r1,[r7]
1759:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint8_t dummy[SDMMC_BLOCK_SPI_CLK_TRAIN_MAX_CNT];
1760:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   /*
1761:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * Using LLD may trigger the SPI receive event. SO should be careful about the Configured SPI,
1762:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    * like disabling the events
1763:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****    */
1764:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   while (SPI_MASTER_GetFlagStatus(obj->spi_master_handle, (uint32_t)XMC_SPI_CH_STATUS_FLAG_MSLS) !=
 4503              	 .loc 3 1764 0
 4504 000a 00BF     	 nop
 4505              	.L245:
 4506              	 .loc 3 1764 0 is_stmt 0 discriminator 1
 4507 000c 7B68     	 ldr r3,[r7,#4]
 4508 000e 1B68     	 ldr r3,[r3]
 4509 0010 1846     	 mov r0,r3
 4510 0012 0121     	 movs r1,#1
 4511 0014 FFF7FEFF 	 bl SPI_MASTER_GetFlagStatus
 4512 0018 0346     	 mov r3,r0
 4513 001a 002B     	 cmp r3,#0
 4514 001c F6D1     	 bne .L245
1765:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   { }
1766:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SPI_MASTER_DisableSlaveSelectSignal(obj->spi_master_handle);
 4515              	 .loc 3 1766 0 is_stmt 1
 4516 001e 7B68     	 ldr r3,[r7,#4]
 4517 0020 1B68     	 ldr r3,[r3]
 4518 0022 1846     	 mov r0,r3
 4519 0024 FFF7FEFF 	 bl SPI_MASTER_DisableSlaveSelectSignal
1767:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   (void)SDMMC_BLOCK_SPI_lReadData(obj, dummy, count);
 4520              	 .loc 3 1767 0
 4521 0028 07F10C03 	 add r3,r7,#12
 4522 002c 7868     	 ldr r0,[r7,#4]
 4523 002e 1946     	 mov r1,r3
 4524 0030 3A68     	 ldr r2,[r7]
 4525 0032 FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
1768:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   while (SPI_MASTER_GetFlagStatus(obj->spi_master_handle, (uint32_t)XMC_SPI_CH_STATUS_FLAG_MSLS) !=
 4526              	 .loc 3 1768 0
 4527 0036 00BF     	 nop
 4528              	.L246:
 4529              	 .loc 3 1768 0 is_stmt 0 discriminator 1
 4530 0038 7B68     	 ldr r3,[r7,#4]
 4531 003a 1B68     	 ldr r3,[r3]
 4532 003c 1846     	 mov r0,r3
 4533 003e 0121     	 movs r1,#1
 4534 0040 FFF7FEFF 	 bl SPI_MASTER_GetFlagStatus
 4535 0044 0346     	 mov r3,r0
 4536 0046 002B     	 cmp r3,#0
 4537 0048 F6D1     	 bne .L246
1769:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   { }
1770:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SPI_MASTER_EnableSlaveSelectSignal(obj->spi_master_handle,
 4538              	 .loc 3 1770 0 is_stmt 1
 4539 004a 7B68     	 ldr r3,[r7,#4]
 4540 004c 1A68     	 ldr r2,[r3]
1771:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                      (SPI_MASTER_SS_SIGNAL_t)obj->spi_master_handle->config->slave_
 4541              	 .loc 3 1771 0
 4542 004e 7B68     	 ldr r3,[r7,#4]
 4543 0050 1B68     	 ldr r3,[r3]
 4544 0052 5B68     	 ldr r3,[r3,#4]
 4545 0054 1B6D     	 ldr r3,[r3,#80]
 4546 0056 1B69     	 ldr r3,[r3,#16]
1770:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                      (SPI_MASTER_SS_SIGNAL_t)obj->spi_master_handle->config->slave_
 4547              	 .loc 3 1770 0
 4548 0058 DBB2     	 uxtb r3,r3
 4549 005a 1046     	 mov r0,r2
 4550 005c 1946     	 mov r1,r3
 4551 005e FFF7FEFF 	 bl SPI_MASTER_EnableSlaveSelectSignal
1772:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1773:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 4552              	 .loc 3 1773 0
 4553 0062 1837     	 adds r7,r7,#24
 4554              	.LCFI198:
 4555              	 .cfi_def_cfa_offset 8
 4556 0064 BD46     	 mov sp,r7
 4557              	.LCFI199:
 4558              	 .cfi_def_cfa_register 13
 4559              	 
 4560 0066 80BD     	 pop {r7,pc}
 4561              	 .cfi_endproc
 4562              	.LFE361:
 4564              	 .section .text.SDMMC_BLOCK_SPI_lWaitUntilBusy,"ax",%progbits
 4565              	 .align 2
 4566              	 .thumb
 4567              	 .thumb_func
 4569              	SDMMC_BLOCK_SPI_lWaitUntilBusy:
 4570              	.LFB362:
1774:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1775:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lWaitUntilBusy(SDMMC_BLOCK_SPI_t *const obj)
1776:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 4571              	 .loc 3 1776 0
 4572              	 .cfi_startproc
 4573              	 
 4574              	 
 4575 0000 80B5     	 push {r7,lr}
 4576              	.LCFI200:
 4577              	 .cfi_def_cfa_offset 8
 4578              	 .cfi_offset 7,-8
 4579              	 .cfi_offset 14,-4
 4580 0002 84B0     	 sub sp,sp,#16
 4581              	.LCFI201:
 4582              	 .cfi_def_cfa_offset 24
 4583 0004 00AF     	 add r7,sp,#0
 4584              	.LCFI202:
 4585              	 .cfi_def_cfa_register 7
 4586 0006 7860     	 str r0,[r7,#4]
1777:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t count = (uint32_t)SDMMC_BLOCK_SPI_BUSY_TIMOUT;
 4587              	 .loc 3 1777 0
 4588 0008 4CF25033 	 movw r3,#50000
 4589 000c FB60     	 str r3,[r7,#12]
1778:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 4590              	 .loc 3 1778 0
 4591 000e 0023     	 movs r3,#0
 4592 0010 FB72     	 strb r3,[r7,#11]
 4593              	.L249:
1779:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint8_t response;
1780:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1781:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   do
1782:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1783:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lReadData(obj, &response, 1U);
 4594              	 .loc 3 1783 0 discriminator 3
 4595 0012 07F10A03 	 add r3,r7,#10
 4596 0016 7868     	 ldr r0,[r7,#4]
 4597 0018 1946     	 mov r1,r3
 4598 001a 0122     	 movs r2,#1
 4599 001c FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 4600 0020 0346     	 mov r3,r0
 4601 0022 FB72     	 strb r3,[r7,#11]
1784:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     count--;
 4602              	 .loc 3 1784 0 discriminator 3
 4603 0024 FB68     	 ldr r3,[r7,#12]
 4604 0026 013B     	 subs r3,r3,#1
 4605 0028 FB60     	 str r3,[r7,#12]
1785:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   } while ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (response != 0xFFU) && (count > 0U));
 4606              	 .loc 3 1785 0 discriminator 3
 4607 002a FB7A     	 ldrb r3,[r7,#11]
 4608 002c 002B     	 cmp r3,#0
 4609 002e 05D1     	 bne .L248
 4610              	 .loc 3 1785 0 is_stmt 0 discriminator 1
 4611 0030 BB7A     	 ldrb r3,[r7,#10]
 4612 0032 FF2B     	 cmp r3,#255
 4613 0034 02D0     	 beq .L248
 4614              	 .loc 3 1785 0 discriminator 2
 4615 0036 FB68     	 ldr r3,[r7,#12]
 4616 0038 002B     	 cmp r3,#0
 4617 003a EAD1     	 bne .L249
 4618              	.L248:
1786:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1787:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (count == 0U)
 4619              	 .loc 3 1787 0 is_stmt 1
 4620 003c FB68     	 ldr r3,[r7,#12]
 4621 003e 002B     	 cmp r3,#0
 4622 0040 01D1     	 bne .L250
1788:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1789:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 4623              	 .loc 3 1789 0
 4624 0042 0123     	 movs r3,#1
 4625 0044 FB72     	 strb r3,[r7,#11]
 4626              	.L250:
1790:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1791:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1792:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 4627              	 .loc 3 1792 0
 4628 0046 FB7A     	 ldrb r3,[r7,#11]
1793:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 4629              	 .loc 3 1793 0
 4630 0048 1846     	 mov r0,r3
 4631 004a 1037     	 adds r7,r7,#16
 4632              	.LCFI203:
 4633              	 .cfi_def_cfa_offset 8
 4634 004c BD46     	 mov sp,r7
 4635              	.LCFI204:
 4636              	 .cfi_def_cfa_register 13
 4637              	 
 4638 004e 80BD     	 pop {r7,pc}
 4639              	 .cfi_endproc
 4640              	.LFE362:
 4642              	 .section .text.SDMMC_BLOCK_SPI_lEraseTimeOut,"ax",%progbits
 4643              	 .align 2
 4644              	 .thumb
 4645              	 .thumb_func
 4647              	SDMMC_BLOCK_SPI_lEraseTimeOut:
 4648              	.LFB363:
1794:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1795:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SPI_lEraseTimeOut(SDMMC_BLOCK_SPI_t *const obj,
1796:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****                                                                const uint32_t timeout_val)
1797:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** {
 4649              	 .loc 3 1797 0
 4650              	 .cfi_startproc
 4651              	 
 4652              	 
 4653 0000 80B5     	 push {r7,lr}
 4654              	.LCFI205:
 4655              	 .cfi_def_cfa_offset 8
 4656              	 .cfi_offset 7,-8
 4657              	 .cfi_offset 14,-4
 4658 0002 84B0     	 sub sp,sp,#16
 4659              	.LCFI206:
 4660              	 .cfi_def_cfa_offset 24
 4661 0004 00AF     	 add r7,sp,#0
 4662              	.LCFI207:
 4663              	 .cfi_def_cfa_register 7
 4664 0006 7860     	 str r0,[r7,#4]
 4665 0008 3960     	 str r1,[r7]
1798:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint32_t count;
1799:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 4666              	 .loc 3 1799 0
 4667 000a 0023     	 movs r3,#0
 4668 000c FB72     	 strb r3,[r7,#11]
1800:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   uint8_t response;
1801:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1802:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   count = (uint32_t)(timeout_val * (obj->spi_master_handle->config->channel_config->baudrate)) >> 3
 4669              	 .loc 3 1802 0
 4670 000e 7B68     	 ldr r3,[r7,#4]
 4671 0010 1B68     	 ldr r3,[r3]
 4672 0012 5B68     	 ldr r3,[r3,#4]
 4673 0014 1B68     	 ldr r3,[r3]
 4674 0016 1B68     	 ldr r3,[r3]
 4675 0018 3A68     	 ldr r2,[r7]
 4676 001a 02FB03F3 	 mul r3,r2,r3
 4677 001e DB08     	 lsrs r3,r3,#3
 4678 0020 FB60     	 str r3,[r7,#12]
 4679              	.L254:
1803:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1804:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   do
1805:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1806:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_SPI_lReadData(obj, &response, 1U);
 4680              	 .loc 3 1806 0 discriminator 3
 4681 0022 07F10A03 	 add r3,r7,#10
 4682 0026 7868     	 ldr r0,[r7,#4]
 4683 0028 1946     	 mov r1,r3
 4684 002a 0122     	 movs r2,#1
 4685 002c FFF7FEFF 	 bl SDMMC_BLOCK_SPI_lReadData
 4686 0030 0346     	 mov r3,r0
 4687 0032 FB72     	 strb r3,[r7,#11]
1807:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     count--;
 4688              	 .loc 3 1807 0 discriminator 3
 4689 0034 FB68     	 ldr r3,[r7,#12]
 4690 0036 013B     	 subs r3,r3,#1
 4691 0038 FB60     	 str r3,[r7,#12]
1808:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   } while ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (response != 0xFFU) && (count > 0U));
 4692              	 .loc 3 1808 0 discriminator 3
 4693 003a FB7A     	 ldrb r3,[r7,#11]
 4694 003c 002B     	 cmp r3,#0
 4695 003e 05D1     	 bne .L253
 4696              	 .loc 3 1808 0 is_stmt 0 discriminator 1
 4697 0040 BB7A     	 ldrb r3,[r7,#10]
 4698 0042 FF2B     	 cmp r3,#255
 4699 0044 02D0     	 beq .L253
 4700              	 .loc 3 1808 0 discriminator 2
 4701 0046 FB68     	 ldr r3,[r7,#12]
 4702 0048 002B     	 cmp r3,#0
 4703 004a EAD1     	 bne .L254
 4704              	.L253:
1809:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1810:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   if (count == 0U)
 4705              	 .loc 3 1810 0 is_stmt 1
 4706 004c FB68     	 ldr r3,[r7,#12]
 4707 004e 002B     	 cmp r3,#0
 4708 0050 01D1     	 bne .L255
1811:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   {
1812:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****     status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 4709              	 .loc 3 1812 0
 4710 0052 2E23     	 movs r3,#46
 4711 0054 FB72     	 strb r3,[r7,#11]
 4712              	.L255:
1813:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   }
1814:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** 
1815:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c ****   return status;
 4713              	 .loc 3 1815 0
 4714 0056 FB7A     	 ldrb r3,[r7,#11]
1816:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_spi.c **** }
 4715              	 .loc 3 1816 0
 4716 0058 1846     	 mov r0,r3
 4717 005a 1037     	 adds r7,r7,#16
 4718              	.LCFI208:
 4719              	 .cfi_def_cfa_offset 8
 4720 005c BD46     	 mov sp,r7
 4721              	.LCFI209:
 4722              	 .cfi_def_cfa_register 13
 4723              	 
 4724 005e 80BD     	 pop {r7,pc}
 4725              	 .cfi_endproc
 4726              	.LFE363:
 4728              	 .text
 4729              	.Letext0:
 4730              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4731              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4732              	 .file 6 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 4733              	 .file 7 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_gpio.h"
 4734              	 .file 8 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc4_gpio.h"
 4735              	 .file 9 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_usic.h"
 4736              	 .file 10 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_dma.h"
 4737              	 .file 11 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/GLOBAL_DMA/global_dma.h"
 4738              	 .file 12 "../Dave/Generated/SDMMC_BLOCK/sdmmc_block.h"
 4739              	 .file 13 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Include/cmsis_gcc.h"
 4740              	 .file 14 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Include/core_cm4.h"
 4741              	 .file 15 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 sdmmc_block_private_spi.c
    {standard input}:20     .text.XMC_SPI_CH_GetStatusFlag:00000000 $t
    {standard input}:24     .text.XMC_SPI_CH_GetStatusFlag:00000000 XMC_SPI_CH_GetStatusFlag
    {standard input}:64     .text.SPI_MASTER_GetFlagStatus:00000000 $t
    {standard input}:68     .text.SPI_MASTER_GetFlagStatus:00000000 SPI_MASTER_GetFlagStatus
    {standard input}:110    .text.SPI_MASTER_EnableSlaveSelectSignal:00000000 $t
    {standard input}:114    .text.SPI_MASTER_EnableSlaveSelectSignal:00000000 SPI_MASTER_EnableSlaveSelectSignal
    {standard input}:159    .text.SPI_MASTER_DisableSlaveSelectSignal:00000000 $t
    {standard input}:163    .text.SPI_MASTER_DisableSlaveSelectSignal:00000000 SPI_MASTER_DisableSlaveSelectSignal
    {standard input}:199    .text.SDMMC_BLOCK_SPI_Init:00000000 $t
    {standard input}:204    .text.SDMMC_BLOCK_SPI_Init:00000000 SDMMC_BLOCK_SPI_Init
    {standard input}:258    .text.SDMMC_BLOCK_SPI_CardIdentificationProcess:00000000 $t
    {standard input}:263    .text.SDMMC_BLOCK_SPI_CardIdentificationProcess:00000000 SDMMC_BLOCK_SPI_CardIdentificationProcess
    {standard input}:1911   .text.SDMMC_BLOCK_SPI_lInitializeCard:00000000 SDMMC_BLOCK_SPI_lInitializeCard
    {standard input}:323    .text.SDMMC_BLOCK_SPI_ReadBlock:00000000 $t
    {standard input}:328    .text.SDMMC_BLOCK_SPI_ReadBlock:00000000 SDMMC_BLOCK_SPI_ReadBlock
    {standard input}:4276   .text.SDMMC_BLOCK_SPI_lCheckSectorBound:00000000 SDMMC_BLOCK_SPI_lCheckSectorBound
    {standard input}:3462   .text.SDMMC_BLOCK_SPI_lReadSingleBlock:00000000 SDMMC_BLOCK_SPI_lReadSingleBlock
    {standard input}:3211   .text.SDMMC_BLOCK_SPI_lReadMultipleBlocks:00000000 SDMMC_BLOCK_SPI_lReadMultipleBlocks
    {standard input}:4484   .text.SDMMC_BLOCK_SPI_lSend_Clocktrain:00000000 SDMMC_BLOCK_SPI_lSend_Clocktrain
    {standard input}:4569   .text.SDMMC_BLOCK_SPI_lWaitUntilBusy:00000000 SDMMC_BLOCK_SPI_lWaitUntilBusy
    {standard input}:470    .text.SDMMC_BLOCK_SPI_WriteBlock:00000000 $t
    {standard input}:475    .text.SDMMC_BLOCK_SPI_WriteBlock:00000000 SDMMC_BLOCK_SPI_WriteBlock
    {standard input}:3086   .text.SDMMC_BLOCK_SPI_lWriteSingleBlock:00000000 SDMMC_BLOCK_SPI_lWriteSingleBlock
    {standard input}:2924   .text.SDMMC_BLOCK_SPI_lWriteMultipleBlocks:00000000 SDMMC_BLOCK_SPI_lWriteMultipleBlocks
    {standard input}:4442   .text.SDMMC_BLOCK_SPI_lDummyRead:00000000 SDMMC_BLOCK_SPI_lDummyRead
    {standard input}:632    .rodata:00000000 $d
    {standard input}:645    .text.SDMMC_BLOCK_SPI_EraseBlock:00000000 $t
    {standard input}:650    .text.SDMMC_BLOCK_SPI_EraseBlock:00000000 SDMMC_BLOCK_SPI_EraseBlock
    {standard input}:973    .text.SDMMC_BLOCK_SPI_GetSdStatus:00000000 SDMMC_BLOCK_SPI_GetSdStatus
    {standard input}:3591   .text.SDMMC_BLOCK_SPI_lErase:00000000 SDMMC_BLOCK_SPI_lErase
    {standard input}:868    .text.SDMMC_BLOCK_SPI_EraseBlock:00000160 $d
    {standard input}:873    .text.SDMMC_BLOCK_SPI_GetSectorCount:00000000 $t
    {standard input}:878    .text.SDMMC_BLOCK_SPI_GetSectorCount:00000000 SDMMC_BLOCK_SPI_GetSectorCount
    {standard input}:968    .text.SDMMC_BLOCK_SPI_GetSdStatus:00000000 $t
    {standard input}:3896   .text.SDMMC_BLOCK_SPI_lSendCommand:00000000 SDMMC_BLOCK_SPI_lSendCommand
    {standard input}:3743   .text.SDMMC_BLOCK_SPI_lReadData:00000000 SDMMC_BLOCK_SPI_lReadData
    {standard input}:4338   .text.SDMMC_BLOCK_SPI_lReadCardRegister:00000000 SDMMC_BLOCK_SPI_lReadCardRegister
    {standard input}:1113   .text.SDMMC_BLOCK_SPI_GetLockStatus:00000000 $t
    {standard input}:1118   .text.SDMMC_BLOCK_SPI_GetLockStatus:00000000 SDMMC_BLOCK_SPI_GetLockStatus
    {standard input}:1231   .text.SDMMC_BLOCK_SPI_GetCsd:00000000 $t
    {standard input}:1236   .text.SDMMC_BLOCK_SPI_GetCsd:00000000 SDMMC_BLOCK_SPI_GetCsd
    {standard input}:1279   .text.SDMMC_BLOCK_SPI_GetCid:00000000 $t
    {standard input}:1284   .text.SDMMC_BLOCK_SPI_GetCid:00000000 SDMMC_BLOCK_SPI_GetCid
    {standard input}:1426   .text.SDMMC_BLOCK_SPI_GetOcr:00000000 $t
    {standard input}:1431   .text.SDMMC_BLOCK_SPI_GetOcr:00000000 SDMMC_BLOCK_SPI_GetOcr
    {standard input}:1474   .text.SDMMC_BLOCK_SPI_GetBlockSize:00000000 $t
    {standard input}:1479   .text.SDMMC_BLOCK_SPI_GetBlockSize:00000000 SDMMC_BLOCK_SPI_GetBlockSize
    {standard input}:1557   .text.SDMMC_BLOCK_SPI_EjectCard:00000000 $t
    {standard input}:1562   .text.SDMMC_BLOCK_SPI_EjectCard:00000000 SDMMC_BLOCK_SPI_EjectCard
    {standard input}:1657   .text.SDMMC_BLOCK_SPI_LockUnlockCard:00000000 $t
    {standard input}:1662   .text.SDMMC_BLOCK_SPI_LockUnlockCard:00000000 SDMMC_BLOCK_SPI_LockUnlockCard
    {standard input}:3825   .text.SDMMC_BLOCK_SPI_lSendData:00000000 SDMMC_BLOCK_SPI_lSendData
    {standard input}:1907   .text.SDMMC_BLOCK_SPI_lInitializeCard:00000000 $t
    {standard input}:2760   .text.SDMMC_BLOCK_SPI_lSetSpeed:00000000 SDMMC_BLOCK_SPI_lSetSpeed
    {standard input}:2348   .text.SDMMC_BLOCK_SPI_lQueryOperatingCondVoltage:00000000 SDMMC_BLOCK_SPI_lQueryOperatingCondVoltage
    {standard input}:2092   .text.SDMMC_BLOCK_SPI_lReadCid:00000000 SDMMC_BLOCK_SPI_lReadCid
    {standard input}:2220   .text.SDMMC_BLOCK_SPI_lReadCsd:00000000 SDMMC_BLOCK_SPI_lReadCsd
    {standard input}:2816   .text.SDMMC_BLOCK_SPI_lGetWriteProtect:00000000 SDMMC_BLOCK_SPI_lGetWriteProtect
    {standard input}:2083   .text.SDMMC_BLOCK_SPI_lInitializeCard:00000104 $d
    {standard input}:2088   .text.SDMMC_BLOCK_SPI_lReadCid:00000000 $t
    {standard input}:2216   .text.SDMMC_BLOCK_SPI_lReadCsd:00000000 $t
    {standard input}:2344   .text.SDMMC_BLOCK_SPI_lQueryOperatingCondVoltage:00000000 $t
    {standard input}:2459   .text.SDMMC_BLOCK_SPI_lSDV2OperatingCondVoltage:00000000 SDMMC_BLOCK_SPI_lSDV2OperatingCondVoltage
    {standard input}:2649   .text.SDMMC_BLOCK_SPI_lSDV1OperatingCondVoltage:00000000 SDMMC_BLOCK_SPI_lSDV1OperatingCondVoltage
    {standard input}:2455   .text.SDMMC_BLOCK_SPI_lSDV2OperatingCondVoltage:00000000 $t
    {standard input}:4185   .text.SDMMC_BLOCK_SPI_lSendACMD41:00000000 SDMMC_BLOCK_SPI_lSendACMD41
    {standard input}:2640   .text.SDMMC_BLOCK_SPI_lSDV2OperatingCondVoltage:000000fc $d
    {standard input}:2645   .text.SDMMC_BLOCK_SPI_lSDV1OperatingCondVoltage:00000000 $t
    {standard input}:2756   .text.SDMMC_BLOCK_SPI_lSetSpeed:00000000 $t
    {standard input}:2812   .text.SDMMC_BLOCK_SPI_lGetWriteProtect:00000000 $t
    {standard input}:2920   .text.SDMMC_BLOCK_SPI_lWriteMultipleBlocks:00000000 $t
    {standard input}:3082   .text.SDMMC_BLOCK_SPI_lWriteSingleBlock:00000000 $t
    {standard input}:3207   .text.SDMMC_BLOCK_SPI_lReadMultipleBlocks:00000000 $t
    {standard input}:3458   .text.SDMMC_BLOCK_SPI_lReadSingleBlock:00000000 $t
    {standard input}:3587   .text.SDMMC_BLOCK_SPI_lErase:00000000 $t
    {standard input}:4647   .text.SDMMC_BLOCK_SPI_lEraseTimeOut:00000000 SDMMC_BLOCK_SPI_lEraseTimeOut
    {standard input}:3739   .text.SDMMC_BLOCK_SPI_lReadData:00000000 $t
    {standard input}:3821   .text.SDMMC_BLOCK_SPI_lSendData:00000000 $t
    {standard input}:3892   .text.SDMMC_BLOCK_SPI_lSendCommand:00000000 $t
    {standard input}:3966   .text.SDMMC_BLOCK_SPI_lSendCommand:00000058 $d
    {standard input}:3992   .text.SDMMC_BLOCK_SPI_lSendCommand:000000c0 $t
    {standard input}:4181   .text.SDMMC_BLOCK_SPI_lSendACMD41:00000000 $t
    {standard input}:4272   .text.SDMMC_BLOCK_SPI_lCheckSectorBound:00000000 $t
    {standard input}:4334   .text.SDMMC_BLOCK_SPI_lReadCardRegister:00000000 $t
    {standard input}:4438   .text.SDMMC_BLOCK_SPI_lDummyRead:00000000 $t
    {standard input}:4480   .text.SDMMC_BLOCK_SPI_lSend_Clocktrain:00000000 $t
    {standard input}:4565   .text.SDMMC_BLOCK_SPI_lWaitUntilBusy:00000000 $t
    {standard input}:4643   .text.SDMMC_BLOCK_SPI_lEraseTimeOut:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SPI_CH_EnableSlaveSelect
XMC_SPI_CH_DisableSlaveSelect
SPI_MASTER_Init
memcpy
memset
SPI_MASTER_SetBaudRate
SPI_MASTER_Receive
SPI_MASTER_Transmit
