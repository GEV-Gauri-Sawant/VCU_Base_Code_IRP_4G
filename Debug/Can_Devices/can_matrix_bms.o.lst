   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "can_matrix_bms.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CAN_MO_ResetStatus,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CAN_MO_ResetStatus:
  25              	.LFB323:
  26              	 .file 1 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_can.h"
   1:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2019-07-02
   4:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *****************************************************************************
   7:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.
  11:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  12:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  14:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * do so, all subject to the following:
  20:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  21:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * The copyright notices in the Software and this entire statement, including
  22:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * the above license grant, this restriction and the following disclaimer,
  23:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * all derivative works of the Software, unless such copies or derivative
  25:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * works are solely in the form of machine-executable object code generated by
  26:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * a source language processor.
  27:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  28:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * DEALINGS IN THE SOFTWARE.
  35:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share
  37:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * at XMCSupport@infineon.com.
  39:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *****************************************************************************
  40:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  41:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  42:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  43:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  44:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  45:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  46:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  47:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  49:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  50:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  51:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  52:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  53:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  54:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  55:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  56:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  57:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  58:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  59:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  60:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-01:
  61:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed fCANB clock support <br>
  62:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  63:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-15:
  64:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added "xmc_can_map.h" include <br>
  65:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  66:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-07:
  67:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsPanelControlReady()
  68:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  69:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2017-11-09:
  70:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  71:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  72:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  73:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2019-07-02:
  74:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_GetClockFrequency()
  75:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsListEmpty(), XMC_CAN_GetListBegin(), XMC_CAN_GetListSize(), XMC_CAN_MO_Get
  76:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  77:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  78:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  79:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  80:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  81:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  82:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  83:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  84:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  85:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  86:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  87:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  88:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  89:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  90:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  91:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  92:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  93:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  94:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  95:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  96:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  97:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  98:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  99:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 100:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-20:
 101:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>
 102:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
 103:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 104:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 105:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 106:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
 107:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
 108:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 109:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 110:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
 111:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 112:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
 113:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 114:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
 115:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 116:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
 117:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_can_map.h"
 118:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
 119:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 120:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 121:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
 122:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 123:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 124:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 125:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 126:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 127:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 128:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 129:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 130:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 131:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 132:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes.
 133:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 134:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between
 135:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 136:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 137:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 138:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:
 139:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:
 140:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 141:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 142:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 143:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 144:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:
 145:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 146:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 147:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 148:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 149:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 150:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 151:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 152:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure().
 153:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 154:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:
 155:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 156:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 157:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions
 158:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 159:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent().
 160:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 161:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:
 162:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 163:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 164:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 165:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:
 166:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 167:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 168:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 169:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 170:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 171:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 172:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 173:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 174:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)   /**< Standard Identifier bitposition */
 175:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 176:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 177:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 178:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL) /**< Node event mask */
 179:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 180:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)  /**< Message Object event mask */
 181:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 182:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 183:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 184:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 185:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 186:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 187:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 188:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 189:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 190:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 191:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 192:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 193:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 194:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 195:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 196:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 197:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 198:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 199:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 200:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 201:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 202:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 203:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 204:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 205:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 206:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,   /**< Remove a message object from the list and insert
 207:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 208:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 209:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 210:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 211:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 212:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 213:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 214:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 215:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 216:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 217:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 218:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 219:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 220:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 221:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 222:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 223:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 224:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 225:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 226:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 227:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 228:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 229:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 230:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 231:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 232:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 233:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 234:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 235:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 236:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 237:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 238:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 239:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 240:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 241:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 242:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 243:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 244:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 245:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 246:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 247:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 248:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 249:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 250:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 251:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 252:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 253:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 254:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 255:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 256:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U,       /**< Frame Count Mode */
 257:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 258:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 259:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 260:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 261:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 262:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 263:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 264:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 265:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 266:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 267:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 268:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 269:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 270:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 271:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 272:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 273:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 274:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 275:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 276:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 277:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 278:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 279:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 280:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 281:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 282:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 283:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 284:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 285:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 286:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 287:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 288:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 289:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 290:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 291:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 292:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 293:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 294:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 295:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 296:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 297:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 298:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 299:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 300:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 301:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 302:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 303:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 304:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 305:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 306:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 307:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 308:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 309:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 310:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 311:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 312:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 313:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 314:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 315:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 316:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 317:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 318:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 319:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 320:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 321:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 322:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 323:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 324:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 325:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 326:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 327:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,     /**< Pointer to previous 
 328:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 329:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 330:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 331:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 332:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 333:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 334:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 335:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 336:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 337:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 338:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 339:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 340:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 341:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF = CAN_NODE_NSR_BOFF_Msk,              /**< Bus-off status */
 342:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 343:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 344:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 345:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 346:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 347:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 348:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 349:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 350:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 351:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 352:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 353:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 354:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 355:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 356:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 357:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 358:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 359:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 360:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE = CAN_NODE_NCR_CCE_Msk,    /**< Configuration change enab
 361:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 362:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 363:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 364:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 365:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 366:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 367:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 368:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 369:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 370:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 371:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 372:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 373:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 374:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 375:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 376:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 377:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 378:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 379:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 380:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 381:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 382:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 383:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 384:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 385:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 386:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 387:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 388:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 389:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 390:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 391:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 392:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 393:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 394:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 395:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 396:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 397:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 398:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 399:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 400:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 401:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 402:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 403:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 404:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 405:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 406:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 407:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 408:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 409:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 410:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 411:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 412:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 413:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA,   /**< CAN Receive Input A */
 414:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,   /**< CAN Receive Input B */
 415:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,   /**< CAN Receive Input C */
 416:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,   /**< CAN Receive Input D */
 417:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,   /**< CAN Receive Input E */
 418:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,   /**< CAN Receive Input F */
 419:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,   /**< CAN Receive Input G */
 420:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH    /**< CAN Receive Input H */
 421:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 422:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 423:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 424:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 425:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 426:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 427:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 428:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 429:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 430:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 431:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 432:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 433:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 434:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 435:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 436:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 437:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 438:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 439:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 440:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 441:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 442:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 443:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 444:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 445:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 446:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 447:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0x1U,
 448:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0x2U,
 449:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0x4U,
 450:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0x8U,
 451:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0x16U,
 452:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0x32U,
 453:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0x64U,
 454:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0x128U,
 455:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 456:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 457:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 458:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Clock source used for the MCAN baudrate generator
 459:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 460:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_CANCLKSRC
 461:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 462:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 463:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if (UC_FAMILY == XMC4)
 464:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 465:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #else
 466:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_MCLK = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock. 
 467:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 468:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U, /**< Use high performance oscillator (fOHP) as MCAN baudrate gener
 469:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #else
 470:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 471:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 472:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_CANCLKSRC_t;
 473:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 474:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 475:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 476:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 477:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 478:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 479:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 480:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 481:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 482:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;     /**< Frequency of the CAN module(fCAN). \a can_frequency shall be ran
 483:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;          /**< Specifies the node baud rate. Unit: baud \a baudrate shall be ra
 484:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;      /**< Sample point is used to compensate mismatch between transmitter 
 485:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                                    the synchronization segment. Sample point. Range = [0, 10000] wi
 486:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;               /**< (Re) Synchronization Jump Width. Range:0-3 */
 487:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 488:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 489:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 490:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 491:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 492:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 493:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 494:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 495:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;    /**< points to the first element(slave object) in a FIFO structure.Range 
 496:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;     /**< points to the last element(slave object) in a FIFO structure. Range :0
 497:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;    /**< points to the actual target object(Base object) within a FIFO/Gateway 
 498:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 499:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 500:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 501:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 502:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 503:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 504:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 505:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 506:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom;       /**< points to the first element(gateway destination object) in a F
 507:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;        /**< points to the last element(gateway destination object) in a FIFO
 508:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;       /**< points to the actual target object within a FIFO/Gateway structu
 509:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;   /**< TXRQ updated in the gateway destination object after the int
 510:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object */
 511:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;   /**< The identifier of the gateway source object (after storing t
 512:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object. */
 513:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 514:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 515:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                                            gateway destination object */
 516:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 517:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                                 are copied to the gateway destination.*/
 518:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 519:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 520:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 521:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 522:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 523:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 524:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 525:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 526:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 527:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 528:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #pragma push
 529:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #pragma anon_unions
 530:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 531:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #pragma warning 586
 532:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 533:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 534:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 535:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 536:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 537:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 538:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 539:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 540:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 541:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 542:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   union
 543:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   {
 544:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     struct
 545:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     {
 546:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 16;
 547:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_selection: 3;  /**<   Defines function of the frame counter  */
 548:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_mode: 2;     /**<   Determines the operation mode of the frame count
 549:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 11;
 550:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     };
 551:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t nfcr;
 552:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 553:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   };
 554:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 555:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 556:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 557:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 558:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 559:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 560:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 561:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 562:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 563:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 564:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 565:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 566:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register *
 567:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   union
 568:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   {
 569:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     struct
 570:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     {
 571:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_identifier: 29;           /**< standard (11 bit)/Extended (29 bit) message ident
 572:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mode: 1;               /**< Standard/Extended identifier support */
 573:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_priority: 2;              /**< Arbitration Mode/Priority */
 574:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     };
 575:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_ar;
 576:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   };
 577:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   union
 578:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   {
 579:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     struct
 580:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     {
 581:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mask: 29;             /**< CAN Identifier of Message Object */
 582:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_ide_mask: 1;             /**< Identifier Extension Bit of Message Object */
 583:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     };
 584:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_amr;
 585:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   };
 586:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 587:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 588:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   union
 589:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   {
 590:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 591:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint8_t can_data_byte[8];                 /**< Each position of the array represents a data byt
 592:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bits 
 593:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_data[
 594:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                               of the data */
 595:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint64_t can_data_long;                   /** Data of the Message Object*/
 596:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   };
 597:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 598:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 599:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 600:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 601:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 602:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 603:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #pragma pop
 604:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 605:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #pragma warning restore
 606:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 607:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 608:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 609:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 610:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 611:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 612:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 613:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 614:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 615:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 616:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 617:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 618:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 619:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 620:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 621:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 622:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 623:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 624:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 625:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 626:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 627:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 628:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 629:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 630:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 631:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 632:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 633:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 634:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *         for details.
 635:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 636:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 637:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 638:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 639:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 640:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 641:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 642:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 643:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 644:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 645:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 646:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 647:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 648:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 649:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 650:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 651:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 652:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 653:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 654:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num  CAN node number,Range : 0-2
 655:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num  CAN Message Object number,Range : 0-63
 656:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 657:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 658:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 659:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 660:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 661:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 662:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 663:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 664:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 665:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 666:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 667:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 668:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 669:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 670:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 671:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 672:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 673:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 674:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 675:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 676:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return Ready status of list controller
 677:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 678:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 679:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns ready status of the list controller
 680:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 681:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 682:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_PanelControl()
 683:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 684:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 685:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE bool XMC_CAN_IsPanelControlReady(XMC_CAN_t *const obj)
 686:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 687:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (bool)((obj->PANCTR & (CAN_PANCTR_BUSY_Msk | CAN_PANCTR_RBUSY_Msk)) == 0);
 688:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
 689:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 690:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 691:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 692:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 693:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 694:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 695:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 696:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1   Panel Argument 1,Range : 0-2
 697:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2   Panel Argument 2, Range : 0-63
 698:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 699:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 700:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 701:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 702:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 703:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 704:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 705:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 706:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 707:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 708:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 709:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 710:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 711:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 712:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 713:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 714:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_PANCMD_t pancmd,
 715:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const uint8_t arg1,
 716:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const uint8_t arg2)
 717:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 718:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 719:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 720:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 721:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
 722:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 723:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 724:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 725:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 726:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 727:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 728:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 729:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr  Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_T
 730:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *               Multiple interrupt trigger events can be ORed.
 731:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 732:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 733:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 734:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 735:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 736:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 737:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 738:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 739:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 740:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 741:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 742:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 743:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj, const XMC_CAN_NODE_INTERRUPT_TRIGGE
 744:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 745:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 746:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
 747:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 748:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 749:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 750:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 751:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 752:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 753:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 754:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source
 755:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN).
 756:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        The can_frequency shall be an integer divisor of the CAN clock source frequency (fPERI/fM
 757:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        it should be selected such that if fulfills the minimum operating frequency specified in 
 758:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        In addition the can_frequency shall be an integer multiple of the baudrate.
 759:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        Max. value: Max. clock source frequency, i.e. if using fOHP and using a XTAL of 20MHz the
 760:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 761:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return Actual frequency
 762:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 763:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 764:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_Init() configures clock rate of the module timer clock fCAN.
 765:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that only the normal divider is used to avoid jitter.
 766:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * In addition the actual achievable frequency is returned.
 767:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 768:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 769:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Altering CAN module \a can_frequency shall affects baud rate, call XMC_CAN_NODE_NominalBitTimeCo
 770:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 771:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 772:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 773:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx()\n\n\n
 774:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 775:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 776:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 777:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 778:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 779:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 780:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 781:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 782:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return Baudrate generator clock source
 783:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 784:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 785:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Returns CAN baudrate generator clock source
 786:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 787:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj);
 788:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 789:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 790:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 791:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 792:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 793:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 794:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 795:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 796:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Sets CAN baudrate generator clock source
 797:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 798:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj, const XMC_CAN_CANCLKSRC_t source);
 799:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 800:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 801:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 802:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 803:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 804:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return baudrate generator input clock frequency
 805:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 806:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 807:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN baudrate generator input clock frequency
 808:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 809:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj);
 810:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 811:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 812:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 813:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 814:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 815:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return fCAN clock frequency
 816:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 817:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 818:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN base clock frequency
 819:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 820:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 821:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj);
 822:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 823:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 824:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 825:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 826:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 827:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 828:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 829:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source.
 830:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). Max. value: Max. clock source frequency, i.e. i
 831:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use clksrc parameter only for XMC1400 series and XMC47/4800 series projects, otherwise omi
 832:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 833:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 834:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 835:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 836:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 837:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() or XMC_CAN_NODE_NominalBitTimeConfigureEx() to confi
 838:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 839:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 840:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 841:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 842:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 843:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx(), XMC_CAN_InitEx
 844:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 845:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 846:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 847:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #else
 848:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 849:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 850:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 851:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 852:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 853:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 854:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 855:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 856:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 857:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 858:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 859:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 860:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 861:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 862:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
 863:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 864:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 865:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 866:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 867:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /* NODE APIs */
 868:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 869:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 870:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 871:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node      Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 872:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event     CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_
 873:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 874:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 875:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 876:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 877:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 878:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 879:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 880:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 881:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
 882:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 883:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 884:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 885:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 886:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 887:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const uint32_t service_request)
 888:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 889:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
 890:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
 891:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 892:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 893:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 894:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 895:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 896:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 897:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 898:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 899:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 900:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 901:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 902:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 903:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 904:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 905:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
 906:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 907:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 908:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure(XMC_CAN_NODE_t *const can_node,
 909:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time);
 910:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 911:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 912:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 913:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 914:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 915:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 916:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return Status on the sucess setting the desired bitrate XMC_CAN_STATUS_t
 917:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 918:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 919:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_NODE_NominalBitTimeConfigure() configures the CAN node baudrate.
 920:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that allows bitrates below 100kpbs.
 921:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @note Consider using the new API for new projects. XMC_CAN_NODE_NominalBitTimeConfigure() is kep
 922:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 923:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 924:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 925:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 926:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 927:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_InitEx()
 928:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 929:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 930:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 931:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time);
 932:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 933:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 934:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 935:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 936:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 937:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 938:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 939:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 940:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 941:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 942:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 943:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 944:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 945:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 946:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
 947:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 948:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 949:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 950:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 951:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 952:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 953:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 954:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 955:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 956:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 957:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
 958:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
 959:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 960:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 961:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 962:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_
 963:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 964:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 965:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 966:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 967:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 968:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 969:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 970:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 971:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 972:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 973:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 974:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 975:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 976:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 977:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 978:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 979:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 980:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 981:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 982:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 983:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 984:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
 985:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 986:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 987:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 988:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 989:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 990:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 991:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 992:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 993:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 994:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 995:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 996:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 997:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 998:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 999:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1000:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1001:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1002:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
1003:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1004:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1005:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1006:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
1007:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1008:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
1009:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1010:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1011:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1012:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1013:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1014:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1015:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1016:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1017:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1018:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1019:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1020:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1021:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
1022:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1023:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1024:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
1025:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1026:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1027:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1028:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1029:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1030:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1031:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1032:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1033:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1034:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1035:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1036:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1037:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1038:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1039:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1040:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
1041:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1042:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1043:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
1044:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1045:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1046:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1047:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1048:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1049:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1050:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1051:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1052:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1053:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1054:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
1055:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1056:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1057:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
1058:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1059:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1060:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferInc()\n\n\n
1061:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1062:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1063:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1064:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
1065:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1066:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
1067:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1068:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1069:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1070:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1071:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1072:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1073:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1074:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
1075:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1076:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1077:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
1078:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1079:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1080:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferDir()\n\n\n
1081:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1082:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1083:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1084:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
1085:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1086:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk) >> CAN_NODE_NEC
1087:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1088:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1089:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1090:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1091:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1092:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1093:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level  Error Warning level value. Range :0-255.
1094:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1095:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1096:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1097:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1098:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
1099:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
1100:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1101:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1102:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
1103:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1104:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1105:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1106:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1107:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1108:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1109:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
1110:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1111:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
1112:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
1113:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1114:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1115:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1116:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1117:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1118:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1119:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
1120:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1121:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1122:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1123:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1124:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
1125:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
1126:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1127:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1128:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
1129:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1130:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
1131:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1132:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1133:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1134:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1135:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1136:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
1137:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1138:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
1139:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
1140:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1141:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1142:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1143:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1144:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1145:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1146:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
1147:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1148:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1149:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1150:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1151:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
1152:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
1153:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1154:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1155:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
1156:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1157:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1158:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1159:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1160:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1161:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1162:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
1163:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1164:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
1165:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_M
1166:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1167:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1168:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1169:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1170:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1171:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1172:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1173:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1174:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1175:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1176:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns error warning level. This determines the threshold value (warning level, default 96) to
1177:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  to set the corresponding error warning bit EWRN. It reads NECNT register.
1178:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1179:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1180:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1181:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1182:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1183:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1184:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1185:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1186:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1187:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EW
1188:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1189:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1190:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1191:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1192:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1193:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1194:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1195:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1196:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1197:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1198:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a trans
1199:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the err
1200:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1201:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1202:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1203:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1204:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1205:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1206:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1207:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1208:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1209:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1210:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1211:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1212:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1213:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1214:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1215:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1216:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1217:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1218:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1219:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1220:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t  receive error counter value.
1221:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1222:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1223:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Receive Error Counter value. It reads NECNT register.
1224:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1225:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1226:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1227:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1228:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1229:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1230:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1231:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1232:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1233:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1234:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1235:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1236:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1237:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1238:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1239:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1240:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1241:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1242:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1243:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1244:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1245:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1246:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1247:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1248:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1249:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1250:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1251:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1252:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
1253:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1254:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1255:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1256:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1257:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1258:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_status Status to clear.Refer @ref XMC_CAN_NODE_STATUS_t for valid values.
1259:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1260:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1261:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1262:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1263:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1264:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1265:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1266:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1267:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1268:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1269:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1270:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node, XMC_CAN_NODE_STATUS_t
1271:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1272:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NSR &= ~(uint32_t)can_node_status;
1273:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1274:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1275:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1276:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1277:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1278:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1279:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1280:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1281:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1282:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1283:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1284:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1285:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1286:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1287:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1288:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1289:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1290:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1291:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1292:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1293:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
1294:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1295:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1296:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1297:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1298:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1299:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1300:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1301:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1302:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1303:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1304:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1305:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1306:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1307:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1308:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1309:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1310:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1311:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1312:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1313:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
1314:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1315:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1316:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1317:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1318:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1319:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1320:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1321:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1322:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1323:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1324:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1325:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Disable CAN node participation in CAN traffic. Bit INIT is automatically set when the CAN node e
1326:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * state. It configures NCR.INIT bit.
1327:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1328:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1329:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit()
1330:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1331:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1332:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1333:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetInitBit(XMC_CAN_NODE_t *const can_node)
1334:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1335:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_INIT_Msk;
1336:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1337:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1338:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1339:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1340:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1341:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1342:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1343:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1344:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1345:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Enable CAN node participation in CAN traffic. Bit INIT is automatically set when the CAN node en
1346:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * state. It configures NCR.INIT bit.
1347:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1348:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1349:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit()
1350:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1351:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1352:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ResetInitBit(XMC_CAN_NODE_t *const can_node)
1353:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1354:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_INIT_Msk;
1355:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1356:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1357:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1358:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1359:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1360:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1361:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1362:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1363:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1364:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Enable the CAN node, starts the participation in CAN traffic. It configures NCR.CANDIS and the N
1365:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1366:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1367:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1368:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1369:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1370:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_Enable(XMC_CAN_NODE_t *const can_node)
1371:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1372:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CANDIS_Msk;
1373:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_ResetInitBit(can_node);
1374:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1375:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1376:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1377:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1378:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1379:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1380:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1381:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1382:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1383:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Disable the CAN node, terminates participation in CAN traffic. It configures NCR.CANDIS bit.
1384:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1385:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1386:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1387:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1388:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1389:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_Disable(XMC_CAN_NODE_t *const can_node)
1390:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1391:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CANDIS_Msk;
1392:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1393:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1394:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1395:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1396:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1397:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1398:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1399:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1400:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configure CAN node in Analyzer Mode. This means that messages may be received, but not transmitt
1401:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * is sent on the CAN bus upon frame reception. Active-error flags are sent recessive instead of do
1402:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * The transmit line is continuously held at recessive (1) level. XMC_CAN_NODE_SetInitBit() should 
1403:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * set / reset AnalyzerMode. It configures NCR.CALM bit.
1404:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1405:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1406:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ReSetAnalyzerMode()
1407:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1408:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1409:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1410:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1411:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetAnalyzerMode(XMC_CAN_NODE_t *const can_node)
1412:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1413:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CALM_Msk;
1414:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1415:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1416:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1417:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1418:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1419:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1420:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1421:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1422:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1423:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Reset the Analyzer mode. CAN node is no more in Analyzer Mode. Please refer XMC_CAN_NODE_SetAnal
1424:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NCR.CALM bit. XMC_CAN_NODE_SetInitBit() should be called before set / reset Analyz
1425:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1426:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1427:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetAnalyzerMode()
1428:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1429:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1430:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1431:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ReSetAnalyzerMode(XMC_CAN_NODE_t *const can_node)
1432:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1433:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CALM_Msk;
1434:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1435:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1436:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
1437:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1438:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1439:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1440:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1441:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1442:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1443:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Trigger the suspension of the CAN node. An OCDS(on chip debug support) suspend trigger disables 
1444:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * soon as the CAN node becomes bus-idle or bus-off, bit INIT is internally forced to 1 to disable 
1445:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * The actual value of bit INIT remains unchanged. It configures NCR.SUSEN bit
1446:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1447:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1448:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1449:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1450:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Note:</b><br>
1451:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Bit SUSEN is reset via OCDS(on chip debug support) Reset.
1452:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1453:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1454:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1455:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableSuspend(XMC_CAN_NODE_t *const can_node)
1456:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1457:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_SUSEN_Msk;
1458:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1459:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #else
1460:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1461:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1462:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1463:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1464:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1465:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1466:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Disables the transmission on CAN node x as soon as bus-idle is reached.
1467:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1468:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1469:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1470:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1471:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @note Only available for XMC1400,XMC4800 and XMC4700 series
1472:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1473:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1474:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableTransmit(XMC_CAN_NODE_t *const can_node)
1475:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1476:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_TXDIS_Msk;
1477:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1478:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
1479:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1480:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1481:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1482:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1483:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1484:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_init frame counter mode selection. Refer @ref XMC_CAN_NODE_FRAME_COUNTER_t for v
1485:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1486:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1487:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1488:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1489:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures frame counter functions. Each CAN \a can_node is equipped with a frame counter that c
1490:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * CAN frames or obtains information about the time when a frame has been started to transmit or be
1491:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * node. It configures NFCR register.
1492:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1493:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1494:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1495:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1496:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1497:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1498:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_FrameCounterConfigure(XMC_CAN_NODE_t *const can_node,
1499:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_FRAME_COUNTER_t *const can_node_init)
1500:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1501:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NFCR = (can_node->NFCR & ~(uint32_t)(CAN_NODE_NFCR_CFMOD_Msk |
1502:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                     CAN_NODE_NFCR_CFSEL_Msk)) |
1503:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                    can_node_init->nfcr;
1504:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1505:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1506:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1507:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1508:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1509:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1510:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1511:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint16_t current value of the CAN frame counter. Range :0-65535
1512:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1513:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1514:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns the frame counter value \a can_node of the CAN node. In Frame Count Mode (CFMOD = 00B),
1515:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  count value. In Time Stamp Mode (CFMOD = 01B), this API returns the captured bit time count val
1516:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  the start of a new frame. In all Bit Timing Analysis Modes (CFMOD = 10B), this API always retur
1517:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  fCLC clock cycles (measurement result) minus 1.
1518:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1519:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1520:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1521:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1522:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1523:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1524:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint16_t XMC_CAN_NODE_GetCANFrameCounter(XMC_CAN_NODE_t *const can_node)
1525:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1526:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (uint16_t)(((uint32_t)(can_node->NFCR & CAN_NODE_NFCR_CFC_Msk) >> CAN_NODE_NFCR_CFC_Pos));
1527:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1528:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1529:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /*MO APIs*/
1530:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1531:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1532:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1533:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1534:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1535:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1536:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1537:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1538:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1539:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1540:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Data to be transmitted and data length code.
1541:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1542:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1543:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_Config()\n\n\n
1544:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1545:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1546:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1547:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1548:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo);
1549:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1550:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1551:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1552:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1553:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1554:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1555:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1556:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1557:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures transmit request for sending data frame. It configures MOCTR register. Data shall be
1558:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  using XMC_CAN_MO_UpdateData() before calling this API.
1559:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1560:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1561:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_UpdateData()\n\n\n
1562:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1563:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1564:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1565:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo);
1566:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1567:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1568:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1569:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1570:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1571:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1572:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1573:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1574:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Reads the Message Object data bytes, into message pointer passed as input parameter \a can_mo.
1575:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  can_data[0] of can_mo holds lower 4 bytes, can_data[1] of can_mo holds higher 4 bytes.
1576:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1577:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1578:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1579:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1580:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1581:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1582:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive(XMC_CAN_MO_t *can_mo);
1583:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1584:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1585:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1586:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1587:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1588:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1589:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1590:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1591:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Reads the Message Object data bytes, into message pointer passed as input parameter \a can_mo.
1592:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  can_data[0] of can_mo holds lower 4 bytes, can_data[1] of can_mo holds higher 4 bytes.
1593:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1594:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1595:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1596:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1597:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1598:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo);
1599:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1600:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo       Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure 
1601:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo_ptr_int   Message Object event node pointer selection. Refer @ref XMC_CAN_MO_POINT
1602:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *                for valid values.
1603:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request interrupt output line of multiCAN module.
1604:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1605:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1606:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1607:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1608:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Message Object event node pointer with \a service_request number. It configures MOIPR
1609:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1610:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1611:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1612:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1613:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1614:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1615:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_SetEventNodePointer(const XMC_CAN_MO_t *const can_mo,
1616:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_MO_POINTER_EVENT_t can_mo_ptr_int,
1617:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const uint32_t service_request)
1618:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1619:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOIPR = ((can_mo->can_mo_ptr->MOIPR ) & ~(uint32_t)((uint32_t)CAN_MO_MOIPR_Ms
1620:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                               (service_request << (uint32_t)can_mo_ptr_int);
1621:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1622:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1623:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1624:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1625:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1626:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current Message Object status.
1627:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1628:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1629:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Message Object status, that indicates message object transfer status and message object
1630:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  information such as the number of the current message object predecessor and successor message 
1631:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  the list number to which the message object is assigned.
1632:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1633:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1634:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1635:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1636:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1637:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1638:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_MO_GetStatus(const XMC_CAN_MO_t *const can_mo)
1639:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1640:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_mo->can_mo_ptr->MOSTAT));
1641:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1642:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1643:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1644:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1645:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1646:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param mask   Message Object set status selection. Refer @ref XMC_CAN_MO_SET_STATUS_t for detail
1647:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *         Multiple enums can be ORed.
1648:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1649:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1650:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1651:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Message Object set Status. It configures MOCTR register.
1652:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1653:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1654:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_ResetStatus()\n\n\n
1655:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1656:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1657:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1658:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_SetStatus(const XMC_CAN_MO_t *const can_mo, const uint32_t mask)
1659:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1660:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOCTR = mask;
1661:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1662:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1663:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1664:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1665:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1666:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param mask   Message Object set status selection. Refer @ref XMC_CAN_MO_RESET_STATUS_t for deta
1667:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *             Multiple enums can be ORed.
1668:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1669:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1670:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1671:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Clears Message Object interrupt events. It configures MOCTR register.
1672:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1673:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1674:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1675:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1676:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1677:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1678:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_ResetStatus(const XMC_CAN_MO_t *const can_mo, const uint32_t mask)
1679:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
  27              	 .loc 1 1679 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 3960     	 str r1,[r7]
1680:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOCTR = mask;
  44              	 .loc 1 1680 0
  45 000a 7B68     	 ldr r3,[r7,#4]
  46 000c 1B68     	 ldr r3,[r3]
  47 000e 3A68     	 ldr r2,[r7]
  48 0010 DA61     	 str r2,[r3,#28]
1681:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
  49              	 .loc 1 1681 0
  50 0012 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0014 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0016 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001a 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE323:
  65              	 .comm BMS_SOC,1,1
  66              	 .comm CAN_MSG_DB_HVAC,60,4
  67              	 .comm eps_status,4,4
  68              	 .comm instrument_clustor_doors,1,1
  69              	 .comm CAN_BMS_29bit,132,4
  70              	 .comm CAN_IRP_29bit,132,4
  71              	 .comm charge_complete,1,1
  72              	 .comm charging_started,1,1
  73              	 .comm Bms_SOC,2,2
  74              	 .comm Bms_SOH,2,2
  75              	 .comm Mapped_BMS_SOC,1,1
  76              	 .comm Bms_minTemp,2,2
  77              	 .comm Bms_maxTemp,2,2
  78              	 .comm PackCurrent,4,4
  79              	 .comm PackVoltage,4,4
  80              	 .comm RegenerativeCurrentLimit,2,2
  81              	 .comm ChargeCurrentLimit,2,2
  82              	 .comm DischargeCurrentLimit,2,2
  83              	 .comm HvBatteryPower,4,4
  84              	 .comm bmsFault1,4,4
  85              	 .comm bmsFault2,4,4
  86              	 .comm GtakeFaults,4,4
  87              	 .comm allFault_indicator,3,4
  88              	 .comm cluster_Fault_Indicator,4,4
  89              	 .comm Mcu_Temp,4,4
  90              	 .comm Motor_Temp,4,4
  91              	 .comm VehicleSpeedglb,2,2
  92              	 .comm OBDII_CAN,60,4
  93              	 .comm OBD_data,2,2
  94              	 .comm Irp_Mcu_drive_states_29bit,4,4
  95              	 .comm Irp_Mcu_BMS_states_29bit,4,4
  96              	 .comm Irp_Mcu_Torques_29bit,4,4
  97              	 .comm Irp_Mcu_BMS_Currents_29bit,4,4
  98              	 .comm Irp_MCU_Status_29bit,4,4
  99              	 .comm Irp_MCU_Faults_29bit,4,4
 100              	 .comm DC_Current_irp,2,2
 101              	 .comm MotorPower_Irp,2,2
 102              	 .comm Torque_Estimation,2,2
 103              	 .comm DC_Voltage_irp,2,2
 104              	 .comm Mcu_Temp_Irp,2,2
 105              	 .comm Motor_Temp_Irp,2,2
 106              	 .comm RPM,2,2
 107              	 .comm Regenration_flag,1,1
 108              	 .comm hv_count,2,2
 109              	 .comm BMS_Avg_temp,4,4
 110              	 .comm AC_ON_4g,1,1
 111              	 .comm speed_4g,2,2
 112              	 .global CAN_MSG_DB_BMS
 113              	 .section .data.CAN_MSG_DB_BMS,"aw",%progbits
 114              	 .align 2
 117              	CAN_MSG_DB_BMS:
 118 0000 02010000 	 .word 258
 119 0004 00       	 .byte 0
 120 0005 00       	 .byte 0
 121 0006 00       	 .byte 0
 122 0007 00       	 .byte 0
 123 0008 00       	 .byte 0
 124 0009 00       	 .byte 0
 125 000a 00       	 .byte 0
 126 000b 00       	 .byte 0
 127 000c 03010000 	 .word 259
 128 0010 00       	 .byte 0
 129 0011 00       	 .byte 0
 130 0012 00       	 .byte 0
 131 0013 00       	 .byte 0
 132 0014 00       	 .byte 0
 133 0015 00       	 .byte 0
 134 0016 00       	 .byte 0
 135 0017 00       	 .byte 0
 136 0018 04010000 	 .word 260
 137 001c 00       	 .byte 0
 138 001d 00       	 .byte 0
 139 001e 00       	 .byte 0
 140 001f 00       	 .byte 0
 141 0020 00       	 .byte 0
 142 0021 00       	 .byte 0
 143 0022 00       	 .byte 0
 144 0023 00       	 .byte 0
 145 0024 05010000 	 .word 261
 146 0028 00       	 .byte 0
 147 0029 00       	 .byte 0
 148 002a 00       	 .byte 0
 149 002b 00       	 .byte 0
 150 002c 00       	 .byte 0
 151 002d 00       	 .byte 0
 152 002e 00       	 .byte 0
 153 002f 00       	 .byte 0
 154 0030 13010000 	 .word 275
 155 0034 00       	 .byte 0
 156 0035 00       	 .byte 0
 157 0036 00       	 .byte 0
 158 0037 00       	 .byte 0
 159 0038 00       	 .byte 0
 160 0039 00       	 .byte 0
 161 003a 00       	 .byte 0
 162 003b 00       	 .byte 0
 163 003c 14010000 	 .word 276
 164 0040 00       	 .byte 0
 165 0041 00       	 .byte 0
 166 0042 00       	 .byte 0
 167 0043 00       	 .byte 0
 168 0044 00       	 .byte 0
 169 0045 00       	 .byte 0
 170 0046 00       	 .byte 0
 171 0047 00       	 .byte 0
 172 0048 16010000 	 .word 278
 173 004c 00       	 .byte 0
 174 004d 00       	 .byte 0
 175 004e 00       	 .byte 0
 176 004f 00       	 .byte 0
 177 0050 00       	 .byte 0
 178 0051 00       	 .byte 0
 179 0052 00       	 .byte 0
 180 0053 00       	 .byte 0
 181              	 .section .text.process_Read_CAN_0x102,"ax",%progbits
 182              	 .align 2
 183              	 .global process_Read_CAN_0x102
 184              	 .thumb
 185              	 .thumb_func
 187              	process_Read_CAN_0x102:
 188              	.LFB605:
 189              	 .file 2 "../Can_Devices/can_matrix_bms.c"
   1:../Can_Devices/can_matrix_bms.c **** #include "DAVE.h"
   2:../Can_Devices/can_matrix_bms.c **** #include "can_matrix.h"
   3:../Can_Devices/can_matrix_bms.c **** 
   4:../Can_Devices/can_matrix_bms.c **** CAN_MSG_t CAN_MSG_DB_BMS[CAN_BMS_MAX] =
   5:../Can_Devices/can_matrix_bms.c **** {
   6:../Can_Devices/can_matrix_bms.c **** 		{0x102,	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
   7:../Can_Devices/can_matrix_bms.c **** 		{0x103, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
   8:../Can_Devices/can_matrix_bms.c **** 		{0x104, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
   9:../Can_Devices/can_matrix_bms.c **** 		{0x105, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  10:../Can_Devices/can_matrix_bms.c **** 		{0x113, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  11:../Can_Devices/can_matrix_bms.c **** 		{0x114, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  12:../Can_Devices/can_matrix_bms.c **** 		{0x116, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  13:../Can_Devices/can_matrix_bms.c **** };
  14:../Can_Devices/can_matrix_bms.c **** 
  15:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x102(void)
  16:../Can_Devices/can_matrix_bms.c **** {
 190              	 .loc 2 16 0
 191              	 .cfi_startproc
 192              	 
 193              	 
 194 0000 80B5     	 push {r7,lr}
 195              	.LCFI6:
 196              	 .cfi_def_cfa_offset 8
 197              	 .cfi_offset 7,-8
 198              	 .cfi_offset 14,-4
 199 0002 84B0     	 sub sp,sp,#16
 200              	.LCFI7:
 201              	 .cfi_def_cfa_offset 24
 202 0004 00AF     	 add r7,sp,#0
 203              	.LCFI8:
 204              	 .cfi_def_cfa_register 7
  17:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
  18:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 205              	 .loc 2 18 0
 206 0006 094B     	 ldr r3,.L3
 207 0008 FB60     	 str r3,[r7,#12]
  19:../Can_Devices/can_matrix_bms.c **** 
  20:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x102;
 208              	 .loc 2 20 0
 209 000a 0323     	 movs r3,#3
 210 000c FB72     	 strb r3,[r7,#11]
  21:../Can_Devices/can_matrix_bms.c **** 
  22:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x102].CAN_Data[ZERO_BYTE];
 211              	 .loc 2 22 0
 212 000e 084B     	 ldr r3,.L3+4
 213 0010 7B60     	 str r3,[r7,#4]
  23:../Can_Devices/can_matrix_bms.c **** 
  24:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
  25:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 214              	 .loc 2 25 0
 215 0012 FB7A     	 ldrb r3,[r7,#11]
 216 0014 FA68     	 ldr r2,[r7,#12]
 217 0016 0233     	 adds r3,r3,#2
 218 0018 9B00     	 lsls r3,r3,#2
 219 001a 1344     	 add r3,r3,r2
 220 001c 5B68     	 ldr r3,[r3,#4]
 221 001e 1846     	 mov r0,r3
 222 0020 7968     	 ldr r1,[r7,#4]
 223 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
  26:../Can_Devices/can_matrix_bms.c **** 
  27:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
  28:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x102();
  29:../Can_Devices/can_matrix_bms.c **** }
 224              	 .loc 2 29 0
 225 0026 1037     	 adds r7,r7,#16
 226              	.LCFI9:
 227              	 .cfi_def_cfa_offset 8
 228 0028 BD46     	 mov sp,r7
 229              	.LCFI10:
 230              	 .cfi_def_cfa_register 13
 231              	 
 232 002a 80BD     	 pop {r7,pc}
 233              	.L4:
 234              	 .align 2
 235              	.L3:
 236 002c 00000000 	 .word CAN_NODE_1
 237 0030 04000000 	 .word CAN_MSG_DB_BMS+4
 238              	 .cfi_endproc
 239              	.LFE605:
 241              	 .section .text.process_Read_CAN_0x103,"ax",%progbits
 242              	 .align 2
 243              	 .global process_Read_CAN_0x103
 244              	 .thumb
 245              	 .thumb_func
 247              	process_Read_CAN_0x103:
 248              	.LFB606:
  30:../Can_Devices/can_matrix_bms.c **** 
  31:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x103(void)
  32:../Can_Devices/can_matrix_bms.c **** {
 249              	 .loc 2 32 0
 250              	 .cfi_startproc
 251              	 
 252              	 
 253 0000 80B5     	 push {r7,lr}
 254              	.LCFI11:
 255              	 .cfi_def_cfa_offset 8
 256              	 .cfi_offset 7,-8
 257              	 .cfi_offset 14,-4
 258 0002 84B0     	 sub sp,sp,#16
 259              	.LCFI12:
 260              	 .cfi_def_cfa_offset 24
 261 0004 00AF     	 add r7,sp,#0
 262              	.LCFI13:
 263              	 .cfi_def_cfa_register 7
  33:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
  34:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 264              	 .loc 2 34 0
 265 0006 094B     	 ldr r3,.L6
 266 0008 FB60     	 str r3,[r7,#12]
  35:../Can_Devices/can_matrix_bms.c **** 
  36:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x103;
 267              	 .loc 2 36 0
 268 000a 0423     	 movs r3,#4
 269 000c FB72     	 strb r3,[r7,#11]
  37:../Can_Devices/can_matrix_bms.c **** 
  38:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x103].CAN_Data[ZERO_BYTE];
 270              	 .loc 2 38 0
 271 000e 084B     	 ldr r3,.L6+4
 272 0010 7B60     	 str r3,[r7,#4]
  39:../Can_Devices/can_matrix_bms.c **** 
  40:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
  41:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 273              	 .loc 2 41 0
 274 0012 FB7A     	 ldrb r3,[r7,#11]
 275 0014 FA68     	 ldr r2,[r7,#12]
 276 0016 0233     	 adds r3,r3,#2
 277 0018 9B00     	 lsls r3,r3,#2
 278 001a 1344     	 add r3,r3,r2
 279 001c 5B68     	 ldr r3,[r3,#4]
 280 001e 1846     	 mov r0,r3
 281 0020 7968     	 ldr r1,[r7,#4]
 282 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
  42:../Can_Devices/can_matrix_bms.c **** 
  43:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
  44:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x103();
  45:../Can_Devices/can_matrix_bms.c **** }
 283              	 .loc 2 45 0
 284 0026 1037     	 adds r7,r7,#16
 285              	.LCFI14:
 286              	 .cfi_def_cfa_offset 8
 287 0028 BD46     	 mov sp,r7
 288              	.LCFI15:
 289              	 .cfi_def_cfa_register 13
 290              	 
 291 002a 80BD     	 pop {r7,pc}
 292              	.L7:
 293              	 .align 2
 294              	.L6:
 295 002c 00000000 	 .word CAN_NODE_1
 296 0030 10000000 	 .word CAN_MSG_DB_BMS+16
 297              	 .cfi_endproc
 298              	.LFE606:
 300              	 .section .text.process_Read_CAN_0x104,"ax",%progbits
 301              	 .align 2
 302              	 .global process_Read_CAN_0x104
 303              	 .thumb
 304              	 .thumb_func
 306              	process_Read_CAN_0x104:
 307              	.LFB607:
  46:../Can_Devices/can_matrix_bms.c **** 
  47:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x104(void)
  48:../Can_Devices/can_matrix_bms.c **** {
 308              	 .loc 2 48 0
 309              	 .cfi_startproc
 310              	 
 311              	 
 312 0000 80B5     	 push {r7,lr}
 313              	.LCFI16:
 314              	 .cfi_def_cfa_offset 8
 315              	 .cfi_offset 7,-8
 316              	 .cfi_offset 14,-4
 317 0002 84B0     	 sub sp,sp,#16
 318              	.LCFI17:
 319              	 .cfi_def_cfa_offset 24
 320 0004 00AF     	 add r7,sp,#0
 321              	.LCFI18:
 322              	 .cfi_def_cfa_register 7
  49:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
  50:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 323              	 .loc 2 50 0
 324 0006 094B     	 ldr r3,.L9
 325 0008 FB60     	 str r3,[r7,#12]
  51:../Can_Devices/can_matrix_bms.c **** 
  52:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x104;
 326              	 .loc 2 52 0
 327 000a 0523     	 movs r3,#5
 328 000c FB72     	 strb r3,[r7,#11]
  53:../Can_Devices/can_matrix_bms.c **** 
  54:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x104].CAN_Data[ZERO_BYTE];
 329              	 .loc 2 54 0
 330 000e 084B     	 ldr r3,.L9+4
 331 0010 7B60     	 str r3,[r7,#4]
  55:../Can_Devices/can_matrix_bms.c **** 
  56:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
  57:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 332              	 .loc 2 57 0
 333 0012 FB7A     	 ldrb r3,[r7,#11]
 334 0014 FA68     	 ldr r2,[r7,#12]
 335 0016 0233     	 adds r3,r3,#2
 336 0018 9B00     	 lsls r3,r3,#2
 337 001a 1344     	 add r3,r3,r2
 338 001c 5B68     	 ldr r3,[r3,#4]
 339 001e 1846     	 mov r0,r3
 340 0020 7968     	 ldr r1,[r7,#4]
 341 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
  58:../Can_Devices/can_matrix_bms.c **** 
  59:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
  60:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x103();
  61:../Can_Devices/can_matrix_bms.c **** }
 342              	 .loc 2 61 0
 343 0026 1037     	 adds r7,r7,#16
 344              	.LCFI19:
 345              	 .cfi_def_cfa_offset 8
 346 0028 BD46     	 mov sp,r7
 347              	.LCFI20:
 348              	 .cfi_def_cfa_register 13
 349              	 
 350 002a 80BD     	 pop {r7,pc}
 351              	.L10:
 352              	 .align 2
 353              	.L9:
 354 002c 00000000 	 .word CAN_NODE_1
 355 0030 1C000000 	 .word CAN_MSG_DB_BMS+28
 356              	 .cfi_endproc
 357              	.LFE607:
 359              	 .section .text.process_Read_CAN_0x105,"ax",%progbits
 360              	 .align 2
 361              	 .global process_Read_CAN_0x105
 362              	 .thumb
 363              	 .thumb_func
 365              	process_Read_CAN_0x105:
 366              	.LFB608:
  62:../Can_Devices/can_matrix_bms.c **** 
  63:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x105(void)
  64:../Can_Devices/can_matrix_bms.c **** {
 367              	 .loc 2 64 0
 368              	 .cfi_startproc
 369              	 
 370              	 
 371 0000 80B5     	 push {r7,lr}
 372              	.LCFI21:
 373              	 .cfi_def_cfa_offset 8
 374              	 .cfi_offset 7,-8
 375              	 .cfi_offset 14,-4
 376 0002 84B0     	 sub sp,sp,#16
 377              	.LCFI22:
 378              	 .cfi_def_cfa_offset 24
 379 0004 00AF     	 add r7,sp,#0
 380              	.LCFI23:
 381              	 .cfi_def_cfa_register 7
  65:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
  66:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 382              	 .loc 2 66 0
 383 0006 094B     	 ldr r3,.L12
 384 0008 FB60     	 str r3,[r7,#12]
  67:../Can_Devices/can_matrix_bms.c **** 
  68:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x105;
 385              	 .loc 2 68 0
 386 000a 0623     	 movs r3,#6
 387 000c FB72     	 strb r3,[r7,#11]
  69:../Can_Devices/can_matrix_bms.c **** 
  70:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x105].CAN_Data[ZERO_BYTE];
 388              	 .loc 2 70 0
 389 000e 084B     	 ldr r3,.L12+4
 390 0010 7B60     	 str r3,[r7,#4]
  71:../Can_Devices/can_matrix_bms.c **** 
  72:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
  73:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 391              	 .loc 2 73 0
 392 0012 FB7A     	 ldrb r3,[r7,#11]
 393 0014 FA68     	 ldr r2,[r7,#12]
 394 0016 0233     	 adds r3,r3,#2
 395 0018 9B00     	 lsls r3,r3,#2
 396 001a 1344     	 add r3,r3,r2
 397 001c 5B68     	 ldr r3,[r3,#4]
 398 001e 1846     	 mov r0,r3
 399 0020 7968     	 ldr r1,[r7,#4]
 400 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
  74:../Can_Devices/can_matrix_bms.c **** 
  75:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
  76:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x103();
  77:../Can_Devices/can_matrix_bms.c **** }
 401              	 .loc 2 77 0
 402 0026 1037     	 adds r7,r7,#16
 403              	.LCFI24:
 404              	 .cfi_def_cfa_offset 8
 405 0028 BD46     	 mov sp,r7
 406              	.LCFI25:
 407              	 .cfi_def_cfa_register 13
 408              	 
 409 002a 80BD     	 pop {r7,pc}
 410              	.L13:
 411              	 .align 2
 412              	.L12:
 413 002c 00000000 	 .word CAN_NODE_1
 414 0030 28000000 	 .word CAN_MSG_DB_BMS+40
 415              	 .cfi_endproc
 416              	.LFE608:
 418              	 .section .text.process_Read_CAN_0x113,"ax",%progbits
 419              	 .align 2
 420              	 .global process_Read_CAN_0x113
 421              	 .thumb
 422              	 .thumb_func
 424              	process_Read_CAN_0x113:
 425              	.LFB609:
  78:../Can_Devices/can_matrix_bms.c **** 
  79:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x113(void)
  80:../Can_Devices/can_matrix_bms.c **** {
 426              	 .loc 2 80 0
 427              	 .cfi_startproc
 428              	 
 429              	 
 430 0000 80B5     	 push {r7,lr}
 431              	.LCFI26:
 432              	 .cfi_def_cfa_offset 8
 433              	 .cfi_offset 7,-8
 434              	 .cfi_offset 14,-4
 435 0002 84B0     	 sub sp,sp,#16
 436              	.LCFI27:
 437              	 .cfi_def_cfa_offset 24
 438 0004 00AF     	 add r7,sp,#0
 439              	.LCFI28:
 440              	 .cfi_def_cfa_register 7
  81:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
  82:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 441              	 .loc 2 82 0
 442 0006 094B     	 ldr r3,.L15
 443 0008 FB60     	 str r3,[r7,#12]
  83:../Can_Devices/can_matrix_bms.c **** 
  84:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x113;
 444              	 .loc 2 84 0
 445 000a 0723     	 movs r3,#7
 446 000c FB72     	 strb r3,[r7,#11]
  85:../Can_Devices/can_matrix_bms.c **** 
  86:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x113].CAN_Data[ZERO_BYTE];
 447              	 .loc 2 86 0
 448 000e 084B     	 ldr r3,.L15+4
 449 0010 7B60     	 str r3,[r7,#4]
  87:../Can_Devices/can_matrix_bms.c **** 
  88:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
  89:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 450              	 .loc 2 89 0
 451 0012 FB7A     	 ldrb r3,[r7,#11]
 452 0014 FA68     	 ldr r2,[r7,#12]
 453 0016 0233     	 adds r3,r3,#2
 454 0018 9B00     	 lsls r3,r3,#2
 455 001a 1344     	 add r3,r3,r2
 456 001c 5B68     	 ldr r3,[r3,#4]
 457 001e 1846     	 mov r0,r3
 458 0020 7968     	 ldr r1,[r7,#4]
 459 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
  90:../Can_Devices/can_matrix_bms.c **** 
  91:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
  92:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x103();
  93:../Can_Devices/can_matrix_bms.c **** }
 460              	 .loc 2 93 0
 461 0026 1037     	 adds r7,r7,#16
 462              	.LCFI29:
 463              	 .cfi_def_cfa_offset 8
 464 0028 BD46     	 mov sp,r7
 465              	.LCFI30:
 466              	 .cfi_def_cfa_register 13
 467              	 
 468 002a 80BD     	 pop {r7,pc}
 469              	.L16:
 470              	 .align 2
 471              	.L15:
 472 002c 00000000 	 .word CAN_NODE_1
 473 0030 34000000 	 .word CAN_MSG_DB_BMS+52
 474              	 .cfi_endproc
 475              	.LFE609:
 477              	 .section .text.process_Read_CAN_0x114,"ax",%progbits
 478              	 .align 2
 479              	 .global process_Read_CAN_0x114
 480              	 .thumb
 481              	 .thumb_func
 483              	process_Read_CAN_0x114:
 484              	.LFB610:
  94:../Can_Devices/can_matrix_bms.c **** 
  95:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x114(void)
  96:../Can_Devices/can_matrix_bms.c **** {
 485              	 .loc 2 96 0
 486              	 .cfi_startproc
 487              	 
 488              	 
 489 0000 80B5     	 push {r7,lr}
 490              	.LCFI31:
 491              	 .cfi_def_cfa_offset 8
 492              	 .cfi_offset 7,-8
 493              	 .cfi_offset 14,-4
 494 0002 84B0     	 sub sp,sp,#16
 495              	.LCFI32:
 496              	 .cfi_def_cfa_offset 24
 497 0004 00AF     	 add r7,sp,#0
 498              	.LCFI33:
 499              	 .cfi_def_cfa_register 7
  97:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
  98:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 500              	 .loc 2 98 0
 501 0006 094B     	 ldr r3,.L18
 502 0008 FB60     	 str r3,[r7,#12]
  99:../Can_Devices/can_matrix_bms.c **** 
 100:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x114;
 503              	 .loc 2 100 0
 504 000a 0823     	 movs r3,#8
 505 000c FB72     	 strb r3,[r7,#11]
 101:../Can_Devices/can_matrix_bms.c **** 
 102:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x114].CAN_Data[ZERO_BYTE];
 506              	 .loc 2 102 0
 507 000e 084B     	 ldr r3,.L18+4
 508 0010 7B60     	 str r3,[r7,#4]
 103:../Can_Devices/can_matrix_bms.c **** 
 104:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
 105:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 509              	 .loc 2 105 0
 510 0012 FB7A     	 ldrb r3,[r7,#11]
 511 0014 FA68     	 ldr r2,[r7,#12]
 512 0016 0233     	 adds r3,r3,#2
 513 0018 9B00     	 lsls r3,r3,#2
 514 001a 1344     	 add r3,r3,r2
 515 001c 5B68     	 ldr r3,[r3,#4]
 516 001e 1846     	 mov r0,r3
 517 0020 7968     	 ldr r1,[r7,#4]
 518 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 106:../Can_Devices/can_matrix_bms.c **** 
 107:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
 108:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x103();
 109:../Can_Devices/can_matrix_bms.c **** }
 519              	 .loc 2 109 0
 520 0026 1037     	 adds r7,r7,#16
 521              	.LCFI34:
 522              	 .cfi_def_cfa_offset 8
 523 0028 BD46     	 mov sp,r7
 524              	.LCFI35:
 525              	 .cfi_def_cfa_register 13
 526              	 
 527 002a 80BD     	 pop {r7,pc}
 528              	.L19:
 529              	 .align 2
 530              	.L18:
 531 002c 00000000 	 .word CAN_NODE_1
 532 0030 40000000 	 .word CAN_MSG_DB_BMS+64
 533              	 .cfi_endproc
 534              	.LFE610:
 536              	 .section .text.process_Read_CAN_0x116,"ax",%progbits
 537              	 .align 2
 538              	 .global process_Read_CAN_0x116
 539              	 .thumb
 540              	 .thumb_func
 542              	process_Read_CAN_0x116:
 543              	.LFB611:
 110:../Can_Devices/can_matrix_bms.c **** 
 111:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x116(void)
 112:../Can_Devices/can_matrix_bms.c **** {
 544              	 .loc 2 112 0
 545              	 .cfi_startproc
 546              	 
 547              	 
 548 0000 80B5     	 push {r7,lr}
 549              	.LCFI36:
 550              	 .cfi_def_cfa_offset 8
 551              	 .cfi_offset 7,-8
 552              	 .cfi_offset 14,-4
 553 0002 84B0     	 sub sp,sp,#16
 554              	.LCFI37:
 555              	 .cfi_def_cfa_offset 24
 556 0004 00AF     	 add r7,sp,#0
 557              	.LCFI38:
 558              	 .cfi_def_cfa_register 7
 113:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
 114:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 559              	 .loc 2 114 0
 560 0006 094B     	 ldr r3,.L21
 561 0008 FB60     	 str r3,[r7,#12]
 115:../Can_Devices/can_matrix_bms.c **** 
 116:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x116;
 562              	 .loc 2 116 0
 563 000a 0923     	 movs r3,#9
 564 000c FB72     	 strb r3,[r7,#11]
 117:../Can_Devices/can_matrix_bms.c **** 
 118:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x116].CAN_Data[ZERO_BYTE];
 565              	 .loc 2 118 0
 566 000e 084B     	 ldr r3,.L21+4
 567 0010 7B60     	 str r3,[r7,#4]
 119:../Can_Devices/can_matrix_bms.c **** 
 120:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
 121:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 568              	 .loc 2 121 0
 569 0012 FB7A     	 ldrb r3,[r7,#11]
 570 0014 FA68     	 ldr r2,[r7,#12]
 571 0016 0233     	 adds r3,r3,#2
 572 0018 9B00     	 lsls r3,r3,#2
 573 001a 1344     	 add r3,r3,r2
 574 001c 5B68     	 ldr r3,[r3,#4]
 575 001e 1846     	 mov r0,r3
 576 0020 7968     	 ldr r1,[r7,#4]
 577 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 122:../Can_Devices/can_matrix_bms.c **** 
 123:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
 124:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x103();
 125:../Can_Devices/can_matrix_bms.c **** }
 578              	 .loc 2 125 0
 579 0026 1037     	 adds r7,r7,#16
 580              	.LCFI39:
 581              	 .cfi_def_cfa_offset 8
 582 0028 BD46     	 mov sp,r7
 583              	.LCFI40:
 584              	 .cfi_def_cfa_register 13
 585              	 
 586 002a 80BD     	 pop {r7,pc}
 587              	.L22:
 588              	 .align 2
 589              	.L21:
 590 002c 00000000 	 .word CAN_NODE_1
 591 0030 4C000000 	 .word CAN_MSG_DB_BMS+76
 592              	 .cfi_endproc
 593              	.LFE611:
 595              	 .section .text.Read_CAN_0x102,"ax",%progbits
 596              	 .align 2
 597              	 .global Read_CAN_0x102
 598              	 .thumb
 599              	 .thumb_func
 601              	Read_CAN_0x102:
 602              	.LFB612:
 126:../Can_Devices/can_matrix_bms.c **** 
 127:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x102(void)
 128:../Can_Devices/can_matrix_bms.c **** {
 603              	 .loc 2 128 0
 604              	 .cfi_startproc
 605              	 
 606              	 
 607 0000 80B5     	 push {r7,lr}
 608              	.LCFI41:
 609              	 .cfi_def_cfa_offset 8
 610              	 .cfi_offset 7,-8
 611              	 .cfi_offset 14,-4
 612 0002 84B0     	 sub sp,sp,#16
 613              	.LCFI42:
 614              	 .cfi_def_cfa_offset 24
 615 0004 00AF     	 add r7,sp,#0
 616              	.LCFI43:
 617              	 .cfi_def_cfa_register 7
 129:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 130:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 131:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 132:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 133:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 618              	 .loc 2 133 0
 619 0006 1C4B     	 ldr r3,.L26
 620 0008 FB60     	 str r3,[r7,#12]
 134:../Can_Devices/can_matrix_bms.c **** 
 135:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x102;
 621              	 .loc 2 135 0
 622 000a 0323     	 movs r3,#3
 623 000c FB72     	 strb r3,[r7,#11]
 136:../Can_Devices/can_matrix_bms.c **** 
 137:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 624              	 .loc 2 137 0
 625 000e FB7A     	 ldrb r3,[r7,#11]
 626 0010 FA68     	 ldr r2,[r7,#12]
 627 0012 0233     	 adds r3,r3,#2
 628 0014 9B00     	 lsls r3,r3,#2
 629 0016 1344     	 add r3,r3,r2
 630 0018 5B68     	 ldr r3,[r3,#4]
 631 001a 1B68     	 ldr r3,[r3]
 632 001c 7B60     	 str r3,[r7,#4]
 138:../Can_Devices/can_matrix_bms.c **** 
 139:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 633              	 .loc 2 139 0
 634 001e FB7A     	 ldrb r3,[r7,#11]
 635 0020 FA68     	 ldr r2,[r7,#12]
 636 0022 0233     	 adds r3,r3,#2
 637 0024 9B00     	 lsls r3,r3,#2
 638 0026 1344     	 add r3,r3,r2
 639 0028 5B68     	 ldr r3,[r3,#4]
 640 002a 1846     	 mov r0,r3
 641 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 642 0030 0346     	 mov r3,r0
 643 0032 FB70     	 strb r3,[r7,#3]
 140:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 141:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 644              	 .loc 2 141 0
 645 0034 FB78     	 ldrb r3,[r7,#3]
 646 0036 03F00103 	 and r3,r3,#1
 647 003a 002B     	 cmp r3,#0
 648 003c 16D0     	 beq .L24
 142:../Can_Devices/can_matrix_bms.c **** 	{
 143:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 144:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 649              	 .loc 2 144 0
 650 003e 7868     	 ldr r0,[r7,#4]
 651 0040 0121     	 movs r1,#1
 652 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 145:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 146:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 653              	 .loc 2 146 0
 654 0046 FB7A     	 ldrb r3,[r7,#11]
 655 0048 FA68     	 ldr r2,[r7,#12]
 656 004a 0233     	 adds r3,r3,#2
 657 004c 9B00     	 lsls r3,r3,#2
 658 004e 1344     	 add r3,r3,r2
 659 0050 5B68     	 ldr r3,[r3,#4]
 660 0052 1846     	 mov r0,r3
 661 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 662 0058 0346     	 mov r3,r0
 663 005a BB70     	 strb r3,[r7,#2]
 147:../Can_Devices/can_matrix_bms.c **** 
 148:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 664              	 .loc 2 148 0
 665 005c BB78     	 ldrb r3,[r7,#2]
 666 005e 002B     	 cmp r3,#0
 667 0060 02D1     	 bne .L25
 149:../Can_Devices/can_matrix_bms.c **** 	  {
 150:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 151:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 668              	 .loc 2 151 0
 669 0062 0123     	 movs r3,#1
 670 0064 7B70     	 strb r3,[r7,#1]
 671 0066 01E0     	 b .L24
 672              	.L25:
 152:../Can_Devices/can_matrix_bms.c **** 	  }
 153:../Can_Devices/can_matrix_bms.c **** 	  else
 154:../Can_Devices/can_matrix_bms.c **** 	  {
 155:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 156:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 673              	 .loc 2 156 0
 674 0068 0023     	 movs r3,#0
 675 006a 7B70     	 strb r3,[r7,#1]
 676              	.L24:
 157:../Can_Devices/can_matrix_bms.c **** 	  }
 158:../Can_Devices/can_matrix_bms.c **** 	}
 159:../Can_Devices/can_matrix_bms.c **** 
 160:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x102();
 677              	 .loc 2 160 0
 678 006c FFF7FEFF 	 bl process_Read_CAN_0x102
 161:../Can_Devices/can_matrix_bms.c **** }
 679              	 .loc 2 161 0
 680 0070 1037     	 adds r7,r7,#16
 681              	.LCFI44:
 682              	 .cfi_def_cfa_offset 8
 683 0072 BD46     	 mov sp,r7
 684              	.LCFI45:
 685              	 .cfi_def_cfa_register 13
 686              	 
 687 0074 80BD     	 pop {r7,pc}
 688              	.L27:
 689 0076 00BF     	 .align 2
 690              	.L26:
 691 0078 00000000 	 .word CAN_NODE_1
 692              	 .cfi_endproc
 693              	.LFE612:
 695              	 .section .text.Read_CAN_0x103,"ax",%progbits
 696              	 .align 2
 697              	 .global Read_CAN_0x103
 698              	 .thumb
 699              	 .thumb_func
 701              	Read_CAN_0x103:
 702              	.LFB613:
 162:../Can_Devices/can_matrix_bms.c **** 
 163:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x103(void)
 164:../Can_Devices/can_matrix_bms.c **** {
 703              	 .loc 2 164 0
 704              	 .cfi_startproc
 705              	 
 706              	 
 707 0000 80B5     	 push {r7,lr}
 708              	.LCFI46:
 709              	 .cfi_def_cfa_offset 8
 710              	 .cfi_offset 7,-8
 711              	 .cfi_offset 14,-4
 712 0002 84B0     	 sub sp,sp,#16
 713              	.LCFI47:
 714              	 .cfi_def_cfa_offset 24
 715 0004 00AF     	 add r7,sp,#0
 716              	.LCFI48:
 717              	 .cfi_def_cfa_register 7
 165:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 166:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 167:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 168:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 169:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 718              	 .loc 2 169 0
 719 0006 1C4B     	 ldr r3,.L31
 720 0008 FB60     	 str r3,[r7,#12]
 170:../Can_Devices/can_matrix_bms.c **** 
 171:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x103;
 721              	 .loc 2 171 0
 722 000a 0423     	 movs r3,#4
 723 000c FB72     	 strb r3,[r7,#11]
 172:../Can_Devices/can_matrix_bms.c **** 
 173:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 724              	 .loc 2 173 0
 725 000e FB7A     	 ldrb r3,[r7,#11]
 726 0010 FA68     	 ldr r2,[r7,#12]
 727 0012 0233     	 adds r3,r3,#2
 728 0014 9B00     	 lsls r3,r3,#2
 729 0016 1344     	 add r3,r3,r2
 730 0018 5B68     	 ldr r3,[r3,#4]
 731 001a 1B68     	 ldr r3,[r3]
 732 001c 7B60     	 str r3,[r7,#4]
 174:../Can_Devices/can_matrix_bms.c **** 
 175:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 733              	 .loc 2 175 0
 734 001e FB7A     	 ldrb r3,[r7,#11]
 735 0020 FA68     	 ldr r2,[r7,#12]
 736 0022 0233     	 adds r3,r3,#2
 737 0024 9B00     	 lsls r3,r3,#2
 738 0026 1344     	 add r3,r3,r2
 739 0028 5B68     	 ldr r3,[r3,#4]
 740 002a 1846     	 mov r0,r3
 741 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 742 0030 0346     	 mov r3,r0
 743 0032 FB70     	 strb r3,[r7,#3]
 176:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 177:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 744              	 .loc 2 177 0
 745 0034 FB78     	 ldrb r3,[r7,#3]
 746 0036 03F00103 	 and r3,r3,#1
 747 003a 002B     	 cmp r3,#0
 748 003c 16D0     	 beq .L29
 178:../Can_Devices/can_matrix_bms.c **** 	{
 179:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 180:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 749              	 .loc 2 180 0
 750 003e 7868     	 ldr r0,[r7,#4]
 751 0040 0121     	 movs r1,#1
 752 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 181:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 182:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 753              	 .loc 2 182 0
 754 0046 FB7A     	 ldrb r3,[r7,#11]
 755 0048 FA68     	 ldr r2,[r7,#12]
 756 004a 0233     	 adds r3,r3,#2
 757 004c 9B00     	 lsls r3,r3,#2
 758 004e 1344     	 add r3,r3,r2
 759 0050 5B68     	 ldr r3,[r3,#4]
 760 0052 1846     	 mov r0,r3
 761 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 762 0058 0346     	 mov r3,r0
 763 005a BB70     	 strb r3,[r7,#2]
 183:../Can_Devices/can_matrix_bms.c **** 
 184:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 764              	 .loc 2 184 0
 765 005c BB78     	 ldrb r3,[r7,#2]
 766 005e 002B     	 cmp r3,#0
 767 0060 02D1     	 bne .L30
 185:../Can_Devices/can_matrix_bms.c **** 	  {
 186:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 187:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 768              	 .loc 2 187 0
 769 0062 0123     	 movs r3,#1
 770 0064 7B70     	 strb r3,[r7,#1]
 771 0066 01E0     	 b .L29
 772              	.L30:
 188:../Can_Devices/can_matrix_bms.c **** 	  }
 189:../Can_Devices/can_matrix_bms.c **** 	  else
 190:../Can_Devices/can_matrix_bms.c **** 	  {
 191:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 192:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 773              	 .loc 2 192 0
 774 0068 0023     	 movs r3,#0
 775 006a 7B70     	 strb r3,[r7,#1]
 776              	.L29:
 193:../Can_Devices/can_matrix_bms.c **** 	  }
 194:../Can_Devices/can_matrix_bms.c **** 	}
 195:../Can_Devices/can_matrix_bms.c **** 
 196:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x103();
 777              	 .loc 2 196 0
 778 006c FFF7FEFF 	 bl process_Read_CAN_0x103
 197:../Can_Devices/can_matrix_bms.c **** }
 779              	 .loc 2 197 0
 780 0070 1037     	 adds r7,r7,#16
 781              	.LCFI49:
 782              	 .cfi_def_cfa_offset 8
 783 0072 BD46     	 mov sp,r7
 784              	.LCFI50:
 785              	 .cfi_def_cfa_register 13
 786              	 
 787 0074 80BD     	 pop {r7,pc}
 788              	.L32:
 789 0076 00BF     	 .align 2
 790              	.L31:
 791 0078 00000000 	 .word CAN_NODE_1
 792              	 .cfi_endproc
 793              	.LFE613:
 795              	 .section .text.Read_CAN_0x104,"ax",%progbits
 796              	 .align 2
 797              	 .global Read_CAN_0x104
 798              	 .thumb
 799              	 .thumb_func
 801              	Read_CAN_0x104:
 802              	.LFB614:
 198:../Can_Devices/can_matrix_bms.c **** 
 199:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x104(void)
 200:../Can_Devices/can_matrix_bms.c **** {
 803              	 .loc 2 200 0
 804              	 .cfi_startproc
 805              	 
 806              	 
 807 0000 80B5     	 push {r7,lr}
 808              	.LCFI51:
 809              	 .cfi_def_cfa_offset 8
 810              	 .cfi_offset 7,-8
 811              	 .cfi_offset 14,-4
 812 0002 84B0     	 sub sp,sp,#16
 813              	.LCFI52:
 814              	 .cfi_def_cfa_offset 24
 815 0004 00AF     	 add r7,sp,#0
 816              	.LCFI53:
 817              	 .cfi_def_cfa_register 7
 201:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 202:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 203:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 204:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 205:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 818              	 .loc 2 205 0
 819 0006 1C4B     	 ldr r3,.L36
 820 0008 FB60     	 str r3,[r7,#12]
 206:../Can_Devices/can_matrix_bms.c **** 
 207:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x104;
 821              	 .loc 2 207 0
 822 000a 0523     	 movs r3,#5
 823 000c FB72     	 strb r3,[r7,#11]
 208:../Can_Devices/can_matrix_bms.c **** 
 209:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 824              	 .loc 2 209 0
 825 000e FB7A     	 ldrb r3,[r7,#11]
 826 0010 FA68     	 ldr r2,[r7,#12]
 827 0012 0233     	 adds r3,r3,#2
 828 0014 9B00     	 lsls r3,r3,#2
 829 0016 1344     	 add r3,r3,r2
 830 0018 5B68     	 ldr r3,[r3,#4]
 831 001a 1B68     	 ldr r3,[r3]
 832 001c 7B60     	 str r3,[r7,#4]
 210:../Can_Devices/can_matrix_bms.c **** 
 211:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 833              	 .loc 2 211 0
 834 001e FB7A     	 ldrb r3,[r7,#11]
 835 0020 FA68     	 ldr r2,[r7,#12]
 836 0022 0233     	 adds r3,r3,#2
 837 0024 9B00     	 lsls r3,r3,#2
 838 0026 1344     	 add r3,r3,r2
 839 0028 5B68     	 ldr r3,[r3,#4]
 840 002a 1846     	 mov r0,r3
 841 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 842 0030 0346     	 mov r3,r0
 843 0032 FB70     	 strb r3,[r7,#3]
 212:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 213:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 844              	 .loc 2 213 0
 845 0034 FB78     	 ldrb r3,[r7,#3]
 846 0036 03F00103 	 and r3,r3,#1
 847 003a 002B     	 cmp r3,#0
 848 003c 16D0     	 beq .L34
 214:../Can_Devices/can_matrix_bms.c **** 	{
 215:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 216:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 849              	 .loc 2 216 0
 850 003e 7868     	 ldr r0,[r7,#4]
 851 0040 0121     	 movs r1,#1
 852 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 217:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 218:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 853              	 .loc 2 218 0
 854 0046 FB7A     	 ldrb r3,[r7,#11]
 855 0048 FA68     	 ldr r2,[r7,#12]
 856 004a 0233     	 adds r3,r3,#2
 857 004c 9B00     	 lsls r3,r3,#2
 858 004e 1344     	 add r3,r3,r2
 859 0050 5B68     	 ldr r3,[r3,#4]
 860 0052 1846     	 mov r0,r3
 861 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 862 0058 0346     	 mov r3,r0
 863 005a BB70     	 strb r3,[r7,#2]
 219:../Can_Devices/can_matrix_bms.c **** 
 220:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 864              	 .loc 2 220 0
 865 005c BB78     	 ldrb r3,[r7,#2]
 866 005e 002B     	 cmp r3,#0
 867 0060 02D1     	 bne .L35
 221:../Can_Devices/can_matrix_bms.c **** 	  {
 222:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 223:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 868              	 .loc 2 223 0
 869 0062 0123     	 movs r3,#1
 870 0064 7B70     	 strb r3,[r7,#1]
 871 0066 01E0     	 b .L34
 872              	.L35:
 224:../Can_Devices/can_matrix_bms.c **** 	  }
 225:../Can_Devices/can_matrix_bms.c **** 	  else
 226:../Can_Devices/can_matrix_bms.c **** 	  {
 227:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 228:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 873              	 .loc 2 228 0
 874 0068 0023     	 movs r3,#0
 875 006a 7B70     	 strb r3,[r7,#1]
 876              	.L34:
 229:../Can_Devices/can_matrix_bms.c **** 	  }
 230:../Can_Devices/can_matrix_bms.c **** 	}
 231:../Can_Devices/can_matrix_bms.c **** 
 232:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x104();
 877              	 .loc 2 232 0
 878 006c FFF7FEFF 	 bl process_Read_CAN_0x104
 233:../Can_Devices/can_matrix_bms.c **** }
 879              	 .loc 2 233 0
 880 0070 1037     	 adds r7,r7,#16
 881              	.LCFI54:
 882              	 .cfi_def_cfa_offset 8
 883 0072 BD46     	 mov sp,r7
 884              	.LCFI55:
 885              	 .cfi_def_cfa_register 13
 886              	 
 887 0074 80BD     	 pop {r7,pc}
 888              	.L37:
 889 0076 00BF     	 .align 2
 890              	.L36:
 891 0078 00000000 	 .word CAN_NODE_1
 892              	 .cfi_endproc
 893              	.LFE614:
 895              	 .section .text.Read_CAN_0x105,"ax",%progbits
 896              	 .align 2
 897              	 .global Read_CAN_0x105
 898              	 .thumb
 899              	 .thumb_func
 901              	Read_CAN_0x105:
 902              	.LFB615:
 234:../Can_Devices/can_matrix_bms.c **** 
 235:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x105(void)
 236:../Can_Devices/can_matrix_bms.c **** {
 903              	 .loc 2 236 0
 904              	 .cfi_startproc
 905              	 
 906              	 
 907 0000 80B5     	 push {r7,lr}
 908              	.LCFI56:
 909              	 .cfi_def_cfa_offset 8
 910              	 .cfi_offset 7,-8
 911              	 .cfi_offset 14,-4
 912 0002 84B0     	 sub sp,sp,#16
 913              	.LCFI57:
 914              	 .cfi_def_cfa_offset 24
 915 0004 00AF     	 add r7,sp,#0
 916              	.LCFI58:
 917              	 .cfi_def_cfa_register 7
 237:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 238:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 239:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 240:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 241:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 918              	 .loc 2 241 0
 919 0006 1C4B     	 ldr r3,.L41
 920 0008 FB60     	 str r3,[r7,#12]
 242:../Can_Devices/can_matrix_bms.c **** 
 243:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x105;
 921              	 .loc 2 243 0
 922 000a 0623     	 movs r3,#6
 923 000c FB72     	 strb r3,[r7,#11]
 244:../Can_Devices/can_matrix_bms.c **** 
 245:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 924              	 .loc 2 245 0
 925 000e FB7A     	 ldrb r3,[r7,#11]
 926 0010 FA68     	 ldr r2,[r7,#12]
 927 0012 0233     	 adds r3,r3,#2
 928 0014 9B00     	 lsls r3,r3,#2
 929 0016 1344     	 add r3,r3,r2
 930 0018 5B68     	 ldr r3,[r3,#4]
 931 001a 1B68     	 ldr r3,[r3]
 932 001c 7B60     	 str r3,[r7,#4]
 246:../Can_Devices/can_matrix_bms.c **** 
 247:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 933              	 .loc 2 247 0
 934 001e FB7A     	 ldrb r3,[r7,#11]
 935 0020 FA68     	 ldr r2,[r7,#12]
 936 0022 0233     	 adds r3,r3,#2
 937 0024 9B00     	 lsls r3,r3,#2
 938 0026 1344     	 add r3,r3,r2
 939 0028 5B68     	 ldr r3,[r3,#4]
 940 002a 1846     	 mov r0,r3
 941 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 942 0030 0346     	 mov r3,r0
 943 0032 FB70     	 strb r3,[r7,#3]
 248:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 249:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 944              	 .loc 2 249 0
 945 0034 FB78     	 ldrb r3,[r7,#3]
 946 0036 03F00103 	 and r3,r3,#1
 947 003a 002B     	 cmp r3,#0
 948 003c 16D0     	 beq .L39
 250:../Can_Devices/can_matrix_bms.c **** 	{
 251:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 252:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 949              	 .loc 2 252 0
 950 003e 7868     	 ldr r0,[r7,#4]
 951 0040 0121     	 movs r1,#1
 952 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 253:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 254:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 953              	 .loc 2 254 0
 954 0046 FB7A     	 ldrb r3,[r7,#11]
 955 0048 FA68     	 ldr r2,[r7,#12]
 956 004a 0233     	 adds r3,r3,#2
 957 004c 9B00     	 lsls r3,r3,#2
 958 004e 1344     	 add r3,r3,r2
 959 0050 5B68     	 ldr r3,[r3,#4]
 960 0052 1846     	 mov r0,r3
 961 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 962 0058 0346     	 mov r3,r0
 963 005a BB70     	 strb r3,[r7,#2]
 255:../Can_Devices/can_matrix_bms.c **** 
 256:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 964              	 .loc 2 256 0
 965 005c BB78     	 ldrb r3,[r7,#2]
 966 005e 002B     	 cmp r3,#0
 967 0060 02D1     	 bne .L40
 257:../Can_Devices/can_matrix_bms.c **** 	  {
 258:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 259:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 968              	 .loc 2 259 0
 969 0062 0123     	 movs r3,#1
 970 0064 7B70     	 strb r3,[r7,#1]
 971 0066 01E0     	 b .L39
 972              	.L40:
 260:../Can_Devices/can_matrix_bms.c **** 	  }
 261:../Can_Devices/can_matrix_bms.c **** 	  else
 262:../Can_Devices/can_matrix_bms.c **** 	  {
 263:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 264:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 973              	 .loc 2 264 0
 974 0068 0023     	 movs r3,#0
 975 006a 7B70     	 strb r3,[r7,#1]
 976              	.L39:
 265:../Can_Devices/can_matrix_bms.c **** 	  }
 266:../Can_Devices/can_matrix_bms.c **** 	}
 267:../Can_Devices/can_matrix_bms.c **** 
 268:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x105();
 977              	 .loc 2 268 0
 978 006c FFF7FEFF 	 bl process_Read_CAN_0x105
 269:../Can_Devices/can_matrix_bms.c **** }
 979              	 .loc 2 269 0
 980 0070 1037     	 adds r7,r7,#16
 981              	.LCFI59:
 982              	 .cfi_def_cfa_offset 8
 983 0072 BD46     	 mov sp,r7
 984              	.LCFI60:
 985              	 .cfi_def_cfa_register 13
 986              	 
 987 0074 80BD     	 pop {r7,pc}
 988              	.L42:
 989 0076 00BF     	 .align 2
 990              	.L41:
 991 0078 00000000 	 .word CAN_NODE_1
 992              	 .cfi_endproc
 993              	.LFE615:
 995              	 .section .text.Read_CAN_0x113,"ax",%progbits
 996              	 .align 2
 997              	 .global Read_CAN_0x113
 998              	 .thumb
 999              	 .thumb_func
 1001              	Read_CAN_0x113:
 1002              	.LFB616:
 270:../Can_Devices/can_matrix_bms.c **** 
 271:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x113(void)
 272:../Can_Devices/can_matrix_bms.c **** {
 1003              	 .loc 2 272 0
 1004              	 .cfi_startproc
 1005              	 
 1006              	 
 1007 0000 80B5     	 push {r7,lr}
 1008              	.LCFI61:
 1009              	 .cfi_def_cfa_offset 8
 1010              	 .cfi_offset 7,-8
 1011              	 .cfi_offset 14,-4
 1012 0002 84B0     	 sub sp,sp,#16
 1013              	.LCFI62:
 1014              	 .cfi_def_cfa_offset 24
 1015 0004 00AF     	 add r7,sp,#0
 1016              	.LCFI63:
 1017              	 .cfi_def_cfa_register 7
 273:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 274:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 275:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 276:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 277:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 1018              	 .loc 2 277 0
 1019 0006 1C4B     	 ldr r3,.L46
 1020 0008 FB60     	 str r3,[r7,#12]
 278:../Can_Devices/can_matrix_bms.c **** 
 279:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x113;
 1021              	 .loc 2 279 0
 1022 000a 0723     	 movs r3,#7
 1023 000c FB72     	 strb r3,[r7,#11]
 280:../Can_Devices/can_matrix_bms.c **** 
 281:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 1024              	 .loc 2 281 0
 1025 000e FB7A     	 ldrb r3,[r7,#11]
 1026 0010 FA68     	 ldr r2,[r7,#12]
 1027 0012 0233     	 adds r3,r3,#2
 1028 0014 9B00     	 lsls r3,r3,#2
 1029 0016 1344     	 add r3,r3,r2
 1030 0018 5B68     	 ldr r3,[r3,#4]
 1031 001a 1B68     	 ldr r3,[r3]
 1032 001c 7B60     	 str r3,[r7,#4]
 282:../Can_Devices/can_matrix_bms.c **** 
 283:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 1033              	 .loc 2 283 0
 1034 001e FB7A     	 ldrb r3,[r7,#11]
 1035 0020 FA68     	 ldr r2,[r7,#12]
 1036 0022 0233     	 adds r3,r3,#2
 1037 0024 9B00     	 lsls r3,r3,#2
 1038 0026 1344     	 add r3,r3,r2
 1039 0028 5B68     	 ldr r3,[r3,#4]
 1040 002a 1846     	 mov r0,r3
 1041 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 1042 0030 0346     	 mov r3,r0
 1043 0032 FB70     	 strb r3,[r7,#3]
 284:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 285:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 1044              	 .loc 2 285 0
 1045 0034 FB78     	 ldrb r3,[r7,#3]
 1046 0036 03F00103 	 and r3,r3,#1
 1047 003a 002B     	 cmp r3,#0
 1048 003c 16D0     	 beq .L44
 286:../Can_Devices/can_matrix_bms.c **** 	{
 287:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 288:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 1049              	 .loc 2 288 0
 1050 003e 7868     	 ldr r0,[r7,#4]
 1051 0040 0121     	 movs r1,#1
 1052 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 289:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 290:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 1053              	 .loc 2 290 0
 1054 0046 FB7A     	 ldrb r3,[r7,#11]
 1055 0048 FA68     	 ldr r2,[r7,#12]
 1056 004a 0233     	 adds r3,r3,#2
 1057 004c 9B00     	 lsls r3,r3,#2
 1058 004e 1344     	 add r3,r3,r2
 1059 0050 5B68     	 ldr r3,[r3,#4]
 1060 0052 1846     	 mov r0,r3
 1061 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 1062 0058 0346     	 mov r3,r0
 1063 005a BB70     	 strb r3,[r7,#2]
 291:../Can_Devices/can_matrix_bms.c **** 
 292:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 1064              	 .loc 2 292 0
 1065 005c BB78     	 ldrb r3,[r7,#2]
 1066 005e 002B     	 cmp r3,#0
 1067 0060 02D1     	 bne .L45
 293:../Can_Devices/can_matrix_bms.c **** 	  {
 294:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 295:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 1068              	 .loc 2 295 0
 1069 0062 0123     	 movs r3,#1
 1070 0064 7B70     	 strb r3,[r7,#1]
 1071 0066 01E0     	 b .L44
 1072              	.L45:
 296:../Can_Devices/can_matrix_bms.c **** 	  }
 297:../Can_Devices/can_matrix_bms.c **** 	  else
 298:../Can_Devices/can_matrix_bms.c **** 	  {
 299:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 300:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 1073              	 .loc 2 300 0
 1074 0068 0023     	 movs r3,#0
 1075 006a 7B70     	 strb r3,[r7,#1]
 1076              	.L44:
 301:../Can_Devices/can_matrix_bms.c **** 	  }
 302:../Can_Devices/can_matrix_bms.c **** 	}
 303:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x113();
 1077              	 .loc 2 303 0
 1078 006c FFF7FEFF 	 bl process_Read_CAN_0x113
 304:../Can_Devices/can_matrix_bms.c **** }
 1079              	 .loc 2 304 0
 1080 0070 1037     	 adds r7,r7,#16
 1081              	.LCFI64:
 1082              	 .cfi_def_cfa_offset 8
 1083 0072 BD46     	 mov sp,r7
 1084              	.LCFI65:
 1085              	 .cfi_def_cfa_register 13
 1086              	 
 1087 0074 80BD     	 pop {r7,pc}
 1088              	.L47:
 1089 0076 00BF     	 .align 2
 1090              	.L46:
 1091 0078 00000000 	 .word CAN_NODE_1
 1092              	 .cfi_endproc
 1093              	.LFE616:
 1095              	 .section .text.Read_CAN_0x114,"ax",%progbits
 1096              	 .align 2
 1097              	 .global Read_CAN_0x114
 1098              	 .thumb
 1099              	 .thumb_func
 1101              	Read_CAN_0x114:
 1102              	.LFB617:
 305:../Can_Devices/can_matrix_bms.c **** 
 306:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x114(void)
 307:../Can_Devices/can_matrix_bms.c **** {
 1103              	 .loc 2 307 0
 1104              	 .cfi_startproc
 1105              	 
 1106              	 
 1107 0000 80B5     	 push {r7,lr}
 1108              	.LCFI66:
 1109              	 .cfi_def_cfa_offset 8
 1110              	 .cfi_offset 7,-8
 1111              	 .cfi_offset 14,-4
 1112 0002 84B0     	 sub sp,sp,#16
 1113              	.LCFI67:
 1114              	 .cfi_def_cfa_offset 24
 1115 0004 00AF     	 add r7,sp,#0
 1116              	.LCFI68:
 1117              	 .cfi_def_cfa_register 7
 308:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 309:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 310:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 311:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 312:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 1118              	 .loc 2 312 0
 1119 0006 1C4B     	 ldr r3,.L51
 1120 0008 FB60     	 str r3,[r7,#12]
 313:../Can_Devices/can_matrix_bms.c **** 
 314:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x114;
 1121              	 .loc 2 314 0
 1122 000a 0823     	 movs r3,#8
 1123 000c FB72     	 strb r3,[r7,#11]
 315:../Can_Devices/can_matrix_bms.c **** 
 316:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 1124              	 .loc 2 316 0
 1125 000e FB7A     	 ldrb r3,[r7,#11]
 1126 0010 FA68     	 ldr r2,[r7,#12]
 1127 0012 0233     	 adds r3,r3,#2
 1128 0014 9B00     	 lsls r3,r3,#2
 1129 0016 1344     	 add r3,r3,r2
 1130 0018 5B68     	 ldr r3,[r3,#4]
 1131 001a 1B68     	 ldr r3,[r3]
 1132 001c 7B60     	 str r3,[r7,#4]
 317:../Can_Devices/can_matrix_bms.c **** 
 318:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 1133              	 .loc 2 318 0
 1134 001e FB7A     	 ldrb r3,[r7,#11]
 1135 0020 FA68     	 ldr r2,[r7,#12]
 1136 0022 0233     	 adds r3,r3,#2
 1137 0024 9B00     	 lsls r3,r3,#2
 1138 0026 1344     	 add r3,r3,r2
 1139 0028 5B68     	 ldr r3,[r3,#4]
 1140 002a 1846     	 mov r0,r3
 1141 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 1142 0030 0346     	 mov r3,r0
 1143 0032 FB70     	 strb r3,[r7,#3]
 319:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 320:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 1144              	 .loc 2 320 0
 1145 0034 FB78     	 ldrb r3,[r7,#3]
 1146 0036 03F00103 	 and r3,r3,#1
 1147 003a 002B     	 cmp r3,#0
 1148 003c 16D0     	 beq .L49
 321:../Can_Devices/can_matrix_bms.c **** 	{
 322:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 323:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 1149              	 .loc 2 323 0
 1150 003e 7868     	 ldr r0,[r7,#4]
 1151 0040 0121     	 movs r1,#1
 1152 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 324:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 325:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 1153              	 .loc 2 325 0
 1154 0046 FB7A     	 ldrb r3,[r7,#11]
 1155 0048 FA68     	 ldr r2,[r7,#12]
 1156 004a 0233     	 adds r3,r3,#2
 1157 004c 9B00     	 lsls r3,r3,#2
 1158 004e 1344     	 add r3,r3,r2
 1159 0050 5B68     	 ldr r3,[r3,#4]
 1160 0052 1846     	 mov r0,r3
 1161 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 1162 0058 0346     	 mov r3,r0
 1163 005a BB70     	 strb r3,[r7,#2]
 326:../Can_Devices/can_matrix_bms.c **** 
 327:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 1164              	 .loc 2 327 0
 1165 005c BB78     	 ldrb r3,[r7,#2]
 1166 005e 002B     	 cmp r3,#0
 1167 0060 02D1     	 bne .L50
 328:../Can_Devices/can_matrix_bms.c **** 	  {
 329:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 330:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 1168              	 .loc 2 330 0
 1169 0062 0123     	 movs r3,#1
 1170 0064 7B70     	 strb r3,[r7,#1]
 1171 0066 01E0     	 b .L49
 1172              	.L50:
 331:../Can_Devices/can_matrix_bms.c **** 	  }
 332:../Can_Devices/can_matrix_bms.c **** 	  else
 333:../Can_Devices/can_matrix_bms.c **** 	  {
 334:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 335:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 1173              	 .loc 2 335 0
 1174 0068 0023     	 movs r3,#0
 1175 006a 7B70     	 strb r3,[r7,#1]
 1176              	.L49:
 336:../Can_Devices/can_matrix_bms.c **** 	  }
 337:../Can_Devices/can_matrix_bms.c **** 	}
 338:../Can_Devices/can_matrix_bms.c **** 
 339:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x114();
 1177              	 .loc 2 339 0
 1178 006c FFF7FEFF 	 bl process_Read_CAN_0x114
 340:../Can_Devices/can_matrix_bms.c **** }
 1179              	 .loc 2 340 0
 1180 0070 1037     	 adds r7,r7,#16
 1181              	.LCFI69:
 1182              	 .cfi_def_cfa_offset 8
 1183 0072 BD46     	 mov sp,r7
 1184              	.LCFI70:
 1185              	 .cfi_def_cfa_register 13
 1186              	 
 1187 0074 80BD     	 pop {r7,pc}
 1188              	.L52:
 1189 0076 00BF     	 .align 2
 1190              	.L51:
 1191 0078 00000000 	 .word CAN_NODE_1
 1192              	 .cfi_endproc
 1193              	.LFE617:
 1195              	 .section .text.Read_CAN_0x116,"ax",%progbits
 1196              	 .align 2
 1197              	 .global Read_CAN_0x116
 1198              	 .thumb
 1199              	 .thumb_func
 1201              	Read_CAN_0x116:
 1202              	.LFB618:
 341:../Can_Devices/can_matrix_bms.c **** 
 342:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x116(void)
 343:../Can_Devices/can_matrix_bms.c **** {
 1203              	 .loc 2 343 0
 1204              	 .cfi_startproc
 1205              	 
 1206              	 
 1207 0000 80B5     	 push {r7,lr}
 1208              	.LCFI71:
 1209              	 .cfi_def_cfa_offset 8
 1210              	 .cfi_offset 7,-8
 1211              	 .cfi_offset 14,-4
 1212 0002 84B0     	 sub sp,sp,#16
 1213              	.LCFI72:
 1214              	 .cfi_def_cfa_offset 24
 1215 0004 00AF     	 add r7,sp,#0
 1216              	.LCFI73:
 1217              	 .cfi_def_cfa_register 7
 344:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 345:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 346:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 347:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 348:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_1;
 1218              	 .loc 2 348 0
 1219 0006 1C4B     	 ldr r3,.L56
 1220 0008 FB60     	 str r3,[r7,#12]
 349:../Can_Devices/can_matrix_bms.c **** 
 350:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_RX_MO_BMS_BASE + CAN_0x116;
 1221              	 .loc 2 350 0
 1222 000a 0923     	 movs r3,#9
 1223 000c FB72     	 strb r3,[r7,#11]
 351:../Can_Devices/can_matrix_bms.c **** 
 352:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 1224              	 .loc 2 352 0
 1225 000e FB7A     	 ldrb r3,[r7,#11]
 1226 0010 FA68     	 ldr r2,[r7,#12]
 1227 0012 0233     	 adds r3,r3,#2
 1228 0014 9B00     	 lsls r3,r3,#2
 1229 0016 1344     	 add r3,r3,r2
 1230 0018 5B68     	 ldr r3,[r3,#4]
 1231 001a 1B68     	 ldr r3,[r3]
 1232 001c 7B60     	 str r3,[r7,#4]
 353:../Can_Devices/can_matrix_bms.c **** 
 354:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 1233              	 .loc 2 354 0
 1234 001e FB7A     	 ldrb r3,[r7,#11]
 1235 0020 FA68     	 ldr r2,[r7,#12]
 1236 0022 0233     	 adds r3,r3,#2
 1237 0024 9B00     	 lsls r3,r3,#2
 1238 0026 1344     	 add r3,r3,r2
 1239 0028 5B68     	 ldr r3,[r3,#4]
 1240 002a 1846     	 mov r0,r3
 1241 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 1242 0030 0346     	 mov r3,r0
 1243 0032 FB70     	 strb r3,[r7,#3]
 355:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 356:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 1244              	 .loc 2 356 0
 1245 0034 FB78     	 ldrb r3,[r7,#3]
 1246 0036 03F00103 	 and r3,r3,#1
 1247 003a 002B     	 cmp r3,#0
 1248 003c 16D0     	 beq .L54
 357:../Can_Devices/can_matrix_bms.c **** 	{
 358:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 359:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 1249              	 .loc 2 359 0
 1250 003e 7868     	 ldr r0,[r7,#4]
 1251 0040 0121     	 movs r1,#1
 1252 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 360:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 361:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 1253              	 .loc 2 361 0
 1254 0046 FB7A     	 ldrb r3,[r7,#11]
 1255 0048 FA68     	 ldr r2,[r7,#12]
 1256 004a 0233     	 adds r3,r3,#2
 1257 004c 9B00     	 lsls r3,r3,#2
 1258 004e 1344     	 add r3,r3,r2
 1259 0050 5B68     	 ldr r3,[r3,#4]
 1260 0052 1846     	 mov r0,r3
 1261 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 1262 0058 0346     	 mov r3,r0
 1263 005a BB70     	 strb r3,[r7,#2]
 362:../Can_Devices/can_matrix_bms.c **** 
 363:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 1264              	 .loc 2 363 0
 1265 005c BB78     	 ldrb r3,[r7,#2]
 1266 005e 002B     	 cmp r3,#0
 1267 0060 02D1     	 bne .L55
 364:../Can_Devices/can_matrix_bms.c **** 	  {
 365:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 366:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 1268              	 .loc 2 366 0
 1269 0062 0123     	 movs r3,#1
 1270 0064 7B70     	 strb r3,[r7,#1]
 1271 0066 01E0     	 b .L54
 1272              	.L55:
 367:../Can_Devices/can_matrix_bms.c **** 	  }
 368:../Can_Devices/can_matrix_bms.c **** 	  else
 369:../Can_Devices/can_matrix_bms.c **** 	  {
 370:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 371:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 1273              	 .loc 2 371 0
 1274 0068 0023     	 movs r3,#0
 1275 006a 7B70     	 strb r3,[r7,#1]
 1276              	.L54:
 372:../Can_Devices/can_matrix_bms.c **** 	  }
 373:../Can_Devices/can_matrix_bms.c **** 	}
 374:../Can_Devices/can_matrix_bms.c **** 
 375:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x116();
 1277              	 .loc 2 375 0
 1278 006c FFF7FEFF 	 bl process_Read_CAN_0x116
 376:../Can_Devices/can_matrix_bms.c **** }
 1279              	 .loc 2 376 0
 1280 0070 1037     	 adds r7,r7,#16
 1281              	.LCFI74:
 1282              	 .cfi_def_cfa_offset 8
 1283 0072 BD46     	 mov sp,r7
 1284              	.LCFI75:
 1285              	 .cfi_def_cfa_register 13
 1286              	 
 1287 0074 80BD     	 pop {r7,pc}
 1288              	.L57:
 1289 0076 00BF     	 .align 2
 1290              	.L56:
 1291 0078 00000000 	 .word CAN_NODE_1
 1292              	 .cfi_endproc
 1293              	.LFE618:
 1295              	 .section .text.process_Read_CAN_0x102_250kbps,"ax",%progbits
 1296              	 .align 2
 1297              	 .global process_Read_CAN_0x102_250kbps
 1298              	 .thumb
 1299              	 .thumb_func
 1301              	process_Read_CAN_0x102_250kbps:
 1302              	.LFB619:
 377:../Can_Devices/can_matrix_bms.c **** 
 378:../Can_Devices/can_matrix_bms.c **** /**************************************************************************************************
 379:../Can_Devices/can_matrix_bms.c **** 
 380:../Can_Devices/can_matrix_bms.c **** 
 381:../Can_Devices/can_matrix_bms.c **** /*************************************************************** 250kbps **************************
 382:../Can_Devices/can_matrix_bms.c **** 
 383:../Can_Devices/can_matrix_bms.c **** 
 384:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x102_250kbps(void)
 385:../Can_Devices/can_matrix_bms.c **** {
 1303              	 .loc 2 385 0
 1304              	 .cfi_startproc
 1305              	 
 1306              	 
 1307 0000 80B5     	 push {r7,lr}
 1308              	.LCFI76:
 1309              	 .cfi_def_cfa_offset 8
 1310              	 .cfi_offset 7,-8
 1311              	 .cfi_offset 14,-4
 1312 0002 84B0     	 sub sp,sp,#16
 1313              	.LCFI77:
 1314              	 .cfi_def_cfa_offset 24
 1315 0004 00AF     	 add r7,sp,#0
 1316              	.LCFI78:
 1317              	 .cfi_def_cfa_register 7
 386:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
 387:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1318              	 .loc 2 387 0
 1319 0006 094B     	 ldr r3,.L59
 1320 0008 FB60     	 str r3,[r7,#12]
 388:../Can_Devices/can_matrix_bms.c **** 
 389:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id102_250kbps;
 1321              	 .loc 2 389 0
 1322 000a 1423     	 movs r3,#20
 1323 000c FB72     	 strb r3,[r7,#11]
 390:../Can_Devices/can_matrix_bms.c **** 
 391:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x102].CAN_Data[ZERO_BYTE];
 1324              	 .loc 2 391 0
 1325 000e 084B     	 ldr r3,.L59+4
 1326 0010 7B60     	 str r3,[r7,#4]
 392:../Can_Devices/can_matrix_bms.c **** 
 393:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
 394:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1327              	 .loc 2 394 0
 1328 0012 FB7A     	 ldrb r3,[r7,#11]
 1329 0014 FA68     	 ldr r2,[r7,#12]
 1330 0016 0233     	 adds r3,r3,#2
 1331 0018 9B00     	 lsls r3,r3,#2
 1332 001a 1344     	 add r3,r3,r2
 1333 001c 5B68     	 ldr r3,[r3,#4]
 1334 001e 1846     	 mov r0,r3
 1335 0020 7968     	 ldr r1,[r7,#4]
 1336 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 395:../Can_Devices/can_matrix_bms.c **** 
 396:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
 397:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x102();
 398:../Can_Devices/can_matrix_bms.c **** }
 1337              	 .loc 2 398 0
 1338 0026 1037     	 adds r7,r7,#16
 1339              	.LCFI79:
 1340              	 .cfi_def_cfa_offset 8
 1341 0028 BD46     	 mov sp,r7
 1342              	.LCFI80:
 1343              	 .cfi_def_cfa_register 13
 1344              	 
 1345 002a 80BD     	 pop {r7,pc}
 1346              	.L60:
 1347              	 .align 2
 1348              	.L59:
 1349 002c 00000000 	 .word CAN_NODE_0
 1350 0030 04000000 	 .word CAN_MSG_DB_BMS+4
 1351              	 .cfi_endproc
 1352              	.LFE619:
 1354              	 .section .text.process_Read_CAN_0x103_250kbps,"ax",%progbits
 1355              	 .align 2
 1356              	 .global process_Read_CAN_0x103_250kbps
 1357              	 .thumb
 1358              	 .thumb_func
 1360              	process_Read_CAN_0x103_250kbps:
 1361              	.LFB620:
 399:../Can_Devices/can_matrix_bms.c **** 
 400:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x103_250kbps(void)
 401:../Can_Devices/can_matrix_bms.c **** {
 1362              	 .loc 2 401 0
 1363              	 .cfi_startproc
 1364              	 
 1365              	 
 1366 0000 80B5     	 push {r7,lr}
 1367              	.LCFI81:
 1368              	 .cfi_def_cfa_offset 8
 1369              	 .cfi_offset 7,-8
 1370              	 .cfi_offset 14,-4
 1371 0002 84B0     	 sub sp,sp,#16
 1372              	.LCFI82:
 1373              	 .cfi_def_cfa_offset 24
 1374 0004 00AF     	 add r7,sp,#0
 1375              	.LCFI83:
 1376              	 .cfi_def_cfa_register 7
 402:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
 403:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1377              	 .loc 2 403 0
 1378 0006 094B     	 ldr r3,.L62
 1379 0008 FB60     	 str r3,[r7,#12]
 404:../Can_Devices/can_matrix_bms.c **** 
 405:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id103_250kbps;
 1380              	 .loc 2 405 0
 1381 000a 1523     	 movs r3,#21
 1382 000c FB72     	 strb r3,[r7,#11]
 406:../Can_Devices/can_matrix_bms.c **** 
 407:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x103].CAN_Data[ZERO_BYTE];
 1383              	 .loc 2 407 0
 1384 000e 084B     	 ldr r3,.L62+4
 1385 0010 7B60     	 str r3,[r7,#4]
 408:../Can_Devices/can_matrix_bms.c **** 
 409:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
 410:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1386              	 .loc 2 410 0
 1387 0012 FB7A     	 ldrb r3,[r7,#11]
 1388 0014 FA68     	 ldr r2,[r7,#12]
 1389 0016 0233     	 adds r3,r3,#2
 1390 0018 9B00     	 lsls r3,r3,#2
 1391 001a 1344     	 add r3,r3,r2
 1392 001c 5B68     	 ldr r3,[r3,#4]
 1393 001e 1846     	 mov r0,r3
 1394 0020 7968     	 ldr r1,[r7,#4]
 1395 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 411:../Can_Devices/can_matrix_bms.c **** 
 412:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
 413:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x103();
 414:../Can_Devices/can_matrix_bms.c **** }
 1396              	 .loc 2 414 0
 1397 0026 1037     	 adds r7,r7,#16
 1398              	.LCFI84:
 1399              	 .cfi_def_cfa_offset 8
 1400 0028 BD46     	 mov sp,r7
 1401              	.LCFI85:
 1402              	 .cfi_def_cfa_register 13
 1403              	 
 1404 002a 80BD     	 pop {r7,pc}
 1405              	.L63:
 1406              	 .align 2
 1407              	.L62:
 1408 002c 00000000 	 .word CAN_NODE_0
 1409 0030 10000000 	 .word CAN_MSG_DB_BMS+16
 1410              	 .cfi_endproc
 1411              	.LFE620:
 1413              	 .section .text.process_Read_CAN_0x104_250kbps,"ax",%progbits
 1414              	 .align 2
 1415              	 .global process_Read_CAN_0x104_250kbps
 1416              	 .thumb
 1417              	 .thumb_func
 1419              	process_Read_CAN_0x104_250kbps:
 1420              	.LFB621:
 415:../Can_Devices/can_matrix_bms.c **** 
 416:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x104_250kbps(void)
 417:../Can_Devices/can_matrix_bms.c **** {
 1421              	 .loc 2 417 0
 1422              	 .cfi_startproc
 1423              	 
 1424              	 
 1425 0000 80B5     	 push {r7,lr}
 1426              	.LCFI86:
 1427              	 .cfi_def_cfa_offset 8
 1428              	 .cfi_offset 7,-8
 1429              	 .cfi_offset 14,-4
 1430 0002 84B0     	 sub sp,sp,#16
 1431              	.LCFI87:
 1432              	 .cfi_def_cfa_offset 24
 1433 0004 00AF     	 add r7,sp,#0
 1434              	.LCFI88:
 1435              	 .cfi_def_cfa_register 7
 418:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
 419:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1436              	 .loc 2 419 0
 1437 0006 094B     	 ldr r3,.L65
 1438 0008 FB60     	 str r3,[r7,#12]
 420:../Can_Devices/can_matrix_bms.c **** 
 421:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id104_250kbps;
 1439              	 .loc 2 421 0
 1440 000a 1623     	 movs r3,#22
 1441 000c FB72     	 strb r3,[r7,#11]
 422:../Can_Devices/can_matrix_bms.c **** 
 423:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x104].CAN_Data[ZERO_BYTE];
 1442              	 .loc 2 423 0
 1443 000e 084B     	 ldr r3,.L65+4
 1444 0010 7B60     	 str r3,[r7,#4]
 424:../Can_Devices/can_matrix_bms.c **** 
 425:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
 426:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1445              	 .loc 2 426 0
 1446 0012 FB7A     	 ldrb r3,[r7,#11]
 1447 0014 FA68     	 ldr r2,[r7,#12]
 1448 0016 0233     	 adds r3,r3,#2
 1449 0018 9B00     	 lsls r3,r3,#2
 1450 001a 1344     	 add r3,r3,r2
 1451 001c 5B68     	 ldr r3,[r3,#4]
 1452 001e 1846     	 mov r0,r3
 1453 0020 7968     	 ldr r1,[r7,#4]
 1454 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 427:../Can_Devices/can_matrix_bms.c **** 
 428:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
 429:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x103();
 430:../Can_Devices/can_matrix_bms.c **** }
 1455              	 .loc 2 430 0
 1456 0026 1037     	 adds r7,r7,#16
 1457              	.LCFI89:
 1458              	 .cfi_def_cfa_offset 8
 1459 0028 BD46     	 mov sp,r7
 1460              	.LCFI90:
 1461              	 .cfi_def_cfa_register 13
 1462              	 
 1463 002a 80BD     	 pop {r7,pc}
 1464              	.L66:
 1465              	 .align 2
 1466              	.L65:
 1467 002c 00000000 	 .word CAN_NODE_0
 1468 0030 1C000000 	 .word CAN_MSG_DB_BMS+28
 1469              	 .cfi_endproc
 1470              	.LFE621:
 1472              	 .section .text.process_Read_CAN_0x105_250kbps,"ax",%progbits
 1473              	 .align 2
 1474              	 .global process_Read_CAN_0x105_250kbps
 1475              	 .thumb
 1476              	 .thumb_func
 1478              	process_Read_CAN_0x105_250kbps:
 1479              	.LFB622:
 431:../Can_Devices/can_matrix_bms.c **** 
 432:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x105_250kbps(void)
 433:../Can_Devices/can_matrix_bms.c **** {
 1480              	 .loc 2 433 0
 1481              	 .cfi_startproc
 1482              	 
 1483              	 
 1484 0000 80B5     	 push {r7,lr}
 1485              	.LCFI91:
 1486              	 .cfi_def_cfa_offset 8
 1487              	 .cfi_offset 7,-8
 1488              	 .cfi_offset 14,-4
 1489 0002 84B0     	 sub sp,sp,#16
 1490              	.LCFI92:
 1491              	 .cfi_def_cfa_offset 24
 1492 0004 00AF     	 add r7,sp,#0
 1493              	.LCFI93:
 1494              	 .cfi_def_cfa_register 7
 434:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
 435:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1495              	 .loc 2 435 0
 1496 0006 094B     	 ldr r3,.L68
 1497 0008 FB60     	 str r3,[r7,#12]
 436:../Can_Devices/can_matrix_bms.c **** 
 437:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id105_250kbps;
 1498              	 .loc 2 437 0
 1499 000a 1723     	 movs r3,#23
 1500 000c FB72     	 strb r3,[r7,#11]
 438:../Can_Devices/can_matrix_bms.c **** 
 439:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x105].CAN_Data[ZERO_BYTE];
 1501              	 .loc 2 439 0
 1502 000e 084B     	 ldr r3,.L68+4
 1503 0010 7B60     	 str r3,[r7,#4]
 440:../Can_Devices/can_matrix_bms.c **** 
 441:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
 442:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1504              	 .loc 2 442 0
 1505 0012 FB7A     	 ldrb r3,[r7,#11]
 1506 0014 FA68     	 ldr r2,[r7,#12]
 1507 0016 0233     	 adds r3,r3,#2
 1508 0018 9B00     	 lsls r3,r3,#2
 1509 001a 1344     	 add r3,r3,r2
 1510 001c 5B68     	 ldr r3,[r3,#4]
 1511 001e 1846     	 mov r0,r3
 1512 0020 7968     	 ldr r1,[r7,#4]
 1513 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 443:../Can_Devices/can_matrix_bms.c **** 
 444:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
 445:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x103();
 446:../Can_Devices/can_matrix_bms.c **** }
 1514              	 .loc 2 446 0
 1515 0026 1037     	 adds r7,r7,#16
 1516              	.LCFI94:
 1517              	 .cfi_def_cfa_offset 8
 1518 0028 BD46     	 mov sp,r7
 1519              	.LCFI95:
 1520              	 .cfi_def_cfa_register 13
 1521              	 
 1522 002a 80BD     	 pop {r7,pc}
 1523              	.L69:
 1524              	 .align 2
 1525              	.L68:
 1526 002c 00000000 	 .word CAN_NODE_0
 1527 0030 28000000 	 .word CAN_MSG_DB_BMS+40
 1528              	 .cfi_endproc
 1529              	.LFE622:
 1531              	 .section .text.process_Read_CAN_0x113_250kbps,"ax",%progbits
 1532              	 .align 2
 1533              	 .global process_Read_CAN_0x113_250kbps
 1534              	 .thumb
 1535              	 .thumb_func
 1537              	process_Read_CAN_0x113_250kbps:
 1538              	.LFB623:
 447:../Can_Devices/can_matrix_bms.c **** 
 448:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x113_250kbps(void)
 449:../Can_Devices/can_matrix_bms.c **** {
 1539              	 .loc 2 449 0
 1540              	 .cfi_startproc
 1541              	 
 1542              	 
 1543 0000 80B5     	 push {r7,lr}
 1544              	.LCFI96:
 1545              	 .cfi_def_cfa_offset 8
 1546              	 .cfi_offset 7,-8
 1547              	 .cfi_offset 14,-4
 1548 0002 84B0     	 sub sp,sp,#16
 1549              	.LCFI97:
 1550              	 .cfi_def_cfa_offset 24
 1551 0004 00AF     	 add r7,sp,#0
 1552              	.LCFI98:
 1553              	 .cfi_def_cfa_register 7
 450:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
 451:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1554              	 .loc 2 451 0
 1555 0006 094B     	 ldr r3,.L71
 1556 0008 FB60     	 str r3,[r7,#12]
 452:../Can_Devices/can_matrix_bms.c **** 
 453:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id113_250kbps;
 1557              	 .loc 2 453 0
 1558 000a 1823     	 movs r3,#24
 1559 000c FB72     	 strb r3,[r7,#11]
 454:../Can_Devices/can_matrix_bms.c **** 
 455:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x113].CAN_Data[ZERO_BYTE];
 1560              	 .loc 2 455 0
 1561 000e 084B     	 ldr r3,.L71+4
 1562 0010 7B60     	 str r3,[r7,#4]
 456:../Can_Devices/can_matrix_bms.c **** 
 457:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
 458:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1563              	 .loc 2 458 0
 1564 0012 FB7A     	 ldrb r3,[r7,#11]
 1565 0014 FA68     	 ldr r2,[r7,#12]
 1566 0016 0233     	 adds r3,r3,#2
 1567 0018 9B00     	 lsls r3,r3,#2
 1568 001a 1344     	 add r3,r3,r2
 1569 001c 5B68     	 ldr r3,[r3,#4]
 1570 001e 1846     	 mov r0,r3
 1571 0020 7968     	 ldr r1,[r7,#4]
 1572 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 459:../Can_Devices/can_matrix_bms.c **** 
 460:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
 461:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x103();
 462:../Can_Devices/can_matrix_bms.c **** }
 1573              	 .loc 2 462 0
 1574 0026 1037     	 adds r7,r7,#16
 1575              	.LCFI99:
 1576              	 .cfi_def_cfa_offset 8
 1577 0028 BD46     	 mov sp,r7
 1578              	.LCFI100:
 1579              	 .cfi_def_cfa_register 13
 1580              	 
 1581 002a 80BD     	 pop {r7,pc}
 1582              	.L72:
 1583              	 .align 2
 1584              	.L71:
 1585 002c 00000000 	 .word CAN_NODE_0
 1586 0030 34000000 	 .word CAN_MSG_DB_BMS+52
 1587              	 .cfi_endproc
 1588              	.LFE623:
 1590              	 .section .text.process_Read_CAN_0x114_250kbps,"ax",%progbits
 1591              	 .align 2
 1592              	 .global process_Read_CAN_0x114_250kbps
 1593              	 .thumb
 1594              	 .thumb_func
 1596              	process_Read_CAN_0x114_250kbps:
 1597              	.LFB624:
 463:../Can_Devices/can_matrix_bms.c **** 
 464:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x114_250kbps(void)
 465:../Can_Devices/can_matrix_bms.c **** {
 1598              	 .loc 2 465 0
 1599              	 .cfi_startproc
 1600              	 
 1601              	 
 1602 0000 80B5     	 push {r7,lr}
 1603              	.LCFI101:
 1604              	 .cfi_def_cfa_offset 8
 1605              	 .cfi_offset 7,-8
 1606              	 .cfi_offset 14,-4
 1607 0002 84B0     	 sub sp,sp,#16
 1608              	.LCFI102:
 1609              	 .cfi_def_cfa_offset 24
 1610 0004 00AF     	 add r7,sp,#0
 1611              	.LCFI103:
 1612              	 .cfi_def_cfa_register 7
 466:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
 467:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1613              	 .loc 2 467 0
 1614 0006 094B     	 ldr r3,.L74
 1615 0008 FB60     	 str r3,[r7,#12]
 468:../Can_Devices/can_matrix_bms.c **** 
 469:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id114_250kbps;
 1616              	 .loc 2 469 0
 1617 000a 1923     	 movs r3,#25
 1618 000c FB72     	 strb r3,[r7,#11]
 470:../Can_Devices/can_matrix_bms.c **** 
 471:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x114].CAN_Data[ZERO_BYTE];
 1619              	 .loc 2 471 0
 1620 000e 084B     	 ldr r3,.L74+4
 1621 0010 7B60     	 str r3,[r7,#4]
 472:../Can_Devices/can_matrix_bms.c **** 
 473:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
 474:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1622              	 .loc 2 474 0
 1623 0012 FB7A     	 ldrb r3,[r7,#11]
 1624 0014 FA68     	 ldr r2,[r7,#12]
 1625 0016 0233     	 adds r3,r3,#2
 1626 0018 9B00     	 lsls r3,r3,#2
 1627 001a 1344     	 add r3,r3,r2
 1628 001c 5B68     	 ldr r3,[r3,#4]
 1629 001e 1846     	 mov r0,r3
 1630 0020 7968     	 ldr r1,[r7,#4]
 1631 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 475:../Can_Devices/can_matrix_bms.c **** 
 476:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
 477:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x103();
 478:../Can_Devices/can_matrix_bms.c **** }
 1632              	 .loc 2 478 0
 1633 0026 1037     	 adds r7,r7,#16
 1634              	.LCFI104:
 1635              	 .cfi_def_cfa_offset 8
 1636 0028 BD46     	 mov sp,r7
 1637              	.LCFI105:
 1638              	 .cfi_def_cfa_register 13
 1639              	 
 1640 002a 80BD     	 pop {r7,pc}
 1641              	.L75:
 1642              	 .align 2
 1643              	.L74:
 1644 002c 00000000 	 .word CAN_NODE_0
 1645 0030 40000000 	 .word CAN_MSG_DB_BMS+64
 1646              	 .cfi_endproc
 1647              	.LFE624:
 1649              	 .section .text.process_Read_CAN_0x116_250kbps,"ax",%progbits
 1650              	 .align 2
 1651              	 .global process_Read_CAN_0x116_250kbps
 1652              	 .thumb
 1653              	 .thumb_func
 1655              	process_Read_CAN_0x116_250kbps:
 1656              	.LFB625:
 479:../Can_Devices/can_matrix_bms.c **** 
 480:../Can_Devices/can_matrix_bms.c **** void process_Read_CAN_0x116_250kbps(void)
 481:../Can_Devices/can_matrix_bms.c **** {
 1657              	 .loc 2 481 0
 1658              	 .cfi_startproc
 1659              	 
 1660              	 
 1661 0000 80B5     	 push {r7,lr}
 1662              	.LCFI106:
 1663              	 .cfi_def_cfa_offset 8
 1664              	 .cfi_offset 7,-8
 1665              	 .cfi_offset 14,-4
 1666 0002 84B0     	 sub sp,sp,#16
 1667              	.LCFI107:
 1668              	 .cfi_def_cfa_offset 24
 1669 0004 00AF     	 add r7,sp,#0
 1670              	.LCFI108:
 1671              	 .cfi_def_cfa_register 7
 482:../Can_Devices/can_matrix_bms.c **** 	uint8_t *tempData, mo_index;
 483:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1672              	 .loc 2 483 0
 1673 0006 094B     	 ldr r3,.L77
 1674 0008 FB60     	 str r3,[r7,#12]
 484:../Can_Devices/can_matrix_bms.c **** 
 485:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id116_250kbps;
 1675              	 .loc 2 485 0
 1676 000a 1A23     	 movs r3,#26
 1677 000c FB72     	 strb r3,[r7,#11]
 486:../Can_Devices/can_matrix_bms.c **** 
 487:../Can_Devices/can_matrix_bms.c **** 	tempData = &CAN_MSG_DB_BMS[CAN_0x116].CAN_Data[ZERO_BYTE];
 1678              	 .loc 2 487 0
 1679 000e 084B     	 ldr r3,.L77+4
 1680 0010 7B60     	 str r3,[r7,#4]
 488:../Can_Devices/can_matrix_bms.c **** 
 489:../Can_Devices/can_matrix_bms.c **** 	//read data to external buffer
 490:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1681              	 .loc 2 490 0
 1682 0012 FB7A     	 ldrb r3,[r7,#11]
 1683 0014 FA68     	 ldr r2,[r7,#12]
 1684 0016 0233     	 adds r3,r3,#2
 1685 0018 9B00     	 lsls r3,r3,#2
 1686 001a 1344     	 add r3,r3,r2
 1687 001c 5B68     	 ldr r3,[r3,#4]
 1688 001e 1846     	 mov r0,r3
 1689 0020 7968     	 ldr r1,[r7,#4]
 1690 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 491:../Can_Devices/can_matrix_bms.c **** 
 492:../Can_Devices/can_matrix_bms.c **** 	//perform the conversion and then store
 493:../Can_Devices/can_matrix_bms.c **** //	process_CAN_0x103();
 494:../Can_Devices/can_matrix_bms.c **** }
 1691              	 .loc 2 494 0
 1692 0026 1037     	 adds r7,r7,#16
 1693              	.LCFI109:
 1694              	 .cfi_def_cfa_offset 8
 1695 0028 BD46     	 mov sp,r7
 1696              	.LCFI110:
 1697              	 .cfi_def_cfa_register 13
 1698              	 
 1699 002a 80BD     	 pop {r7,pc}
 1700              	.L78:
 1701              	 .align 2
 1702              	.L77:
 1703 002c 00000000 	 .word CAN_NODE_0
 1704 0030 4C000000 	 .word CAN_MSG_DB_BMS+76
 1705              	 .cfi_endproc
 1706              	.LFE625:
 1708              	 .section .text.Read_CAN_0x102_250kbps,"ax",%progbits
 1709              	 .align 2
 1710              	 .global Read_CAN_0x102_250kbps
 1711              	 .thumb
 1712              	 .thumb_func
 1714              	Read_CAN_0x102_250kbps:
 1715              	.LFB626:
 495:../Can_Devices/can_matrix_bms.c **** 
 496:../Can_Devices/can_matrix_bms.c **** 
 497:../Can_Devices/can_matrix_bms.c **** 
 498:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x102_250kbps(void)
 499:../Can_Devices/can_matrix_bms.c **** {
 1716              	 .loc 2 499 0
 1717              	 .cfi_startproc
 1718              	 
 1719              	 
 1720 0000 80B5     	 push {r7,lr}
 1721              	.LCFI111:
 1722              	 .cfi_def_cfa_offset 8
 1723              	 .cfi_offset 7,-8
 1724              	 .cfi_offset 14,-4
 1725 0002 84B0     	 sub sp,sp,#16
 1726              	.LCFI112:
 1727              	 .cfi_def_cfa_offset 24
 1728 0004 00AF     	 add r7,sp,#0
 1729              	.LCFI113:
 1730              	 .cfi_def_cfa_register 7
 500:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 501:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 502:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 503:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 504:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1731              	 .loc 2 504 0
 1732 0006 1C4B     	 ldr r3,.L82
 1733 0008 FB60     	 str r3,[r7,#12]
 505:../Can_Devices/can_matrix_bms.c **** 
 506:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id102_250kbps;
 1734              	 .loc 2 506 0
 1735 000a 1423     	 movs r3,#20
 1736 000c FB72     	 strb r3,[r7,#11]
 507:../Can_Devices/can_matrix_bms.c **** 
 508:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 1737              	 .loc 2 508 0
 1738 000e FB7A     	 ldrb r3,[r7,#11]
 1739 0010 FA68     	 ldr r2,[r7,#12]
 1740 0012 0233     	 adds r3,r3,#2
 1741 0014 9B00     	 lsls r3,r3,#2
 1742 0016 1344     	 add r3,r3,r2
 1743 0018 5B68     	 ldr r3,[r3,#4]
 1744 001a 1B68     	 ldr r3,[r3]
 1745 001c 7B60     	 str r3,[r7,#4]
 509:../Can_Devices/can_matrix_bms.c **** 
 510:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 1746              	 .loc 2 510 0
 1747 001e FB7A     	 ldrb r3,[r7,#11]
 1748 0020 FA68     	 ldr r2,[r7,#12]
 1749 0022 0233     	 adds r3,r3,#2
 1750 0024 9B00     	 lsls r3,r3,#2
 1751 0026 1344     	 add r3,r3,r2
 1752 0028 5B68     	 ldr r3,[r3,#4]
 1753 002a 1846     	 mov r0,r3
 1754 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 1755 0030 0346     	 mov r3,r0
 1756 0032 FB70     	 strb r3,[r7,#3]
 511:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 512:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 1757              	 .loc 2 512 0
 1758 0034 FB78     	 ldrb r3,[r7,#3]
 1759 0036 03F00103 	 and r3,r3,#1
 1760 003a 002B     	 cmp r3,#0
 1761 003c 16D0     	 beq .L80
 513:../Can_Devices/can_matrix_bms.c **** 	{
 514:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 515:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 1762              	 .loc 2 515 0
 1763 003e 7868     	 ldr r0,[r7,#4]
 1764 0040 0121     	 movs r1,#1
 1765 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 516:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 517:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 1766              	 .loc 2 517 0
 1767 0046 FB7A     	 ldrb r3,[r7,#11]
 1768 0048 FA68     	 ldr r2,[r7,#12]
 1769 004a 0233     	 adds r3,r3,#2
 1770 004c 9B00     	 lsls r3,r3,#2
 1771 004e 1344     	 add r3,r3,r2
 1772 0050 5B68     	 ldr r3,[r3,#4]
 1773 0052 1846     	 mov r0,r3
 1774 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 1775 0058 0346     	 mov r3,r0
 1776 005a BB70     	 strb r3,[r7,#2]
 518:../Can_Devices/can_matrix_bms.c **** 
 519:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 1777              	 .loc 2 519 0
 1778 005c BB78     	 ldrb r3,[r7,#2]
 1779 005e 002B     	 cmp r3,#0
 1780 0060 02D1     	 bne .L81
 520:../Can_Devices/can_matrix_bms.c **** 	  {
 521:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 522:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 1781              	 .loc 2 522 0
 1782 0062 0123     	 movs r3,#1
 1783 0064 7B70     	 strb r3,[r7,#1]
 1784 0066 01E0     	 b .L80
 1785              	.L81:
 523:../Can_Devices/can_matrix_bms.c **** 	  }
 524:../Can_Devices/can_matrix_bms.c **** 	  else
 525:../Can_Devices/can_matrix_bms.c **** 	  {
 526:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 527:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 1786              	 .loc 2 527 0
 1787 0068 0023     	 movs r3,#0
 1788 006a 7B70     	 strb r3,[r7,#1]
 1789              	.L80:
 528:../Can_Devices/can_matrix_bms.c **** 	  }
 529:../Can_Devices/can_matrix_bms.c **** 	}
 530:../Can_Devices/can_matrix_bms.c **** 
 531:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x102_250kbps();
 1790              	 .loc 2 531 0
 1791 006c FFF7FEFF 	 bl process_Read_CAN_0x102_250kbps
 532:../Can_Devices/can_matrix_bms.c **** }
 1792              	 .loc 2 532 0
 1793 0070 1037     	 adds r7,r7,#16
 1794              	.LCFI114:
 1795              	 .cfi_def_cfa_offset 8
 1796 0072 BD46     	 mov sp,r7
 1797              	.LCFI115:
 1798              	 .cfi_def_cfa_register 13
 1799              	 
 1800 0074 80BD     	 pop {r7,pc}
 1801              	.L83:
 1802 0076 00BF     	 .align 2
 1803              	.L82:
 1804 0078 00000000 	 .word CAN_NODE_0
 1805              	 .cfi_endproc
 1806              	.LFE626:
 1808              	 .section .text.Read_CAN_0x103_250kbps,"ax",%progbits
 1809              	 .align 2
 1810              	 .global Read_CAN_0x103_250kbps
 1811              	 .thumb
 1812              	 .thumb_func
 1814              	Read_CAN_0x103_250kbps:
 1815              	.LFB627:
 533:../Can_Devices/can_matrix_bms.c **** 
 534:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x103_250kbps(void)
 535:../Can_Devices/can_matrix_bms.c **** {
 1816              	 .loc 2 535 0
 1817              	 .cfi_startproc
 1818              	 
 1819              	 
 1820 0000 80B5     	 push {r7,lr}
 1821              	.LCFI116:
 1822              	 .cfi_def_cfa_offset 8
 1823              	 .cfi_offset 7,-8
 1824              	 .cfi_offset 14,-4
 1825 0002 84B0     	 sub sp,sp,#16
 1826              	.LCFI117:
 1827              	 .cfi_def_cfa_offset 24
 1828 0004 00AF     	 add r7,sp,#0
 1829              	.LCFI118:
 1830              	 .cfi_def_cfa_register 7
 536:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 537:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 538:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 539:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 540:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1831              	 .loc 2 540 0
 1832 0006 1C4B     	 ldr r3,.L87
 1833 0008 FB60     	 str r3,[r7,#12]
 541:../Can_Devices/can_matrix_bms.c **** 
 542:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id103_250kbps;
 1834              	 .loc 2 542 0
 1835 000a 1523     	 movs r3,#21
 1836 000c FB72     	 strb r3,[r7,#11]
 543:../Can_Devices/can_matrix_bms.c **** 
 544:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 1837              	 .loc 2 544 0
 1838 000e FB7A     	 ldrb r3,[r7,#11]
 1839 0010 FA68     	 ldr r2,[r7,#12]
 1840 0012 0233     	 adds r3,r3,#2
 1841 0014 9B00     	 lsls r3,r3,#2
 1842 0016 1344     	 add r3,r3,r2
 1843 0018 5B68     	 ldr r3,[r3,#4]
 1844 001a 1B68     	 ldr r3,[r3]
 1845 001c 7B60     	 str r3,[r7,#4]
 545:../Can_Devices/can_matrix_bms.c **** 
 546:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 1846              	 .loc 2 546 0
 1847 001e FB7A     	 ldrb r3,[r7,#11]
 1848 0020 FA68     	 ldr r2,[r7,#12]
 1849 0022 0233     	 adds r3,r3,#2
 1850 0024 9B00     	 lsls r3,r3,#2
 1851 0026 1344     	 add r3,r3,r2
 1852 0028 5B68     	 ldr r3,[r3,#4]
 1853 002a 1846     	 mov r0,r3
 1854 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 1855 0030 0346     	 mov r3,r0
 1856 0032 FB70     	 strb r3,[r7,#3]
 547:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 548:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 1857              	 .loc 2 548 0
 1858 0034 FB78     	 ldrb r3,[r7,#3]
 1859 0036 03F00103 	 and r3,r3,#1
 1860 003a 002B     	 cmp r3,#0
 1861 003c 16D0     	 beq .L85
 549:../Can_Devices/can_matrix_bms.c **** 	{
 550:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 551:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 1862              	 .loc 2 551 0
 1863 003e 7868     	 ldr r0,[r7,#4]
 1864 0040 0121     	 movs r1,#1
 1865 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 552:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 553:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 1866              	 .loc 2 553 0
 1867 0046 FB7A     	 ldrb r3,[r7,#11]
 1868 0048 FA68     	 ldr r2,[r7,#12]
 1869 004a 0233     	 adds r3,r3,#2
 1870 004c 9B00     	 lsls r3,r3,#2
 1871 004e 1344     	 add r3,r3,r2
 1872 0050 5B68     	 ldr r3,[r3,#4]
 1873 0052 1846     	 mov r0,r3
 1874 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 1875 0058 0346     	 mov r3,r0
 1876 005a BB70     	 strb r3,[r7,#2]
 554:../Can_Devices/can_matrix_bms.c **** 
 555:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 1877              	 .loc 2 555 0
 1878 005c BB78     	 ldrb r3,[r7,#2]
 1879 005e 002B     	 cmp r3,#0
 1880 0060 02D1     	 bne .L86
 556:../Can_Devices/can_matrix_bms.c **** 	  {
 557:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 558:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 1881              	 .loc 2 558 0
 1882 0062 0123     	 movs r3,#1
 1883 0064 7B70     	 strb r3,[r7,#1]
 1884 0066 01E0     	 b .L85
 1885              	.L86:
 559:../Can_Devices/can_matrix_bms.c **** 	  }
 560:../Can_Devices/can_matrix_bms.c **** 	  else
 561:../Can_Devices/can_matrix_bms.c **** 	  {
 562:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 563:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 1886              	 .loc 2 563 0
 1887 0068 0023     	 movs r3,#0
 1888 006a 7B70     	 strb r3,[r7,#1]
 1889              	.L85:
 564:../Can_Devices/can_matrix_bms.c **** 	  }
 565:../Can_Devices/can_matrix_bms.c **** 	}
 566:../Can_Devices/can_matrix_bms.c **** 
 567:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x103_250kbps();
 1890              	 .loc 2 567 0
 1891 006c FFF7FEFF 	 bl process_Read_CAN_0x103_250kbps
 568:../Can_Devices/can_matrix_bms.c **** }
 1892              	 .loc 2 568 0
 1893 0070 1037     	 adds r7,r7,#16
 1894              	.LCFI119:
 1895              	 .cfi_def_cfa_offset 8
 1896 0072 BD46     	 mov sp,r7
 1897              	.LCFI120:
 1898              	 .cfi_def_cfa_register 13
 1899              	 
 1900 0074 80BD     	 pop {r7,pc}
 1901              	.L88:
 1902 0076 00BF     	 .align 2
 1903              	.L87:
 1904 0078 00000000 	 .word CAN_NODE_0
 1905              	 .cfi_endproc
 1906              	.LFE627:
 1908              	 .section .text.Read_CAN_0x104_250kbps,"ax",%progbits
 1909              	 .align 2
 1910              	 .global Read_CAN_0x104_250kbps
 1911              	 .thumb
 1912              	 .thumb_func
 1914              	Read_CAN_0x104_250kbps:
 1915              	.LFB628:
 569:../Can_Devices/can_matrix_bms.c **** 
 570:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x104_250kbps(void)
 571:../Can_Devices/can_matrix_bms.c **** {
 1916              	 .loc 2 571 0
 1917              	 .cfi_startproc
 1918              	 
 1919              	 
 1920 0000 80B5     	 push {r7,lr}
 1921              	.LCFI121:
 1922              	 .cfi_def_cfa_offset 8
 1923              	 .cfi_offset 7,-8
 1924              	 .cfi_offset 14,-4
 1925 0002 84B0     	 sub sp,sp,#16
 1926              	.LCFI122:
 1927              	 .cfi_def_cfa_offset 24
 1928 0004 00AF     	 add r7,sp,#0
 1929              	.LCFI123:
 1930              	 .cfi_def_cfa_register 7
 572:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 573:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 574:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 575:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 576:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1931              	 .loc 2 576 0
 1932 0006 1C4B     	 ldr r3,.L92
 1933 0008 FB60     	 str r3,[r7,#12]
 577:../Can_Devices/can_matrix_bms.c **** 
 578:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id104_250kbps;
 1934              	 .loc 2 578 0
 1935 000a 1623     	 movs r3,#22
 1936 000c FB72     	 strb r3,[r7,#11]
 579:../Can_Devices/can_matrix_bms.c **** 
 580:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 1937              	 .loc 2 580 0
 1938 000e FB7A     	 ldrb r3,[r7,#11]
 1939 0010 FA68     	 ldr r2,[r7,#12]
 1940 0012 0233     	 adds r3,r3,#2
 1941 0014 9B00     	 lsls r3,r3,#2
 1942 0016 1344     	 add r3,r3,r2
 1943 0018 5B68     	 ldr r3,[r3,#4]
 1944 001a 1B68     	 ldr r3,[r3]
 1945 001c 7B60     	 str r3,[r7,#4]
 581:../Can_Devices/can_matrix_bms.c **** 
 582:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 1946              	 .loc 2 582 0
 1947 001e FB7A     	 ldrb r3,[r7,#11]
 1948 0020 FA68     	 ldr r2,[r7,#12]
 1949 0022 0233     	 adds r3,r3,#2
 1950 0024 9B00     	 lsls r3,r3,#2
 1951 0026 1344     	 add r3,r3,r2
 1952 0028 5B68     	 ldr r3,[r3,#4]
 1953 002a 1846     	 mov r0,r3
 1954 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 1955 0030 0346     	 mov r3,r0
 1956 0032 FB70     	 strb r3,[r7,#3]
 583:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 584:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 1957              	 .loc 2 584 0
 1958 0034 FB78     	 ldrb r3,[r7,#3]
 1959 0036 03F00103 	 and r3,r3,#1
 1960 003a 002B     	 cmp r3,#0
 1961 003c 16D0     	 beq .L90
 585:../Can_Devices/can_matrix_bms.c **** 	{
 586:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 587:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 1962              	 .loc 2 587 0
 1963 003e 7868     	 ldr r0,[r7,#4]
 1964 0040 0121     	 movs r1,#1
 1965 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 588:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 589:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 1966              	 .loc 2 589 0
 1967 0046 FB7A     	 ldrb r3,[r7,#11]
 1968 0048 FA68     	 ldr r2,[r7,#12]
 1969 004a 0233     	 adds r3,r3,#2
 1970 004c 9B00     	 lsls r3,r3,#2
 1971 004e 1344     	 add r3,r3,r2
 1972 0050 5B68     	 ldr r3,[r3,#4]
 1973 0052 1846     	 mov r0,r3
 1974 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 1975 0058 0346     	 mov r3,r0
 1976 005a BB70     	 strb r3,[r7,#2]
 590:../Can_Devices/can_matrix_bms.c **** 
 591:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 1977              	 .loc 2 591 0
 1978 005c BB78     	 ldrb r3,[r7,#2]
 1979 005e 002B     	 cmp r3,#0
 1980 0060 02D1     	 bne .L91
 592:../Can_Devices/can_matrix_bms.c **** 	  {
 593:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 594:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 1981              	 .loc 2 594 0
 1982 0062 0123     	 movs r3,#1
 1983 0064 7B70     	 strb r3,[r7,#1]
 1984 0066 01E0     	 b .L90
 1985              	.L91:
 595:../Can_Devices/can_matrix_bms.c **** 	  }
 596:../Can_Devices/can_matrix_bms.c **** 	  else
 597:../Can_Devices/can_matrix_bms.c **** 	  {
 598:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 599:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 1986              	 .loc 2 599 0
 1987 0068 0023     	 movs r3,#0
 1988 006a 7B70     	 strb r3,[r7,#1]
 1989              	.L90:
 600:../Can_Devices/can_matrix_bms.c **** 	  }
 601:../Can_Devices/can_matrix_bms.c **** 	}
 602:../Can_Devices/can_matrix_bms.c **** 
 603:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x104_250kbps();
 1990              	 .loc 2 603 0
 1991 006c FFF7FEFF 	 bl process_Read_CAN_0x104_250kbps
 604:../Can_Devices/can_matrix_bms.c **** }
 1992              	 .loc 2 604 0
 1993 0070 1037     	 adds r7,r7,#16
 1994              	.LCFI124:
 1995              	 .cfi_def_cfa_offset 8
 1996 0072 BD46     	 mov sp,r7
 1997              	.LCFI125:
 1998              	 .cfi_def_cfa_register 13
 1999              	 
 2000 0074 80BD     	 pop {r7,pc}
 2001              	.L93:
 2002 0076 00BF     	 .align 2
 2003              	.L92:
 2004 0078 00000000 	 .word CAN_NODE_0
 2005              	 .cfi_endproc
 2006              	.LFE628:
 2008              	 .section .text.Read_CAN_0x105_250kbps,"ax",%progbits
 2009              	 .align 2
 2010              	 .global Read_CAN_0x105_250kbps
 2011              	 .thumb
 2012              	 .thumb_func
 2014              	Read_CAN_0x105_250kbps:
 2015              	.LFB629:
 605:../Can_Devices/can_matrix_bms.c **** 
 606:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x105_250kbps(void)
 607:../Can_Devices/can_matrix_bms.c **** {
 2016              	 .loc 2 607 0
 2017              	 .cfi_startproc
 2018              	 
 2019              	 
 2020 0000 80B5     	 push {r7,lr}
 2021              	.LCFI126:
 2022              	 .cfi_def_cfa_offset 8
 2023              	 .cfi_offset 7,-8
 2024              	 .cfi_offset 14,-4
 2025 0002 84B0     	 sub sp,sp,#16
 2026              	.LCFI127:
 2027              	 .cfi_def_cfa_offset 24
 2028 0004 00AF     	 add r7,sp,#0
 2029              	.LCFI128:
 2030              	 .cfi_def_cfa_register 7
 608:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 609:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 610:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 611:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 612:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 2031              	 .loc 2 612 0
 2032 0006 1C4B     	 ldr r3,.L97
 2033 0008 FB60     	 str r3,[r7,#12]
 613:../Can_Devices/can_matrix_bms.c **** 
 614:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id105_250kbps;
 2034              	 .loc 2 614 0
 2035 000a 1723     	 movs r3,#23
 2036 000c FB72     	 strb r3,[r7,#11]
 615:../Can_Devices/can_matrix_bms.c **** 
 616:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 2037              	 .loc 2 616 0
 2038 000e FB7A     	 ldrb r3,[r7,#11]
 2039 0010 FA68     	 ldr r2,[r7,#12]
 2040 0012 0233     	 adds r3,r3,#2
 2041 0014 9B00     	 lsls r3,r3,#2
 2042 0016 1344     	 add r3,r3,r2
 2043 0018 5B68     	 ldr r3,[r3,#4]
 2044 001a 1B68     	 ldr r3,[r3]
 2045 001c 7B60     	 str r3,[r7,#4]
 617:../Can_Devices/can_matrix_bms.c **** 
 618:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 2046              	 .loc 2 618 0
 2047 001e FB7A     	 ldrb r3,[r7,#11]
 2048 0020 FA68     	 ldr r2,[r7,#12]
 2049 0022 0233     	 adds r3,r3,#2
 2050 0024 9B00     	 lsls r3,r3,#2
 2051 0026 1344     	 add r3,r3,r2
 2052 0028 5B68     	 ldr r3,[r3,#4]
 2053 002a 1846     	 mov r0,r3
 2054 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 2055 0030 0346     	 mov r3,r0
 2056 0032 FB70     	 strb r3,[r7,#3]
 619:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 620:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 2057              	 .loc 2 620 0
 2058 0034 FB78     	 ldrb r3,[r7,#3]
 2059 0036 03F00103 	 and r3,r3,#1
 2060 003a 002B     	 cmp r3,#0
 2061 003c 16D0     	 beq .L95
 621:../Can_Devices/can_matrix_bms.c **** 	{
 622:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 623:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 2062              	 .loc 2 623 0
 2063 003e 7868     	 ldr r0,[r7,#4]
 2064 0040 0121     	 movs r1,#1
 2065 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 624:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 625:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 2066              	 .loc 2 625 0
 2067 0046 FB7A     	 ldrb r3,[r7,#11]
 2068 0048 FA68     	 ldr r2,[r7,#12]
 2069 004a 0233     	 adds r3,r3,#2
 2070 004c 9B00     	 lsls r3,r3,#2
 2071 004e 1344     	 add r3,r3,r2
 2072 0050 5B68     	 ldr r3,[r3,#4]
 2073 0052 1846     	 mov r0,r3
 2074 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 2075 0058 0346     	 mov r3,r0
 2076 005a BB70     	 strb r3,[r7,#2]
 626:../Can_Devices/can_matrix_bms.c **** 
 627:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 2077              	 .loc 2 627 0
 2078 005c BB78     	 ldrb r3,[r7,#2]
 2079 005e 002B     	 cmp r3,#0
 2080 0060 02D1     	 bne .L96
 628:../Can_Devices/can_matrix_bms.c **** 	  {
 629:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 630:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 2081              	 .loc 2 630 0
 2082 0062 0123     	 movs r3,#1
 2083 0064 7B70     	 strb r3,[r7,#1]
 2084 0066 01E0     	 b .L95
 2085              	.L96:
 631:../Can_Devices/can_matrix_bms.c **** 	  }
 632:../Can_Devices/can_matrix_bms.c **** 	  else
 633:../Can_Devices/can_matrix_bms.c **** 	  {
 634:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 635:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 2086              	 .loc 2 635 0
 2087 0068 0023     	 movs r3,#0
 2088 006a 7B70     	 strb r3,[r7,#1]
 2089              	.L95:
 636:../Can_Devices/can_matrix_bms.c **** 	  }
 637:../Can_Devices/can_matrix_bms.c **** 	}
 638:../Can_Devices/can_matrix_bms.c **** 
 639:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x105_250kbps();
 2090              	 .loc 2 639 0
 2091 006c FFF7FEFF 	 bl process_Read_CAN_0x105_250kbps
 640:../Can_Devices/can_matrix_bms.c **** }
 2092              	 .loc 2 640 0
 2093 0070 1037     	 adds r7,r7,#16
 2094              	.LCFI129:
 2095              	 .cfi_def_cfa_offset 8
 2096 0072 BD46     	 mov sp,r7
 2097              	.LCFI130:
 2098              	 .cfi_def_cfa_register 13
 2099              	 
 2100 0074 80BD     	 pop {r7,pc}
 2101              	.L98:
 2102 0076 00BF     	 .align 2
 2103              	.L97:
 2104 0078 00000000 	 .word CAN_NODE_0
 2105              	 .cfi_endproc
 2106              	.LFE629:
 2108              	 .section .text.Read_CAN_0x113_250kbps,"ax",%progbits
 2109              	 .align 2
 2110              	 .global Read_CAN_0x113_250kbps
 2111              	 .thumb
 2112              	 .thumb_func
 2114              	Read_CAN_0x113_250kbps:
 2115              	.LFB630:
 641:../Can_Devices/can_matrix_bms.c **** 
 642:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x113_250kbps(void)
 643:../Can_Devices/can_matrix_bms.c **** {
 2116              	 .loc 2 643 0
 2117              	 .cfi_startproc
 2118              	 
 2119              	 
 2120 0000 80B5     	 push {r7,lr}
 2121              	.LCFI131:
 2122              	 .cfi_def_cfa_offset 8
 2123              	 .cfi_offset 7,-8
 2124              	 .cfi_offset 14,-4
 2125 0002 84B0     	 sub sp,sp,#16
 2126              	.LCFI132:
 2127              	 .cfi_def_cfa_offset 24
 2128 0004 00AF     	 add r7,sp,#0
 2129              	.LCFI133:
 2130              	 .cfi_def_cfa_register 7
 644:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 645:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 646:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 647:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 648:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 2131              	 .loc 2 648 0
 2132 0006 1C4B     	 ldr r3,.L102
 2133 0008 FB60     	 str r3,[r7,#12]
 649:../Can_Devices/can_matrix_bms.c **** 
 650:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id113_250kbps;
 2134              	 .loc 2 650 0
 2135 000a 1823     	 movs r3,#24
 2136 000c FB72     	 strb r3,[r7,#11]
 651:../Can_Devices/can_matrix_bms.c **** 
 652:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 2137              	 .loc 2 652 0
 2138 000e FB7A     	 ldrb r3,[r7,#11]
 2139 0010 FA68     	 ldr r2,[r7,#12]
 2140 0012 0233     	 adds r3,r3,#2
 2141 0014 9B00     	 lsls r3,r3,#2
 2142 0016 1344     	 add r3,r3,r2
 2143 0018 5B68     	 ldr r3,[r3,#4]
 2144 001a 1B68     	 ldr r3,[r3]
 2145 001c 7B60     	 str r3,[r7,#4]
 653:../Can_Devices/can_matrix_bms.c **** 
 654:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 2146              	 .loc 2 654 0
 2147 001e FB7A     	 ldrb r3,[r7,#11]
 2148 0020 FA68     	 ldr r2,[r7,#12]
 2149 0022 0233     	 adds r3,r3,#2
 2150 0024 9B00     	 lsls r3,r3,#2
 2151 0026 1344     	 add r3,r3,r2
 2152 0028 5B68     	 ldr r3,[r3,#4]
 2153 002a 1846     	 mov r0,r3
 2154 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 2155 0030 0346     	 mov r3,r0
 2156 0032 FB70     	 strb r3,[r7,#3]
 655:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 656:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 2157              	 .loc 2 656 0
 2158 0034 FB78     	 ldrb r3,[r7,#3]
 2159 0036 03F00103 	 and r3,r3,#1
 2160 003a 002B     	 cmp r3,#0
 2161 003c 16D0     	 beq .L100
 657:../Can_Devices/can_matrix_bms.c **** 	{
 658:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 659:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 2162              	 .loc 2 659 0
 2163 003e 7868     	 ldr r0,[r7,#4]
 2164 0040 0121     	 movs r1,#1
 2165 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 660:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 661:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 2166              	 .loc 2 661 0
 2167 0046 FB7A     	 ldrb r3,[r7,#11]
 2168 0048 FA68     	 ldr r2,[r7,#12]
 2169 004a 0233     	 adds r3,r3,#2
 2170 004c 9B00     	 lsls r3,r3,#2
 2171 004e 1344     	 add r3,r3,r2
 2172 0050 5B68     	 ldr r3,[r3,#4]
 2173 0052 1846     	 mov r0,r3
 2174 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 2175 0058 0346     	 mov r3,r0
 2176 005a BB70     	 strb r3,[r7,#2]
 662:../Can_Devices/can_matrix_bms.c **** 
 663:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 2177              	 .loc 2 663 0
 2178 005c BB78     	 ldrb r3,[r7,#2]
 2179 005e 002B     	 cmp r3,#0
 2180 0060 02D1     	 bne .L101
 664:../Can_Devices/can_matrix_bms.c **** 	  {
 665:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 666:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 2181              	 .loc 2 666 0
 2182 0062 0123     	 movs r3,#1
 2183 0064 7B70     	 strb r3,[r7,#1]
 2184 0066 01E0     	 b .L100
 2185              	.L101:
 667:../Can_Devices/can_matrix_bms.c **** 	  }
 668:../Can_Devices/can_matrix_bms.c **** 	  else
 669:../Can_Devices/can_matrix_bms.c **** 	  {
 670:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 671:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 2186              	 .loc 2 671 0
 2187 0068 0023     	 movs r3,#0
 2188 006a 7B70     	 strb r3,[r7,#1]
 2189              	.L100:
 672:../Can_Devices/can_matrix_bms.c **** 	  }
 673:../Can_Devices/can_matrix_bms.c **** 	}
 674:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x113_250kbps();
 2190              	 .loc 2 674 0
 2191 006c FFF7FEFF 	 bl process_Read_CAN_0x113_250kbps
 675:../Can_Devices/can_matrix_bms.c **** }
 2192              	 .loc 2 675 0
 2193 0070 1037     	 adds r7,r7,#16
 2194              	.LCFI134:
 2195              	 .cfi_def_cfa_offset 8
 2196 0072 BD46     	 mov sp,r7
 2197              	.LCFI135:
 2198              	 .cfi_def_cfa_register 13
 2199              	 
 2200 0074 80BD     	 pop {r7,pc}
 2201              	.L103:
 2202 0076 00BF     	 .align 2
 2203              	.L102:
 2204 0078 00000000 	 .word CAN_NODE_0
 2205              	 .cfi_endproc
 2206              	.LFE630:
 2208              	 .section .text.Read_CAN_0x114_250kbps,"ax",%progbits
 2209              	 .align 2
 2210              	 .global Read_CAN_0x114_250kbps
 2211              	 .thumb
 2212              	 .thumb_func
 2214              	Read_CAN_0x114_250kbps:
 2215              	.LFB631:
 676:../Can_Devices/can_matrix_bms.c **** 
 677:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x114_250kbps(void)
 678:../Can_Devices/can_matrix_bms.c **** {
 2216              	 .loc 2 678 0
 2217              	 .cfi_startproc
 2218              	 
 2219              	 
 2220 0000 80B5     	 push {r7,lr}
 2221              	.LCFI136:
 2222              	 .cfi_def_cfa_offset 8
 2223              	 .cfi_offset 7,-8
 2224              	 .cfi_offset 14,-4
 2225 0002 84B0     	 sub sp,sp,#16
 2226              	.LCFI137:
 2227              	 .cfi_def_cfa_offset 24
 2228 0004 00AF     	 add r7,sp,#0
 2229              	.LCFI138:
 2230              	 .cfi_def_cfa_register 7
 679:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 680:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 681:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 682:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 683:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 2231              	 .loc 2 683 0
 2232 0006 1C4B     	 ldr r3,.L107
 2233 0008 FB60     	 str r3,[r7,#12]
 684:../Can_Devices/can_matrix_bms.c **** 
 685:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id114_250kbps;
 2234              	 .loc 2 685 0
 2235 000a 1923     	 movs r3,#25
 2236 000c FB72     	 strb r3,[r7,#11]
 686:../Can_Devices/can_matrix_bms.c **** 
 687:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 2237              	 .loc 2 687 0
 2238 000e FB7A     	 ldrb r3,[r7,#11]
 2239 0010 FA68     	 ldr r2,[r7,#12]
 2240 0012 0233     	 adds r3,r3,#2
 2241 0014 9B00     	 lsls r3,r3,#2
 2242 0016 1344     	 add r3,r3,r2
 2243 0018 5B68     	 ldr r3,[r3,#4]
 2244 001a 1B68     	 ldr r3,[r3]
 2245 001c 7B60     	 str r3,[r7,#4]
 688:../Can_Devices/can_matrix_bms.c **** 
 689:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 2246              	 .loc 2 689 0
 2247 001e FB7A     	 ldrb r3,[r7,#11]
 2248 0020 FA68     	 ldr r2,[r7,#12]
 2249 0022 0233     	 adds r3,r3,#2
 2250 0024 9B00     	 lsls r3,r3,#2
 2251 0026 1344     	 add r3,r3,r2
 2252 0028 5B68     	 ldr r3,[r3,#4]
 2253 002a 1846     	 mov r0,r3
 2254 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 2255 0030 0346     	 mov r3,r0
 2256 0032 FB70     	 strb r3,[r7,#3]
 690:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 691:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 2257              	 .loc 2 691 0
 2258 0034 FB78     	 ldrb r3,[r7,#3]
 2259 0036 03F00103 	 and r3,r3,#1
 2260 003a 002B     	 cmp r3,#0
 2261 003c 16D0     	 beq .L105
 692:../Can_Devices/can_matrix_bms.c **** 	{
 693:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 694:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 2262              	 .loc 2 694 0
 2263 003e 7868     	 ldr r0,[r7,#4]
 2264 0040 0121     	 movs r1,#1
 2265 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 695:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 696:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 2266              	 .loc 2 696 0
 2267 0046 FB7A     	 ldrb r3,[r7,#11]
 2268 0048 FA68     	 ldr r2,[r7,#12]
 2269 004a 0233     	 adds r3,r3,#2
 2270 004c 9B00     	 lsls r3,r3,#2
 2271 004e 1344     	 add r3,r3,r2
 2272 0050 5B68     	 ldr r3,[r3,#4]
 2273 0052 1846     	 mov r0,r3
 2274 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 2275 0058 0346     	 mov r3,r0
 2276 005a BB70     	 strb r3,[r7,#2]
 697:../Can_Devices/can_matrix_bms.c **** 
 698:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 2277              	 .loc 2 698 0
 2278 005c BB78     	 ldrb r3,[r7,#2]
 2279 005e 002B     	 cmp r3,#0
 2280 0060 02D1     	 bne .L106
 699:../Can_Devices/can_matrix_bms.c **** 	  {
 700:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 701:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 2281              	 .loc 2 701 0
 2282 0062 0123     	 movs r3,#1
 2283 0064 7B70     	 strb r3,[r7,#1]
 2284 0066 01E0     	 b .L105
 2285              	.L106:
 702:../Can_Devices/can_matrix_bms.c **** 	  }
 703:../Can_Devices/can_matrix_bms.c **** 	  else
 704:../Can_Devices/can_matrix_bms.c **** 	  {
 705:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 706:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 2286              	 .loc 2 706 0
 2287 0068 0023     	 movs r3,#0
 2288 006a 7B70     	 strb r3,[r7,#1]
 2289              	.L105:
 707:../Can_Devices/can_matrix_bms.c **** 	  }
 708:../Can_Devices/can_matrix_bms.c **** 	}
 709:../Can_Devices/can_matrix_bms.c **** 
 710:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x114_250kbps();
 2290              	 .loc 2 710 0
 2291 006c FFF7FEFF 	 bl process_Read_CAN_0x114_250kbps
 711:../Can_Devices/can_matrix_bms.c **** }
 2292              	 .loc 2 711 0
 2293 0070 1037     	 adds r7,r7,#16
 2294              	.LCFI139:
 2295              	 .cfi_def_cfa_offset 8
 2296 0072 BD46     	 mov sp,r7
 2297              	.LCFI140:
 2298              	 .cfi_def_cfa_register 13
 2299              	 
 2300 0074 80BD     	 pop {r7,pc}
 2301              	.L108:
 2302 0076 00BF     	 .align 2
 2303              	.L107:
 2304 0078 00000000 	 .word CAN_NODE_0
 2305              	 .cfi_endproc
 2306              	.LFE631:
 2308              	 .section .text.Read_CAN_0x116_250kbps,"ax",%progbits
 2309              	 .align 2
 2310              	 .global Read_CAN_0x116_250kbps
 2311              	 .thumb
 2312              	 .thumb_func
 2314              	Read_CAN_0x116_250kbps:
 2315              	.LFB632:
 712:../Can_Devices/can_matrix_bms.c **** 
 713:../Can_Devices/can_matrix_bms.c **** void Read_CAN_0x116_250kbps(void)
 714:../Can_Devices/can_matrix_bms.c **** {
 2316              	 .loc 2 714 0
 2317              	 .cfi_startproc
 2318              	 
 2319              	 
 2320 0000 80B5     	 push {r7,lr}
 2321              	.LCFI141:
 2322              	 .cfi_def_cfa_offset 8
 2323              	 .cfi_offset 7,-8
 2324              	 .cfi_offset 14,-4
 2325 0002 84B0     	 sub sp,sp,#16
 2326              	.LCFI142:
 2327              	 .cfi_def_cfa_offset 24
 2328 0004 00AF     	 add r7,sp,#0
 2329              	.LCFI143:
 2330              	 .cfi_def_cfa_register 7
 715:../Can_Devices/can_matrix_bms.c **** 	uint8_t test;
 716:../Can_Devices/can_matrix_bms.c **** 	CAN_NODE_STATUS_t status, receive_status;
 717:../Can_Devices/can_matrix_bms.c **** 	XMC_CAN_MO_t *MO_Ptr;
 718:../Can_Devices/can_matrix_bms.c **** 	uint8_t mo_index;
 719:../Can_Devices/can_matrix_bms.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 2331              	 .loc 2 719 0
 2332 0006 1C4B     	 ldr r3,.L112
 2333 0008 FB60     	 str r3,[r7,#12]
 720:../Can_Devices/can_matrix_bms.c **** 
 721:../Can_Devices/can_matrix_bms.c **** 	mo_index = CAN_id116_250kbps;
 2334              	 .loc 2 721 0
 2335 000a 1A23     	 movs r3,#26
 2336 000c FB72     	 strb r3,[r7,#11]
 722:../Can_Devices/can_matrix_bms.c **** 
 723:../Can_Devices/can_matrix_bms.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 2337              	 .loc 2 723 0
 2338 000e FB7A     	 ldrb r3,[r7,#11]
 2339 0010 FA68     	 ldr r2,[r7,#12]
 2340 0012 0233     	 adds r3,r3,#2
 2341 0014 9B00     	 lsls r3,r3,#2
 2342 0016 1344     	 add r3,r3,r2
 2343 0018 5B68     	 ldr r3,[r3,#4]
 2344 001a 1B68     	 ldr r3,[r3]
 2345 001c 7B60     	 str r3,[r7,#4]
 724:../Can_Devices/can_matrix_bms.c **** 
 725:../Can_Devices/can_matrix_bms.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 2346              	 .loc 2 725 0
 2347 001e FB7A     	 ldrb r3,[r7,#11]
 2348 0020 FA68     	 ldr r2,[r7,#12]
 2349 0022 0233     	 adds r3,r3,#2
 2350 0024 9B00     	 lsls r3,r3,#2
 2351 0026 1344     	 add r3,r3,r2
 2352 0028 5B68     	 ldr r3,[r3,#4]
 2353 002a 1846     	 mov r0,r3
 2354 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 2355 0030 0346     	 mov r3,r0
 2356 0032 FB70     	 strb r3,[r7,#3]
 726:../Can_Devices/can_matrix_bms.c **** 	//Check receive pending status
 727:../Can_Devices/can_matrix_bms.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 2357              	 .loc 2 727 0
 2358 0034 FB78     	 ldrb r3,[r7,#3]
 2359 0036 03F00103 	 and r3,r3,#1
 2360 003a 002B     	 cmp r3,#0
 2361 003c 16D0     	 beq .L110
 728:../Can_Devices/can_matrix_bms.c **** 	{
 729:../Can_Devices/can_matrix_bms.c **** 	  // Clear the flag
 730:../Can_Devices/can_matrix_bms.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 2362              	 .loc 2 730 0
 2363 003e 7868     	 ldr r0,[r7,#4]
 2364 0040 0121     	 movs r1,#1
 2365 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 731:../Can_Devices/can_matrix_bms.c **** 	  // Read the received Message object
 732:../Can_Devices/can_matrix_bms.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 2366              	 .loc 2 732 0
 2367 0046 FB7A     	 ldrb r3,[r7,#11]
 2368 0048 FA68     	 ldr r2,[r7,#12]
 2369 004a 0233     	 adds r3,r3,#2
 2370 004c 9B00     	 lsls r3,r3,#2
 2371 004e 1344     	 add r3,r3,r2
 2372 0050 5B68     	 ldr r3,[r3,#4]
 2373 0052 1846     	 mov r0,r3
 2374 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 2375 0058 0346     	 mov r3,r0
 2376 005a BB70     	 strb r3,[r7,#2]
 733:../Can_Devices/can_matrix_bms.c **** 
 734:../Can_Devices/can_matrix_bms.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 2377              	 .loc 2 734 0
 2378 005c BB78     	 ldrb r3,[r7,#2]
 2379 005e 002B     	 cmp r3,#0
 2380 0060 02D1     	 bne .L111
 735:../Can_Devices/can_matrix_bms.c **** 	  {
 736:../Can_Devices/can_matrix_bms.c **** 	    // message object receive success.
 737:../Can_Devices/can_matrix_bms.c **** 		  test = 1;
 2381              	 .loc 2 737 0
 2382 0062 0123     	 movs r3,#1
 2383 0064 7B70     	 strb r3,[r7,#1]
 2384 0066 01E0     	 b .L110
 2385              	.L111:
 738:../Can_Devices/can_matrix_bms.c **** 	  }
 739:../Can_Devices/can_matrix_bms.c **** 	  else
 740:../Can_Devices/can_matrix_bms.c **** 	  {
 741:../Can_Devices/can_matrix_bms.c **** 	    // message object failed to receive.
 742:../Can_Devices/can_matrix_bms.c **** 		  test = 0;
 2386              	 .loc 2 742 0
 2387 0068 0023     	 movs r3,#0
 2388 006a 7B70     	 strb r3,[r7,#1]
 2389              	.L110:
 743:../Can_Devices/can_matrix_bms.c **** 	  }
 744:../Can_Devices/can_matrix_bms.c **** 	}
 745:../Can_Devices/can_matrix_bms.c **** 
 746:../Can_Devices/can_matrix_bms.c **** 	process_Read_CAN_0x116_250kbps();
 2390              	 .loc 2 746 0
 2391 006c FFF7FEFF 	 bl process_Read_CAN_0x116_250kbps
 747:../Can_Devices/can_matrix_bms.c **** }
 2392              	 .loc 2 747 0
 2393 0070 1037     	 adds r7,r7,#16
 2394              	.LCFI144:
 2395              	 .cfi_def_cfa_offset 8
 2396 0072 BD46     	 mov sp,r7
 2397              	.LCFI145:
 2398              	 .cfi_def_cfa_register 13
 2399              	 
 2400 0074 80BD     	 pop {r7,pc}
 2401              	.L113:
 2402 0076 00BF     	 .align 2
 2403              	.L112:
 2404 0078 00000000 	 .word CAN_NODE_0
 2405              	 .cfi_endproc
 2406              	.LFE632:
 2408              	 .section .text.Read_CAN_BMS,"ax",%progbits
 2409              	 .align 2
 2410              	 .global Read_CAN_BMS
 2411              	 .thumb
 2412              	 .thumb_func
 2414              	Read_CAN_BMS:
 2415              	.LFB633:
 748:../Can_Devices/can_matrix_bms.c **** 
 749:../Can_Devices/can_matrix_bms.c **** 
 750:../Can_Devices/can_matrix_bms.c **** 
 751:../Can_Devices/can_matrix_bms.c **** 
 752:../Can_Devices/can_matrix_bms.c **** void Read_CAN_BMS(void)
 753:../Can_Devices/can_matrix_bms.c **** {
 2416              	 .loc 2 753 0
 2417              	 .cfi_startproc
 2418              	 
 2419              	 
 2420 0000 80B5     	 push {r7,lr}
 2421              	.LCFI146:
 2422              	 .cfi_def_cfa_offset 8
 2423              	 .cfi_offset 7,-8
 2424              	 .cfi_offset 14,-4
 2425 0002 00AF     	 add r7,sp,#0
 2426              	.LCFI147:
 2427              	 .cfi_def_cfa_register 7
 754:../Can_Devices/can_matrix_bms.c **** 	///// 500kbps ////
 755:../Can_Devices/can_matrix_bms.c ****    /*Read_CAN_0x102();
 756:../Can_Devices/can_matrix_bms.c **** 	 Read_CAN_0x103();
 757:../Can_Devices/can_matrix_bms.c **** 	 Read_CAN_0x104();
 758:../Can_Devices/can_matrix_bms.c **** 	 Read_CAN_0x105();
 759:../Can_Devices/can_matrix_bms.c **** 	 Read_CAN_0x113();
 760:../Can_Devices/can_matrix_bms.c **** 	 Read_CAN_0x114();
 761:../Can_Devices/can_matrix_bms.c **** 	 Read_CAN_0x116();*/
 762:../Can_Devices/can_matrix_bms.c **** 
 763:../Can_Devices/can_matrix_bms.c **** 	//// 250kbps ////
 764:../Can_Devices/can_matrix_bms.c **** 	 Read_CAN_0x102_250kbps();
 2428              	 .loc 2 764 0
 2429 0004 FFF7FEFF 	 bl Read_CAN_0x102_250kbps
 765:../Can_Devices/can_matrix_bms.c **** 	 Read_CAN_0x103_250kbps();
 2430              	 .loc 2 765 0
 2431 0008 FFF7FEFF 	 bl Read_CAN_0x103_250kbps
 766:../Can_Devices/can_matrix_bms.c **** 	 Read_CAN_0x104_250kbps();
 2432              	 .loc 2 766 0
 2433 000c FFF7FEFF 	 bl Read_CAN_0x104_250kbps
 767:../Can_Devices/can_matrix_bms.c **** 	 Read_CAN_0x105_250kbps();
 2434              	 .loc 2 767 0
 2435 0010 FFF7FEFF 	 bl Read_CAN_0x105_250kbps
 768:../Can_Devices/can_matrix_bms.c **** 	 Read_CAN_0x113_250kbps();
 2436              	 .loc 2 768 0
 2437 0014 FFF7FEFF 	 bl Read_CAN_0x113_250kbps
 769:../Can_Devices/can_matrix_bms.c **** 	 Read_CAN_0x114_250kbps();
 2438              	 .loc 2 769 0
 2439 0018 FFF7FEFF 	 bl Read_CAN_0x114_250kbps
 770:../Can_Devices/can_matrix_bms.c **** 	 Read_CAN_0x116_250kbps();
 2440              	 .loc 2 770 0
 2441 001c FFF7FEFF 	 bl Read_CAN_0x116_250kbps
 771:../Can_Devices/can_matrix_bms.c **** 
 772:../Can_Devices/can_matrix_bms.c **** }
 2442              	 .loc 2 772 0
 2443 0020 80BD     	 pop {r7,pc}
 2444              	 .cfi_endproc
 2445              	.LFE633:
 2447 0022 00BF     	 .text
 2448              	.Letext0:
 2449              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2450              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2451              	 .file 5 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 2452              	 .file 6 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_gpio.h"
 2453              	 .file 7 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc4_gpio.h"
 2454              	 .file 8 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_usic.h"
 2455              	 .file 9 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/GLOBAL_CAN/global_can.h"
 2456              	 .file 10 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/CAN_NODE/can_node.h"
 2457              	 .file 11 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_spi.h"
 2458              	 .file 12 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/can_matrix.h"
 2459              	 .file 13 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Include/cmsis_gcc.h"
 2460              	 .file 14 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Include/core_cm4.h"
 2461              	 .file 15 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 2462              	 .file 16 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/CAN_NODE/can_node_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 can_matrix_bms.c
    {standard input}:20     .text.XMC_CAN_MO_ResetStatus:00000000 $t
    {standard input}:24     .text.XMC_CAN_MO_ResetStatus:00000000 XMC_CAN_MO_ResetStatus
                            *COM*:00000001 BMS_SOC
                            *COM*:0000003c CAN_MSG_DB_HVAC
                            *COM*:00000004 eps_status
                            *COM*:00000001 instrument_clustor_doors
                            *COM*:00000084 CAN_BMS_29bit
                            *COM*:00000084 CAN_IRP_29bit
                            *COM*:00000001 charge_complete
                            *COM*:00000001 charging_started
                            *COM*:00000002 Bms_SOC
                            *COM*:00000002 Bms_SOH
                            *COM*:00000001 Mapped_BMS_SOC
                            *COM*:00000002 Bms_minTemp
                            *COM*:00000002 Bms_maxTemp
                            *COM*:00000004 PackCurrent
                            *COM*:00000004 PackVoltage
                            *COM*:00000002 RegenerativeCurrentLimit
                            *COM*:00000002 ChargeCurrentLimit
                            *COM*:00000002 DischargeCurrentLimit
                            *COM*:00000004 HvBatteryPower
                            *COM*:00000004 bmsFault1
                            *COM*:00000004 bmsFault2
                            *COM*:00000004 GtakeFaults
                            *COM*:00000003 allFault_indicator
                            *COM*:00000004 cluster_Fault_Indicator
                            *COM*:00000004 Mcu_Temp
                            *COM*:00000004 Motor_Temp
                            *COM*:00000002 VehicleSpeedglb
                            *COM*:0000003c OBDII_CAN
                            *COM*:00000002 OBD_data
                            *COM*:00000004 Irp_Mcu_drive_states_29bit
                            *COM*:00000004 Irp_Mcu_BMS_states_29bit
                            *COM*:00000004 Irp_Mcu_Torques_29bit
                            *COM*:00000004 Irp_Mcu_BMS_Currents_29bit
                            *COM*:00000004 Irp_MCU_Status_29bit
                            *COM*:00000004 Irp_MCU_Faults_29bit
                            *COM*:00000002 DC_Current_irp
                            *COM*:00000002 MotorPower_Irp
                            *COM*:00000002 Torque_Estimation
                            *COM*:00000002 DC_Voltage_irp
                            *COM*:00000002 Mcu_Temp_Irp
                            *COM*:00000002 Motor_Temp_Irp
                            *COM*:00000002 RPM
                            *COM*:00000001 Regenration_flag
                            *COM*:00000002 hv_count
                            *COM*:00000004 BMS_Avg_temp
                            *COM*:00000001 AC_ON_4g
                            *COM*:00000002 speed_4g
    {standard input}:117    .data.CAN_MSG_DB_BMS:00000000 CAN_MSG_DB_BMS
    {standard input}:114    .data.CAN_MSG_DB_BMS:00000000 $d
    {standard input}:182    .text.process_Read_CAN_0x102:00000000 $t
    {standard input}:187    .text.process_Read_CAN_0x102:00000000 process_Read_CAN_0x102
    {standard input}:236    .text.process_Read_CAN_0x102:0000002c $d
    {standard input}:242    .text.process_Read_CAN_0x103:00000000 $t
    {standard input}:247    .text.process_Read_CAN_0x103:00000000 process_Read_CAN_0x103
    {standard input}:295    .text.process_Read_CAN_0x103:0000002c $d
    {standard input}:301    .text.process_Read_CAN_0x104:00000000 $t
    {standard input}:306    .text.process_Read_CAN_0x104:00000000 process_Read_CAN_0x104
    {standard input}:354    .text.process_Read_CAN_0x104:0000002c $d
    {standard input}:360    .text.process_Read_CAN_0x105:00000000 $t
    {standard input}:365    .text.process_Read_CAN_0x105:00000000 process_Read_CAN_0x105
    {standard input}:413    .text.process_Read_CAN_0x105:0000002c $d
    {standard input}:419    .text.process_Read_CAN_0x113:00000000 $t
    {standard input}:424    .text.process_Read_CAN_0x113:00000000 process_Read_CAN_0x113
    {standard input}:472    .text.process_Read_CAN_0x113:0000002c $d
    {standard input}:478    .text.process_Read_CAN_0x114:00000000 $t
    {standard input}:483    .text.process_Read_CAN_0x114:00000000 process_Read_CAN_0x114
    {standard input}:531    .text.process_Read_CAN_0x114:0000002c $d
    {standard input}:537    .text.process_Read_CAN_0x116:00000000 $t
    {standard input}:542    .text.process_Read_CAN_0x116:00000000 process_Read_CAN_0x116
    {standard input}:590    .text.process_Read_CAN_0x116:0000002c $d
    {standard input}:596    .text.Read_CAN_0x102:00000000 $t
    {standard input}:601    .text.Read_CAN_0x102:00000000 Read_CAN_0x102
    {standard input}:691    .text.Read_CAN_0x102:00000078 $d
    {standard input}:696    .text.Read_CAN_0x103:00000000 $t
    {standard input}:701    .text.Read_CAN_0x103:00000000 Read_CAN_0x103
    {standard input}:791    .text.Read_CAN_0x103:00000078 $d
    {standard input}:796    .text.Read_CAN_0x104:00000000 $t
    {standard input}:801    .text.Read_CAN_0x104:00000000 Read_CAN_0x104
    {standard input}:891    .text.Read_CAN_0x104:00000078 $d
    {standard input}:896    .text.Read_CAN_0x105:00000000 $t
    {standard input}:901    .text.Read_CAN_0x105:00000000 Read_CAN_0x105
    {standard input}:991    .text.Read_CAN_0x105:00000078 $d
    {standard input}:996    .text.Read_CAN_0x113:00000000 $t
    {standard input}:1001   .text.Read_CAN_0x113:00000000 Read_CAN_0x113
    {standard input}:1091   .text.Read_CAN_0x113:00000078 $d
    {standard input}:1096   .text.Read_CAN_0x114:00000000 $t
    {standard input}:1101   .text.Read_CAN_0x114:00000000 Read_CAN_0x114
    {standard input}:1191   .text.Read_CAN_0x114:00000078 $d
    {standard input}:1196   .text.Read_CAN_0x116:00000000 $t
    {standard input}:1201   .text.Read_CAN_0x116:00000000 Read_CAN_0x116
    {standard input}:1291   .text.Read_CAN_0x116:00000078 $d
    {standard input}:1296   .text.process_Read_CAN_0x102_250kbps:00000000 $t
    {standard input}:1301   .text.process_Read_CAN_0x102_250kbps:00000000 process_Read_CAN_0x102_250kbps
    {standard input}:1349   .text.process_Read_CAN_0x102_250kbps:0000002c $d
    {standard input}:1355   .text.process_Read_CAN_0x103_250kbps:00000000 $t
    {standard input}:1360   .text.process_Read_CAN_0x103_250kbps:00000000 process_Read_CAN_0x103_250kbps
    {standard input}:1408   .text.process_Read_CAN_0x103_250kbps:0000002c $d
    {standard input}:1414   .text.process_Read_CAN_0x104_250kbps:00000000 $t
    {standard input}:1419   .text.process_Read_CAN_0x104_250kbps:00000000 process_Read_CAN_0x104_250kbps
    {standard input}:1467   .text.process_Read_CAN_0x104_250kbps:0000002c $d
    {standard input}:1473   .text.process_Read_CAN_0x105_250kbps:00000000 $t
    {standard input}:1478   .text.process_Read_CAN_0x105_250kbps:00000000 process_Read_CAN_0x105_250kbps
    {standard input}:1526   .text.process_Read_CAN_0x105_250kbps:0000002c $d
    {standard input}:1532   .text.process_Read_CAN_0x113_250kbps:00000000 $t
    {standard input}:1537   .text.process_Read_CAN_0x113_250kbps:00000000 process_Read_CAN_0x113_250kbps
    {standard input}:1585   .text.process_Read_CAN_0x113_250kbps:0000002c $d
    {standard input}:1591   .text.process_Read_CAN_0x114_250kbps:00000000 $t
    {standard input}:1596   .text.process_Read_CAN_0x114_250kbps:00000000 process_Read_CAN_0x114_250kbps
    {standard input}:1644   .text.process_Read_CAN_0x114_250kbps:0000002c $d
    {standard input}:1650   .text.process_Read_CAN_0x116_250kbps:00000000 $t
    {standard input}:1655   .text.process_Read_CAN_0x116_250kbps:00000000 process_Read_CAN_0x116_250kbps
    {standard input}:1703   .text.process_Read_CAN_0x116_250kbps:0000002c $d
    {standard input}:1709   .text.Read_CAN_0x102_250kbps:00000000 $t
    {standard input}:1714   .text.Read_CAN_0x102_250kbps:00000000 Read_CAN_0x102_250kbps
    {standard input}:1804   .text.Read_CAN_0x102_250kbps:00000078 $d
    {standard input}:1809   .text.Read_CAN_0x103_250kbps:00000000 $t
    {standard input}:1814   .text.Read_CAN_0x103_250kbps:00000000 Read_CAN_0x103_250kbps
    {standard input}:1904   .text.Read_CAN_0x103_250kbps:00000078 $d
    {standard input}:1909   .text.Read_CAN_0x104_250kbps:00000000 $t
    {standard input}:1914   .text.Read_CAN_0x104_250kbps:00000000 Read_CAN_0x104_250kbps
    {standard input}:2004   .text.Read_CAN_0x104_250kbps:00000078 $d
    {standard input}:2009   .text.Read_CAN_0x105_250kbps:00000000 $t
    {standard input}:2014   .text.Read_CAN_0x105_250kbps:00000000 Read_CAN_0x105_250kbps
    {standard input}:2104   .text.Read_CAN_0x105_250kbps:00000078 $d
    {standard input}:2109   .text.Read_CAN_0x113_250kbps:00000000 $t
    {standard input}:2114   .text.Read_CAN_0x113_250kbps:00000000 Read_CAN_0x113_250kbps
    {standard input}:2204   .text.Read_CAN_0x113_250kbps:00000078 $d
    {standard input}:2209   .text.Read_CAN_0x114_250kbps:00000000 $t
    {standard input}:2214   .text.Read_CAN_0x114_250kbps:00000000 Read_CAN_0x114_250kbps
    {standard input}:2304   .text.Read_CAN_0x114_250kbps:00000078 $d
    {standard input}:2309   .text.Read_CAN_0x116_250kbps:00000000 $t
    {standard input}:2314   .text.Read_CAN_0x116_250kbps:00000000 Read_CAN_0x116_250kbps
    {standard input}:2404   .text.Read_CAN_0x116_250kbps:00000078 $d
    {standard input}:2409   .text.Read_CAN_BMS:00000000 $t
    {standard input}:2414   .text.Read_CAN_BMS:00000000 Read_CAN_BMS
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CAN_NODE_MO_ReadData
CAN_NODE_1
CAN_NODE_MO_GetStatus
CAN_NODE_MO_Receive
CAN_NODE_0
