   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "can_matrix_bms_29bit.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CAN_MO_ResetStatus,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CAN_MO_ResetStatus:
  25              	.LFB323:
  26              	 .file 1 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_can.h"
   1:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2019-07-02
   4:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *****************************************************************************
   7:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.
  11:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  12:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  14:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * do so, all subject to the following:
  20:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  21:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * The copyright notices in the Software and this entire statement, including
  22:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * the above license grant, this restriction and the following disclaimer,
  23:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * all derivative works of the Software, unless such copies or derivative
  25:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * works are solely in the form of machine-executable object code generated by
  26:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * a source language processor.
  27:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  28:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * DEALINGS IN THE SOFTWARE.
  35:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share
  37:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * at XMCSupport@infineon.com.
  39:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *****************************************************************************
  40:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  41:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  42:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  43:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  44:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  45:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  46:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  47:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  49:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  50:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  51:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  52:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  53:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  54:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  55:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  56:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  57:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  58:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  59:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  60:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-01:
  61:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed fCANB clock support <br>
  62:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  63:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-15:
  64:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added "xmc_can_map.h" include <br>
  65:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  66:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-07:
  67:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsPanelControlReady()
  68:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  69:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2017-11-09:
  70:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  71:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  72:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  73:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2019-07-02:
  74:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_GetClockFrequency()
  75:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsListEmpty(), XMC_CAN_GetListBegin(), XMC_CAN_GetListSize(), XMC_CAN_MO_Get
  76:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  77:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  78:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  79:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  80:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  81:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  82:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  83:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  84:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
  85:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  86:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  87:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  88:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  89:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  90:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  91:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  92:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  93:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  94:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  95:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  96:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  97:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  98:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  99:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 100:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-20:
 101:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>
 102:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
 103:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 104:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 105:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 106:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
 107:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
 108:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 109:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 110:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
 111:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 112:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
 113:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 114:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
 115:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 116:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
 117:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_can_map.h"
 118:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
 119:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 120:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 121:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
 122:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 123:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 124:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 125:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 126:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 127:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 128:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 129:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 130:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 131:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 132:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes.
 133:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 134:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between
 135:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 136:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 137:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 138:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:
 139:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:
 140:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 141:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 142:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 143:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 144:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:
 145:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 146:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 147:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 148:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 149:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 150:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 151:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 152:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure().
 153:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 154:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:
 155:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 156:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 157:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions
 158:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 159:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent().
 160:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 161:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:
 162:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 163:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 164:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 165:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:
 166:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 167:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 168:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 169:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 170:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 171:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 172:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 173:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 174:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)   /**< Standard Identifier bitposition */
 175:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 176:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 177:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 178:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL) /**< Node event mask */
 179:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 180:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)  /**< Message Object event mask */
 181:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 182:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 183:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 184:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 185:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 186:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 187:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 188:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 189:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 190:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 191:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 192:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 193:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 194:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 195:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 196:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 197:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 198:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 199:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 200:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 201:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 202:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 203:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 204:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 205:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 206:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,   /**< Remove a message object from the list and insert
 207:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 208:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 209:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 210:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 211:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 212:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 213:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 214:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 215:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 216:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 217:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 218:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 219:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 220:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 221:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 222:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 223:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 224:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 225:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 226:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 227:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 228:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 229:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 230:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 231:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 232:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 233:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 234:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 235:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 236:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 237:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 238:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 239:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 240:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 241:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 242:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 243:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 244:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 245:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 246:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 247:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 248:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 249:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 250:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 251:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 252:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 253:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 254:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 255:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 256:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U,       /**< Frame Count Mode */
 257:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 258:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 259:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 260:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 261:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 262:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 263:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 264:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 265:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 266:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 267:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 268:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 269:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 270:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 271:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 272:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 273:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 274:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 275:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 276:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 277:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 278:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 279:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 280:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 281:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 282:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 283:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 284:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 285:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 286:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 287:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 288:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 289:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 290:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 291:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 292:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 293:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 294:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 295:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 296:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 297:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 298:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 299:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 300:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 301:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 302:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 303:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 304:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 305:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 306:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 307:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 308:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 309:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 310:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 311:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 312:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 313:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 314:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 315:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 316:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 317:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 318:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 319:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 320:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 321:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 322:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 323:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 324:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 325:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 326:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 327:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,     /**< Pointer to previous 
 328:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 329:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 330:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 331:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 332:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 333:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 334:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 335:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 336:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 337:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 338:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 339:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 340:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 341:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF = CAN_NODE_NSR_BOFF_Msk,              /**< Bus-off status */
 342:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 343:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 344:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 345:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 346:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 347:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 348:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 349:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 350:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 351:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 352:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 353:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 354:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 355:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 356:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 357:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 358:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 359:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 360:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE = CAN_NODE_NCR_CCE_Msk,    /**< Configuration change enab
 361:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 362:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 363:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 364:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 365:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 366:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 367:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 368:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 369:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 370:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 371:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 372:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 373:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 374:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 375:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 376:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 377:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 378:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 379:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 380:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 381:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 382:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 383:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 384:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 385:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 386:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 387:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 388:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 389:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 390:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 391:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 392:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 393:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 394:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 395:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 396:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 397:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 398:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 399:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 400:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 401:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 402:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 403:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 404:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 405:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 406:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 407:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 408:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 409:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 410:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 411:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 412:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 413:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA,   /**< CAN Receive Input A */
 414:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,   /**< CAN Receive Input B */
 415:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,   /**< CAN Receive Input C */
 416:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,   /**< CAN Receive Input D */
 417:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,   /**< CAN Receive Input E */
 418:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,   /**< CAN Receive Input F */
 419:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,   /**< CAN Receive Input G */
 420:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH    /**< CAN Receive Input H */
 421:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 422:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 423:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 424:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 425:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 426:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 427:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 428:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 429:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 430:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 431:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 432:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 433:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 434:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 435:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 436:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 437:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 438:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 439:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 440:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 441:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 442:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 443:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 444:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 445:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 446:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 447:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0x1U,
 448:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0x2U,
 449:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0x4U,
 450:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0x8U,
 451:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0x16U,
 452:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0x32U,
 453:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0x64U,
 454:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0x128U,
 455:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 456:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 457:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 458:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Clock source used for the MCAN baudrate generator
 459:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 460:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_CANCLKSRC
 461:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 462:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 463:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if (UC_FAMILY == XMC4)
 464:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 465:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #else
 466:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_MCLK = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock. 
 467:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 468:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U, /**< Use high performance oscillator (fOHP) as MCAN baudrate gener
 469:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #else
 470:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 471:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 472:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_CANCLKSRC_t;
 473:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 474:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 475:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 476:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 477:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 478:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 479:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 480:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 481:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 482:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;     /**< Frequency of the CAN module(fCAN). \a can_frequency shall be ran
 483:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;          /**< Specifies the node baud rate. Unit: baud \a baudrate shall be ra
 484:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;      /**< Sample point is used to compensate mismatch between transmitter 
 485:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                                    the synchronization segment. Sample point. Range = [0, 10000] wi
 486:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;               /**< (Re) Synchronization Jump Width. Range:0-3 */
 487:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 488:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 489:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 490:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 491:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 492:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 493:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 494:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 495:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;    /**< points to the first element(slave object) in a FIFO structure.Range 
 496:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;     /**< points to the last element(slave object) in a FIFO structure. Range :0
 497:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;    /**< points to the actual target object(Base object) within a FIFO/Gateway 
 498:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 499:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 500:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 501:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 502:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 503:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 504:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 505:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 506:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom;       /**< points to the first element(gateway destination object) in a F
 507:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;        /**< points to the last element(gateway destination object) in a FIFO
 508:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;       /**< points to the actual target object within a FIFO/Gateway structu
 509:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;   /**< TXRQ updated in the gateway destination object after the int
 510:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object */
 511:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;   /**< The identifier of the gateway source object (after storing t
 512:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object. */
 513:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 514:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 515:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                                            gateway destination object */
 516:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 517:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                                 are copied to the gateway destination.*/
 518:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 519:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 520:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 521:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 522:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 523:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 524:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 525:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 526:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 527:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 528:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #pragma push
 529:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #pragma anon_unions
 530:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 531:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #pragma warning 586
 532:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 533:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 534:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 535:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 536:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 537:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 538:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 539:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 540:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 541:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 542:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   union
 543:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   {
 544:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     struct
 545:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     {
 546:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 16;
 547:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_selection: 3;  /**<   Defines function of the frame counter  */
 548:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_mode: 2;     /**<   Determines the operation mode of the frame count
 549:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 11;
 550:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     };
 551:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t nfcr;
 552:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 553:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   };
 554:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 555:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 556:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 557:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 558:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** */
 559:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 560:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 561:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 562:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 563:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 564:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 565:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 566:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register *
 567:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   union
 568:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   {
 569:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     struct
 570:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     {
 571:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_identifier: 29;           /**< standard (11 bit)/Extended (29 bit) message ident
 572:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mode: 1;               /**< Standard/Extended identifier support */
 573:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_priority: 2;              /**< Arbitration Mode/Priority */
 574:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     };
 575:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_ar;
 576:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   };
 577:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   union
 578:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   {
 579:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     struct
 580:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     {
 581:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mask: 29;             /**< CAN Identifier of Message Object */
 582:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_ide_mask: 1;             /**< Identifier Extension Bit of Message Object */
 583:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     };
 584:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_amr;
 585:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   };
 586:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 587:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 588:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   union
 589:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   {
 590:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 591:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint8_t can_data_byte[8];                 /**< Each position of the array represents a data byt
 592:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bits 
 593:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_data[
 594:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                               of the data */
 595:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     uint64_t can_data_long;                   /** Data of the Message Object*/
 596:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   };
 597:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 598:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 599:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 600:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 601:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 602:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 603:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #pragma pop
 604:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 605:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #pragma warning restore
 606:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 607:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 608:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 609:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 610:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 611:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 612:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 613:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 614:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 615:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 616:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 617:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 618:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 619:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 620:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 621:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 622:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 623:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 624:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 625:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 626:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 627:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 628:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 629:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 630:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 631:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 632:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 633:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 634:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *         for details.
 635:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 636:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 637:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 638:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 639:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 640:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 641:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 642:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 643:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 644:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 645:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 646:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 647:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 648:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 649:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 650:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 651:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 652:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 653:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 654:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num  CAN node number,Range : 0-2
 655:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num  CAN Message Object number,Range : 0-63
 656:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 657:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 658:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 659:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 660:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 661:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 662:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 663:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 664:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 665:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 666:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 667:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 668:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 669:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 670:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 671:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 672:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 673:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 674:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 675:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 676:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return Ready status of list controller
 677:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 678:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 679:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns ready status of the list controller
 680:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 681:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 682:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_PanelControl()
 683:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 684:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 685:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE bool XMC_CAN_IsPanelControlReady(XMC_CAN_t *const obj)
 686:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 687:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (bool)((obj->PANCTR & (CAN_PANCTR_BUSY_Msk | CAN_PANCTR_RBUSY_Msk)) == 0);
 688:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
 689:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 690:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 691:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 692:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 693:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 694:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 695:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 696:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1   Panel Argument 1,Range : 0-2
 697:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2   Panel Argument 2, Range : 0-63
 698:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 699:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 700:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 701:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 702:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 703:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 704:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 705:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 706:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 707:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 708:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 709:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 710:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 711:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 712:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 713:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 714:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_PANCMD_t pancmd,
 715:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const uint8_t arg1,
 716:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const uint8_t arg2)
 717:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 718:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 719:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 720:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                 (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 721:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
 722:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 723:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 724:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 725:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 726:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 727:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 728:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 729:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr  Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_T
 730:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *               Multiple interrupt trigger events can be ORed.
 731:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 732:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 733:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 734:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 735:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 736:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 737:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 738:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 739:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 740:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 741:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 742:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 743:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj, const XMC_CAN_NODE_INTERRUPT_TRIGGE
 744:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 745:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 746:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
 747:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 748:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 749:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 750:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 751:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 752:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 753:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 754:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source
 755:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN).
 756:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        The can_frequency shall be an integer divisor of the CAN clock source frequency (fPERI/fM
 757:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        it should be selected such that if fulfills the minimum operating frequency specified in 
 758:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        In addition the can_frequency shall be an integer multiple of the baudrate.
 759:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        Max. value: Max. clock source frequency, i.e. if using fOHP and using a XTAL of 20MHz the
 760:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 761:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return Actual frequency
 762:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 763:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 764:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_Init() configures clock rate of the module timer clock fCAN.
 765:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that only the normal divider is used to avoid jitter.
 766:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * In addition the actual achievable frequency is returned.
 767:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 768:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 769:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Altering CAN module \a can_frequency shall affects baud rate, call XMC_CAN_NODE_NominalBitTimeCo
 770:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 771:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 772:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 773:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx()\n\n\n
 774:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 775:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 776:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 777:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 778:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 779:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 780:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 781:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 782:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return Baudrate generator clock source
 783:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 784:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 785:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Returns CAN baudrate generator clock source
 786:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 787:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj);
 788:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 789:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 790:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 791:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 792:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 793:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 794:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 795:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 796:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Sets CAN baudrate generator clock source
 797:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 798:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj, const XMC_CAN_CANCLKSRC_t source);
 799:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 800:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 801:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 802:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 803:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 804:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return baudrate generator input clock frequency
 805:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 806:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 807:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN baudrate generator input clock frequency
 808:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 809:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj);
 810:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 811:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 812:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 813:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 814:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 815:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return fCAN clock frequency
 816:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 817:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 818:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN base clock frequency
 819:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 820:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 821:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetClockFrequency(XMC_CAN_t *const obj);
 822:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 823:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 824:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 825:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 826:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 827:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 828:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 829:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source.
 830:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). Max. value: Max. clock source frequency, i.e. i
 831:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use clksrc parameter only for XMC1400 series and XMC47/4800 series projects, otherwise omi
 832:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 833:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 834:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 835:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 836:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 837:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() or XMC_CAN_NODE_NominalBitTimeConfigureEx() to confi
 838:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 839:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 840:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 841:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 842:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 843:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx(), XMC_CAN_InitEx
 844:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 845:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 846:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 847:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #else
 848:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 849:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
 850:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 851:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 852:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 853:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 854:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 855:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 856:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 857:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 858:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 859:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 860:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 861:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 862:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
 863:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 864:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 865:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 866:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 867:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /* NODE APIs */
 868:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 869:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 870:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 871:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node      Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 872:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event     CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_
 873:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 874:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 875:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 876:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 877:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 878:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 879:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 880:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 881:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
 882:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 883:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 884:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 885:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 886:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 887:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const uint32_t service_request)
 888:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 889:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
 890:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
 891:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 892:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 893:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 894:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 895:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 896:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 897:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 898:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 899:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 900:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 901:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 902:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 903:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 904:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 905:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
 906:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 907:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 908:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure(XMC_CAN_NODE_t *const can_node,
 909:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time);
 910:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 911:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 912:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 913:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 914:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 915:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 916:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return Status on the sucess setting the desired bitrate XMC_CAN_STATUS_t
 917:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 918:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 919:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_NODE_NominalBitTimeConfigure() configures the CAN node baudrate.
 920:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that allows bitrates below 100kpbs.
 921:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @note Consider using the new API for new projects. XMC_CAN_NODE_NominalBitTimeConfigure() is kep
 922:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 923:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 924:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 925:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 926:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 927:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_InitEx()
 928:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 929:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 930:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 931:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time);
 932:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 933:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 934:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 935:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 936:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 937:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 938:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 939:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 940:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 941:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 942:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 943:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 944:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 945:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 946:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
 947:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 948:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 949:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 950:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 951:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 952:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 953:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 954:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 955:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 956:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 957:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
 958:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
 959:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 960:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 961:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 962:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_
 963:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 964:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 965:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 966:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 967:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 968:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 969:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 970:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 971:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 972:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 973:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 974:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 975:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 976:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 977:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 978:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 979:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
 980:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 981:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 982:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
 983:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 984:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
 985:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 986:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
 987:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
 988:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 989:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 990:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 991:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 992:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 993:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 994:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 995:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 996:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
 997:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 998:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 999:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1000:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1001:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1002:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
1003:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1004:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1005:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1006:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
1007:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1008:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
1009:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1010:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1011:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1012:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1013:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1014:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1015:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1016:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1017:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1018:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1019:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1020:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1021:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
1022:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1023:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1024:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
1025:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1026:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1027:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1028:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1029:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1030:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1031:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1032:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1033:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1034:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1035:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1036:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1037:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1038:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1039:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1040:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
1041:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1042:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1043:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
1044:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1045:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1046:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1047:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1048:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1049:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1050:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1051:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1052:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1053:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1054:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
1055:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1056:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1057:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
1058:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1059:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1060:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferInc()\n\n\n
1061:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1062:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1063:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1064:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
1065:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1066:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
1067:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1068:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1069:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1070:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1071:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1072:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1073:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1074:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
1075:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1076:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1077:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
1078:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1079:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1080:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferDir()\n\n\n
1081:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1082:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1083:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1084:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
1085:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1086:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk) >> CAN_NODE_NEC
1087:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1088:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1089:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1090:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1091:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1092:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1093:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level  Error Warning level value. Range :0-255.
1094:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1095:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1096:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1097:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1098:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
1099:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
1100:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1101:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1102:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
1103:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1104:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1105:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1106:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1107:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1108:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1109:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
1110:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1111:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
1112:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
1113:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1114:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1115:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1116:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1117:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1118:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1119:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
1120:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1121:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1122:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1123:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1124:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
1125:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
1126:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1127:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1128:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
1129:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1130:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
1131:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1132:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1133:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1134:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1135:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1136:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
1137:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1138:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
1139:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
1140:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1141:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1142:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1143:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1144:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1145:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1146:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
1147:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1148:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1149:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1150:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1151:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
1152:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
1153:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1154:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1155:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
1156:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1157:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1158:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1159:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1160:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1161:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1162:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
1163:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1164:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
1165:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_M
1166:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1167:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1168:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1169:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1170:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1171:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1172:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1173:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1174:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1175:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1176:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns error warning level. This determines the threshold value (warning level, default 96) to
1177:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  to set the corresponding error warning bit EWRN. It reads NECNT register.
1178:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1179:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1180:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1181:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1182:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1183:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1184:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1185:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1186:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1187:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EW
1188:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1189:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1190:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1191:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1192:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1193:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1194:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1195:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1196:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1197:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1198:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a trans
1199:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the err
1200:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1201:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1202:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1203:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1204:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1205:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1206:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1207:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1208:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1209:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1210:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1211:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1212:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1213:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1214:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1215:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1216:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1217:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1218:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1219:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1220:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t  receive error counter value.
1221:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1222:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1223:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Receive Error Counter value. It reads NECNT register.
1224:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1225:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1226:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1227:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1228:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1229:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1230:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1231:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1232:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1233:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1234:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1235:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1236:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1237:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1238:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1239:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1240:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1241:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1242:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1243:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1244:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1245:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1246:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1247:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1248:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1249:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1250:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1251:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1252:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
1253:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1254:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1255:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1256:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1257:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1258:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_status Status to clear.Refer @ref XMC_CAN_NODE_STATUS_t for valid values.
1259:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1260:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1261:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1262:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1263:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1264:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1265:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1266:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1267:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1268:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1269:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1270:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node, XMC_CAN_NODE_STATUS_t
1271:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1272:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NSR &= ~(uint32_t)can_node_status;
1273:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1274:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1275:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1276:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1277:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1278:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1279:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1280:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1281:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1282:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1283:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1284:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1285:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1286:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1287:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1288:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1289:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1290:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1291:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1292:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1293:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
1294:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1295:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1296:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1297:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1298:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1299:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1300:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1301:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1302:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1303:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1304:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1305:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1306:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1307:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1308:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1309:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1310:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1311:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1312:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1313:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
1314:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1315:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1316:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1317:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1318:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1319:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1320:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1321:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1322:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1323:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1324:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1325:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Disable CAN node participation in CAN traffic. Bit INIT is automatically set when the CAN node e
1326:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * state. It configures NCR.INIT bit.
1327:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1328:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1329:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit()
1330:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1331:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1332:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1333:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetInitBit(XMC_CAN_NODE_t *const can_node)
1334:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1335:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_INIT_Msk;
1336:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1337:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1338:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1339:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1340:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1341:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1342:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1343:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1344:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1345:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Enable CAN node participation in CAN traffic. Bit INIT is automatically set when the CAN node en
1346:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * state. It configures NCR.INIT bit.
1347:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1348:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1349:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit()
1350:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1351:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1352:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ResetInitBit(XMC_CAN_NODE_t *const can_node)
1353:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1354:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_INIT_Msk;
1355:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1356:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1357:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1358:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1359:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1360:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1361:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1362:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1363:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1364:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Enable the CAN node, starts the participation in CAN traffic. It configures NCR.CANDIS and the N
1365:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1366:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1367:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1368:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1369:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1370:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_Enable(XMC_CAN_NODE_t *const can_node)
1371:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1372:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CANDIS_Msk;
1373:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_ResetInitBit(can_node);
1374:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1375:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1376:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1377:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1378:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1379:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1380:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1381:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1382:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1383:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Disable the CAN node, terminates participation in CAN traffic. It configures NCR.CANDIS bit.
1384:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1385:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1386:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1387:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1388:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1389:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_Disable(XMC_CAN_NODE_t *const can_node)
1390:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1391:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CANDIS_Msk;
1392:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1393:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1394:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1395:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1396:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1397:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1398:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1399:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1400:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configure CAN node in Analyzer Mode. This means that messages may be received, but not transmitt
1401:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * is sent on the CAN bus upon frame reception. Active-error flags are sent recessive instead of do
1402:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * The transmit line is continuously held at recessive (1) level. XMC_CAN_NODE_SetInitBit() should 
1403:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * set / reset AnalyzerMode. It configures NCR.CALM bit.
1404:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1405:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1406:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ReSetAnalyzerMode()
1407:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1408:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1409:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1410:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1411:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetAnalyzerMode(XMC_CAN_NODE_t *const can_node)
1412:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1413:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CALM_Msk;
1414:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1415:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1416:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1417:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1418:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1419:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1420:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1421:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1422:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1423:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Reset the Analyzer mode. CAN node is no more in Analyzer Mode. Please refer XMC_CAN_NODE_SetAnal
1424:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NCR.CALM bit. XMC_CAN_NODE_SetInitBit() should be called before set / reset Analyz
1425:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1426:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1427:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetAnalyzerMode()
1428:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1429:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1430:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1431:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ReSetAnalyzerMode(XMC_CAN_NODE_t *const can_node)
1432:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1433:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CALM_Msk;
1434:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1435:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1436:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
1437:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1438:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1439:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1440:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1441:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1442:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1443:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Trigger the suspension of the CAN node. An OCDS(on chip debug support) suspend trigger disables 
1444:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * soon as the CAN node becomes bus-idle or bus-off, bit INIT is internally forced to 1 to disable 
1445:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * The actual value of bit INIT remains unchanged. It configures NCR.SUSEN bit
1446:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1447:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1448:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1449:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1450:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Note:</b><br>
1451:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Bit SUSEN is reset via OCDS(on chip debug support) Reset.
1452:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1453:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1454:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1455:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableSuspend(XMC_CAN_NODE_t *const can_node)
1456:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1457:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_SUSEN_Msk;
1458:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1459:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #else
1460:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1461:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1462:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1463:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1464:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1465:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1466:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Disables the transmission on CAN node x as soon as bus-idle is reached.
1467:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1468:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1469:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1470:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1471:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @note Only available for XMC1400,XMC4800 and XMC4700 series
1472:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1473:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1474:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableTransmit(XMC_CAN_NODE_t *const can_node)
1475:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1476:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_TXDIS_Msk;
1477:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1478:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** #endif
1479:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1480:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1481:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1482:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1483:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1484:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_init frame counter mode selection. Refer @ref XMC_CAN_NODE_FRAME_COUNTER_t for v
1485:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1486:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1487:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1488:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1489:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures frame counter functions. Each CAN \a can_node is equipped with a frame counter that c
1490:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * CAN frames or obtains information about the time when a frame has been started to transmit or be
1491:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * node. It configures NFCR register.
1492:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1493:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1494:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1495:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1496:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1497:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1498:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_FrameCounterConfigure(XMC_CAN_NODE_t *const can_node,
1499:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_NODE_FRAME_COUNTER_t *const can_node_init)
1500:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1501:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NFCR = (can_node->NFCR & ~(uint32_t)(CAN_NODE_NFCR_CFMOD_Msk |
1502:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                     CAN_NODE_NFCR_CFSEL_Msk)) |
1503:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                    can_node_init->nfcr;
1504:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1505:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1506:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1507:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1508:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1509:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1510:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1511:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint16_t current value of the CAN frame counter. Range :0-65535
1512:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1513:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1514:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns the frame counter value \a can_node of the CAN node. In Frame Count Mode (CFMOD = 00B),
1515:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  count value. In Time Stamp Mode (CFMOD = 01B), this API returns the captured bit time count val
1516:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  the start of a new frame. In all Bit Timing Analysis Modes (CFMOD = 10B), this API always retur
1517:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  fCLC clock cycles (measurement result) minus 1.
1518:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1519:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1520:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1521:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1522:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1523:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1524:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint16_t XMC_CAN_NODE_GetCANFrameCounter(XMC_CAN_NODE_t *const can_node)
1525:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1526:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return (uint16_t)(((uint32_t)(can_node->NFCR & CAN_NODE_NFCR_CFC_Msk) >> CAN_NODE_NFCR_CFC_Pos));
1527:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1528:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1529:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /*MO APIs*/
1530:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1531:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1532:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1533:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1534:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1535:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1536:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1537:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1538:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1539:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1540:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Data to be transmitted and data length code.
1541:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1542:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1543:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_Config()\n\n\n
1544:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1545:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1546:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1547:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1548:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo);
1549:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1550:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1551:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1552:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1553:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1554:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1555:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1556:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1557:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures transmit request for sending data frame. It configures MOCTR register. Data shall be
1558:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  using XMC_CAN_MO_UpdateData() before calling this API.
1559:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1560:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1561:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_UpdateData()\n\n\n
1562:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1563:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1564:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1565:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo);
1566:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1567:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1568:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1569:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1570:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1571:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1572:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1573:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1574:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Reads the Message Object data bytes, into message pointer passed as input parameter \a can_mo.
1575:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  can_data[0] of can_mo holds lower 4 bytes, can_data[1] of can_mo holds higher 4 bytes.
1576:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1577:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1578:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1579:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1580:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1581:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1582:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive(XMC_CAN_MO_t *can_mo);
1583:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1584:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1585:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1586:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1587:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1588:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1589:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1590:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1591:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Reads the Message Object data bytes, into message pointer passed as input parameter \a can_mo.
1592:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  can_data[0] of can_mo holds lower 4 bytes, can_data[1] of can_mo holds higher 4 bytes.
1593:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1594:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1595:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1596:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1597:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1598:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo);
1599:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1600:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo       Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure 
1601:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo_ptr_int   Message Object event node pointer selection. Refer @ref XMC_CAN_MO_POINT
1602:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *                for valid values.
1603:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request interrupt output line of multiCAN module.
1604:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1605:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1606:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1607:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1608:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Message Object event node pointer with \a service_request number. It configures MOIPR
1609:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1610:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1611:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1612:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1613:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1614:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1615:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_SetEventNodePointer(const XMC_CAN_MO_t *const can_mo,
1616:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const XMC_CAN_MO_POINTER_EVENT_t can_mo_ptr_int,
1617:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****     const uint32_t service_request)
1618:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1619:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOIPR = ((can_mo->can_mo_ptr->MOIPR ) & ~(uint32_t)((uint32_t)CAN_MO_MOIPR_Ms
1620:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****                               (service_request << (uint32_t)can_mo_ptr_int);
1621:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1622:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1623:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1624:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1625:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1626:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current Message Object status.
1627:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1628:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1629:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Message Object status, that indicates message object transfer status and message object
1630:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  information such as the number of the current message object predecessor and successor message 
1631:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  the list number to which the message object is assigned.
1632:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1633:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1634:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1635:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1636:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1637:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1638:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_MO_GetStatus(const XMC_CAN_MO_t *const can_mo)
1639:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1640:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_mo->can_mo_ptr->MOSTAT));
1641:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1642:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1643:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1644:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1645:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1646:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param mask   Message Object set status selection. Refer @ref XMC_CAN_MO_SET_STATUS_t for detail
1647:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *         Multiple enums can be ORed.
1648:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1649:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1650:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1651:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Message Object set Status. It configures MOCTR register.
1652:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1653:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1654:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_ResetStatus()\n\n\n
1655:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1656:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1657:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1658:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_SetStatus(const XMC_CAN_MO_t *const can_mo, const uint32_t mask)
1659:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
1660:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOCTR = mask;
1661:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
1662:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1663:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** /**
1664:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1665:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1666:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @param mask   Message Object set status selection. Refer @ref XMC_CAN_MO_RESET_STATUS_t for deta
1667:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *             Multiple enums can be ORed.
1668:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1669:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1670:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1671:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *  Clears Message Object interrupt events. It configures MOCTR register.
1672:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1673:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1674:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  * None
1675:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  *
1676:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****  */
1677:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** 
1678:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_ResetStatus(const XMC_CAN_MO_t *const can_mo, const uint32_t mask)
1679:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** {
  27              	 .loc 1 1679 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 3960     	 str r1,[r7]
1680:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOCTR = mask;
  44              	 .loc 1 1680 0
  45 000a 7B68     	 ldr r3,[r7,#4]
  46 000c 1B68     	 ldr r3,[r3]
  47 000e 3A68     	 ldr r2,[r7]
  48 0010 DA61     	 str r2,[r3,#28]
1681:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_can.h **** }
  49              	 .loc 1 1681 0
  50 0012 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0014 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0016 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001a 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE323:
  65              	 .comm BMS_SOC,1,1
  66              	 .comm CAN_MSG_DB_HVAC,60,4
  67              	 .comm eps_status,4,4
  68              	 .comm instrument_clustor_doors,1,1
  69              	 .global CAN_BMS_29bit
  70              	 .section .data.CAN_BMS_29bit,"aw",%progbits
  71              	 .align 2
  74              	CAN_BMS_29bit:
  75 0000 F3A70E18 	 .word 403613683
  76 0004 00       	 .byte 0
  77 0005 00000000 	 .space 7
  77      000000
  78 000c F3A70F18 	 .word 403679219
  79 0010 00       	 .byte 0
  80 0011 00000000 	 .space 7
  80      000000
  81 0018 F3A71018 	 .word 403744755
  82 001c 00       	 .byte 0
  83 001d 00000000 	 .space 7
  83      000000
  84 0024 F3A71118 	 .word 403810291
  85 0028 00       	 .byte 0
  86 0029 00000000 	 .space 7
  86      000000
  87 0030 F3A71318 	 .word 403941363
  88 0034 00       	 .byte 0
  89 0035 00000000 	 .space 7
  89      000000
  90 003c F3A71418 	 .word 404006899
  91 0040 00       	 .byte 0
  92 0041 00       	 .byte 0
  93 0042 00       	 .byte 0
  94 0043 00       	 .byte 0
  95 0044 00       	 .byte 0
  96 0045 00       	 .byte 0
  97 0046 00       	 .byte 0
  98 0047 00       	 .byte 0
  99 0048 F3A71518 	 .word 404072435
 100 004c 00       	 .byte 0
 101 004d 00       	 .byte 0
 102 004e 00       	 .byte 0
 103 004f 00       	 .byte 0
 104 0050 00       	 .byte 0
 105 0051 00       	 .byte 0
 106 0052 00       	 .byte 0
 107 0053 00       	 .byte 0
 108 0054 F3A70C18 	 .word 403482611
 109 0058 00       	 .byte 0
 110 0059 00       	 .byte 0
 111 005a 00       	 .byte 0
 112 005b 00       	 .byte 0
 113 005c 00       	 .byte 0
 114 005d 00       	 .byte 0
 115 005e 00       	 .byte 0
 116 005f 00       	 .byte 0
 117 0060 F3A70818 	 .word 403220467
 118 0064 00       	 .byte 0
 119 0065 00       	 .byte 0
 120 0066 00       	 .byte 0
 121 0067 00       	 .byte 0
 122 0068 00       	 .byte 0
 123 0069 00       	 .byte 0
 124 006a 00       	 .byte 0
 125 006b 00       	 .byte 0
 126 006c F3A70A18 	 .word 403351539
 127 0070 00       	 .byte 0
 128 0071 00       	 .byte 0
 129 0072 00       	 .byte 0
 130 0073 00       	 .byte 0
 131 0074 00       	 .byte 0
 132 0075 00       	 .byte 0
 133 0076 00       	 .byte 0
 134 0077 00       	 .byte 0
 135 0078 F3A70B18 	 .word 403417075
 136 007c 00       	 .byte 0
 137 007d 00000000 	 .space 7
 137      000000
 138              	 .comm CAN_IRP_29bit,132,4
 139              	 .comm charge_complete,1,1
 140              	 .comm charging_started,1,1
 141              	 .comm Bms_SOC,2,2
 142              	 .comm Bms_SOH,2,2
 143              	 .comm Mapped_BMS_SOC,1,1
 144              	 .comm Bms_minTemp,2,2
 145              	 .comm Bms_maxTemp,2,2
 146              	 .comm PackCurrent,4,4
 147              	 .comm PackVoltage,4,4
 148              	 .comm RegenerativeCurrentLimit,2,2
 149              	 .comm ChargeCurrentLimit,2,2
 150              	 .comm DischargeCurrentLimit,2,2
 151              	 .comm HvBatteryPower,4,4
 152              	 .comm bmsFault1,4,4
 153              	 .comm bmsFault2,4,4
 154              	 .comm GtakeFaults,4,4
 155              	 .comm allFault_indicator,3,4
 156              	 .comm cluster_Fault_Indicator,4,4
 157              	 .comm Mcu_Temp,4,4
 158              	 .comm Motor_Temp,4,4
 159              	 .comm VehicleSpeedglb,2,2
 160              	 .comm OBDII_CAN,60,4
 161              	 .comm OBD_data,2,2
 162              	 .comm Irp_Mcu_drive_states_29bit,4,4
 163              	 .comm Irp_Mcu_BMS_states_29bit,4,4
 164              	 .comm Irp_Mcu_Torques_29bit,4,4
 165              	 .comm Irp_Mcu_BMS_Currents_29bit,4,4
 166              	 .comm Irp_MCU_Status_29bit,4,4
 167              	 .comm Irp_MCU_Faults_29bit,4,4
 168              	 .comm DC_Current_irp,2,2
 169              	 .comm MotorPower_Irp,2,2
 170              	 .comm Torque_Estimation,2,2
 171              	 .comm DC_Voltage_irp,2,2
 172              	 .comm Mcu_Temp_Irp,2,2
 173              	 .comm Motor_Temp_Irp,2,2
 174              	 .comm RPM,2,2
 175              	 .comm Regenration_flag,1,1
 176              	 .comm hv_count,2,2
 177              	 .comm BMS_Avg_temp,4,4
 178              	 .comm AC_ON_4g,1,1
 179              	 .comm speed_4g,2,2
 180              	 .section .text.CAN_Rx_0x1808A7F3,"ax",%progbits
 181              	 .align 2
 182              	 .global CAN_Rx_0x1808A7F3
 183              	 .thumb
 184              	 .thumb_func
 186              	CAN_Rx_0x1808A7F3:
 187              	.LFB605:
 188              	 .file 2 "../Can_Devices/can_matrix_bms_29bit.c"
   1:../Can_Devices/can_matrix_bms_29bit.c **** /*
   2:../Can_Devices/can_matrix_bms_29bit.c ****  * can_matrix_bms_29bit.c
   3:../Can_Devices/can_matrix_bms_29bit.c ****  *
   4:../Can_Devices/can_matrix_bms_29bit.c ****  *  Created on: 28-Aug-2023
   5:../Can_Devices/can_matrix_bms_29bit.c ****  *      Author: Suchit Sawant
   6:../Can_Devices/can_matrix_bms_29bit.c ****  */
   7:../Can_Devices/can_matrix_bms_29bit.c **** #include "DAVE.h"
   8:../Can_Devices/can_matrix_bms_29bit.c **** #include "can_matrix.h"
   9:../Can_Devices/can_matrix_bms_29bit.c **** 
  10:../Can_Devices/can_matrix_bms_29bit.c **** CAN_MSG_t CAN_BMS_29bit[bms_total_id29bit] =
  11:../Can_Devices/can_matrix_bms_29bit.c **** {
  12:../Can_Devices/can_matrix_bms_29bit.c **** 		{0x180EA7F3, {0x00}},
  13:../Can_Devices/can_matrix_bms_29bit.c **** 		{0X180FA7F3, {0x00}},
  14:../Can_Devices/can_matrix_bms_29bit.c **** 		{0X1810A7F3, {0x00}},
  15:../Can_Devices/can_matrix_bms_29bit.c **** 		{0X1811A7F3, {0x00}},
  16:../Can_Devices/can_matrix_bms_29bit.c **** 		{0X1813A7F3, {0x00}},
  17:../Can_Devices/can_matrix_bms_29bit.c **** 		{0X1814A7F3, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  18:../Can_Devices/can_matrix_bms_29bit.c **** 		{0X1815A7F3, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  19:../Can_Devices/can_matrix_bms_29bit.c **** 		{0X180CA7F3, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  20:../Can_Devices/can_matrix_bms_29bit.c **** 		{0X1808A7F3, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  21:../Can_Devices/can_matrix_bms_29bit.c **** 		{0X180AA7F3, {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}},
  22:../Can_Devices/can_matrix_bms_29bit.c **** 		{0X180BA7F3, {0x00}}
  23:../Can_Devices/can_matrix_bms_29bit.c **** };
  24:../Can_Devices/can_matrix_bms_29bit.c **** 
  25:../Can_Devices/can_matrix_bms_29bit.c **** 
  26:../Can_Devices/can_matrix_bms_29bit.c **** void CAN_Rx_0x1808A7F3(void)
  27:../Can_Devices/can_matrix_bms_29bit.c **** {
 189              	 .loc 2 27 0
 190              	 .cfi_startproc
 191              	 
 192              	 
 193 0000 80B5     	 push {r7,lr}
 194              	.LCFI6:
 195              	 .cfi_def_cfa_offset 8
 196              	 .cfi_offset 7,-8
 197              	 .cfi_offset 14,-4
 198 0002 84B0     	 sub sp,sp,#16
 199              	.LCFI7:
 200              	 .cfi_def_cfa_offset 24
 201 0004 00AF     	 add r7,sp,#0
 202              	.LCFI8:
 203              	 .cfi_def_cfa_register 7
  28:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t test;
  29:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_STATUS_t status, receive_status;
  30:../Can_Devices/can_matrix_bms_29bit.c **** 	XMC_CAN_MO_t *MO_Ptr;
  31:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t mo_index;
  32:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 204              	 .loc 2 32 0
 205 0006 1C4B     	 ldr r3,.L5
 206 0008 FB60     	 str r3,[r7,#12]
  33:../Can_Devices/can_matrix_bms_29bit.c **** 
  34:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 12;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 207              	 .loc 2 34 0
 208 000a 0C23     	 movs r3,#12
 209 000c FB72     	 strb r3,[r7,#11]
  35:../Can_Devices/can_matrix_bms_29bit.c **** 
  36:../Can_Devices/can_matrix_bms_29bit.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 210              	 .loc 2 36 0
 211 000e FB7A     	 ldrb r3,[r7,#11]
 212 0010 FA68     	 ldr r2,[r7,#12]
 213 0012 0233     	 adds r3,r3,#2
 214 0014 9B00     	 lsls r3,r3,#2
 215 0016 1344     	 add r3,r3,r2
 216 0018 5B68     	 ldr r3,[r3,#4]
 217 001a 1B68     	 ldr r3,[r3]
 218 001c 7B60     	 str r3,[r7,#4]
  37:../Can_Devices/can_matrix_bms_29bit.c **** 
  38:../Can_Devices/can_matrix_bms_29bit.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 219              	 .loc 2 38 0
 220 001e FB7A     	 ldrb r3,[r7,#11]
 221 0020 FA68     	 ldr r2,[r7,#12]
 222 0022 0233     	 adds r3,r3,#2
 223 0024 9B00     	 lsls r3,r3,#2
 224 0026 1344     	 add r3,r3,r2
 225 0028 5B68     	 ldr r3,[r3,#4]
 226 002a 1846     	 mov r0,r3
 227 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 228 0030 0346     	 mov r3,r0
 229 0032 FB70     	 strb r3,[r7,#3]
  39:../Can_Devices/can_matrix_bms_29bit.c **** 	//Check receive pending status
  40:../Can_Devices/can_matrix_bms_29bit.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 230              	 .loc 2 40 0
 231 0034 FB78     	 ldrb r3,[r7,#3]
 232 0036 03F00103 	 and r3,r3,#1
 233 003a 002B     	 cmp r3,#0
 234 003c 16D0     	 beq .L3
  41:../Can_Devices/can_matrix_bms_29bit.c **** 	{
  42:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Clear the flag
  43:../Can_Devices/can_matrix_bms_29bit.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 235              	 .loc 2 43 0
 236 003e 7868     	 ldr r0,[r7,#4]
 237 0040 0121     	 movs r1,#1
 238 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
  44:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Read the received Message object
  45:../Can_Devices/can_matrix_bms_29bit.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 239              	 .loc 2 45 0
 240 0046 FB7A     	 ldrb r3,[r7,#11]
 241 0048 FA68     	 ldr r2,[r7,#12]
 242 004a 0233     	 adds r3,r3,#2
 243 004c 9B00     	 lsls r3,r3,#2
 244 004e 1344     	 add r3,r3,r2
 245 0050 5B68     	 ldr r3,[r3,#4]
 246 0052 1846     	 mov r0,r3
 247 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 248 0058 0346     	 mov r3,r0
 249 005a BB70     	 strb r3,[r7,#2]
  46:../Can_Devices/can_matrix_bms_29bit.c **** 
  47:../Can_Devices/can_matrix_bms_29bit.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 250              	 .loc 2 47 0
 251 005c BB78     	 ldrb r3,[r7,#2]
 252 005e 002B     	 cmp r3,#0
 253 0060 02D1     	 bne .L4
  48:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
  49:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object receive success.
  50:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 1;
 254              	 .loc 2 50 0
 255 0062 0123     	 movs r3,#1
 256 0064 7B70     	 strb r3,[r7,#1]
 257 0066 01E0     	 b .L3
 258              	.L4:
  51:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
  52:../Can_Devices/can_matrix_bms_29bit.c **** 	  else
  53:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
  54:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object failed to receive.
  55:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 0;
 259              	 .loc 2 55 0
 260 0068 0023     	 movs r3,#0
 261 006a 7B70     	 strb r3,[r7,#1]
 262              	.L3:
  56:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
  57:../Can_Devices/can_matrix_bms_29bit.c **** 	}
  58:../Can_Devices/can_matrix_bms_29bit.c **** 	process_Rx_CAN_0X1808A7F3();
 263              	 .loc 2 58 0
 264 006c FFF7FEFF 	 bl process_Rx_CAN_0X1808A7F3
  59:../Can_Devices/can_matrix_bms_29bit.c **** }
 265              	 .loc 2 59 0
 266 0070 1037     	 adds r7,r7,#16
 267              	.LCFI9:
 268              	 .cfi_def_cfa_offset 8
 269 0072 BD46     	 mov sp,r7
 270              	.LCFI10:
 271              	 .cfi_def_cfa_register 13
 272              	 
 273 0074 80BD     	 pop {r7,pc}
 274              	.L6:
 275 0076 00BF     	 .align 2
 276              	.L5:
 277 0078 00000000 	 .word CAN_NODE_0
 278              	 .cfi_endproc
 279              	.LFE605:
 281              	 .section .text.CAN_Rx_0x180AA7F3,"ax",%progbits
 282              	 .align 2
 283              	 .global CAN_Rx_0x180AA7F3
 284              	 .thumb
 285              	 .thumb_func
 287              	CAN_Rx_0x180AA7F3:
 288              	.LFB606:
  60:../Can_Devices/can_matrix_bms_29bit.c **** 
  61:../Can_Devices/can_matrix_bms_29bit.c **** 
  62:../Can_Devices/can_matrix_bms_29bit.c **** void CAN_Rx_0x180AA7F3(void)
  63:../Can_Devices/can_matrix_bms_29bit.c **** {
 289              	 .loc 2 63 0
 290              	 .cfi_startproc
 291              	 
 292              	 
 293 0000 80B5     	 push {r7,lr}
 294              	.LCFI11:
 295              	 .cfi_def_cfa_offset 8
 296              	 .cfi_offset 7,-8
 297              	 .cfi_offset 14,-4
 298 0002 84B0     	 sub sp,sp,#16
 299              	.LCFI12:
 300              	 .cfi_def_cfa_offset 24
 301 0004 00AF     	 add r7,sp,#0
 302              	.LCFI13:
 303              	 .cfi_def_cfa_register 7
  64:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t test;
  65:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_STATUS_t status, receive_status;
  66:../Can_Devices/can_matrix_bms_29bit.c **** 	XMC_CAN_MO_t *MO_Ptr;
  67:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t mo_index;
  68:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 304              	 .loc 2 68 0
 305 0006 1C4B     	 ldr r3,.L10
 306 0008 FB60     	 str r3,[r7,#12]
  69:../Can_Devices/can_matrix_bms_29bit.c **** 
  70:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 13;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 307              	 .loc 2 70 0
 308 000a 0D23     	 movs r3,#13
 309 000c FB72     	 strb r3,[r7,#11]
  71:../Can_Devices/can_matrix_bms_29bit.c **** 
  72:../Can_Devices/can_matrix_bms_29bit.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 310              	 .loc 2 72 0
 311 000e FB7A     	 ldrb r3,[r7,#11]
 312 0010 FA68     	 ldr r2,[r7,#12]
 313 0012 0233     	 adds r3,r3,#2
 314 0014 9B00     	 lsls r3,r3,#2
 315 0016 1344     	 add r3,r3,r2
 316 0018 5B68     	 ldr r3,[r3,#4]
 317 001a 1B68     	 ldr r3,[r3]
 318 001c 7B60     	 str r3,[r7,#4]
  73:../Can_Devices/can_matrix_bms_29bit.c **** 
  74:../Can_Devices/can_matrix_bms_29bit.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 319              	 .loc 2 74 0
 320 001e FB7A     	 ldrb r3,[r7,#11]
 321 0020 FA68     	 ldr r2,[r7,#12]
 322 0022 0233     	 adds r3,r3,#2
 323 0024 9B00     	 lsls r3,r3,#2
 324 0026 1344     	 add r3,r3,r2
 325 0028 5B68     	 ldr r3,[r3,#4]
 326 002a 1846     	 mov r0,r3
 327 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 328 0030 0346     	 mov r3,r0
 329 0032 FB70     	 strb r3,[r7,#3]
  75:../Can_Devices/can_matrix_bms_29bit.c **** 	//Check receive pending status
  76:../Can_Devices/can_matrix_bms_29bit.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 330              	 .loc 2 76 0
 331 0034 FB78     	 ldrb r3,[r7,#3]
 332 0036 03F00103 	 and r3,r3,#1
 333 003a 002B     	 cmp r3,#0
 334 003c 16D0     	 beq .L8
  77:../Can_Devices/can_matrix_bms_29bit.c **** 	{
  78:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Clear the flag
  79:../Can_Devices/can_matrix_bms_29bit.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 335              	 .loc 2 79 0
 336 003e 7868     	 ldr r0,[r7,#4]
 337 0040 0121     	 movs r1,#1
 338 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
  80:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Read the received Message object
  81:../Can_Devices/can_matrix_bms_29bit.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 339              	 .loc 2 81 0
 340 0046 FB7A     	 ldrb r3,[r7,#11]
 341 0048 FA68     	 ldr r2,[r7,#12]
 342 004a 0233     	 adds r3,r3,#2
 343 004c 9B00     	 lsls r3,r3,#2
 344 004e 1344     	 add r3,r3,r2
 345 0050 5B68     	 ldr r3,[r3,#4]
 346 0052 1846     	 mov r0,r3
 347 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 348 0058 0346     	 mov r3,r0
 349 005a BB70     	 strb r3,[r7,#2]
  82:../Can_Devices/can_matrix_bms_29bit.c **** 
  83:../Can_Devices/can_matrix_bms_29bit.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 350              	 .loc 2 83 0
 351 005c BB78     	 ldrb r3,[r7,#2]
 352 005e 002B     	 cmp r3,#0
 353 0060 02D1     	 bne .L9
  84:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
  85:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object receive success.
  86:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 1;
 354              	 .loc 2 86 0
 355 0062 0123     	 movs r3,#1
 356 0064 7B70     	 strb r3,[r7,#1]
 357 0066 01E0     	 b .L8
 358              	.L9:
  87:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
  88:../Can_Devices/can_matrix_bms_29bit.c **** 	  else
  89:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
  90:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object failed to receive.
  91:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 0;
 359              	 .loc 2 91 0
 360 0068 0023     	 movs r3,#0
 361 006a 7B70     	 strb r3,[r7,#1]
 362              	.L8:
  92:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
  93:../Can_Devices/can_matrix_bms_29bit.c **** 	}
  94:../Can_Devices/can_matrix_bms_29bit.c **** 	process_Rx_CAN_0X180AA7F3();
 363              	 .loc 2 94 0
 364 006c FFF7FEFF 	 bl process_Rx_CAN_0X180AA7F3
  95:../Can_Devices/can_matrix_bms_29bit.c **** }
 365              	 .loc 2 95 0
 366 0070 1037     	 adds r7,r7,#16
 367              	.LCFI14:
 368              	 .cfi_def_cfa_offset 8
 369 0072 BD46     	 mov sp,r7
 370              	.LCFI15:
 371              	 .cfi_def_cfa_register 13
 372              	 
 373 0074 80BD     	 pop {r7,pc}
 374              	.L11:
 375 0076 00BF     	 .align 2
 376              	.L10:
 377 0078 00000000 	 .word CAN_NODE_0
 378              	 .cfi_endproc
 379              	.LFE606:
 381              	 .section .text.CAN_Rx_0x180BA7F3,"ax",%progbits
 382              	 .align 2
 383              	 .global CAN_Rx_0x180BA7F3
 384              	 .thumb
 385              	 .thumb_func
 387              	CAN_Rx_0x180BA7F3:
 388              	.LFB607:
  96:../Can_Devices/can_matrix_bms_29bit.c **** 
  97:../Can_Devices/can_matrix_bms_29bit.c **** 
  98:../Can_Devices/can_matrix_bms_29bit.c **** void CAN_Rx_0x180BA7F3(void)
  99:../Can_Devices/can_matrix_bms_29bit.c **** {
 389              	 .loc 2 99 0
 390              	 .cfi_startproc
 391              	 
 392              	 
 393 0000 80B5     	 push {r7,lr}
 394              	.LCFI16:
 395              	 .cfi_def_cfa_offset 8
 396              	 .cfi_offset 7,-8
 397              	 .cfi_offset 14,-4
 398 0002 84B0     	 sub sp,sp,#16
 399              	.LCFI17:
 400              	 .cfi_def_cfa_offset 24
 401 0004 00AF     	 add r7,sp,#0
 402              	.LCFI18:
 403              	 .cfi_def_cfa_register 7
 100:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t test;
 101:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_STATUS_t status, receive_status;
 102:../Can_Devices/can_matrix_bms_29bit.c **** 	XMC_CAN_MO_t *MO_Ptr;
 103:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t mo_index;
 104:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 404              	 .loc 2 104 0
 405 0006 1C4B     	 ldr r3,.L15
 406 0008 FB60     	 str r3,[r7,#12]
 105:../Can_Devices/can_matrix_bms_29bit.c **** 
 106:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 14;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 407              	 .loc 2 106 0
 408 000a 0E23     	 movs r3,#14
 409 000c FB72     	 strb r3,[r7,#11]
 107:../Can_Devices/can_matrix_bms_29bit.c **** 
 108:../Can_Devices/can_matrix_bms_29bit.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 410              	 .loc 2 108 0
 411 000e FB7A     	 ldrb r3,[r7,#11]
 412 0010 FA68     	 ldr r2,[r7,#12]
 413 0012 0233     	 adds r3,r3,#2
 414 0014 9B00     	 lsls r3,r3,#2
 415 0016 1344     	 add r3,r3,r2
 416 0018 5B68     	 ldr r3,[r3,#4]
 417 001a 1B68     	 ldr r3,[r3]
 418 001c 7B60     	 str r3,[r7,#4]
 109:../Can_Devices/can_matrix_bms_29bit.c **** 
 110:../Can_Devices/can_matrix_bms_29bit.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 419              	 .loc 2 110 0
 420 001e FB7A     	 ldrb r3,[r7,#11]
 421 0020 FA68     	 ldr r2,[r7,#12]
 422 0022 0233     	 adds r3,r3,#2
 423 0024 9B00     	 lsls r3,r3,#2
 424 0026 1344     	 add r3,r3,r2
 425 0028 5B68     	 ldr r3,[r3,#4]
 426 002a 1846     	 mov r0,r3
 427 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 428 0030 0346     	 mov r3,r0
 429 0032 FB70     	 strb r3,[r7,#3]
 111:../Can_Devices/can_matrix_bms_29bit.c **** 	//Check receive pending status
 112:../Can_Devices/can_matrix_bms_29bit.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 430              	 .loc 2 112 0
 431 0034 FB78     	 ldrb r3,[r7,#3]
 432 0036 03F00103 	 and r3,r3,#1
 433 003a 002B     	 cmp r3,#0
 434 003c 16D0     	 beq .L13
 113:../Can_Devices/can_matrix_bms_29bit.c **** 	{
 114:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Clear the flag
 115:../Can_Devices/can_matrix_bms_29bit.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 435              	 .loc 2 115 0
 436 003e 7868     	 ldr r0,[r7,#4]
 437 0040 0121     	 movs r1,#1
 438 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 116:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Read the received Message object
 117:../Can_Devices/can_matrix_bms_29bit.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 439              	 .loc 2 117 0
 440 0046 FB7A     	 ldrb r3,[r7,#11]
 441 0048 FA68     	 ldr r2,[r7,#12]
 442 004a 0233     	 adds r3,r3,#2
 443 004c 9B00     	 lsls r3,r3,#2
 444 004e 1344     	 add r3,r3,r2
 445 0050 5B68     	 ldr r3,[r3,#4]
 446 0052 1846     	 mov r0,r3
 447 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 448 0058 0346     	 mov r3,r0
 449 005a BB70     	 strb r3,[r7,#2]
 118:../Can_Devices/can_matrix_bms_29bit.c **** 
 119:../Can_Devices/can_matrix_bms_29bit.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 450              	 .loc 2 119 0
 451 005c BB78     	 ldrb r3,[r7,#2]
 452 005e 002B     	 cmp r3,#0
 453 0060 02D1     	 bne .L14
 120:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 121:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object receive success.
 122:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 1;
 454              	 .loc 2 122 0
 455 0062 0123     	 movs r3,#1
 456 0064 7B70     	 strb r3,[r7,#1]
 457 0066 01E0     	 b .L13
 458              	.L14:
 123:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 124:../Can_Devices/can_matrix_bms_29bit.c **** 	  else
 125:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 126:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object failed to receive.
 127:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 0;
 459              	 .loc 2 127 0
 460 0068 0023     	 movs r3,#0
 461 006a 7B70     	 strb r3,[r7,#1]
 462              	.L13:
 128:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 129:../Can_Devices/can_matrix_bms_29bit.c **** 	}
 130:../Can_Devices/can_matrix_bms_29bit.c **** 	process_Rx_CAN_0X180BA7F3();
 463              	 .loc 2 130 0
 464 006c FFF7FEFF 	 bl process_Rx_CAN_0X180BA7F3
 131:../Can_Devices/can_matrix_bms_29bit.c **** }
 465              	 .loc 2 131 0
 466 0070 1037     	 adds r7,r7,#16
 467              	.LCFI19:
 468              	 .cfi_def_cfa_offset 8
 469 0072 BD46     	 mov sp,r7
 470              	.LCFI20:
 471              	 .cfi_def_cfa_register 13
 472              	 
 473 0074 80BD     	 pop {r7,pc}
 474              	.L16:
 475 0076 00BF     	 .align 2
 476              	.L15:
 477 0078 00000000 	 .word CAN_NODE_0
 478              	 .cfi_endproc
 479              	.LFE607:
 481              	 .section .text.CAN_Rx_0x180EA7F3,"ax",%progbits
 482              	 .align 2
 483              	 .global CAN_Rx_0x180EA7F3
 484              	 .thumb
 485              	 .thumb_func
 487              	CAN_Rx_0x180EA7F3:
 488              	.LFB608:
 132:../Can_Devices/can_matrix_bms_29bit.c **** 
 133:../Can_Devices/can_matrix_bms_29bit.c **** 
 134:../Can_Devices/can_matrix_bms_29bit.c **** void CAN_Rx_0x180EA7F3(void)
 135:../Can_Devices/can_matrix_bms_29bit.c **** {
 489              	 .loc 2 135 0
 490              	 .cfi_startproc
 491              	 
 492              	 
 493 0000 80B5     	 push {r7,lr}
 494              	.LCFI21:
 495              	 .cfi_def_cfa_offset 8
 496              	 .cfi_offset 7,-8
 497              	 .cfi_offset 14,-4
 498 0002 84B0     	 sub sp,sp,#16
 499              	.LCFI22:
 500              	 .cfi_def_cfa_offset 24
 501 0004 00AF     	 add r7,sp,#0
 502              	.LCFI23:
 503              	 .cfi_def_cfa_register 7
 136:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t test;
 137:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_STATUS_t status, receive_status;
 138:../Can_Devices/can_matrix_bms_29bit.c **** 	XMC_CAN_MO_t *MO_Ptr;
 139:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t mo_index;
 140:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 504              	 .loc 2 140 0
 505 0006 1C4B     	 ldr r3,.L20
 506 0008 FB60     	 str r3,[r7,#12]
 141:../Can_Devices/can_matrix_bms_29bit.c **** 
 142:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 20;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 507              	 .loc 2 142 0
 508 000a 1423     	 movs r3,#20
 509 000c FB72     	 strb r3,[r7,#11]
 143:../Can_Devices/can_matrix_bms_29bit.c **** 
 144:../Can_Devices/can_matrix_bms_29bit.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 510              	 .loc 2 144 0
 511 000e FB7A     	 ldrb r3,[r7,#11]
 512 0010 FA68     	 ldr r2,[r7,#12]
 513 0012 0233     	 adds r3,r3,#2
 514 0014 9B00     	 lsls r3,r3,#2
 515 0016 1344     	 add r3,r3,r2
 516 0018 5B68     	 ldr r3,[r3,#4]
 517 001a 1B68     	 ldr r3,[r3]
 518 001c 7B60     	 str r3,[r7,#4]
 145:../Can_Devices/can_matrix_bms_29bit.c **** 
 146:../Can_Devices/can_matrix_bms_29bit.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 519              	 .loc 2 146 0
 520 001e FB7A     	 ldrb r3,[r7,#11]
 521 0020 FA68     	 ldr r2,[r7,#12]
 522 0022 0233     	 adds r3,r3,#2
 523 0024 9B00     	 lsls r3,r3,#2
 524 0026 1344     	 add r3,r3,r2
 525 0028 5B68     	 ldr r3,[r3,#4]
 526 002a 1846     	 mov r0,r3
 527 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 528 0030 0346     	 mov r3,r0
 529 0032 FB70     	 strb r3,[r7,#3]
 147:../Can_Devices/can_matrix_bms_29bit.c **** 	//Check receive pending status
 148:../Can_Devices/can_matrix_bms_29bit.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 530              	 .loc 2 148 0
 531 0034 FB78     	 ldrb r3,[r7,#3]
 532 0036 03F00103 	 and r3,r3,#1
 533 003a 002B     	 cmp r3,#0
 534 003c 16D0     	 beq .L18
 149:../Can_Devices/can_matrix_bms_29bit.c **** 	{
 150:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Clear the flag
 151:../Can_Devices/can_matrix_bms_29bit.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 535              	 .loc 2 151 0
 536 003e 7868     	 ldr r0,[r7,#4]
 537 0040 0121     	 movs r1,#1
 538 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 152:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Read the received Message object
 153:../Can_Devices/can_matrix_bms_29bit.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 539              	 .loc 2 153 0
 540 0046 FB7A     	 ldrb r3,[r7,#11]
 541 0048 FA68     	 ldr r2,[r7,#12]
 542 004a 0233     	 adds r3,r3,#2
 543 004c 9B00     	 lsls r3,r3,#2
 544 004e 1344     	 add r3,r3,r2
 545 0050 5B68     	 ldr r3,[r3,#4]
 546 0052 1846     	 mov r0,r3
 547 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 548 0058 0346     	 mov r3,r0
 549 005a BB70     	 strb r3,[r7,#2]
 154:../Can_Devices/can_matrix_bms_29bit.c **** 
 155:../Can_Devices/can_matrix_bms_29bit.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 550              	 .loc 2 155 0
 551 005c BB78     	 ldrb r3,[r7,#2]
 552 005e 002B     	 cmp r3,#0
 553 0060 02D1     	 bne .L19
 156:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 157:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object receive success.
 158:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 1;
 554              	 .loc 2 158 0
 555 0062 0123     	 movs r3,#1
 556 0064 7B70     	 strb r3,[r7,#1]
 557 0066 01E0     	 b .L18
 558              	.L19:
 159:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 160:../Can_Devices/can_matrix_bms_29bit.c **** 	  else
 161:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 162:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object failed to receive.
 163:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 0;
 559              	 .loc 2 163 0
 560 0068 0023     	 movs r3,#0
 561 006a 7B70     	 strb r3,[r7,#1]
 562              	.L18:
 164:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 165:../Can_Devices/can_matrix_bms_29bit.c **** 	}
 166:../Can_Devices/can_matrix_bms_29bit.c **** 	process_Rx_CAN_0X180EA7F3();
 563              	 .loc 2 166 0
 564 006c FFF7FEFF 	 bl process_Rx_CAN_0X180EA7F3
 167:../Can_Devices/can_matrix_bms_29bit.c **** }
 565              	 .loc 2 167 0
 566 0070 1037     	 adds r7,r7,#16
 567              	.LCFI24:
 568              	 .cfi_def_cfa_offset 8
 569 0072 BD46     	 mov sp,r7
 570              	.LCFI25:
 571              	 .cfi_def_cfa_register 13
 572              	 
 573 0074 80BD     	 pop {r7,pc}
 574              	.L21:
 575 0076 00BF     	 .align 2
 576              	.L20:
 577 0078 00000000 	 .word CAN_NODE_0
 578              	 .cfi_endproc
 579              	.LFE608:
 581              	 .section .text.CAN_Rx_0x180FA7F3,"ax",%progbits
 582              	 .align 2
 583              	 .global CAN_Rx_0x180FA7F3
 584              	 .thumb
 585              	 .thumb_func
 587              	CAN_Rx_0x180FA7F3:
 588              	.LFB609:
 168:../Can_Devices/can_matrix_bms_29bit.c **** 
 169:../Can_Devices/can_matrix_bms_29bit.c **** void CAN_Rx_0x180FA7F3(void)
 170:../Can_Devices/can_matrix_bms_29bit.c **** {
 589              	 .loc 2 170 0
 590              	 .cfi_startproc
 591              	 
 592              	 
 593 0000 80B5     	 push {r7,lr}
 594              	.LCFI26:
 595              	 .cfi_def_cfa_offset 8
 596              	 .cfi_offset 7,-8
 597              	 .cfi_offset 14,-4
 598 0002 84B0     	 sub sp,sp,#16
 599              	.LCFI27:
 600              	 .cfi_def_cfa_offset 24
 601 0004 00AF     	 add r7,sp,#0
 602              	.LCFI28:
 603              	 .cfi_def_cfa_register 7
 171:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t test;
 172:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_STATUS_t status, receive_status;
 173:../Can_Devices/can_matrix_bms_29bit.c **** 	XMC_CAN_MO_t *MO_Ptr;
 174:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t mo_index;
 175:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 604              	 .loc 2 175 0
 605 0006 1C4B     	 ldr r3,.L25
 606 0008 FB60     	 str r3,[r7,#12]
 176:../Can_Devices/can_matrix_bms_29bit.c **** 
 177:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 21;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 607              	 .loc 2 177 0
 608 000a 1523     	 movs r3,#21
 609 000c FB72     	 strb r3,[r7,#11]
 178:../Can_Devices/can_matrix_bms_29bit.c **** 
 179:../Can_Devices/can_matrix_bms_29bit.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 610              	 .loc 2 179 0
 611 000e FB7A     	 ldrb r3,[r7,#11]
 612 0010 FA68     	 ldr r2,[r7,#12]
 613 0012 0233     	 adds r3,r3,#2
 614 0014 9B00     	 lsls r3,r3,#2
 615 0016 1344     	 add r3,r3,r2
 616 0018 5B68     	 ldr r3,[r3,#4]
 617 001a 1B68     	 ldr r3,[r3]
 618 001c 7B60     	 str r3,[r7,#4]
 180:../Can_Devices/can_matrix_bms_29bit.c **** 
 181:../Can_Devices/can_matrix_bms_29bit.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 619              	 .loc 2 181 0
 620 001e FB7A     	 ldrb r3,[r7,#11]
 621 0020 FA68     	 ldr r2,[r7,#12]
 622 0022 0233     	 adds r3,r3,#2
 623 0024 9B00     	 lsls r3,r3,#2
 624 0026 1344     	 add r3,r3,r2
 625 0028 5B68     	 ldr r3,[r3,#4]
 626 002a 1846     	 mov r0,r3
 627 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 628 0030 0346     	 mov r3,r0
 629 0032 FB70     	 strb r3,[r7,#3]
 182:../Can_Devices/can_matrix_bms_29bit.c **** 	//Check receive pending status
 183:../Can_Devices/can_matrix_bms_29bit.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 630              	 .loc 2 183 0
 631 0034 FB78     	 ldrb r3,[r7,#3]
 632 0036 03F00103 	 and r3,r3,#1
 633 003a 002B     	 cmp r3,#0
 634 003c 16D0     	 beq .L23
 184:../Can_Devices/can_matrix_bms_29bit.c **** 	{
 185:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Clear the flag
 186:../Can_Devices/can_matrix_bms_29bit.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 635              	 .loc 2 186 0
 636 003e 7868     	 ldr r0,[r7,#4]
 637 0040 0121     	 movs r1,#1
 638 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 187:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Read the received Message object
 188:../Can_Devices/can_matrix_bms_29bit.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 639              	 .loc 2 188 0
 640 0046 FB7A     	 ldrb r3,[r7,#11]
 641 0048 FA68     	 ldr r2,[r7,#12]
 642 004a 0233     	 adds r3,r3,#2
 643 004c 9B00     	 lsls r3,r3,#2
 644 004e 1344     	 add r3,r3,r2
 645 0050 5B68     	 ldr r3,[r3,#4]
 646 0052 1846     	 mov r0,r3
 647 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 648 0058 0346     	 mov r3,r0
 649 005a BB70     	 strb r3,[r7,#2]
 189:../Can_Devices/can_matrix_bms_29bit.c **** 
 190:../Can_Devices/can_matrix_bms_29bit.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 650              	 .loc 2 190 0
 651 005c BB78     	 ldrb r3,[r7,#2]
 652 005e 002B     	 cmp r3,#0
 653 0060 02D1     	 bne .L24
 191:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 192:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object receive success.
 193:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 1;
 654              	 .loc 2 193 0
 655 0062 0123     	 movs r3,#1
 656 0064 7B70     	 strb r3,[r7,#1]
 657 0066 01E0     	 b .L23
 658              	.L24:
 194:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 195:../Can_Devices/can_matrix_bms_29bit.c **** 	  else
 196:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 197:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object failed to receive.
 198:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 0;
 659              	 .loc 2 198 0
 660 0068 0023     	 movs r3,#0
 661 006a 7B70     	 strb r3,[r7,#1]
 662              	.L23:
 199:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 200:../Can_Devices/can_matrix_bms_29bit.c **** 	}
 201:../Can_Devices/can_matrix_bms_29bit.c **** 	process_Rx_CAN_0X180FA7F3();
 663              	 .loc 2 201 0
 664 006c FFF7FEFF 	 bl process_Rx_CAN_0X180FA7F3
 202:../Can_Devices/can_matrix_bms_29bit.c **** }
 665              	 .loc 2 202 0
 666 0070 1037     	 adds r7,r7,#16
 667              	.LCFI29:
 668              	 .cfi_def_cfa_offset 8
 669 0072 BD46     	 mov sp,r7
 670              	.LCFI30:
 671              	 .cfi_def_cfa_register 13
 672              	 
 673 0074 80BD     	 pop {r7,pc}
 674              	.L26:
 675 0076 00BF     	 .align 2
 676              	.L25:
 677 0078 00000000 	 .word CAN_NODE_0
 678              	 .cfi_endproc
 679              	.LFE609:
 681              	 .section .text.CAN_Rx_0x1810A7F3,"ax",%progbits
 682              	 .align 2
 683              	 .global CAN_Rx_0x1810A7F3
 684              	 .thumb
 685              	 .thumb_func
 687              	CAN_Rx_0x1810A7F3:
 688              	.LFB610:
 203:../Can_Devices/can_matrix_bms_29bit.c **** 
 204:../Can_Devices/can_matrix_bms_29bit.c **** void CAN_Rx_0x1810A7F3(void)
 205:../Can_Devices/can_matrix_bms_29bit.c **** {
 689              	 .loc 2 205 0
 690              	 .cfi_startproc
 691              	 
 692              	 
 693 0000 80B5     	 push {r7,lr}
 694              	.LCFI31:
 695              	 .cfi_def_cfa_offset 8
 696              	 .cfi_offset 7,-8
 697              	 .cfi_offset 14,-4
 698 0002 84B0     	 sub sp,sp,#16
 699              	.LCFI32:
 700              	 .cfi_def_cfa_offset 24
 701 0004 00AF     	 add r7,sp,#0
 702              	.LCFI33:
 703              	 .cfi_def_cfa_register 7
 206:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t test;
 207:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_STATUS_t status, receive_status;
 208:../Can_Devices/can_matrix_bms_29bit.c **** 	XMC_CAN_MO_t *MO_Ptr;
 209:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t mo_index;
 210:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 704              	 .loc 2 210 0
 705 0006 1C4B     	 ldr r3,.L30
 706 0008 FB60     	 str r3,[r7,#12]
 211:../Can_Devices/can_matrix_bms_29bit.c **** 
 212:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 22;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 707              	 .loc 2 212 0
 708 000a 1623     	 movs r3,#22
 709 000c FB72     	 strb r3,[r7,#11]
 213:../Can_Devices/can_matrix_bms_29bit.c **** 
 214:../Can_Devices/can_matrix_bms_29bit.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 710              	 .loc 2 214 0
 711 000e FB7A     	 ldrb r3,[r7,#11]
 712 0010 FA68     	 ldr r2,[r7,#12]
 713 0012 0233     	 adds r3,r3,#2
 714 0014 9B00     	 lsls r3,r3,#2
 715 0016 1344     	 add r3,r3,r2
 716 0018 5B68     	 ldr r3,[r3,#4]
 717 001a 1B68     	 ldr r3,[r3]
 718 001c 7B60     	 str r3,[r7,#4]
 215:../Can_Devices/can_matrix_bms_29bit.c **** 
 216:../Can_Devices/can_matrix_bms_29bit.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 719              	 .loc 2 216 0
 720 001e FB7A     	 ldrb r3,[r7,#11]
 721 0020 FA68     	 ldr r2,[r7,#12]
 722 0022 0233     	 adds r3,r3,#2
 723 0024 9B00     	 lsls r3,r3,#2
 724 0026 1344     	 add r3,r3,r2
 725 0028 5B68     	 ldr r3,[r3,#4]
 726 002a 1846     	 mov r0,r3
 727 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 728 0030 0346     	 mov r3,r0
 729 0032 FB70     	 strb r3,[r7,#3]
 217:../Can_Devices/can_matrix_bms_29bit.c **** 	//Check receive pending status
 218:../Can_Devices/can_matrix_bms_29bit.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 730              	 .loc 2 218 0
 731 0034 FB78     	 ldrb r3,[r7,#3]
 732 0036 03F00103 	 and r3,r3,#1
 733 003a 002B     	 cmp r3,#0
 734 003c 16D0     	 beq .L28
 219:../Can_Devices/can_matrix_bms_29bit.c **** 	{
 220:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Clear the flag
 221:../Can_Devices/can_matrix_bms_29bit.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 735              	 .loc 2 221 0
 736 003e 7868     	 ldr r0,[r7,#4]
 737 0040 0121     	 movs r1,#1
 738 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 222:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Read the received Message object
 223:../Can_Devices/can_matrix_bms_29bit.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 739              	 .loc 2 223 0
 740 0046 FB7A     	 ldrb r3,[r7,#11]
 741 0048 FA68     	 ldr r2,[r7,#12]
 742 004a 0233     	 adds r3,r3,#2
 743 004c 9B00     	 lsls r3,r3,#2
 744 004e 1344     	 add r3,r3,r2
 745 0050 5B68     	 ldr r3,[r3,#4]
 746 0052 1846     	 mov r0,r3
 747 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 748 0058 0346     	 mov r3,r0
 749 005a BB70     	 strb r3,[r7,#2]
 224:../Can_Devices/can_matrix_bms_29bit.c **** 
 225:../Can_Devices/can_matrix_bms_29bit.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 750              	 .loc 2 225 0
 751 005c BB78     	 ldrb r3,[r7,#2]
 752 005e 002B     	 cmp r3,#0
 753 0060 02D1     	 bne .L29
 226:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 227:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object receive success.
 228:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 1;
 754              	 .loc 2 228 0
 755 0062 0123     	 movs r3,#1
 756 0064 7B70     	 strb r3,[r7,#1]
 757 0066 01E0     	 b .L28
 758              	.L29:
 229:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 230:../Can_Devices/can_matrix_bms_29bit.c **** 	  else
 231:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 232:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object failed to receive.
 233:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 0;
 759              	 .loc 2 233 0
 760 0068 0023     	 movs r3,#0
 761 006a 7B70     	 strb r3,[r7,#1]
 762              	.L28:
 234:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 235:../Can_Devices/can_matrix_bms_29bit.c **** 	}
 236:../Can_Devices/can_matrix_bms_29bit.c **** 	process_Rx_CAN_0X1810A7F3();
 763              	 .loc 2 236 0
 764 006c FFF7FEFF 	 bl process_Rx_CAN_0X1810A7F3
 237:../Can_Devices/can_matrix_bms_29bit.c **** }
 765              	 .loc 2 237 0
 766 0070 1037     	 adds r7,r7,#16
 767              	.LCFI34:
 768              	 .cfi_def_cfa_offset 8
 769 0072 BD46     	 mov sp,r7
 770              	.LCFI35:
 771              	 .cfi_def_cfa_register 13
 772              	 
 773 0074 80BD     	 pop {r7,pc}
 774              	.L31:
 775 0076 00BF     	 .align 2
 776              	.L30:
 777 0078 00000000 	 .word CAN_NODE_0
 778              	 .cfi_endproc
 779              	.LFE610:
 781              	 .section .text.CAN_Rx_0x1813A7F3,"ax",%progbits
 782              	 .align 2
 783              	 .global CAN_Rx_0x1813A7F3
 784              	 .thumb
 785              	 .thumb_func
 787              	CAN_Rx_0x1813A7F3:
 788              	.LFB611:
 238:../Can_Devices/can_matrix_bms_29bit.c **** 
 239:../Can_Devices/can_matrix_bms_29bit.c **** void CAN_Rx_0x1813A7F3(void)
 240:../Can_Devices/can_matrix_bms_29bit.c **** {
 789              	 .loc 2 240 0
 790              	 .cfi_startproc
 791              	 
 792              	 
 793 0000 80B5     	 push {r7,lr}
 794              	.LCFI36:
 795              	 .cfi_def_cfa_offset 8
 796              	 .cfi_offset 7,-8
 797              	 .cfi_offset 14,-4
 798 0002 84B0     	 sub sp,sp,#16
 799              	.LCFI37:
 800              	 .cfi_def_cfa_offset 24
 801 0004 00AF     	 add r7,sp,#0
 802              	.LCFI38:
 803              	 .cfi_def_cfa_register 7
 241:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t test;
 242:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_STATUS_t status, receive_status;
 243:../Can_Devices/can_matrix_bms_29bit.c **** 	XMC_CAN_MO_t *MO_Ptr;
 244:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t mo_index;
 245:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 804              	 .loc 2 245 0
 805 0006 1C4B     	 ldr r3,.L35
 806 0008 FB60     	 str r3,[r7,#12]
 246:../Can_Devices/can_matrix_bms_29bit.c **** 
 247:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 23;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 807              	 .loc 2 247 0
 808 000a 1723     	 movs r3,#23
 809 000c FB72     	 strb r3,[r7,#11]
 248:../Can_Devices/can_matrix_bms_29bit.c **** 
 249:../Can_Devices/can_matrix_bms_29bit.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 810              	 .loc 2 249 0
 811 000e FB7A     	 ldrb r3,[r7,#11]
 812 0010 FA68     	 ldr r2,[r7,#12]
 813 0012 0233     	 adds r3,r3,#2
 814 0014 9B00     	 lsls r3,r3,#2
 815 0016 1344     	 add r3,r3,r2
 816 0018 5B68     	 ldr r3,[r3,#4]
 817 001a 1B68     	 ldr r3,[r3]
 818 001c 7B60     	 str r3,[r7,#4]
 250:../Can_Devices/can_matrix_bms_29bit.c **** 
 251:../Can_Devices/can_matrix_bms_29bit.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 819              	 .loc 2 251 0
 820 001e FB7A     	 ldrb r3,[r7,#11]
 821 0020 FA68     	 ldr r2,[r7,#12]
 822 0022 0233     	 adds r3,r3,#2
 823 0024 9B00     	 lsls r3,r3,#2
 824 0026 1344     	 add r3,r3,r2
 825 0028 5B68     	 ldr r3,[r3,#4]
 826 002a 1846     	 mov r0,r3
 827 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 828 0030 0346     	 mov r3,r0
 829 0032 FB70     	 strb r3,[r7,#3]
 252:../Can_Devices/can_matrix_bms_29bit.c **** 	//Check receive pending status
 253:../Can_Devices/can_matrix_bms_29bit.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 830              	 .loc 2 253 0
 831 0034 FB78     	 ldrb r3,[r7,#3]
 832 0036 03F00103 	 and r3,r3,#1
 833 003a 002B     	 cmp r3,#0
 834 003c 16D0     	 beq .L33
 254:../Can_Devices/can_matrix_bms_29bit.c **** 	{
 255:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Clear the flag
 256:../Can_Devices/can_matrix_bms_29bit.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 835              	 .loc 2 256 0
 836 003e 7868     	 ldr r0,[r7,#4]
 837 0040 0121     	 movs r1,#1
 838 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 257:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Read the received Message object
 258:../Can_Devices/can_matrix_bms_29bit.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 839              	 .loc 2 258 0
 840 0046 FB7A     	 ldrb r3,[r7,#11]
 841 0048 FA68     	 ldr r2,[r7,#12]
 842 004a 0233     	 adds r3,r3,#2
 843 004c 9B00     	 lsls r3,r3,#2
 844 004e 1344     	 add r3,r3,r2
 845 0050 5B68     	 ldr r3,[r3,#4]
 846 0052 1846     	 mov r0,r3
 847 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 848 0058 0346     	 mov r3,r0
 849 005a BB70     	 strb r3,[r7,#2]
 259:../Can_Devices/can_matrix_bms_29bit.c **** 
 260:../Can_Devices/can_matrix_bms_29bit.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 850              	 .loc 2 260 0
 851 005c BB78     	 ldrb r3,[r7,#2]
 852 005e 002B     	 cmp r3,#0
 853 0060 02D1     	 bne .L34
 261:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 262:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object receive success.
 263:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 1;
 854              	 .loc 2 263 0
 855 0062 0123     	 movs r3,#1
 856 0064 7B70     	 strb r3,[r7,#1]
 857 0066 01E0     	 b .L33
 858              	.L34:
 264:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 265:../Can_Devices/can_matrix_bms_29bit.c **** 	  else
 266:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 267:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object failed to receive.
 268:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 0;
 859              	 .loc 2 268 0
 860 0068 0023     	 movs r3,#0
 861 006a 7B70     	 strb r3,[r7,#1]
 862              	.L33:
 269:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 270:../Can_Devices/can_matrix_bms_29bit.c **** 	}
 271:../Can_Devices/can_matrix_bms_29bit.c **** 	process_Rx_CAN_0X1813A7F3();
 863              	 .loc 2 271 0
 864 006c FFF7FEFF 	 bl process_Rx_CAN_0X1813A7F3
 272:../Can_Devices/can_matrix_bms_29bit.c **** }
 865              	 .loc 2 272 0
 866 0070 1037     	 adds r7,r7,#16
 867              	.LCFI39:
 868              	 .cfi_def_cfa_offset 8
 869 0072 BD46     	 mov sp,r7
 870              	.LCFI40:
 871              	 .cfi_def_cfa_register 13
 872              	 
 873 0074 80BD     	 pop {r7,pc}
 874              	.L36:
 875 0076 00BF     	 .align 2
 876              	.L35:
 877 0078 00000000 	 .word CAN_NODE_0
 878              	 .cfi_endproc
 879              	.LFE611:
 881              	 .section .text.CAN_Rx_0x1814A7F3,"ax",%progbits
 882              	 .align 2
 883              	 .global CAN_Rx_0x1814A7F3
 884              	 .thumb
 885              	 .thumb_func
 887              	CAN_Rx_0x1814A7F3:
 888              	.LFB612:
 273:../Can_Devices/can_matrix_bms_29bit.c **** 
 274:../Can_Devices/can_matrix_bms_29bit.c **** void CAN_Rx_0x1814A7F3(void)
 275:../Can_Devices/can_matrix_bms_29bit.c **** {
 889              	 .loc 2 275 0
 890              	 .cfi_startproc
 891              	 
 892              	 
 893 0000 80B5     	 push {r7,lr}
 894              	.LCFI41:
 895              	 .cfi_def_cfa_offset 8
 896              	 .cfi_offset 7,-8
 897              	 .cfi_offset 14,-4
 898 0002 84B0     	 sub sp,sp,#16
 899              	.LCFI42:
 900              	 .cfi_def_cfa_offset 24
 901 0004 00AF     	 add r7,sp,#0
 902              	.LCFI43:
 903              	 .cfi_def_cfa_register 7
 276:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t test;
 277:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_STATUS_t status, receive_status;
 278:../Can_Devices/can_matrix_bms_29bit.c **** 	XMC_CAN_MO_t *MO_Ptr;
 279:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t mo_index;
 280:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 904              	 .loc 2 280 0
 905 0006 1C4B     	 ldr r3,.L40
 906 0008 FB60     	 str r3,[r7,#12]
 281:../Can_Devices/can_matrix_bms_29bit.c **** 
 282:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 20;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 907              	 .loc 2 282 0
 908 000a 1423     	 movs r3,#20
 909 000c FB72     	 strb r3,[r7,#11]
 283:../Can_Devices/can_matrix_bms_29bit.c **** 
 284:../Can_Devices/can_matrix_bms_29bit.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 910              	 .loc 2 284 0
 911 000e FB7A     	 ldrb r3,[r7,#11]
 912 0010 FA68     	 ldr r2,[r7,#12]
 913 0012 0233     	 adds r3,r3,#2
 914 0014 9B00     	 lsls r3,r3,#2
 915 0016 1344     	 add r3,r3,r2
 916 0018 5B68     	 ldr r3,[r3,#4]
 917 001a 1B68     	 ldr r3,[r3]
 918 001c 7B60     	 str r3,[r7,#4]
 285:../Can_Devices/can_matrix_bms_29bit.c **** 
 286:../Can_Devices/can_matrix_bms_29bit.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 919              	 .loc 2 286 0
 920 001e FB7A     	 ldrb r3,[r7,#11]
 921 0020 FA68     	 ldr r2,[r7,#12]
 922 0022 0233     	 adds r3,r3,#2
 923 0024 9B00     	 lsls r3,r3,#2
 924 0026 1344     	 add r3,r3,r2
 925 0028 5B68     	 ldr r3,[r3,#4]
 926 002a 1846     	 mov r0,r3
 927 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 928 0030 0346     	 mov r3,r0
 929 0032 FB70     	 strb r3,[r7,#3]
 287:../Can_Devices/can_matrix_bms_29bit.c **** 	//Check receive pending status
 288:../Can_Devices/can_matrix_bms_29bit.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 930              	 .loc 2 288 0
 931 0034 FB78     	 ldrb r3,[r7,#3]
 932 0036 03F00103 	 and r3,r3,#1
 933 003a 002B     	 cmp r3,#0
 934 003c 16D0     	 beq .L38
 289:../Can_Devices/can_matrix_bms_29bit.c **** 	{
 290:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Clear the flag
 291:../Can_Devices/can_matrix_bms_29bit.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 935              	 .loc 2 291 0
 936 003e 7868     	 ldr r0,[r7,#4]
 937 0040 0121     	 movs r1,#1
 938 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 292:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Read the received Message object
 293:../Can_Devices/can_matrix_bms_29bit.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 939              	 .loc 2 293 0
 940 0046 FB7A     	 ldrb r3,[r7,#11]
 941 0048 FA68     	 ldr r2,[r7,#12]
 942 004a 0233     	 adds r3,r3,#2
 943 004c 9B00     	 lsls r3,r3,#2
 944 004e 1344     	 add r3,r3,r2
 945 0050 5B68     	 ldr r3,[r3,#4]
 946 0052 1846     	 mov r0,r3
 947 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 948 0058 0346     	 mov r3,r0
 949 005a BB70     	 strb r3,[r7,#2]
 294:../Can_Devices/can_matrix_bms_29bit.c **** 
 295:../Can_Devices/can_matrix_bms_29bit.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 950              	 .loc 2 295 0
 951 005c BB78     	 ldrb r3,[r7,#2]
 952 005e 002B     	 cmp r3,#0
 953 0060 02D1     	 bne .L39
 296:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 297:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object receive success.
 298:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 1;
 954              	 .loc 2 298 0
 955 0062 0123     	 movs r3,#1
 956 0064 7B70     	 strb r3,[r7,#1]
 957 0066 01E0     	 b .L38
 958              	.L39:
 299:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 300:../Can_Devices/can_matrix_bms_29bit.c **** 	  else
 301:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 302:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object failed to receive.
 303:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 0;
 959              	 .loc 2 303 0
 960 0068 0023     	 movs r3,#0
 961 006a 7B70     	 strb r3,[r7,#1]
 962              	.L38:
 304:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 305:../Can_Devices/can_matrix_bms_29bit.c **** 	}
 306:../Can_Devices/can_matrix_bms_29bit.c **** 	process_Rx_CAN_0X1814A7F3();
 963              	 .loc 2 306 0
 964 006c FFF7FEFF 	 bl process_Rx_CAN_0X1814A7F3
 307:../Can_Devices/can_matrix_bms_29bit.c **** }
 965              	 .loc 2 307 0
 966 0070 1037     	 adds r7,r7,#16
 967              	.LCFI44:
 968              	 .cfi_def_cfa_offset 8
 969 0072 BD46     	 mov sp,r7
 970              	.LCFI45:
 971              	 .cfi_def_cfa_register 13
 972              	 
 973 0074 80BD     	 pop {r7,pc}
 974              	.L41:
 975 0076 00BF     	 .align 2
 976              	.L40:
 977 0078 00000000 	 .word CAN_NODE_0
 978              	 .cfi_endproc
 979              	.LFE612:
 981              	 .section .text.CAN_Rx_0x1815A7F3,"ax",%progbits
 982              	 .align 2
 983              	 .global CAN_Rx_0x1815A7F3
 984              	 .thumb
 985              	 .thumb_func
 987              	CAN_Rx_0x1815A7F3:
 988              	.LFB613:
 308:../Can_Devices/can_matrix_bms_29bit.c **** 
 309:../Can_Devices/can_matrix_bms_29bit.c **** void CAN_Rx_0x1815A7F3(void)
 310:../Can_Devices/can_matrix_bms_29bit.c **** {
 989              	 .loc 2 310 0
 990              	 .cfi_startproc
 991              	 
 992              	 
 993 0000 80B5     	 push {r7,lr}
 994              	.LCFI46:
 995              	 .cfi_def_cfa_offset 8
 996              	 .cfi_offset 7,-8
 997              	 .cfi_offset 14,-4
 998 0002 84B0     	 sub sp,sp,#16
 999              	.LCFI47:
 1000              	 .cfi_def_cfa_offset 24
 1001 0004 00AF     	 add r7,sp,#0
 1002              	.LCFI48:
 1003              	 .cfi_def_cfa_register 7
 311:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t test;
 312:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_STATUS_t status, receive_status;
 313:../Can_Devices/can_matrix_bms_29bit.c **** 	XMC_CAN_MO_t *MO_Ptr;
 314:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t mo_index;
 315:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1004              	 .loc 2 315 0
 1005 0006 1C4B     	 ldr r3,.L45
 1006 0008 FB60     	 str r3,[r7,#12]
 316:../Can_Devices/can_matrix_bms_29bit.c **** 
 317:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 20;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 1007              	 .loc 2 317 0
 1008 000a 1423     	 movs r3,#20
 1009 000c FB72     	 strb r3,[r7,#11]
 318:../Can_Devices/can_matrix_bms_29bit.c **** 
 319:../Can_Devices/can_matrix_bms_29bit.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 1010              	 .loc 2 319 0
 1011 000e FB7A     	 ldrb r3,[r7,#11]
 1012 0010 FA68     	 ldr r2,[r7,#12]
 1013 0012 0233     	 adds r3,r3,#2
 1014 0014 9B00     	 lsls r3,r3,#2
 1015 0016 1344     	 add r3,r3,r2
 1016 0018 5B68     	 ldr r3,[r3,#4]
 1017 001a 1B68     	 ldr r3,[r3]
 1018 001c 7B60     	 str r3,[r7,#4]
 320:../Can_Devices/can_matrix_bms_29bit.c **** 
 321:../Can_Devices/can_matrix_bms_29bit.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 1019              	 .loc 2 321 0
 1020 001e FB7A     	 ldrb r3,[r7,#11]
 1021 0020 FA68     	 ldr r2,[r7,#12]
 1022 0022 0233     	 adds r3,r3,#2
 1023 0024 9B00     	 lsls r3,r3,#2
 1024 0026 1344     	 add r3,r3,r2
 1025 0028 5B68     	 ldr r3,[r3,#4]
 1026 002a 1846     	 mov r0,r3
 1027 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 1028 0030 0346     	 mov r3,r0
 1029 0032 FB70     	 strb r3,[r7,#3]
 322:../Can_Devices/can_matrix_bms_29bit.c **** 	//Check receive pending status
 323:../Can_Devices/can_matrix_bms_29bit.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 1030              	 .loc 2 323 0
 1031 0034 FB78     	 ldrb r3,[r7,#3]
 1032 0036 03F00103 	 and r3,r3,#1
 1033 003a 002B     	 cmp r3,#0
 1034 003c 16D0     	 beq .L43
 324:../Can_Devices/can_matrix_bms_29bit.c **** 	{
 325:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Clear the flag
 326:../Can_Devices/can_matrix_bms_29bit.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 1035              	 .loc 2 326 0
 1036 003e 7868     	 ldr r0,[r7,#4]
 1037 0040 0121     	 movs r1,#1
 1038 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 327:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Read the received Message object
 328:../Can_Devices/can_matrix_bms_29bit.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 1039              	 .loc 2 328 0
 1040 0046 FB7A     	 ldrb r3,[r7,#11]
 1041 0048 FA68     	 ldr r2,[r7,#12]
 1042 004a 0233     	 adds r3,r3,#2
 1043 004c 9B00     	 lsls r3,r3,#2
 1044 004e 1344     	 add r3,r3,r2
 1045 0050 5B68     	 ldr r3,[r3,#4]
 1046 0052 1846     	 mov r0,r3
 1047 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 1048 0058 0346     	 mov r3,r0
 1049 005a BB70     	 strb r3,[r7,#2]
 329:../Can_Devices/can_matrix_bms_29bit.c **** 
 330:../Can_Devices/can_matrix_bms_29bit.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 1050              	 .loc 2 330 0
 1051 005c BB78     	 ldrb r3,[r7,#2]
 1052 005e 002B     	 cmp r3,#0
 1053 0060 02D1     	 bne .L44
 331:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 332:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object receive success.
 333:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 1;
 1054              	 .loc 2 333 0
 1055 0062 0123     	 movs r3,#1
 1056 0064 7B70     	 strb r3,[r7,#1]
 1057 0066 01E0     	 b .L43
 1058              	.L44:
 334:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 335:../Can_Devices/can_matrix_bms_29bit.c **** 	  else
 336:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 337:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object failed to receive.
 338:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 0;
 1059              	 .loc 2 338 0
 1060 0068 0023     	 movs r3,#0
 1061 006a 7B70     	 strb r3,[r7,#1]
 1062              	.L43:
 339:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 340:../Can_Devices/can_matrix_bms_29bit.c **** 	}
 341:../Can_Devices/can_matrix_bms_29bit.c **** 	process_Rx_CAN_0X1815A7F3();
 1063              	 .loc 2 341 0
 1064 006c FFF7FEFF 	 bl process_Rx_CAN_0X1815A7F3
 342:../Can_Devices/can_matrix_bms_29bit.c **** }
 1065              	 .loc 2 342 0
 1066 0070 1037     	 adds r7,r7,#16
 1067              	.LCFI49:
 1068              	 .cfi_def_cfa_offset 8
 1069 0072 BD46     	 mov sp,r7
 1070              	.LCFI50:
 1071              	 .cfi_def_cfa_register 13
 1072              	 
 1073 0074 80BD     	 pop {r7,pc}
 1074              	.L46:
 1075 0076 00BF     	 .align 2
 1076              	.L45:
 1077 0078 00000000 	 .word CAN_NODE_0
 1078              	 .cfi_endproc
 1079              	.LFE613:
 1081              	 .section .text.CAN_Rx_0x180CA7F3,"ax",%progbits
 1082              	 .align 2
 1083              	 .global CAN_Rx_0x180CA7F3
 1084              	 .thumb
 1085              	 .thumb_func
 1087              	CAN_Rx_0x180CA7F3:
 1088              	.LFB614:
 343:../Can_Devices/can_matrix_bms_29bit.c **** 
 344:../Can_Devices/can_matrix_bms_29bit.c **** 
 345:../Can_Devices/can_matrix_bms_29bit.c **** void CAN_Rx_0x180CA7F3(void)
 346:../Can_Devices/can_matrix_bms_29bit.c **** {
 1089              	 .loc 2 346 0
 1090              	 .cfi_startproc
 1091              	 
 1092              	 
 1093 0000 80B5     	 push {r7,lr}
 1094              	.LCFI51:
 1095              	 .cfi_def_cfa_offset 8
 1096              	 .cfi_offset 7,-8
 1097              	 .cfi_offset 14,-4
 1098 0002 84B0     	 sub sp,sp,#16
 1099              	.LCFI52:
 1100              	 .cfi_def_cfa_offset 24
 1101 0004 00AF     	 add r7,sp,#0
 1102              	.LCFI53:
 1103              	 .cfi_def_cfa_register 7
 347:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t test;
 348:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_STATUS_t status, receive_status;
 349:../Can_Devices/can_matrix_bms_29bit.c **** 	XMC_CAN_MO_t *MO_Ptr;
 350:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t mo_index;
 351:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1104              	 .loc 2 351 0
 1105 0006 1C4B     	 ldr r3,.L50
 1106 0008 FB60     	 str r3,[r7,#12]
 352:../Can_Devices/can_matrix_bms_29bit.c **** 
 353:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 24;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 1107              	 .loc 2 353 0
 1108 000a 1823     	 movs r3,#24
 1109 000c FB72     	 strb r3,[r7,#11]
 354:../Can_Devices/can_matrix_bms_29bit.c **** 
 355:../Can_Devices/can_matrix_bms_29bit.c **** 	MO_Ptr = HandlePtr1->lmobj_ptr[mo_index]->mo_ptr;
 1110              	 .loc 2 355 0
 1111 000e FB7A     	 ldrb r3,[r7,#11]
 1112 0010 FA68     	 ldr r2,[r7,#12]
 1113 0012 0233     	 adds r3,r3,#2
 1114 0014 9B00     	 lsls r3,r3,#2
 1115 0016 1344     	 add r3,r3,r2
 1116 0018 5B68     	 ldr r3,[r3,#4]
 1117 001a 1B68     	 ldr r3,[r3]
 1118 001c 7B60     	 str r3,[r7,#4]
 356:../Can_Devices/can_matrix_bms_29bit.c **** 
 357:../Can_Devices/can_matrix_bms_29bit.c **** 	status = CAN_NODE_MO_GetStatus(HandlePtr1->lmobj_ptr[mo_index]);
 1119              	 .loc 2 357 0
 1120 001e FB7A     	 ldrb r3,[r7,#11]
 1121 0020 FA68     	 ldr r2,[r7,#12]
 1122 0022 0233     	 adds r3,r3,#2
 1123 0024 9B00     	 lsls r3,r3,#2
 1124 0026 1344     	 add r3,r3,r2
 1125 0028 5B68     	 ldr r3,[r3,#4]
 1126 002a 1846     	 mov r0,r3
 1127 002c FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 1128 0030 0346     	 mov r3,r0
 1129 0032 FB70     	 strb r3,[r7,#3]
 358:../Can_Devices/can_matrix_bms_29bit.c **** 	//Check receive pending status
 359:../Can_Devices/can_matrix_bms_29bit.c **** 	if (status & XMC_CAN_MO_STATUS_RX_PENDING)
 1130              	 .loc 2 359 0
 1131 0034 FB78     	 ldrb r3,[r7,#3]
 1132 0036 03F00103 	 and r3,r3,#1
 1133 003a 002B     	 cmp r3,#0
 1134 003c 16D0     	 beq .L48
 360:../Can_Devices/can_matrix_bms_29bit.c **** 	{
 361:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Clear the flag
 362:../Can_Devices/can_matrix_bms_29bit.c **** 	  XMC_CAN_MO_ResetStatus(MO_Ptr,XMC_CAN_MO_RESET_STATUS_RX_PENDING);
 1135              	 .loc 2 362 0
 1136 003e 7868     	 ldr r0,[r7,#4]
 1137 0040 0121     	 movs r1,#1
 1138 0042 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 363:../Can_Devices/can_matrix_bms_29bit.c **** 	  // Read the received Message object
 364:../Can_Devices/can_matrix_bms_29bit.c **** 	  receive_status = CAN_NODE_MO_Receive(HandlePtr1->lmobj_ptr[mo_index]);
 1139              	 .loc 2 364 0
 1140 0046 FB7A     	 ldrb r3,[r7,#11]
 1141 0048 FA68     	 ldr r2,[r7,#12]
 1142 004a 0233     	 adds r3,r3,#2
 1143 004c 9B00     	 lsls r3,r3,#2
 1144 004e 1344     	 add r3,r3,r2
 1145 0050 5B68     	 ldr r3,[r3,#4]
 1146 0052 1846     	 mov r0,r3
 1147 0054 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 1148 0058 0346     	 mov r3,r0
 1149 005a BB70     	 strb r3,[r7,#2]
 365:../Can_Devices/can_matrix_bms_29bit.c **** 
 366:../Can_Devices/can_matrix_bms_29bit.c **** 	  if (receive_status == CAN_NODE_STATUS_SUCCESS)
 1150              	 .loc 2 366 0
 1151 005c BB78     	 ldrb r3,[r7,#2]
 1152 005e 002B     	 cmp r3,#0
 1153 0060 02D1     	 bne .L49
 367:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 368:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object receive success.
 369:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 1;
 1154              	 .loc 2 369 0
 1155 0062 0123     	 movs r3,#1
 1156 0064 7B70     	 strb r3,[r7,#1]
 1157 0066 01E0     	 b .L48
 1158              	.L49:
 370:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 371:../Can_Devices/can_matrix_bms_29bit.c **** 	  else
 372:../Can_Devices/can_matrix_bms_29bit.c **** 	  {
 373:../Can_Devices/can_matrix_bms_29bit.c **** 	    // message object failed to receive.
 374:../Can_Devices/can_matrix_bms_29bit.c **** 		  test = 0;
 1159              	 .loc 2 374 0
 1160 0068 0023     	 movs r3,#0
 1161 006a 7B70     	 strb r3,[r7,#1]
 1162              	.L48:
 375:../Can_Devices/can_matrix_bms_29bit.c **** 	  }
 376:../Can_Devices/can_matrix_bms_29bit.c **** 	}
 377:../Can_Devices/can_matrix_bms_29bit.c **** 	process_Rx_CAN_0X180CA7F3();
 1163              	 .loc 2 377 0
 1164 006c FFF7FEFF 	 bl process_Rx_CAN_0X180CA7F3
 378:../Can_Devices/can_matrix_bms_29bit.c **** }
 1165              	 .loc 2 378 0
 1166 0070 1037     	 adds r7,r7,#16
 1167              	.LCFI54:
 1168              	 .cfi_def_cfa_offset 8
 1169 0072 BD46     	 mov sp,r7
 1170              	.LCFI55:
 1171              	 .cfi_def_cfa_register 13
 1172              	 
 1173 0074 80BD     	 pop {r7,pc}
 1174              	.L51:
 1175 0076 00BF     	 .align 2
 1176              	.L50:
 1177 0078 00000000 	 .word CAN_NODE_0
 1178              	 .cfi_endproc
 1179              	.LFE614:
 1181              	 .section .text.process_Rx_CAN_0X1810A7F3,"ax",%progbits
 1182              	 .align 2
 1183              	 .global process_Rx_CAN_0X1810A7F3
 1184              	 .thumb
 1185              	 .thumb_func
 1187              	process_Rx_CAN_0X1810A7F3:
 1188              	.LFB615:
 379:../Can_Devices/can_matrix_bms_29bit.c **** 
 380:../Can_Devices/can_matrix_bms_29bit.c **** 
 381:../Can_Devices/can_matrix_bms_29bit.c **** void process_Rx_CAN_0X1810A7F3(void)
 382:../Can_Devices/can_matrix_bms_29bit.c **** {
 1189              	 .loc 2 382 0
 1190              	 .cfi_startproc
 1191              	 
 1192              	 
 1193 0000 80B5     	 push {r7,lr}
 1194              	.LCFI56:
 1195              	 .cfi_def_cfa_offset 8
 1196              	 .cfi_offset 7,-8
 1197              	 .cfi_offset 14,-4
 1198 0002 84B0     	 sub sp,sp,#16
 1199              	.LCFI57:
 1200              	 .cfi_def_cfa_offset 24
 1201 0004 00AF     	 add r7,sp,#0
 1202              	.LCFI58:
 1203              	 .cfi_def_cfa_register 7
 383:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t *tempData, mo_index;
 384:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1204              	 .loc 2 384 0
 1205 0006 114B     	 ldr r3,.L54
 1206 0008 FB60     	 str r3,[r7,#12]
 385:../Can_Devices/can_matrix_bms_29bit.c **** 
 386:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 22;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 1207              	 .loc 2 386 0
 1208 000a 1623     	 movs r3,#22
 1209 000c FB72     	 strb r3,[r7,#11]
 387:../Can_Devices/can_matrix_bms_29bit.c **** 
 388:../Can_Devices/can_matrix_bms_29bit.c **** 	tempData = &CAN_BMS_29bit[CAN_0X1810A7F3].CAN_Data[0];
 1210              	 .loc 2 388 0
 1211 000e 104B     	 ldr r3,.L54+4
 1212 0010 7B60     	 str r3,[r7,#4]
 389:../Can_Devices/can_matrix_bms_29bit.c **** 
 390:../Can_Devices/can_matrix_bms_29bit.c **** 	//read data to external buffer
 391:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1213              	 .loc 2 391 0
 1214 0012 FB7A     	 ldrb r3,[r7,#11]
 1215 0014 FA68     	 ldr r2,[r7,#12]
 1216 0016 0233     	 adds r3,r3,#2
 1217 0018 9B00     	 lsls r3,r3,#2
 1218 001a 1344     	 add r3,r3,r2
 1219 001c 5B68     	 ldr r3,[r3,#4]
 1220 001e 1846     	 mov r0,r3
 1221 0020 7968     	 ldr r1,[r7,#4]
 1222 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 392:../Can_Devices/can_matrix_bms_29bit.c **** 
 393:../Can_Devices/can_matrix_bms_29bit.c **** 	//charging_started = ((tempData[0]) & 2);
 394:../Can_Devices/can_matrix_bms_29bit.c **** 
 395:../Can_Devices/can_matrix_bms_29bit.c **** 	charge_complete = 0x00;
 1223              	 .loc 2 395 0
 1224 0026 0B4B     	 ldr r3,.L54+8
 1225 0028 0022     	 movs r2,#0
 1226 002a 1A70     	 strb r2,[r3]
 396:../Can_Devices/can_matrix_bms_29bit.c **** 	if(((tempData[6] >> 4) & 0x01))
 1227              	 .loc 2 396 0
 1228 002c 7B68     	 ldr r3,[r7,#4]
 1229 002e 0633     	 adds r3,r3,#6
 1230 0030 1B78     	 ldrb r3,[r3]
 1231 0032 1B09     	 lsrs r3,r3,#4
 1232 0034 DBB2     	 uxtb r3,r3
 1233 0036 03F00103 	 and r3,r3,#1
 1234 003a 002B     	 cmp r3,#0
 1235 003c 02D0     	 beq .L52
 397:../Can_Devices/can_matrix_bms_29bit.c **** 		charge_complete = 0x10;
 1236              	 .loc 2 397 0
 1237 003e 054B     	 ldr r3,.L54+8
 1238 0040 1022     	 movs r2,#16
 1239 0042 1A70     	 strb r2,[r3]
 1240              	.L52:
 398:../Can_Devices/can_matrix_bms_29bit.c **** }
 1241              	 .loc 2 398 0
 1242 0044 1037     	 adds r7,r7,#16
 1243              	.LCFI59:
 1244              	 .cfi_def_cfa_offset 8
 1245 0046 BD46     	 mov sp,r7
 1246              	.LCFI60:
 1247              	 .cfi_def_cfa_register 13
 1248              	 
 1249 0048 80BD     	 pop {r7,pc}
 1250              	.L55:
 1251 004a 00BF     	 .align 2
 1252              	.L54:
 1253 004c 00000000 	 .word CAN_NODE_0
 1254 0050 1C000000 	 .word CAN_BMS_29bit+28
 1255 0054 00000000 	 .word charge_complete
 1256              	 .cfi_endproc
 1257              	.LFE615:
 1259              	 .section .text.process_Rx_CAN_0X180EA7F3,"ax",%progbits
 1260              	 .align 2
 1261              	 .global process_Rx_CAN_0X180EA7F3
 1262              	 .thumb
 1263              	 .thumb_func
 1265              	process_Rx_CAN_0X180EA7F3:
 1266              	.LFB616:
 399:../Can_Devices/can_matrix_bms_29bit.c **** 
 400:../Can_Devices/can_matrix_bms_29bit.c **** void process_Rx_CAN_0X180EA7F3(void)
 401:../Can_Devices/can_matrix_bms_29bit.c **** {
 1267              	 .loc 2 401 0
 1268              	 .cfi_startproc
 1269              	 
 1270              	 
 1271 0000 80B5     	 push {r7,lr}
 1272              	.LCFI61:
 1273              	 .cfi_def_cfa_offset 8
 1274              	 .cfi_offset 7,-8
 1275              	 .cfi_offset 14,-4
 1276 0002 86B0     	 sub sp,sp,#24
 1277              	.LCFI62:
 1278              	 .cfi_def_cfa_offset 32
 1279 0004 00AF     	 add r7,sp,#0
 1280              	.LCFI63:
 1281              	 .cfi_def_cfa_register 7
 402:../Can_Devices/can_matrix_bms_29bit.c **** 	int8_t *tempData, mo_index;
 403:../Can_Devices/can_matrix_bms_29bit.c **** 	static unsigned int charge_count = 0, c4;
 404:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1282              	 .loc 2 404 0
 1283 0006 704B     	 ldr r3,.L68
 1284 0008 7B61     	 str r3,[r7,#20]
 405:../Can_Devices/can_matrix_bms_29bit.c **** 
 406:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 20;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 1285              	 .loc 2 406 0
 1286 000a 1423     	 movs r3,#20
 1287 000c FB74     	 strb r3,[r7,#19]
 407:../Can_Devices/can_matrix_bms_29bit.c **** 
 408:../Can_Devices/can_matrix_bms_29bit.c **** 	tempData = &CAN_BMS_29bit[CAN_0X180EA7F3].CAN_Data[0];
 1288              	 .loc 2 408 0
 1289 000e 6F4B     	 ldr r3,.L68+4
 1290 0010 FB60     	 str r3,[r7,#12]
 409:../Can_Devices/can_matrix_bms_29bit.c **** 
 410:../Can_Devices/can_matrix_bms_29bit.c **** 	//read data to external buffer
 411:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1291              	 .loc 2 411 0
 1292 0012 97F91330 	 ldrsb r3,[r7,#19]
 1293 0016 7A69     	 ldr r2,[r7,#20]
 1294 0018 0233     	 adds r3,r3,#2
 1295 001a 9B00     	 lsls r3,r3,#2
 1296 001c 1344     	 add r3,r3,r2
 1297 001e 5B68     	 ldr r3,[r3,#4]
 1298 0020 1846     	 mov r0,r3
 1299 0022 F968     	 ldr r1,[r7,#12]
 1300 0024 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 412:../Can_Devices/can_matrix_bms_29bit.c **** 
 413:../Can_Devices/can_matrix_bms_29bit.c **** 	ChargeCurrentLimit = ((uint16_t)(((uint16_t)tempData[3] << 8) | (uint8_t)tempData[2]))/10;
 1301              	 .loc 2 413 0
 1302 0028 FB68     	 ldr r3,[r7,#12]
 1303 002a 0333     	 adds r3,r3,#3
 1304 002c 1B78     	 ldrb r3,[r3]
 1305 002e 5BB2     	 sxtb r3,r3
 1306 0030 9BB2     	 uxth r3,r3
 1307 0032 1B02     	 lsls r3,r3,#8
 1308 0034 9AB2     	 uxth r2,r3
 1309 0036 FB68     	 ldr r3,[r7,#12]
 1310 0038 0233     	 adds r3,r3,#2
 1311 003a 1B78     	 ldrb r3,[r3]
 1312 003c DBB2     	 uxtb r3,r3
 1313 003e 9BB2     	 uxth r3,r3
 1314 0040 1343     	 orrs r3,r3,r2
 1315 0042 9BB2     	 uxth r3,r3
 1316 0044 9BB2     	 uxth r3,r3
 1317 0046 624A     	 ldr r2,.L68+8
 1318 0048 A2FB0323 	 umull r2,r3,r2,r3
 1319 004c DB08     	 lsrs r3,r3,#3
 1320 004e 9AB2     	 uxth r2,r3
 1321 0050 604B     	 ldr r3,.L68+12
 1322 0052 1A80     	 strh r2,[r3]
 414:../Can_Devices/can_matrix_bms_29bit.c **** 	DischargeCurrentLimit = ((int)(((int)tempData[5] << 8) | (int)tempData[4]))/10;
 1323              	 .loc 2 414 0
 1324 0054 FB68     	 ldr r3,[r7,#12]
 1325 0056 0533     	 adds r3,r3,#5
 1326 0058 1B78     	 ldrb r3,[r3]
 1327 005a 5BB2     	 sxtb r3,r3
 1328 005c 1A02     	 lsls r2,r3,#8
 1329 005e FB68     	 ldr r3,[r7,#12]
 1330 0060 0433     	 adds r3,r3,#4
 1331 0062 1B78     	 ldrb r3,[r3]
 1332 0064 5BB2     	 sxtb r3,r3
 1333 0066 1343     	 orrs r3,r3,r2
 1334 0068 5B4A     	 ldr r2,.L68+16
 1335 006a 82FB0312 	 smull r1,r2,r2,r3
 1336 006e 9210     	 asrs r2,r2,#2
 1337 0070 DB17     	 asrs r3,r3,#31
 1338 0072 D31A     	 subs r3,r2,r3
 1339 0074 9AB2     	 uxth r2,r3
 1340 0076 594B     	 ldr r3,.L68+20
 1341 0078 1A80     	 strh r2,[r3]
 415:../Can_Devices/can_matrix_bms_29bit.c **** 	RegenerativeCurrentLimit = ((uint16_t)(((uint16_t)tempData[7] << 8) | (uint8_t)tempData[6]))/10;
 1342              	 .loc 2 415 0
 1343 007a FB68     	 ldr r3,[r7,#12]
 1344 007c 0733     	 adds r3,r3,#7
 1345 007e 1B78     	 ldrb r3,[r3]
 1346 0080 5BB2     	 sxtb r3,r3
 1347 0082 9BB2     	 uxth r3,r3
 1348 0084 1B02     	 lsls r3,r3,#8
 1349 0086 9AB2     	 uxth r2,r3
 1350 0088 FB68     	 ldr r3,[r7,#12]
 1351 008a 0633     	 adds r3,r3,#6
 1352 008c 1B78     	 ldrb r3,[r3]
 1353 008e DBB2     	 uxtb r3,r3
 1354 0090 9BB2     	 uxth r3,r3
 1355 0092 1343     	 orrs r3,r3,r2
 1356 0094 9BB2     	 uxth r3,r3
 1357 0096 9BB2     	 uxth r3,r3
 1358 0098 4D4A     	 ldr r2,.L68+8
 1359 009a A2FB0323 	 umull r2,r3,r2,r3
 1360 009e DB08     	 lsrs r3,r3,#3
 1361 00a0 9AB2     	 uxth r2,r3
 1362 00a2 4F4B     	 ldr r3,.L68+24
 1363 00a4 1A80     	 strh r2,[r3]
 416:../Can_Devices/can_matrix_bms_29bit.c **** //	int d =((uint16_t)((CAN_BMS_29bit[CAN_0X180EA7F3].CAN_Data[1] << 8) | CAN_BMS_29bit[CAN_0X180EA7
 417:../Can_Devices/can_matrix_bms_29bit.c **** 	PackCurrent =  ((int)(((int)tempData[1] << 8) | (int8_t)tempData[0]))/10;
 1364              	 .loc 2 417 0
 1365 00a6 FB68     	 ldr r3,[r7,#12]
 1366 00a8 0133     	 adds r3,r3,#1
 1367 00aa 1B78     	 ldrb r3,[r3]
 1368 00ac 5BB2     	 sxtb r3,r3
 1369 00ae 1A02     	 lsls r2,r3,#8
 1370 00b0 FB68     	 ldr r3,[r7,#12]
 1371 00b2 1B78     	 ldrb r3,[r3]
 1372 00b4 5BB2     	 sxtb r3,r3
 1373 00b6 1343     	 orrs r3,r3,r2
 1374 00b8 474A     	 ldr r2,.L68+16
 1375 00ba 82FB0312 	 smull r1,r2,r2,r3
 1376 00be 9210     	 asrs r2,r2,#2
 1377 00c0 DB17     	 asrs r3,r3,#31
 1378 00c2 D31A     	 subs r3,r2,r3
 1379 00c4 474A     	 ldr r2,.L68+28
 1380 00c6 1360     	 str r3,[r2]
 418:../Can_Devices/can_matrix_bms_29bit.c **** 
 419:../Can_Devices/can_matrix_bms_29bit.c **** 	static int c = 0;// hv_count = 0;
 420:../Can_Devices/can_matrix_bms_29bit.c **** 	if((PackCurrent > 1))
 1381              	 .loc 2 420 0
 1382 00c8 464B     	 ldr r3,.L68+28
 1383 00ca 1B68     	 ldr r3,[r3]
 1384 00cc 012B     	 cmp r3,#1
 1385 00ce 37DD     	 ble .L57
 421:../Can_Devices/can_matrix_bms_29bit.c **** 	{
 422:../Can_Devices/can_matrix_bms_29bit.c **** 		if(charge_count++ > 20)
 1386              	 .loc 2 422 0
 1387 00d0 454B     	 ldr r3,.L68+32
 1388 00d2 1B68     	 ldr r3,[r3]
 1389 00d4 5A1C     	 adds r2,r3,#1
 1390 00d6 4449     	 ldr r1,.L68+32
 1391 00d8 0A60     	 str r2,[r1]
 1392 00da 142B     	 cmp r3,#20
 1393 00dc 05D9     	 bls .L58
 423:../Can_Devices/can_matrix_bms_29bit.c **** 		{
 424:../Can_Devices/can_matrix_bms_29bit.c **** 			charging_started = 1;
 1394              	 .loc 2 424 0
 1395 00de 434B     	 ldr r3,.L68+36
 1396 00e0 0122     	 movs r2,#1
 1397 00e2 1A70     	 strb r2,[r3]
 425:../Can_Devices/can_matrix_bms_29bit.c **** 			charge_count = 0;
 1398              	 .loc 2 425 0
 1399 00e4 404B     	 ldr r3,.L68+32
 1400 00e6 0022     	 movs r2,#0
 1401 00e8 1A60     	 str r2,[r3]
 1402              	.L58:
 426:../Can_Devices/can_matrix_bms_29bit.c **** 		}
 427:../Can_Devices/can_matrix_bms_29bit.c **** 
 428:../Can_Devices/can_matrix_bms_29bit.c **** 		if(Regenration_flag || RPM)
 1403              	 .loc 2 428 0
 1404 00ea 414B     	 ldr r3,.L68+40
 1405 00ec 1B78     	 ldrb r3,[r3]
 1406 00ee 002B     	 cmp r3,#0
 1407 00f0 03D1     	 bne .L59
 1408              	 .loc 2 428 0 is_stmt 0 discriminator 1
 1409 00f2 404B     	 ldr r3,.L68+44
 1410 00f4 1B88     	 ldrh r3,[r3]
 1411 00f6 002B     	 cmp r3,#0
 1412 00f8 1ED0     	 beq .L60
 1413              	.L59:
 429:../Can_Devices/can_matrix_bms_29bit.c **** 		{
 430:../Can_Devices/can_matrix_bms_29bit.c **** 
 431:../Can_Devices/can_matrix_bms_29bit.c **** 			//HvBatteryPower = 10 * 58;PackVoltage;
 432:../Can_Devices/can_matrix_bms_29bit.c **** 			charge_count = charging_started = 0;
 1414              	 .loc 2 432 0 is_stmt 1
 1415 00fa 3C4B     	 ldr r3,.L68+36
 1416 00fc 0022     	 movs r2,#0
 1417 00fe 1A70     	 strb r2,[r3]
 1418 0100 394B     	 ldr r3,.L68+32
 1419 0102 0022     	 movs r2,#0
 1420 0104 1A60     	 str r2,[r3]
 433:../Can_Devices/can_matrix_bms_29bit.c **** 			HvBatteryPower = PackCurrent;
 1421              	 .loc 2 433 0
 1422 0106 374B     	 ldr r3,.L68+28
 1423 0108 1B68     	 ldr r3,[r3]
 1424 010a 3B4A     	 ldr r2,.L68+48
 1425 010c 1360     	 str r3,[r2]
 434:../Can_Devices/can_matrix_bms_29bit.c **** 			hv_count = 1;
 1426              	 .loc 2 434 0
 1427 010e 3B4B     	 ldr r3,.L68+52
 1428 0110 0122     	 movs r2,#1
 1429 0112 1A80     	 strh r2,[r3]
 435:../Can_Devices/can_matrix_bms_29bit.c **** 			if(PackCurrent > c)
 1430              	 .loc 2 435 0
 1431 0114 334B     	 ldr r3,.L68+28
 1432 0116 1A68     	 ldr r2,[r3]
 1433 0118 394B     	 ldr r3,.L68+56
 1434 011a 1B68     	 ldr r3,[r3]
 1435 011c 9A42     	 cmp r2,r3
 1436 011e 0BDD     	 ble .L60
 436:../Can_Devices/can_matrix_bms_29bit.c **** 				{
 437:../Can_Devices/can_matrix_bms_29bit.c **** 				if((hv_count++ < 2))
 1437              	 .loc 2 437 0
 1438 0120 364B     	 ldr r3,.L68+52
 1439 0122 1B88     	 ldrh r3,[r3]
 1440 0124 5A1C     	 adds r2,r3,#1
 1441 0126 91B2     	 uxth r1,r2
 1442 0128 344A     	 ldr r2,.L68+52
 1443 012a 1180     	 strh r1,[r2]
 1444 012c 012B     	 cmp r3,#1
 1445 012e 03D8     	 bhi .L60
 438:../Can_Devices/can_matrix_bms_29bit.c **** 					c = PackCurrent;
 1446              	 .loc 2 438 0
 1447 0130 2C4B     	 ldr r3,.L68+28
 1448 0132 1B68     	 ldr r3,[r3]
 1449 0134 324A     	 ldr r2,.L68+56
 1450 0136 1360     	 str r3,[r2]
 1451              	.L60:
 439:../Can_Devices/can_matrix_bms_29bit.c **** 				}
 440:../Can_Devices/can_matrix_bms_29bit.c **** 				else if(PackCurrent < HvBatteryPower)
 441:../Can_Devices/can_matrix_bms_29bit.c **** 				{
 442:../Can_Devices/can_matrix_bms_29bit.c **** 					//HvBatteryPower = c * 58;PackVoltage;
 443:../Can_Devices/can_matrix_bms_29bit.c **** 				}
 444:../Can_Devices/can_matrix_bms_29bit.c **** 		}
 445:../Can_Devices/can_matrix_bms_29bit.c **** 		c4 = 0;
 1452              	 .loc 2 445 0
 1453 0138 324B     	 ldr r3,.L68+60
 1454 013a 0022     	 movs r2,#0
 1455 013c 1A60     	 str r2,[r3]
 1456 013e 10E0     	 b .L63
 1457              	.L57:
 446:../Can_Devices/can_matrix_bms_29bit.c **** 
 447:../Can_Devices/can_matrix_bms_29bit.c **** 		//charge_count++;
 448:../Can_Devices/can_matrix_bms_29bit.c **** 	}
 449:../Can_Devices/can_matrix_bms_29bit.c **** 	else if((PackCurrent <= 0))
 1458              	 .loc 2 449 0
 1459 0140 284B     	 ldr r3,.L68+28
 1460 0142 1B68     	 ldr r3,[r3]
 1461 0144 002B     	 cmp r3,#0
 1462 0146 0CDC     	 bgt .L63
 450:../Can_Devices/can_matrix_bms_29bit.c **** 	{
 451:../Can_Devices/can_matrix_bms_29bit.c **** 		charge_count = charging_started = 0;
 1463              	 .loc 2 451 0
 1464 0148 284B     	 ldr r3,.L68+36
 1465 014a 0022     	 movs r2,#0
 1466 014c 1A70     	 strb r2,[r3]
 1467 014e 264B     	 ldr r3,.L68+32
 1468 0150 0022     	 movs r2,#0
 1469 0152 1A60     	 str r2,[r3]
 452:../Can_Devices/can_matrix_bms_29bit.c **** 		HvBatteryPower = c = 0;
 1470              	 .loc 2 452 0
 1471 0154 2A4B     	 ldr r3,.L68+56
 1472 0156 0022     	 movs r2,#0
 1473 0158 1A60     	 str r2,[r3]
 1474 015a 294B     	 ldr r3,.L68+56
 1475 015c 1B68     	 ldr r3,[r3]
 1476 015e 264A     	 ldr r2,.L68+48
 1477 0160 1360     	 str r3,[r2]
 1478              	.L63:
 453:../Can_Devices/can_matrix_bms_29bit.c **** 	}
 454:../Can_Devices/can_matrix_bms_29bit.c **** 
 455:../Can_Devices/can_matrix_bms_29bit.c **** if( (hv_count == 1) )
 1479              	 .loc 2 455 0
 1480 0162 264B     	 ldr r3,.L68+52
 1481 0164 1B88     	 ldrh r3,[r3]
 1482 0166 012B     	 cmp r3,#1
 1483 0168 0DD1     	 bne .L64
 456:../Can_Devices/can_matrix_bms_29bit.c **** {
 457:../Can_Devices/can_matrix_bms_29bit.c **** 	HvBatteryPower = HvBatteryPower * 58;PackVoltage;
 1484              	 .loc 2 457 0
 1485 016a 234B     	 ldr r3,.L68+48
 1486 016c 1B68     	 ldr r3,[r3]
 1487 016e 3A22     	 movs r2,#58
 1488 0170 02FB03F3 	 mul r3,r2,r3
 1489 0174 204A     	 ldr r2,.L68+48
 1490 0176 1360     	 str r3,[r2]
 458:../Can_Devices/can_matrix_bms_29bit.c **** 	hv_count++;
 1491              	 .loc 2 458 0
 1492 0178 204B     	 ldr r3,.L68+52
 1493 017a 1B88     	 ldrh r3,[r3]
 1494 017c 0133     	 adds r3,r3,#1
 1495 017e 9AB2     	 uxth r2,r3
 1496 0180 1E4B     	 ldr r3,.L68+52
 1497 0182 1A80     	 strh r2,[r3]
 1498 0184 06E0     	 b .L65
 1499              	.L64:
 459:../Can_Devices/can_matrix_bms_29bit.c **** 
 460:../Can_Devices/can_matrix_bms_29bit.c **** }
 461:../Can_Devices/can_matrix_bms_29bit.c **** else if(hv_count > 10)
 1500              	 .loc 2 461 0
 1501 0186 1D4B     	 ldr r3,.L68+52
 1502 0188 1B88     	 ldrh r3,[r3]
 1503 018a 0A2B     	 cmp r3,#10
 1504 018c 02D9     	 bls .L65
 462:../Can_Devices/can_matrix_bms_29bit.c **** 	hv_count = 0;
 1505              	 .loc 2 462 0
 1506 018e 1B4B     	 ldr r3,.L68+52
 1507 0190 0022     	 movs r2,#0
 1508 0192 1A80     	 strh r2,[r3]
 1509              	.L65:
 463:../Can_Devices/can_matrix_bms_29bit.c **** 
 464:../Can_Devices/can_matrix_bms_29bit.c **** 	//OBDII_CAN[can_0x01].CAN_Data[2] = tempData[1];
 465:../Can_Devices/can_matrix_bms_29bit.c **** 	//OBDII_CAN[can_0x01].CAN_Data[3] = tempData[0];
 466:../Can_Devices/can_matrix_bms_29bit.c **** if(PackCurrent < c4)
 1510              	 .loc 2 466 0
 1511 0194 134B     	 ldr r3,.L68+28
 1512 0196 1B68     	 ldr r3,[r3]
 1513 0198 1A46     	 mov r2,r3
 1514 019a 1A4B     	 ldr r3,.L68+60
 1515 019c 1B68     	 ldr r3,[r3]
 1516 019e 9A42     	 cmp r2,r3
 1517 01a0 07D2     	 bcs .L66
 1518              	.LBB2:
 467:../Can_Devices/can_matrix_bms_29bit.c **** {
 468:../Can_Devices/can_matrix_bms_29bit.c **** 	int a;
 469:../Can_Devices/can_matrix_bms_29bit.c **** 	a++;
 1519              	 .loc 2 469 0
 1520 01a2 BB68     	 ldr r3,[r7,#8]
 1521 01a4 0133     	 adds r3,r3,#1
 1522 01a6 BB60     	 str r3,[r7,#8]
 470:../Can_Devices/can_matrix_bms_29bit.c **** 	c4 = PackCurrent;
 1523              	 .loc 2 470 0
 1524 01a8 0E4B     	 ldr r3,.L68+28
 1525 01aa 1B68     	 ldr r3,[r3]
 1526 01ac 1A46     	 mov r2,r3
 1527 01ae 154B     	 ldr r3,.L68+60
 1528 01b0 1A60     	 str r2,[r3]
 1529              	.L66:
 1530              	.LBE2:
 471:../Can_Devices/can_matrix_bms_29bit.c **** }
 472:../Can_Devices/can_matrix_bms_29bit.c **** if(PackCurrent < -10)
 1531              	 .loc 2 472 0
 1532 01b2 0C4B     	 ldr r3,.L68+28
 1533 01b4 1B68     	 ldr r3,[r3]
 1534 01b6 13F10A0F 	 cmn r3,#10
 1535 01ba 02DA     	 bge .L56
 1536              	.LBB3:
 473:../Can_Devices/can_matrix_bms_29bit.c **** {
 474:../Can_Devices/can_matrix_bms_29bit.c **** 	int a;
 475:../Can_Devices/can_matrix_bms_29bit.c **** 	a++;
 1537              	 .loc 2 475 0
 1538 01bc 7B68     	 ldr r3,[r7,#4]
 1539 01be 0133     	 adds r3,r3,#1
 1540 01c0 7B60     	 str r3,[r7,#4]
 1541              	.L56:
 1542              	.LBE3:
 476:../Can_Devices/can_matrix_bms_29bit.c **** }
 477:../Can_Devices/can_matrix_bms_29bit.c **** }
 1543              	 .loc 2 477 0
 1544 01c2 1837     	 adds r7,r7,#24
 1545              	.LCFI64:
 1546              	 .cfi_def_cfa_offset 8
 1547 01c4 BD46     	 mov sp,r7
 1548              	.LCFI65:
 1549              	 .cfi_def_cfa_register 13
 1550              	 
 1551 01c6 80BD     	 pop {r7,pc}
 1552              	.L69:
 1553              	 .align 2
 1554              	.L68:
 1555 01c8 00000000 	 .word CAN_NODE_0
 1556 01cc 04000000 	 .word CAN_BMS_29bit+4
 1557 01d0 CDCCCCCC 	 .word -858993459
 1558 01d4 00000000 	 .word ChargeCurrentLimit
 1559 01d8 67666666 	 .word 1717986919
 1560 01dc 00000000 	 .word DischargeCurrentLimit
 1561 01e0 00000000 	 .word RegenerativeCurrentLimit
 1562 01e4 00000000 	 .word PackCurrent
 1563 01e8 00000000 	 .word charge_count.13720
 1564 01ec 00000000 	 .word charging_started
 1565 01f0 00000000 	 .word Regenration_flag
 1566 01f4 00000000 	 .word RPM
 1567 01f8 00000000 	 .word HvBatteryPower
 1568 01fc 00000000 	 .word hv_count
 1569 0200 00000000 	 .word c.13723
 1570 0204 00000000 	 .word c4.13721
 1571              	 .cfi_endproc
 1572              	.LFE616:
 1574              	 .section .text.process_Rx_CAN_0X180FA7F3,"ax",%progbits
 1575              	 .align 2
 1576              	 .global process_Rx_CAN_0X180FA7F3
 1577              	 .thumb
 1578              	 .thumb_func
 1580              	process_Rx_CAN_0X180FA7F3:
 1581              	.LFB617:
 478:../Can_Devices/can_matrix_bms_29bit.c **** 
 479:../Can_Devices/can_matrix_bms_29bit.c **** void process_Rx_CAN_0X180FA7F3(void)
 480:../Can_Devices/can_matrix_bms_29bit.c **** {
 1582              	 .loc 2 480 0
 1583              	 .cfi_startproc
 1584              	 
 1585              	 
 1586 0000 80B5     	 push {r7,lr}
 1587              	.LCFI66:
 1588              	 .cfi_def_cfa_offset 8
 1589              	 .cfi_offset 7,-8
 1590              	 .cfi_offset 14,-4
 1591 0002 84B0     	 sub sp,sp,#16
 1592              	.LCFI67:
 1593              	 .cfi_def_cfa_offset 24
 1594 0004 00AF     	 add r7,sp,#0
 1595              	.LCFI68:
 1596              	 .cfi_def_cfa_register 7
 481:../Can_Devices/can_matrix_bms_29bit.c **** 	int PackCurent = 0;
 1597              	 .loc 2 481 0
 1598 0006 0023     	 movs r3,#0
 1599 0008 FB60     	 str r3,[r7,#12]
 482:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t *tempData, mo_index;
 483:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1600              	 .loc 2 483 0
 1601 000a 204B     	 ldr r3,.L71
 1602 000c BB60     	 str r3,[r7,#8]
 484:../Can_Devices/can_matrix_bms_29bit.c **** 
 485:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 21;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 1603              	 .loc 2 485 0
 1604 000e 1523     	 movs r3,#21
 1605 0010 FB71     	 strb r3,[r7,#7]
 486:../Can_Devices/can_matrix_bms_29bit.c **** 
 487:../Can_Devices/can_matrix_bms_29bit.c **** 	tempData = &CAN_BMS_29bit[CAN_0X180FA7F3].CAN_Data[0];
 1606              	 .loc 2 487 0
 1607 0012 1F4B     	 ldr r3,.L71+4
 1608 0014 3B60     	 str r3,[r7]
 488:../Can_Devices/can_matrix_bms_29bit.c **** 
 489:../Can_Devices/can_matrix_bms_29bit.c **** 	//read data to external buffer
 490:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1609              	 .loc 2 490 0
 1610 0016 FB79     	 ldrb r3,[r7,#7]
 1611 0018 BA68     	 ldr r2,[r7,#8]
 1612 001a 0233     	 adds r3,r3,#2
 1613 001c 9B00     	 lsls r3,r3,#2
 1614 001e 1344     	 add r3,r3,r2
 1615 0020 5B68     	 ldr r3,[r3,#4]
 1616 0022 1846     	 mov r0,r3
 1617 0024 3968     	 ldr r1,[r7]
 1618 0026 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 491:../Can_Devices/can_matrix_bms_29bit.c **** 
 492:../Can_Devices/can_matrix_bms_29bit.c **** 	Bms_SOC = ((uint16_t)tempData[1] << 8) | tempData[0];
 1619              	 .loc 2 492 0
 1620 002a 3B68     	 ldr r3,[r7]
 1621 002c 0133     	 adds r3,r3,#1
 1622 002e 1B78     	 ldrb r3,[r3]
 1623 0030 1B02     	 lsls r3,r3,#8
 1624 0032 9AB2     	 uxth r2,r3
 1625 0034 3B68     	 ldr r3,[r7]
 1626 0036 1B78     	 ldrb r3,[r3]
 1627 0038 9BB2     	 uxth r3,r3
 1628 003a 1343     	 orrs r3,r3,r2
 1629 003c 9BB2     	 uxth r3,r3
 1630 003e 9AB2     	 uxth r2,r3
 1631 0040 144B     	 ldr r3,.L71+8
 1632 0042 1A80     	 strh r2,[r3]
 493:../Can_Devices/can_matrix_bms_29bit.c **** 
 494:../Can_Devices/can_matrix_bms_29bit.c **** 	Bms_SOH = (((uint16_t)tempData[3] << 8) | tempData[2]) / 10;
 1633              	 .loc 2 494 0
 1634 0044 3B68     	 ldr r3,[r7]
 1635 0046 0333     	 adds r3,r3,#3
 1636 0048 1B78     	 ldrb r3,[r3]
 1637 004a 1B02     	 lsls r3,r3,#8
 1638 004c 3A68     	 ldr r2,[r7]
 1639 004e 0232     	 adds r2,r2,#2
 1640 0050 1278     	 ldrb r2,[r2]
 1641 0052 1343     	 orrs r3,r3,r2
 1642 0054 104A     	 ldr r2,.L71+12
 1643 0056 82FB0312 	 smull r1,r2,r2,r3
 1644 005a 9210     	 asrs r2,r2,#2
 1645 005c DB17     	 asrs r3,r3,#31
 1646 005e D31A     	 subs r3,r2,r3
 1647 0060 9AB2     	 uxth r2,r3
 1648 0062 0E4B     	 ldr r3,.L71+16
 1649 0064 1A80     	 strh r2,[r3]
 495:../Can_Devices/can_matrix_bms_29bit.c **** 
 496:../Can_Devices/can_matrix_bms_29bit.c **** 	PackVoltage = (((uint16_t)tempData[7] << 8) | tempData[6])/10;
 1650              	 .loc 2 496 0
 1651 0066 3B68     	 ldr r3,[r7]
 1652 0068 0733     	 adds r3,r3,#7
 1653 006a 1B78     	 ldrb r3,[r3]
 1654 006c 1B02     	 lsls r3,r3,#8
 1655 006e 3A68     	 ldr r2,[r7]
 1656 0070 0632     	 adds r2,r2,#6
 1657 0072 1278     	 ldrb r2,[r2]
 1658 0074 1343     	 orrs r3,r3,r2
 1659 0076 084A     	 ldr r2,.L71+12
 1660 0078 82FB0312 	 smull r1,r2,r2,r3
 1661 007c 9210     	 asrs r2,r2,#2
 1662 007e DB17     	 asrs r3,r3,#31
 1663 0080 D31A     	 subs r3,r2,r3
 1664 0082 074A     	 ldr r2,.L71+20
 1665 0084 1360     	 str r3,[r2]
 497:../Can_Devices/can_matrix_bms_29bit.c **** 
 498:../Can_Devices/can_matrix_bms_29bit.c **** }
 1666              	 .loc 2 498 0
 1667 0086 1037     	 adds r7,r7,#16
 1668              	.LCFI69:
 1669              	 .cfi_def_cfa_offset 8
 1670 0088 BD46     	 mov sp,r7
 1671              	.LCFI70:
 1672              	 .cfi_def_cfa_register 13
 1673              	 
 1674 008a 80BD     	 pop {r7,pc}
 1675              	.L72:
 1676              	 .align 2
 1677              	.L71:
 1678 008c 00000000 	 .word CAN_NODE_0
 1679 0090 10000000 	 .word CAN_BMS_29bit+16
 1680 0094 00000000 	 .word Bms_SOC
 1681 0098 67666666 	 .word 1717986919
 1682 009c 00000000 	 .word Bms_SOH
 1683 00a0 00000000 	 .word PackVoltage
 1684              	 .cfi_endproc
 1685              	.LFE617:
 1687              	 .section .text.process_Rx_CAN_0X1813A7F3,"ax",%progbits
 1688              	 .align 2
 1689              	 .global process_Rx_CAN_0X1813A7F3
 1690              	 .thumb
 1691              	 .thumb_func
 1693              	process_Rx_CAN_0X1813A7F3:
 1694              	.LFB618:
 499:../Can_Devices/can_matrix_bms_29bit.c **** 
 500:../Can_Devices/can_matrix_bms_29bit.c **** void process_Rx_CAN_0X1813A7F3(void)
 501:../Can_Devices/can_matrix_bms_29bit.c **** {
 1695              	 .loc 2 501 0
 1696              	 .cfi_startproc
 1697              	 
 1698              	 
 1699 0000 80B5     	 push {r7,lr}
 1700              	.LCFI71:
 1701              	 .cfi_def_cfa_offset 8
 1702              	 .cfi_offset 7,-8
 1703              	 .cfi_offset 14,-4
 1704 0002 84B0     	 sub sp,sp,#16
 1705              	.LCFI72:
 1706              	 .cfi_def_cfa_offset 24
 1707 0004 00AF     	 add r7,sp,#0
 1708              	.LCFI73:
 1709              	 .cfi_def_cfa_register 7
 502:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t *tempData, mo_index;
 503:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1710              	 .loc 2 503 0
 1711 0006 094B     	 ldr r3,.L74
 1712 0008 FB60     	 str r3,[r7,#12]
 504:../Can_Devices/can_matrix_bms_29bit.c **** 
 505:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 23;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 1713              	 .loc 2 505 0
 1714 000a 1723     	 movs r3,#23
 1715 000c FB72     	 strb r3,[r7,#11]
 506:../Can_Devices/can_matrix_bms_29bit.c **** 
 507:../Can_Devices/can_matrix_bms_29bit.c **** 	tempData = &CAN_BMS_29bit[CAN_0X1813A7F3].CAN_Data[0];
 1716              	 .loc 2 507 0
 1717 000e 084B     	 ldr r3,.L74+4
 1718 0010 7B60     	 str r3,[r7,#4]
 508:../Can_Devices/can_matrix_bms_29bit.c **** 
 509:../Can_Devices/can_matrix_bms_29bit.c **** 	//read data to external buffer
 510:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1719              	 .loc 2 510 0
 1720 0012 FB7A     	 ldrb r3,[r7,#11]
 1721 0014 FA68     	 ldr r2,[r7,#12]
 1722 0016 0233     	 adds r3,r3,#2
 1723 0018 9B00     	 lsls r3,r3,#2
 1724 001a 1344     	 add r3,r3,r2
 1725 001c 5B68     	 ldr r3,[r3,#4]
 1726 001e 1846     	 mov r0,r3
 1727 0020 7968     	 ldr r1,[r7,#4]
 1728 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 511:../Can_Devices/can_matrix_bms_29bit.c **** 
 512:../Can_Devices/can_matrix_bms_29bit.c **** }
 1729              	 .loc 2 512 0
 1730 0026 1037     	 adds r7,r7,#16
 1731              	.LCFI74:
 1732              	 .cfi_def_cfa_offset 8
 1733 0028 BD46     	 mov sp,r7
 1734              	.LCFI75:
 1735              	 .cfi_def_cfa_register 13
 1736              	 
 1737 002a 80BD     	 pop {r7,pc}
 1738              	.L75:
 1739              	 .align 2
 1740              	.L74:
 1741 002c 00000000 	 .word CAN_NODE_0
 1742 0030 34000000 	 .word CAN_BMS_29bit+52
 1743              	 .cfi_endproc
 1744              	.LFE618:
 1746              	 .section .text.process_Rx_CAN_0X1814A7F3,"ax",%progbits
 1747              	 .align 2
 1748              	 .global process_Rx_CAN_0X1814A7F3
 1749              	 .thumb
 1750              	 .thumb_func
 1752              	process_Rx_CAN_0X1814A7F3:
 1753              	.LFB619:
 513:../Can_Devices/can_matrix_bms_29bit.c **** 
 514:../Can_Devices/can_matrix_bms_29bit.c **** void process_Rx_CAN_0X1814A7F3(void)
 515:../Can_Devices/can_matrix_bms_29bit.c **** {
 1754              	 .loc 2 515 0
 1755              	 .cfi_startproc
 1756              	 
 1757              	 
 1758 0000 80B5     	 push {r7,lr}
 1759              	.LCFI76:
 1760              	 .cfi_def_cfa_offset 8
 1761              	 .cfi_offset 7,-8
 1762              	 .cfi_offset 14,-4
 1763 0002 84B0     	 sub sp,sp,#16
 1764              	.LCFI77:
 1765              	 .cfi_def_cfa_offset 24
 1766 0004 00AF     	 add r7,sp,#0
 1767              	.LCFI78:
 1768              	 .cfi_def_cfa_register 7
 516:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t *tempData, mo_index;
 517:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1769              	 .loc 2 517 0
 1770 0006 094B     	 ldr r3,.L77
 1771 0008 FB60     	 str r3,[r7,#12]
 518:../Can_Devices/can_matrix_bms_29bit.c **** 
 519:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 23;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 1772              	 .loc 2 519 0
 1773 000a 1723     	 movs r3,#23
 1774 000c FB72     	 strb r3,[r7,#11]
 520:../Can_Devices/can_matrix_bms_29bit.c **** 
 521:../Can_Devices/can_matrix_bms_29bit.c **** 	tempData = &CAN_BMS_29bit[CAN_0X1814A7F3].CAN_Data[0];
 1775              	 .loc 2 521 0
 1776 000e 084B     	 ldr r3,.L77+4
 1777 0010 7B60     	 str r3,[r7,#4]
 522:../Can_Devices/can_matrix_bms_29bit.c **** 
 523:../Can_Devices/can_matrix_bms_29bit.c **** 	//read data to external buffer
 524:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1778              	 .loc 2 524 0
 1779 0012 FB7A     	 ldrb r3,[r7,#11]
 1780 0014 FA68     	 ldr r2,[r7,#12]
 1781 0016 0233     	 adds r3,r3,#2
 1782 0018 9B00     	 lsls r3,r3,#2
 1783 001a 1344     	 add r3,r3,r2
 1784 001c 5B68     	 ldr r3,[r3,#4]
 1785 001e 1846     	 mov r0,r3
 1786 0020 7968     	 ldr r1,[r7,#4]
 1787 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 525:../Can_Devices/can_matrix_bms_29bit.c **** 
 526:../Can_Devices/can_matrix_bms_29bit.c **** }
 1788              	 .loc 2 526 0
 1789 0026 1037     	 adds r7,r7,#16
 1790              	.LCFI79:
 1791              	 .cfi_def_cfa_offset 8
 1792 0028 BD46     	 mov sp,r7
 1793              	.LCFI80:
 1794              	 .cfi_def_cfa_register 13
 1795              	 
 1796 002a 80BD     	 pop {r7,pc}
 1797              	.L78:
 1798              	 .align 2
 1799              	.L77:
 1800 002c 00000000 	 .word CAN_NODE_0
 1801 0030 40000000 	 .word CAN_BMS_29bit+64
 1802              	 .cfi_endproc
 1803              	.LFE619:
 1805              	 .section .text.process_Rx_CAN_0X1815A7F3,"ax",%progbits
 1806              	 .align 2
 1807              	 .global process_Rx_CAN_0X1815A7F3
 1808              	 .thumb
 1809              	 .thumb_func
 1811              	process_Rx_CAN_0X1815A7F3:
 1812              	.LFB620:
 527:../Can_Devices/can_matrix_bms_29bit.c **** 
 528:../Can_Devices/can_matrix_bms_29bit.c **** void process_Rx_CAN_0X1815A7F3(void)
 529:../Can_Devices/can_matrix_bms_29bit.c **** {
 1813              	 .loc 2 529 0
 1814              	 .cfi_startproc
 1815              	 
 1816              	 
 1817 0000 80B5     	 push {r7,lr}
 1818              	.LCFI81:
 1819              	 .cfi_def_cfa_offset 8
 1820              	 .cfi_offset 7,-8
 1821              	 .cfi_offset 14,-4
 1822 0002 84B0     	 sub sp,sp,#16
 1823              	.LCFI82:
 1824              	 .cfi_def_cfa_offset 24
 1825 0004 00AF     	 add r7,sp,#0
 1826              	.LCFI83:
 1827              	 .cfi_def_cfa_register 7
 530:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t *tempData, mo_index;
 531:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1828              	 .loc 2 531 0
 1829 0006 094B     	 ldr r3,.L80
 1830 0008 FB60     	 str r3,[r7,#12]
 532:../Can_Devices/can_matrix_bms_29bit.c **** 
 533:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 23;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 1831              	 .loc 2 533 0
 1832 000a 1723     	 movs r3,#23
 1833 000c FB72     	 strb r3,[r7,#11]
 534:../Can_Devices/can_matrix_bms_29bit.c **** 
 535:../Can_Devices/can_matrix_bms_29bit.c **** 	tempData = &CAN_BMS_29bit[CAN_0X1815A7F3].CAN_Data[0];
 1834              	 .loc 2 535 0
 1835 000e 084B     	 ldr r3,.L80+4
 1836 0010 7B60     	 str r3,[r7,#4]
 536:../Can_Devices/can_matrix_bms_29bit.c **** 
 537:../Can_Devices/can_matrix_bms_29bit.c **** 	//read data to external buffer
 538:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1837              	 .loc 2 538 0
 1838 0012 FB7A     	 ldrb r3,[r7,#11]
 1839 0014 FA68     	 ldr r2,[r7,#12]
 1840 0016 0233     	 adds r3,r3,#2
 1841 0018 9B00     	 lsls r3,r3,#2
 1842 001a 1344     	 add r3,r3,r2
 1843 001c 5B68     	 ldr r3,[r3,#4]
 1844 001e 1846     	 mov r0,r3
 1845 0020 7968     	 ldr r1,[r7,#4]
 1846 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 539:../Can_Devices/can_matrix_bms_29bit.c **** 
 540:../Can_Devices/can_matrix_bms_29bit.c **** }
 1847              	 .loc 2 540 0
 1848 0026 1037     	 adds r7,r7,#16
 1849              	.LCFI84:
 1850              	 .cfi_def_cfa_offset 8
 1851 0028 BD46     	 mov sp,r7
 1852              	.LCFI85:
 1853              	 .cfi_def_cfa_register 13
 1854              	 
 1855 002a 80BD     	 pop {r7,pc}
 1856              	.L81:
 1857              	 .align 2
 1858              	.L80:
 1859 002c 00000000 	 .word CAN_NODE_0
 1860 0030 4C000000 	 .word CAN_BMS_29bit+76
 1861              	 .cfi_endproc
 1862              	.LFE620:
 1864              	 .section .text.process_Rx_CAN_0X1808A7F3,"ax",%progbits
 1865              	 .align 2
 1866              	 .global process_Rx_CAN_0X1808A7F3
 1867              	 .thumb
 1868              	 .thumb_func
 1870              	process_Rx_CAN_0X1808A7F3:
 1871              	.LFB621:
 541:../Can_Devices/can_matrix_bms_29bit.c **** 
 542:../Can_Devices/can_matrix_bms_29bit.c **** 
 543:../Can_Devices/can_matrix_bms_29bit.c **** void process_Rx_CAN_0X1808A7F3(void)
 544:../Can_Devices/can_matrix_bms_29bit.c **** {
 1872              	 .loc 2 544 0
 1873              	 .cfi_startproc
 1874              	 
 1875              	 
 1876 0000 80B5     	 push {r7,lr}
 1877              	.LCFI86:
 1878              	 .cfi_def_cfa_offset 8
 1879              	 .cfi_offset 7,-8
 1880              	 .cfi_offset 14,-4
 1881 0002 84B0     	 sub sp,sp,#16
 1882              	.LCFI87:
 1883              	 .cfi_def_cfa_offset 24
 1884 0004 00AF     	 add r7,sp,#0
 1885              	.LCFI88:
 1886              	 .cfi_def_cfa_register 7
 545:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t *tempData, mo_index;
 546:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1887              	 .loc 2 546 0
 1888 0006 094B     	 ldr r3,.L83
 1889 0008 FB60     	 str r3,[r7,#12]
 547:../Can_Devices/can_matrix_bms_29bit.c **** 
 548:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 12;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 1890              	 .loc 2 548 0
 1891 000a 0C23     	 movs r3,#12
 1892 000c FB72     	 strb r3,[r7,#11]
 549:../Can_Devices/can_matrix_bms_29bit.c **** 
 550:../Can_Devices/can_matrix_bms_29bit.c **** 	tempData = &CAN_BMS_29bit[CAN_0X1808A7F3].CAN_Data[0];
 1893              	 .loc 2 550 0
 1894 000e 084B     	 ldr r3,.L83+4
 1895 0010 7B60     	 str r3,[r7,#4]
 551:../Can_Devices/can_matrix_bms_29bit.c **** 
 552:../Can_Devices/can_matrix_bms_29bit.c **** 	//read data to external buffer
 553:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1896              	 .loc 2 553 0
 1897 0012 FB7A     	 ldrb r3,[r7,#11]
 1898 0014 FA68     	 ldr r2,[r7,#12]
 1899 0016 0233     	 adds r3,r3,#2
 1900 0018 9B00     	 lsls r3,r3,#2
 1901 001a 1344     	 add r3,r3,r2
 1902 001c 5B68     	 ldr r3,[r3,#4]
 1903 001e 1846     	 mov r0,r3
 1904 0020 7968     	 ldr r1,[r7,#4]
 1905 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 554:../Can_Devices/can_matrix_bms_29bit.c **** 
 555:../Can_Devices/can_matrix_bms_29bit.c **** }
 1906              	 .loc 2 555 0
 1907 0026 1037     	 adds r7,r7,#16
 1908              	.LCFI89:
 1909              	 .cfi_def_cfa_offset 8
 1910 0028 BD46     	 mov sp,r7
 1911              	.LCFI90:
 1912              	 .cfi_def_cfa_register 13
 1913              	 
 1914 002a 80BD     	 pop {r7,pc}
 1915              	.L84:
 1916              	 .align 2
 1917              	.L83:
 1918 002c 00000000 	 .word CAN_NODE_0
 1919 0030 64000000 	 .word CAN_BMS_29bit+100
 1920              	 .cfi_endproc
 1921              	.LFE621:
 1923              	 .section .text.process_Rx_CAN_0X180AA7F3,"ax",%progbits
 1924              	 .align 2
 1925              	 .global process_Rx_CAN_0X180AA7F3
 1926              	 .thumb
 1927              	 .thumb_func
 1929              	process_Rx_CAN_0X180AA7F3:
 1930              	.LFB622:
 556:../Can_Devices/can_matrix_bms_29bit.c **** 
 557:../Can_Devices/can_matrix_bms_29bit.c **** 
 558:../Can_Devices/can_matrix_bms_29bit.c **** void process_Rx_CAN_0X180AA7F3(void)
 559:../Can_Devices/can_matrix_bms_29bit.c **** {
 1931              	 .loc 2 559 0
 1932              	 .cfi_startproc
 1933              	 
 1934              	 
 1935 0000 80B5     	 push {r7,lr}
 1936              	.LCFI91:
 1937              	 .cfi_def_cfa_offset 8
 1938              	 .cfi_offset 7,-8
 1939              	 .cfi_offset 14,-4
 1940 0002 84B0     	 sub sp,sp,#16
 1941              	.LCFI92:
 1942              	 .cfi_def_cfa_offset 24
 1943 0004 00AF     	 add r7,sp,#0
 1944              	.LCFI93:
 1945              	 .cfi_def_cfa_register 7
 560:../Can_Devices/can_matrix_bms_29bit.c **** 	BMS_Avg_temp=0;
 1946              	 .loc 2 560 0
 1947 0006 234B     	 ldr r3,.L86
 1948 0008 0022     	 movs r2,#0
 1949 000a 1A60     	 str r2,[r3]
 561:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t *tempData, mo_index;
 562:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 1950              	 .loc 2 562 0
 1951 000c 224B     	 ldr r3,.L86+4
 1952 000e FB60     	 str r3,[r7,#12]
 563:../Can_Devices/can_matrix_bms_29bit.c **** 
 564:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 13;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 1953              	 .loc 2 564 0
 1954 0010 0D23     	 movs r3,#13
 1955 0012 FB72     	 strb r3,[r7,#11]
 565:../Can_Devices/can_matrix_bms_29bit.c **** 
 566:../Can_Devices/can_matrix_bms_29bit.c **** 	tempData = &CAN_BMS_29bit[CAN_0X180AA7F3].CAN_Data[0];
 1956              	 .loc 2 566 0
 1957 0014 214B     	 ldr r3,.L86+8
 1958 0016 7B60     	 str r3,[r7,#4]
 567:../Can_Devices/can_matrix_bms_29bit.c **** 
 568:../Can_Devices/can_matrix_bms_29bit.c **** 	//read data to external buffer
 569:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 1959              	 .loc 2 569 0
 1960 0018 FB7A     	 ldrb r3,[r7,#11]
 1961 001a FA68     	 ldr r2,[r7,#12]
 1962 001c 0233     	 adds r3,r3,#2
 1963 001e 9B00     	 lsls r3,r3,#2
 1964 0020 1344     	 add r3,r3,r2
 1965 0022 5B68     	 ldr r3,[r3,#4]
 1966 0024 1846     	 mov r0,r3
 1967 0026 7968     	 ldr r1,[r7,#4]
 1968 0028 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 570:../Can_Devices/can_matrix_bms_29bit.c **** 
 571:../Can_Devices/can_matrix_bms_29bit.c **** 	BMS_Avg_temp=((int16_t)tempData[1] << 8) | tempData[0] ;
 1969              	 .loc 2 571 0
 1970 002c 7B68     	 ldr r3,[r7,#4]
 1971 002e 0133     	 adds r3,r3,#1
 1972 0030 1B78     	 ldrb r3,[r3]
 1973 0032 1B02     	 lsls r3,r3,#8
 1974 0034 7A68     	 ldr r2,[r7,#4]
 1975 0036 1278     	 ldrb r2,[r2]
 1976 0038 1343     	 orrs r3,r3,r2
 1977 003a 164A     	 ldr r2,.L86
 1978 003c 1360     	 str r3,[r2]
 572:../Can_Devices/can_matrix_bms_29bit.c **** 	BMS_Avg_temp += ((int16_t)tempData[3] << 8) | tempData[2];
 1979              	 .loc 2 572 0
 1980 003e 7B68     	 ldr r3,[r7,#4]
 1981 0040 0333     	 adds r3,r3,#3
 1982 0042 1B78     	 ldrb r3,[r3]
 1983 0044 1B02     	 lsls r3,r3,#8
 1984 0046 7A68     	 ldr r2,[r7,#4]
 1985 0048 0232     	 adds r2,r2,#2
 1986 004a 1278     	 ldrb r2,[r2]
 1987 004c 1A43     	 orrs r2,r2,r3
 1988 004e 114B     	 ldr r3,.L86
 1989 0050 1B68     	 ldr r3,[r3]
 1990 0052 1344     	 add r3,r3,r2
 1991 0054 0F4A     	 ldr r2,.L86
 1992 0056 1360     	 str r3,[r2]
 573:../Can_Devices/can_matrix_bms_29bit.c **** 	BMS_Avg_temp += ((int16_t)tempData[5] << 8) | tempData[4];
 1993              	 .loc 2 573 0
 1994 0058 7B68     	 ldr r3,[r7,#4]
 1995 005a 0533     	 adds r3,r3,#5
 1996 005c 1B78     	 ldrb r3,[r3]
 1997 005e 1B02     	 lsls r3,r3,#8
 1998 0060 7A68     	 ldr r2,[r7,#4]
 1999 0062 0432     	 adds r2,r2,#4
 2000 0064 1278     	 ldrb r2,[r2]
 2001 0066 1A43     	 orrs r2,r2,r3
 2002 0068 0A4B     	 ldr r3,.L86
 2003 006a 1B68     	 ldr r3,[r3]
 2004 006c 1344     	 add r3,r3,r2
 2005 006e 094A     	 ldr r2,.L86
 2006 0070 1360     	 str r3,[r2]
 574:../Can_Devices/can_matrix_bms_29bit.c **** 	BMS_Avg_temp += ((int16_t)tempData[7] << 8) | tempData[6];
 2007              	 .loc 2 574 0
 2008 0072 7B68     	 ldr r3,[r7,#4]
 2009 0074 0733     	 adds r3,r3,#7
 2010 0076 1B78     	 ldrb r3,[r3]
 2011 0078 1B02     	 lsls r3,r3,#8
 2012 007a 7A68     	 ldr r2,[r7,#4]
 2013 007c 0632     	 adds r2,r2,#6
 2014 007e 1278     	 ldrb r2,[r2]
 2015 0080 1A43     	 orrs r2,r2,r3
 2016 0082 044B     	 ldr r3,.L86
 2017 0084 1B68     	 ldr r3,[r3]
 2018 0086 1344     	 add r3,r3,r2
 2019 0088 024A     	 ldr r2,.L86
 2020 008a 1360     	 str r3,[r2]
 575:../Can_Devices/can_matrix_bms_29bit.c **** 
 576:../Can_Devices/can_matrix_bms_29bit.c **** }
 2021              	 .loc 2 576 0
 2022 008c 1037     	 adds r7,r7,#16
 2023              	.LCFI94:
 2024              	 .cfi_def_cfa_offset 8
 2025 008e BD46     	 mov sp,r7
 2026              	.LCFI95:
 2027              	 .cfi_def_cfa_register 13
 2028              	 
 2029 0090 80BD     	 pop {r7,pc}
 2030              	.L87:
 2031 0092 00BF     	 .align 2
 2032              	.L86:
 2033 0094 00000000 	 .word BMS_Avg_temp
 2034 0098 00000000 	 .word CAN_NODE_0
 2035 009c 70000000 	 .word CAN_BMS_29bit+112
 2036              	 .cfi_endproc
 2037              	.LFE622:
 2039              	 .section .text.process_Rx_CAN_0X180BA7F3,"ax",%progbits
 2040              	 .align 2
 2041              	 .global process_Rx_CAN_0X180BA7F3
 2042              	 .thumb
 2043              	 .thumb_func
 2045              	process_Rx_CAN_0X180BA7F3:
 2046              	.LFB623:
 577:../Can_Devices/can_matrix_bms_29bit.c **** 
 578:../Can_Devices/can_matrix_bms_29bit.c **** 
 579:../Can_Devices/can_matrix_bms_29bit.c **** void process_Rx_CAN_0X180BA7F3(void)
 580:../Can_Devices/can_matrix_bms_29bit.c **** {
 2047              	 .loc 2 580 0
 2048              	 .cfi_startproc
 2049              	 
 2050              	 
 2051 0000 80B5     	 push {r7,lr}
 2052              	.LCFI96:
 2053              	 .cfi_def_cfa_offset 8
 2054              	 .cfi_offset 7,-8
 2055              	 .cfi_offset 14,-4
 2056 0002 84B0     	 sub sp,sp,#16
 2057              	.LCFI97:
 2058              	 .cfi_def_cfa_offset 24
 2059 0004 00AF     	 add r7,sp,#0
 2060              	.LCFI98:
 2061              	 .cfi_def_cfa_register 7
 581:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t *tempData, mo_index;
 582:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 2062              	 .loc 2 582 0
 2063 0006 274B     	 ldr r3,.L90
 2064 0008 FB60     	 str r3,[r7,#12]
 583:../Can_Devices/can_matrix_bms_29bit.c **** 
 584:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 14;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 2065              	 .loc 2 584 0
 2066 000a 0E23     	 movs r3,#14
 2067 000c FB72     	 strb r3,[r7,#11]
 585:../Can_Devices/can_matrix_bms_29bit.c **** 
 586:../Can_Devices/can_matrix_bms_29bit.c **** 	tempData = &CAN_BMS_29bit[CAN_0X180BA7F3].CAN_Data[0];
 2068              	 .loc 2 586 0
 2069 000e 264B     	 ldr r3,.L90+4
 2070 0010 7B60     	 str r3,[r7,#4]
 587:../Can_Devices/can_matrix_bms_29bit.c **** 
 588:../Can_Devices/can_matrix_bms_29bit.c **** 	//read data to external buffer
 589:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 2071              	 .loc 2 589 0
 2072 0012 FB7A     	 ldrb r3,[r7,#11]
 2073 0014 FA68     	 ldr r2,[r7,#12]
 2074 0016 0233     	 adds r3,r3,#2
 2075 0018 9B00     	 lsls r3,r3,#2
 2076 001a 1344     	 add r3,r3,r2
 2077 001c 5B68     	 ldr r3,[r3,#4]
 2078 001e 1846     	 mov r0,r3
 2079 0020 7968     	 ldr r1,[r7,#4]
 2080 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 590:../Can_Devices/can_matrix_bms_29bit.c **** 
 591:../Can_Devices/can_matrix_bms_29bit.c **** 	BMS_Avg_temp +=((int16_t)tempData[1] << 8) | tempData[0] ;
 2081              	 .loc 2 591 0
 2082 0026 7B68     	 ldr r3,[r7,#4]
 2083 0028 0133     	 adds r3,r3,#1
 2084 002a 1B78     	 ldrb r3,[r3]
 2085 002c 1B02     	 lsls r3,r3,#8
 2086 002e 7A68     	 ldr r2,[r7,#4]
 2087 0030 1278     	 ldrb r2,[r2]
 2088 0032 1A43     	 orrs r2,r2,r3
 2089 0034 1D4B     	 ldr r3,.L90+8
 2090 0036 1B68     	 ldr r3,[r3]
 2091 0038 1344     	 add r3,r3,r2
 2092 003a 1C4A     	 ldr r2,.L90+8
 2093 003c 1360     	 str r3,[r2]
 592:../Can_Devices/can_matrix_bms_29bit.c **** 	BMS_Avg_temp += ((int16_t)tempData[3] << 8) | tempData[2];
 2094              	 .loc 2 592 0
 2095 003e 7B68     	 ldr r3,[r7,#4]
 2096 0040 0333     	 adds r3,r3,#3
 2097 0042 1B78     	 ldrb r3,[r3]
 2098 0044 1B02     	 lsls r3,r3,#8
 2099 0046 7A68     	 ldr r2,[r7,#4]
 2100 0048 0232     	 adds r2,r2,#2
 2101 004a 1278     	 ldrb r2,[r2]
 2102 004c 1A43     	 orrs r2,r2,r3
 2103 004e 174B     	 ldr r3,.L90+8
 2104 0050 1B68     	 ldr r3,[r3]
 2105 0052 1344     	 add r3,r3,r2
 2106 0054 154A     	 ldr r2,.L90+8
 2107 0056 1360     	 str r3,[r2]
 593:../Can_Devices/can_matrix_bms_29bit.c **** 	BMS_Avg_temp += ((int16_t)tempData[5] << 8) | tempData[4];
 2108              	 .loc 2 593 0
 2109 0058 7B68     	 ldr r3,[r7,#4]
 2110 005a 0533     	 adds r3,r3,#5
 2111 005c 1B78     	 ldrb r3,[r3]
 2112 005e 1B02     	 lsls r3,r3,#8
 2113 0060 7A68     	 ldr r2,[r7,#4]
 2114 0062 0432     	 adds r2,r2,#4
 2115 0064 1278     	 ldrb r2,[r2]
 2116 0066 1A43     	 orrs r2,r2,r3
 2117 0068 104B     	 ldr r3,.L90+8
 2118 006a 1B68     	 ldr r3,[r3]
 2119 006c 1344     	 add r3,r3,r2
 2120 006e 0F4A     	 ldr r2,.L90+8
 2121 0070 1360     	 str r3,[r2]
 594:../Can_Devices/can_matrix_bms_29bit.c **** 	BMS_Avg_temp += ((int16_t)tempData[7] << 8) | tempData[6];
 2122              	 .loc 2 594 0
 2123 0072 7B68     	 ldr r3,[r7,#4]
 2124 0074 0733     	 adds r3,r3,#7
 2125 0076 1B78     	 ldrb r3,[r3]
 2126 0078 1B02     	 lsls r3,r3,#8
 2127 007a 7A68     	 ldr r2,[r7,#4]
 2128 007c 0632     	 adds r2,r2,#6
 2129 007e 1278     	 ldrb r2,[r2]
 2130 0080 1A43     	 orrs r2,r2,r3
 2131 0082 0A4B     	 ldr r3,.L90+8
 2132 0084 1B68     	 ldr r3,[r3]
 2133 0086 1344     	 add r3,r3,r2
 2134 0088 084A     	 ldr r2,.L90+8
 2135 008a 1360     	 str r3,[r2]
 595:../Can_Devices/can_matrix_bms_29bit.c **** 
 596:../Can_Devices/can_matrix_bms_29bit.c **** 	BMS_Avg_temp=BMS_Avg_temp/8;
 2136              	 .loc 2 596 0
 2137 008c 074B     	 ldr r3,.L90+8
 2138 008e 1B68     	 ldr r3,[r3]
 2139 0090 002B     	 cmp r3,#0
 2140 0092 00DA     	 bge .L89
 2141 0094 0733     	 adds r3,r3,#7
 2142              	.L89:
 2143 0096 DB10     	 asrs r3,r3,#3
 2144 0098 1A46     	 mov r2,r3
 2145 009a 044B     	 ldr r3,.L90+8
 2146 009c 1A60     	 str r2,[r3]
 597:../Can_Devices/can_matrix_bms_29bit.c **** 
 598:../Can_Devices/can_matrix_bms_29bit.c **** }
 2147              	 .loc 2 598 0
 2148 009e 1037     	 adds r7,r7,#16
 2149              	.LCFI99:
 2150              	 .cfi_def_cfa_offset 8
 2151 00a0 BD46     	 mov sp,r7
 2152              	.LCFI100:
 2153              	 .cfi_def_cfa_register 13
 2154              	 
 2155 00a2 80BD     	 pop {r7,pc}
 2156              	.L91:
 2157              	 .align 2
 2158              	.L90:
 2159 00a4 00000000 	 .word CAN_NODE_0
 2160 00a8 7C000000 	 .word CAN_BMS_29bit+124
 2161 00ac 00000000 	 .word BMS_Avg_temp
 2162              	 .cfi_endproc
 2163              	.LFE623:
 2165              	 .section .text.process_Rx_CAN_0X180CA7F3,"ax",%progbits
 2166              	 .align 2
 2167              	 .global process_Rx_CAN_0X180CA7F3
 2168              	 .thumb
 2169              	 .thumb_func
 2171              	process_Rx_CAN_0X180CA7F3:
 2172              	.LFB624:
 599:../Can_Devices/can_matrix_bms_29bit.c **** 
 600:../Can_Devices/can_matrix_bms_29bit.c **** 
 601:../Can_Devices/can_matrix_bms_29bit.c **** 
 602:../Can_Devices/can_matrix_bms_29bit.c **** void process_Rx_CAN_0X180CA7F3(void)
 603:../Can_Devices/can_matrix_bms_29bit.c **** {
 2173              	 .loc 2 603 0
 2174              	 .cfi_startproc
 2175              	 
 2176              	 
 2177 0000 80B5     	 push {r7,lr}
 2178              	.LCFI101:
 2179              	 .cfi_def_cfa_offset 8
 2180              	 .cfi_offset 7,-8
 2181              	 .cfi_offset 14,-4
 2182 0002 84B0     	 sub sp,sp,#16
 2183              	.LCFI102:
 2184              	 .cfi_def_cfa_offset 24
 2185 0004 00AF     	 add r7,sp,#0
 2186              	.LCFI103:
 2187              	 .cfi_def_cfa_register 7
 604:../Can_Devices/can_matrix_bms_29bit.c **** 	uint8_t *tempData, mo_index;
 605:../Can_Devices/can_matrix_bms_29bit.c **** 	const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 2188              	 .loc 2 605 0
 2189 0006 224B     	 ldr r3,.L93
 2190 0008 FB60     	 str r3,[r7,#12]
 606:../Can_Devices/can_matrix_bms_29bit.c **** 
 607:../Can_Devices/can_matrix_bms_29bit.c **** 	mo_index = 24;//CAN_RX_MO_BMS_BASE + CAN_0x103;
 2191              	 .loc 2 607 0
 2192 000a 1823     	 movs r3,#24
 2193 000c FB72     	 strb r3,[r7,#11]
 608:../Can_Devices/can_matrix_bms_29bit.c **** 
 609:../Can_Devices/can_matrix_bms_29bit.c **** 	tempData = &CAN_BMS_29bit[CAN_0X180CA7F3].CAN_Data[0];
 2194              	 .loc 2 609 0
 2195 000e 214B     	 ldr r3,.L93+4
 2196 0010 7B60     	 str r3,[r7,#4]
 610:../Can_Devices/can_matrix_bms_29bit.c **** 
 611:../Can_Devices/can_matrix_bms_29bit.c **** 	//read data to external buffer
 612:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_NODE_MO_ReadData(HandlePtr1->lmobj_ptr[mo_index], tempData);
 2197              	 .loc 2 612 0
 2198 0012 FB7A     	 ldrb r3,[r7,#11]
 2199 0014 FA68     	 ldr r2,[r7,#12]
 2200 0016 0233     	 adds r3,r3,#2
 2201 0018 9B00     	 lsls r3,r3,#2
 2202 001a 1344     	 add r3,r3,r2
 2203 001c 5B68     	 ldr r3,[r3,#4]
 2204 001e 1846     	 mov r0,r3
 2205 0020 7968     	 ldr r1,[r7,#4]
 2206 0022 FFF7FEFF 	 bl CAN_NODE_MO_ReadData
 613:../Can_Devices/can_matrix_bms_29bit.c **** 
 614:../Can_Devices/can_matrix_bms_29bit.c **** 	Bms_minTemp = ((int16_t)tempData[1] << 8) | tempData[0];
 2207              	 .loc 2 614 0
 2208 0026 7B68     	 ldr r3,[r7,#4]
 2209 0028 0133     	 adds r3,r3,#1
 2210 002a 1B78     	 ldrb r3,[r3]
 2211 002c 1B02     	 lsls r3,r3,#8
 2212 002e 9AB2     	 uxth r2,r3
 2213 0030 7B68     	 ldr r3,[r7,#4]
 2214 0032 1B78     	 ldrb r3,[r3]
 2215 0034 9BB2     	 uxth r3,r3
 2216 0036 1343     	 orrs r3,r3,r2
 2217 0038 9AB2     	 uxth r2,r3
 2218 003a 174B     	 ldr r3,.L93+8
 2219 003c 1A80     	 strh r2,[r3]
 615:../Can_Devices/can_matrix_bms_29bit.c **** 	Bms_minTemp = Bms_minTemp / 10;
 2220              	 .loc 2 615 0
 2221 003e 164B     	 ldr r3,.L93+8
 2222 0040 1B88     	 ldrh r3,[r3]
 2223 0042 1BB2     	 sxth r3,r3
 2224 0044 154A     	 ldr r2,.L93+12
 2225 0046 82FB0312 	 smull r1,r2,r2,r3
 2226 004a 9210     	 asrs r2,r2,#2
 2227 004c DB17     	 asrs r3,r3,#31
 2228 004e D31A     	 subs r3,r2,r3
 2229 0050 9AB2     	 uxth r2,r3
 2230 0052 114B     	 ldr r3,.L93+8
 2231 0054 1A80     	 strh r2,[r3]
 616:../Can_Devices/can_matrix_bms_29bit.c **** 	Bms_maxTemp = ((int16_t)tempData[3] << 8) | tempData[2];
 2232              	 .loc 2 616 0
 2233 0056 7B68     	 ldr r3,[r7,#4]
 2234 0058 0333     	 adds r3,r3,#3
 2235 005a 1B78     	 ldrb r3,[r3]
 2236 005c 1B02     	 lsls r3,r3,#8
 2237 005e 9AB2     	 uxth r2,r3
 2238 0060 7B68     	 ldr r3,[r7,#4]
 2239 0062 0233     	 adds r3,r3,#2
 2240 0064 1B78     	 ldrb r3,[r3]
 2241 0066 9BB2     	 uxth r3,r3
 2242 0068 1343     	 orrs r3,r3,r2
 2243 006a 9AB2     	 uxth r2,r3
 2244 006c 0C4B     	 ldr r3,.L93+16
 2245 006e 1A80     	 strh r2,[r3]
 617:../Can_Devices/can_matrix_bms_29bit.c **** 	Bms_maxTemp = Bms_maxTemp / 10;
 2246              	 .loc 2 617 0
 2247 0070 0B4B     	 ldr r3,.L93+16
 2248 0072 1B88     	 ldrh r3,[r3]
 2249 0074 1BB2     	 sxth r3,r3
 2250 0076 094A     	 ldr r2,.L93+12
 2251 0078 82FB0312 	 smull r1,r2,r2,r3
 2252 007c 9210     	 asrs r2,r2,#2
 2253 007e DB17     	 asrs r3,r3,#31
 2254 0080 D31A     	 subs r3,r2,r3
 2255 0082 9AB2     	 uxth r2,r3
 2256 0084 064B     	 ldr r3,.L93+16
 2257 0086 1A80     	 strh r2,[r3]
 618:../Can_Devices/can_matrix_bms_29bit.c **** 
 619:../Can_Devices/can_matrix_bms_29bit.c **** }
 2258              	 .loc 2 619 0
 2259 0088 1037     	 adds r7,r7,#16
 2260              	.LCFI104:
 2261              	 .cfi_def_cfa_offset 8
 2262 008a BD46     	 mov sp,r7
 2263              	.LCFI105:
 2264              	 .cfi_def_cfa_register 13
 2265              	 
 2266 008c 80BD     	 pop {r7,pc}
 2267              	.L94:
 2268 008e 00BF     	 .align 2
 2269              	.L93:
 2270 0090 00000000 	 .word CAN_NODE_0
 2271 0094 58000000 	 .word CAN_BMS_29bit+88
 2272 0098 00000000 	 .word Bms_minTemp
 2273 009c 67666666 	 .word 1717986919
 2274 00a0 00000000 	 .word Bms_maxTemp
 2275              	 .cfi_endproc
 2276              	.LFE624:
 2278              	 .section .text.Read_can_bms_29bit,"ax",%progbits
 2279              	 .align 2
 2280              	 .global Read_can_bms_29bit
 2281              	 .thumb
 2282              	 .thumb_func
 2284              	Read_can_bms_29bit:
 2285              	.LFB625:
 620:../Can_Devices/can_matrix_bms_29bit.c **** 
 621:../Can_Devices/can_matrix_bms_29bit.c **** void Read_can_bms_29bit(void)
 622:../Can_Devices/can_matrix_bms_29bit.c **** {
 2286              	 .loc 2 622 0
 2287              	 .cfi_startproc
 2288              	 
 2289              	 
 2290 0000 80B5     	 push {r7,lr}
 2291              	.LCFI106:
 2292              	 .cfi_def_cfa_offset 8
 2293              	 .cfi_offset 7,-8
 2294              	 .cfi_offset 14,-4
 2295 0002 00AF     	 add r7,sp,#0
 2296              	.LCFI107:
 2297              	 .cfi_def_cfa_register 7
 623:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_Rx_0x1810A7F3();
 2298              	 .loc 2 623 0
 2299 0004 FFF7FEFF 	 bl CAN_Rx_0x1810A7F3
 624:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_Rx_0x180EA7F3();
 2300              	 .loc 2 624 0
 2301 0008 FFF7FEFF 	 bl CAN_Rx_0x180EA7F3
 625:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_Rx_0x180FA7F3();
 2302              	 .loc 2 625 0
 2303 000c FFF7FEFF 	 bl CAN_Rx_0x180FA7F3
 626:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_Rx_0x1814A7F3();
 2304              	 .loc 2 626 0
 2305 0010 FFF7FEFF 	 bl CAN_Rx_0x1814A7F3
 627:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_Rx_0x1815A7F3();
 2306              	 .loc 2 627 0
 2307 0014 FFF7FEFF 	 bl CAN_Rx_0x1815A7F3
 628:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_Rx_0x180CA7F3();
 2308              	 .loc 2 628 0
 2309 0018 FFF7FEFF 	 bl CAN_Rx_0x180CA7F3
 629:../Can_Devices/can_matrix_bms_29bit.c **** 	CAN_Rx_0x1808A7F3();
 2310              	 .loc 2 629 0
 2311 001c FFF7FEFF 	 bl CAN_Rx_0x1808A7F3
 630:../Can_Devices/can_matrix_bms_29bit.c ****     CAN_Rx_0x180AA7F3();
 2312              	 .loc 2 630 0
 2313 0020 FFF7FEFF 	 bl CAN_Rx_0x180AA7F3
 631:../Can_Devices/can_matrix_bms_29bit.c ****     CAN_Rx_0x180BA7F3();
 2314              	 .loc 2 631 0
 2315 0024 FFF7FEFF 	 bl CAN_Rx_0x180BA7F3
 632:../Can_Devices/can_matrix_bms_29bit.c **** }
 2316              	 .loc 2 632 0
 2317 0028 80BD     	 pop {r7,pc}
 2318              	 .cfi_endproc
 2319              	.LFE625:
 2321 002a 00BF     	 .section .bss.charge_count.13720,"aw",%nobits
 2322              	 .align 2
 2325              	charge_count.13720:
 2326 0000 00000000 	 .space 4
 2327              	 .section .bss.c.13723,"aw",%nobits
 2328              	 .align 2
 2331              	c.13723:
 2332 0000 00000000 	 .space 4
 2333              	 .section .bss.c4.13721,"aw",%nobits
 2334              	 .align 2
 2337              	c4.13721:
 2338 0000 00000000 	 .space 4
 2339              	 .text
 2340              	.Letext0:
 2341              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2342              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2343              	 .file 5 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 2344              	 .file 6 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_gpio.h"
 2345              	 .file 7 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc4_gpio.h"
 2346              	 .file 8 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_usic.h"
 2347              	 .file 9 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/GLOBAL_CAN/global_can.h"
 2348              	 .file 10 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/CAN_NODE/can_node.h"
 2349              	 .file 11 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_spi.h"
 2350              	 .file 12 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/can_matrix.h"
 2351              	 .file 13 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Include/cmsis_gcc.h"
 2352              	 .file 14 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Include/core_cm4.h"
 2353              	 .file 15 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 2354              	 .file 16 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/CAN_NODE/can_node_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 can_matrix_bms_29bit.c
    {standard input}:20     .text.XMC_CAN_MO_ResetStatus:00000000 $t
    {standard input}:24     .text.XMC_CAN_MO_ResetStatus:00000000 XMC_CAN_MO_ResetStatus
                            *COM*:00000001 BMS_SOC
                            *COM*:0000003c CAN_MSG_DB_HVAC
                            *COM*:00000004 eps_status
                            *COM*:00000001 instrument_clustor_doors
    {standard input}:74     .data.CAN_BMS_29bit:00000000 CAN_BMS_29bit
    {standard input}:71     .data.CAN_BMS_29bit:00000000 $d
                            *COM*:00000084 CAN_IRP_29bit
                            *COM*:00000001 charge_complete
                            *COM*:00000001 charging_started
                            *COM*:00000002 Bms_SOC
                            *COM*:00000002 Bms_SOH
                            *COM*:00000001 Mapped_BMS_SOC
                            *COM*:00000002 Bms_minTemp
                            *COM*:00000002 Bms_maxTemp
                            *COM*:00000004 PackCurrent
                            *COM*:00000004 PackVoltage
                            *COM*:00000002 RegenerativeCurrentLimit
                            *COM*:00000002 ChargeCurrentLimit
                            *COM*:00000002 DischargeCurrentLimit
                            *COM*:00000004 HvBatteryPower
                            *COM*:00000004 bmsFault1
                            *COM*:00000004 bmsFault2
                            *COM*:00000004 GtakeFaults
                            *COM*:00000003 allFault_indicator
                            *COM*:00000004 cluster_Fault_Indicator
                            *COM*:00000004 Mcu_Temp
                            *COM*:00000004 Motor_Temp
                            *COM*:00000002 VehicleSpeedglb
                            *COM*:0000003c OBDII_CAN
                            *COM*:00000002 OBD_data
                            *COM*:00000004 Irp_Mcu_drive_states_29bit
                            *COM*:00000004 Irp_Mcu_BMS_states_29bit
                            *COM*:00000004 Irp_Mcu_Torques_29bit
                            *COM*:00000004 Irp_Mcu_BMS_Currents_29bit
                            *COM*:00000004 Irp_MCU_Status_29bit
                            *COM*:00000004 Irp_MCU_Faults_29bit
                            *COM*:00000002 DC_Current_irp
                            *COM*:00000002 MotorPower_Irp
                            *COM*:00000002 Torque_Estimation
                            *COM*:00000002 DC_Voltage_irp
                            *COM*:00000002 Mcu_Temp_Irp
                            *COM*:00000002 Motor_Temp_Irp
                            *COM*:00000002 RPM
                            *COM*:00000001 Regenration_flag
                            *COM*:00000002 hv_count
                            *COM*:00000004 BMS_Avg_temp
                            *COM*:00000001 AC_ON_4g
                            *COM*:00000002 speed_4g
    {standard input}:181    .text.CAN_Rx_0x1808A7F3:00000000 $t
    {standard input}:186    .text.CAN_Rx_0x1808A7F3:00000000 CAN_Rx_0x1808A7F3
    {standard input}:1870   .text.process_Rx_CAN_0X1808A7F3:00000000 process_Rx_CAN_0X1808A7F3
    {standard input}:277    .text.CAN_Rx_0x1808A7F3:00000078 $d
    {standard input}:282    .text.CAN_Rx_0x180AA7F3:00000000 $t
    {standard input}:287    .text.CAN_Rx_0x180AA7F3:00000000 CAN_Rx_0x180AA7F3
    {standard input}:1929   .text.process_Rx_CAN_0X180AA7F3:00000000 process_Rx_CAN_0X180AA7F3
    {standard input}:377    .text.CAN_Rx_0x180AA7F3:00000078 $d
    {standard input}:382    .text.CAN_Rx_0x180BA7F3:00000000 $t
    {standard input}:387    .text.CAN_Rx_0x180BA7F3:00000000 CAN_Rx_0x180BA7F3
    {standard input}:2045   .text.process_Rx_CAN_0X180BA7F3:00000000 process_Rx_CAN_0X180BA7F3
    {standard input}:477    .text.CAN_Rx_0x180BA7F3:00000078 $d
    {standard input}:482    .text.CAN_Rx_0x180EA7F3:00000000 $t
    {standard input}:487    .text.CAN_Rx_0x180EA7F3:00000000 CAN_Rx_0x180EA7F3
    {standard input}:1265   .text.process_Rx_CAN_0X180EA7F3:00000000 process_Rx_CAN_0X180EA7F3
    {standard input}:577    .text.CAN_Rx_0x180EA7F3:00000078 $d
    {standard input}:582    .text.CAN_Rx_0x180FA7F3:00000000 $t
    {standard input}:587    .text.CAN_Rx_0x180FA7F3:00000000 CAN_Rx_0x180FA7F3
    {standard input}:1580   .text.process_Rx_CAN_0X180FA7F3:00000000 process_Rx_CAN_0X180FA7F3
    {standard input}:677    .text.CAN_Rx_0x180FA7F3:00000078 $d
    {standard input}:682    .text.CAN_Rx_0x1810A7F3:00000000 $t
    {standard input}:687    .text.CAN_Rx_0x1810A7F3:00000000 CAN_Rx_0x1810A7F3
    {standard input}:1187   .text.process_Rx_CAN_0X1810A7F3:00000000 process_Rx_CAN_0X1810A7F3
    {standard input}:777    .text.CAN_Rx_0x1810A7F3:00000078 $d
    {standard input}:782    .text.CAN_Rx_0x1813A7F3:00000000 $t
    {standard input}:787    .text.CAN_Rx_0x1813A7F3:00000000 CAN_Rx_0x1813A7F3
    {standard input}:1693   .text.process_Rx_CAN_0X1813A7F3:00000000 process_Rx_CAN_0X1813A7F3
    {standard input}:877    .text.CAN_Rx_0x1813A7F3:00000078 $d
    {standard input}:882    .text.CAN_Rx_0x1814A7F3:00000000 $t
    {standard input}:887    .text.CAN_Rx_0x1814A7F3:00000000 CAN_Rx_0x1814A7F3
    {standard input}:1752   .text.process_Rx_CAN_0X1814A7F3:00000000 process_Rx_CAN_0X1814A7F3
    {standard input}:977    .text.CAN_Rx_0x1814A7F3:00000078 $d
    {standard input}:982    .text.CAN_Rx_0x1815A7F3:00000000 $t
    {standard input}:987    .text.CAN_Rx_0x1815A7F3:00000000 CAN_Rx_0x1815A7F3
    {standard input}:1811   .text.process_Rx_CAN_0X1815A7F3:00000000 process_Rx_CAN_0X1815A7F3
    {standard input}:1077   .text.CAN_Rx_0x1815A7F3:00000078 $d
    {standard input}:1082   .text.CAN_Rx_0x180CA7F3:00000000 $t
    {standard input}:1087   .text.CAN_Rx_0x180CA7F3:00000000 CAN_Rx_0x180CA7F3
    {standard input}:2171   .text.process_Rx_CAN_0X180CA7F3:00000000 process_Rx_CAN_0X180CA7F3
    {standard input}:1177   .text.CAN_Rx_0x180CA7F3:00000078 $d
    {standard input}:1182   .text.process_Rx_CAN_0X1810A7F3:00000000 $t
    {standard input}:1253   .text.process_Rx_CAN_0X1810A7F3:0000004c $d
    {standard input}:1260   .text.process_Rx_CAN_0X180EA7F3:00000000 $t
    {standard input}:1555   .text.process_Rx_CAN_0X180EA7F3:000001c8 $d
    {standard input}:2325   .bss.charge_count.13720:00000000 charge_count.13720
    {standard input}:2331   .bss.c.13723:00000000 c.13723
    {standard input}:2337   .bss.c4.13721:00000000 c4.13721
    {standard input}:1575   .text.process_Rx_CAN_0X180FA7F3:00000000 $t
    {standard input}:1678   .text.process_Rx_CAN_0X180FA7F3:0000008c $d
    {standard input}:1688   .text.process_Rx_CAN_0X1813A7F3:00000000 $t
    {standard input}:1741   .text.process_Rx_CAN_0X1813A7F3:0000002c $d
    {standard input}:1747   .text.process_Rx_CAN_0X1814A7F3:00000000 $t
    {standard input}:1800   .text.process_Rx_CAN_0X1814A7F3:0000002c $d
    {standard input}:1806   .text.process_Rx_CAN_0X1815A7F3:00000000 $t
    {standard input}:1859   .text.process_Rx_CAN_0X1815A7F3:0000002c $d
    {standard input}:1865   .text.process_Rx_CAN_0X1808A7F3:00000000 $t
    {standard input}:1918   .text.process_Rx_CAN_0X1808A7F3:0000002c $d
    {standard input}:1924   .text.process_Rx_CAN_0X180AA7F3:00000000 $t
    {standard input}:2033   .text.process_Rx_CAN_0X180AA7F3:00000094 $d
    {standard input}:2040   .text.process_Rx_CAN_0X180BA7F3:00000000 $t
    {standard input}:2159   .text.process_Rx_CAN_0X180BA7F3:000000a4 $d
    {standard input}:2166   .text.process_Rx_CAN_0X180CA7F3:00000000 $t
    {standard input}:2270   .text.process_Rx_CAN_0X180CA7F3:00000090 $d
    {standard input}:2279   .text.Read_can_bms_29bit:00000000 $t
    {standard input}:2284   .text.Read_can_bms_29bit:00000000 Read_can_bms_29bit
    {standard input}:2322   .bss.charge_count.13720:00000000 $d
    {standard input}:2328   .bss.c.13723:00000000 $d
    {standard input}:2334   .bss.c4.13721:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CAN_NODE_MO_GetStatus
CAN_NODE_MO_Receive
CAN_NODE_0
CAN_NODE_MO_ReadData
