   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "ADS7961_LIB_2.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_SetOutputHigh:
  25              	.LFB135:
  26              	 .file 1 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_gpio.h"
   1:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 262 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 263:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  45              	 .loc 1 265 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 5A60     	 str r2,[r3,#4]
 266:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 266 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE135:
  67              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_GPIO_SetOutputLow:
  73              	.LFB136:
 267:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** {
  74              	 .loc 1 288 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
 289:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  92              	 .loc 1 291 0
  93 000c FB78     	 ldrb r3,[r7,#3]
  94 000e 4FF48032 	 mov r2,#65536
  95 0012 9A40     	 lsls r2,r2,r3
  96 0014 7B68     	 ldr r3,[r7,#4]
  97 0016 5A60     	 str r2,[r3,#4]
 292:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc\xmc_gpio.h **** }
  98              	 .loc 1 292 0
  99 0018 0C37     	 adds r7,r7,#12
 100              	.LCFI9:
 101              	 .cfi_def_cfa_offset 4
 102 001a BD46     	 mov sp,r7
 103              	.LCFI10:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 001c 5DF8047B 	 ldr r7,[sp],#4
 107              	.LCFI11:
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 0020 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE136:
 114              	 .comm ADS_MODE,1,1
 115              	 .global DROPPED_IN_12V
 116 0022 00BF     	 .section .bss.DROPPED_IN_12V,"aw",%nobits
 117              	 .align 2
 120              	DROPPED_IN_12V:
 121 0000 00000000 	 .space 4
 122              	 .comm ADCModeAUTO2Frame,2,4
 123              	 .comm ADS1_receive_data,16,4
 124              	 .comm ADS1_recive_channel,16,4
 125              	 .comm ADS1_avg_receive_data,64,4
 126              	 .comm ADS2_receive_data,800,4
 127              	 .comm ADS2_avg_receive_data,64,4
 128              	 .comm ADS3_receive_data,800,4
 129              	 .comm ADS3_avg_receive_data,64,4
 130              	 .global flag
 131              	 .section .bss.flag,"aw",%nobits
 134              	flag:
 135 0000 00       	 .space 1
 136              	 .comm adc2_current,64,4
 137              	 .comm adc3_current,64,4
 138              	 .comm temp,120,4
 139              	 .global adc2_array_counter
 140              	 .section .bss.adc2_array_counter,"aw",%nobits
 143              	adc2_array_counter:
 144 0000 00       	 .space 1
 145              	 .global adc3_array_counter
 146              	 .section .bss.adc3_array_counter,"aw",%nobits
 149              	adc3_array_counter:
 150 0000 00       	 .space 1
 151              	 .global __aeabi_ui2d
 152              	 .global __aeabi_dmul
 153              	 .global __aeabi_d2f
 154              	 .global __aeabi_f2d
 155              	 .global __aeabi_ddiv
 156              	 .section .text.DROPPED_IN_12_volt,"ax",%progbits
 157              	 .align 2
 158              	 .global DROPPED_IN_12_volt
 159              	 .thumb
 160              	 .thumb_func
 162              	DROPPED_IN_12_volt:
 163              	.LFB605:
 164              	 .file 2 "../VCU_OUT/ADS7961_LIB_2.c"
   1:../VCU_OUT/ADS7961_LIB_2.c **** #include "DAVE.h"
   2:../VCU_OUT/ADS7961_LIB_2.c **** #include "ADS7961_LIB_2.h"
   3:../VCU_OUT/ADS7961_LIB_2.c **** #include <math.h>
   4:../VCU_OUT/ADS7961_LIB_2.c **** 
   5:../VCU_OUT/ADS7961_LIB_2.c **** #define ADC_GAIN		151.1
   6:../VCU_OUT/ADS7961_LIB_2.c **** #define RSHUNT			0.0005
   7:../VCU_OUT/ADS7961_LIB_2.c **** #define VREF			2.5
   8:../VCU_OUT/ADS7961_LIB_2.c **** #define RESOLUTION		256
   9:../VCU_OUT/ADS7961_LIB_2.c **** #define TOTAL_SAMPLES	50
  10:../VCU_OUT/ADS7961_LIB_2.c **** #define ATTENUATION 	0.1175
  11:../VCU_OUT/ADS7961_LIB_2.c **** 
  12:../VCU_OUT/ADS7961_LIB_2.c **** float DROPPED_IN_12V = 0;
  13:../VCU_OUT/ADS7961_LIB_2.c **** uint8_t flag = false;
  14:../VCU_OUT/ADS7961_LIB_2.c **** uint8_t adc2_array_counter = 0;
  15:../VCU_OUT/ADS7961_LIB_2.c **** uint8_t adc3_array_counter = 0;
  16:../VCU_OUT/ADS7961_LIB_2.c **** 
  17:../VCU_OUT/ADS7961_LIB_2.c **** ///**************************** THINGS TO UPDATE FIRST *********************************
  18:../VCU_OUT/ADS7961_LIB_2.c **** 
  19:../VCU_OUT/ADS7961_LIB_2.c **** void DROPPED_IN_12_volt(void)
  20:../VCU_OUT/ADS7961_LIB_2.c **** {
 165              	 .loc 2 20 0
 166              	 .cfi_startproc
 167              	 
 168              	 
 169 0000 80B5     	 push {r7,lr}
 170              	.LCFI12:
 171              	 .cfi_def_cfa_offset 8
 172              	 .cfi_offset 7,-8
 173              	 .cfi_offset 14,-4
 174 0002 84B0     	 sub sp,sp,#16
 175              	.LCFI13:
 176              	 .cfi_def_cfa_offset 24
 177 0004 00AF     	 add r7,sp,#0
 178              	.LCFI14:
 179              	 .cfi_def_cfa_register 7
  21:../VCU_OUT/ADS7961_LIB_2.c **** //		float adc_vout = ((ADS3_avg_receive_data[12] / 50)-2) * (2.5 /256);
  22:../VCU_OUT/ADS7961_LIB_2.c **** 	uint32_t avg_receive_data = 0;
 180              	 .loc 2 22 0
 181 0006 0023     	 movs r3,#0
 182 0008 FB60     	 str r3,[r7,#12]
 183              	.LBB2:
  23:../VCU_OUT/ADS7961_LIB_2.c **** 	for(uint8_t cnt = 0; cnt < TOTAL_SAMPLES; cnt++)
 184              	 .loc 2 23 0
 185 000a 0023     	 movs r3,#0
 186 000c FB72     	 strb r3,[r7,#11]
 187 000e 0BE0     	 b .L4
 188              	.L5:
  24:../VCU_OUT/ADS7961_LIB_2.c **** 	{
  25:../VCU_OUT/ADS7961_LIB_2.c **** 		avg_receive_data += ADS3_receive_data[12][cnt];
 189              	 .loc 2 25 0 discriminator 3
 190 0010 FB7A     	 ldrb r3,[r7,#11]
 191 0012 214A     	 ldr r2,.L6+8
 192 0014 1344     	 add r3,r3,r2
 193 0016 93F85832 	 ldrb r3,[r3,#600]
 194 001a 1A46     	 mov r2,r3
 195 001c FB68     	 ldr r3,[r7,#12]
 196 001e 1344     	 add r3,r3,r2
 197 0020 FB60     	 str r3,[r7,#12]
  23:../VCU_OUT/ADS7961_LIB_2.c **** 	for(uint8_t cnt = 0; cnt < TOTAL_SAMPLES; cnt++)
 198              	 .loc 2 23 0 discriminator 3
 199 0022 FB7A     	 ldrb r3,[r7,#11]
 200 0024 0133     	 adds r3,r3,#1
 201 0026 FB72     	 strb r3,[r7,#11]
 202              	.L4:
  23:../VCU_OUT/ADS7961_LIB_2.c **** 	for(uint8_t cnt = 0; cnt < TOTAL_SAMPLES; cnt++)
 203              	 .loc 2 23 0 is_stmt 0 discriminator 1
 204 0028 FB7A     	 ldrb r3,[r7,#11]
 205 002a 312B     	 cmp r3,#49
 206 002c F0D9     	 bls .L5
 207              	.LBE2:
  26:../VCU_OUT/ADS7961_LIB_2.c **** 	}
  27:../VCU_OUT/ADS7961_LIB_2.c **** 	float adc_vout = (avg_receive_data / TOTAL_SAMPLES) * (VREF /RESOLUTION);
 208              	 .loc 2 27 0 is_stmt 1
 209 002e FB68     	 ldr r3,[r7,#12]
 210 0030 1A4A     	 ldr r2,.L6+12
 211 0032 A2FB0323 	 umull r2,r3,r2,r3
 212 0036 1B09     	 lsrs r3,r3,#4
 213 0038 1846     	 mov r0,r3
 214 003a FFF7FEFF 	 bl __aeabi_ui2d
 215 003e 0246     	 mov r2,r0
 216 0040 0B46     	 mov r3,r1
 217 0042 1046     	 mov r0,r2
 218 0044 1946     	 mov r1,r3
 219 0046 4FF00002 	 mov r2,#0
 220 004a 154B     	 ldr r3,.L6+16
 221 004c FFF7FEFF 	 bl __aeabi_dmul
 222 0050 0246     	 mov r2,r0
 223 0052 0B46     	 mov r3,r1
 224 0054 1046     	 mov r0,r2
 225 0056 1946     	 mov r1,r3
 226 0058 FFF7FEFF 	 bl __aeabi_d2f
 227 005c 0346     	 mov r3,r0
 228 005e 7B60     	 str r3,[r7,#4]
  28:../VCU_OUT/ADS7961_LIB_2.c **** 	DROPPED_IN_12V = adc_vout / ATTENUATION;
 229              	 .loc 2 28 0
 230 0060 7868     	 ldr r0,[r7,#4]
 231 0062 FFF7FEFF 	 bl __aeabi_f2d
 232 0066 0246     	 mov r2,r0
 233 0068 0B46     	 mov r3,r1
 234 006a 1046     	 mov r0,r2
 235 006c 1946     	 mov r1,r3
 236 006e 08A3     	 adr r3,.L6
 237 0070 D3E90023 	 ldrd r2,[r3]
 238 0074 FFF7FEFF 	 bl __aeabi_ddiv
 239 0078 0246     	 mov r2,r0
 240 007a 0B46     	 mov r3,r1
 241 007c 1046     	 mov r0,r2
 242 007e 1946     	 mov r1,r3
 243 0080 FFF7FEFF 	 bl __aeabi_d2f
 244 0084 0246     	 mov r2,r0
 245 0086 074B     	 ldr r3,.L6+20
 246 0088 1A60     	 str r2,[r3]
  29:../VCU_OUT/ADS7961_LIB_2.c **** }
 247              	 .loc 2 29 0
 248 008a 1037     	 adds r7,r7,#16
 249              	.LCFI15:
 250              	 .cfi_def_cfa_offset 8
 251 008c BD46     	 mov sp,r7
 252              	.LCFI16:
 253              	 .cfi_def_cfa_register 13
 254              	 
 255 008e 80BD     	 pop {r7,pc}
 256              	.L7:
 257              	 .align 3
 258              	.L6:
 259 0090 14AE47E1 	 .word -515396076
 260 0094 7A14BE3F 	 .word 1069421690
 261 0098 00000000 	 .word ADS3_receive_data
 262 009c 1F85EB51 	 .word 1374389535
 263 00a0 0000843F 	 .word 1065615360
 264 00a4 00000000 	 .word DROPPED_IN_12V
 265              	 .cfi_endproc
 266              	.LFE605:
 268              	 .section .text.convert_raw_data_into_current,"ax",%progbits
 269              	 .align 2
 270              	 .global convert_raw_data_into_current
 271              	 .thumb
 272              	 .thumb_func
 274              	convert_raw_data_into_current:
 275              	.LFB606:
  30:../VCU_OUT/ADS7961_LIB_2.c **** 
  31:../VCU_OUT/ADS7961_LIB_2.c **** void convert_raw_data_into_current(void)
  32:../VCU_OUT/ADS7961_LIB_2.c **** {
 276              	 .loc 2 32 0
 277              	 .cfi_startproc
 278              	 
 279              	 
 280 0000 90B5     	 push {r4,r7,lr}
 281              	.LCFI17:
 282              	 .cfi_def_cfa_offset 12
 283              	 .cfi_offset 4,-12
 284              	 .cfi_offset 7,-8
 285              	 .cfi_offset 14,-4
 286 0002 85B0     	 sub sp,sp,#20
 287              	.LCFI18:
 288              	 .cfi_def_cfa_offset 32
 289 0004 00AF     	 add r7,sp,#0
 290              	.LCFI19:
 291              	 .cfi_def_cfa_register 7
  33:../VCU_OUT/ADS7961_LIB_2.c **** 	memset(ADS2_avg_receive_data, 0, sizeof(ADS2_avg_receive_data));
 292              	 .loc 2 33 0
 293 0006 6448     	 ldr r0,.L13+16
 294 0008 0021     	 movs r1,#0
 295 000a 4022     	 movs r2,#64
 296 000c FFF7FEFF 	 bl memset
  34:../VCU_OUT/ADS7961_LIB_2.c **** 	memset(ADS3_avg_receive_data, 0, sizeof(ADS3_avg_receive_data));
 297              	 .loc 2 34 0
 298 0010 6248     	 ldr r0,.L13+20
 299 0012 0021     	 movs r1,#0
 300 0014 4022     	 movs r2,#64
 301 0016 FFF7FEFF 	 bl memset
 302              	.LBB3:
  35:../VCU_OUT/ADS7961_LIB_2.c **** 
  36:../VCU_OUT/ADS7961_LIB_2.c **** 	for(int i = 0; i < 16; i++)
 303              	 .loc 2 36 0
 304 001a 0023     	 movs r3,#0
 305 001c FB60     	 str r3,[r7,#12]
 306 001e ACE0     	 b .L9
 307              	.L12:
 308              	.LBB4:
 309              	.LBB5:
  37:../VCU_OUT/ADS7961_LIB_2.c **** 	{
  38:../VCU_OUT/ADS7961_LIB_2.c **** 		for(uint8_t cnt = 0; cnt < TOTAL_SAMPLES; cnt++)
 310              	 .loc 2 38 0
 311 0020 0023     	 movs r3,#0
 312 0022 FB72     	 strb r3,[r7,#11]
 313 0024 26E0     	 b .L10
 314              	.L11:
  39:../VCU_OUT/ADS7961_LIB_2.c **** 		{
  40:../VCU_OUT/ADS7961_LIB_2.c **** 			ADS2_avg_receive_data[i] += ADS2_receive_data[i][cnt];
 315              	 .loc 2 40 0 discriminator 3
 316 0026 5C4A     	 ldr r2,.L13+16
 317 0028 FB68     	 ldr r3,[r7,#12]
 318 002a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 319 002e FA7A     	 ldrb r2,[r7,#11]
 320 0030 5B48     	 ldr r0,.L13+24
 321 0032 F968     	 ldr r1,[r7,#12]
 322 0034 3224     	 movs r4,#50
 323 0036 04FB01F1 	 mul r1,r4,r1
 324 003a 0A44     	 add r2,r2,r1
 325 003c 0244     	 add r2,r2,r0
 326 003e 1278     	 ldrb r2,[r2]
 327 0040 1A44     	 add r2,r2,r3
 328 0042 5549     	 ldr r1,.L13+16
 329 0044 FB68     	 ldr r3,[r7,#12]
 330 0046 41F82320 	 str r2,[r1,r3,lsl#2]
  41:../VCU_OUT/ADS7961_LIB_2.c **** 			ADS3_avg_receive_data[i] += ADS3_receive_data[i][cnt];
 331              	 .loc 2 41 0 discriminator 3
 332 004a 544A     	 ldr r2,.L13+20
 333 004c FB68     	 ldr r3,[r7,#12]
 334 004e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 335 0052 FA7A     	 ldrb r2,[r7,#11]
 336 0054 5348     	 ldr r0,.L13+28
 337 0056 F968     	 ldr r1,[r7,#12]
 338 0058 3224     	 movs r4,#50
 339 005a 04FB01F1 	 mul r1,r4,r1
 340 005e 0A44     	 add r2,r2,r1
 341 0060 0244     	 add r2,r2,r0
 342 0062 1278     	 ldrb r2,[r2]
 343 0064 1A44     	 add r2,r2,r3
 344 0066 4D49     	 ldr r1,.L13+20
 345 0068 FB68     	 ldr r3,[r7,#12]
 346 006a 41F82320 	 str r2,[r1,r3,lsl#2]
  38:../VCU_OUT/ADS7961_LIB_2.c **** 		{
 347              	 .loc 2 38 0 discriminator 3
 348 006e FB7A     	 ldrb r3,[r7,#11]
 349 0070 0133     	 adds r3,r3,#1
 350 0072 FB72     	 strb r3,[r7,#11]
 351              	.L10:
  38:../VCU_OUT/ADS7961_LIB_2.c **** 		{
 352              	 .loc 2 38 0 is_stmt 0 discriminator 1
 353 0074 FB7A     	 ldrb r3,[r7,#11]
 354 0076 312B     	 cmp r3,#49
 355 0078 D5D9     	 bls .L11
 356              	.LBE5:
  42:../VCU_OUT/ADS7961_LIB_2.c **** 		}
  43:../VCU_OUT/ADS7961_LIB_2.c **** 
  44:../VCU_OUT/ADS7961_LIB_2.c **** 		float adc_vout = (ADS2_avg_receive_data[i] / TOTAL_SAMPLES) * (VREF /RESOLUTION);
 357              	 .loc 2 44 0 is_stmt 1 discriminator 2
 358 007a 474A     	 ldr r2,.L13+16
 359 007c FB68     	 ldr r3,[r7,#12]
 360 007e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 361 0082 494A     	 ldr r2,.L13+32
 362 0084 A2FB0323 	 umull r2,r3,r2,r3
 363 0088 1B09     	 lsrs r3,r3,#4
 364 008a 1846     	 mov r0,r3
 365 008c FFF7FEFF 	 bl __aeabi_ui2d
 366 0090 0246     	 mov r2,r0
 367 0092 0B46     	 mov r3,r1
 368 0094 1046     	 mov r0,r2
 369 0096 1946     	 mov r1,r3
 370 0098 4FF00002 	 mov r2,#0
 371 009c 434B     	 ldr r3,.L13+36
 372 009e FFF7FEFF 	 bl __aeabi_dmul
 373 00a2 0246     	 mov r2,r0
 374 00a4 0B46     	 mov r3,r1
 375 00a6 1046     	 mov r0,r2
 376 00a8 1946     	 mov r1,r3
 377 00aa FFF7FEFF 	 bl __aeabi_d2f
 378 00ae 0346     	 mov r3,r0
 379 00b0 7B60     	 str r3,[r7,#4]
  45:../VCU_OUT/ADS7961_LIB_2.c **** 		adc2_current[i] = (adc_vout / ADC_GAIN) / RSHUNT;
 380              	 .loc 2 45 0 discriminator 2
 381 00b2 7868     	 ldr r0,[r7,#4]
 382 00b4 FFF7FEFF 	 bl __aeabi_f2d
 383 00b8 0246     	 mov r2,r0
 384 00ba 0B46     	 mov r3,r1
 385 00bc 1046     	 mov r0,r2
 386 00be 1946     	 mov r1,r3
 387 00c0 31A3     	 adr r3,.L13
 388 00c2 D3E90023 	 ldrd r2,[r3]
 389 00c6 FFF7FEFF 	 bl __aeabi_ddiv
 390 00ca 0246     	 mov r2,r0
 391 00cc 0B46     	 mov r3,r1
 392 00ce 1046     	 mov r0,r2
 393 00d0 1946     	 mov r1,r3
 394 00d2 2FA3     	 adr r3,.L13+8
 395 00d4 D3E90023 	 ldrd r2,[r3]
 396 00d8 FFF7FEFF 	 bl __aeabi_ddiv
 397 00dc 0246     	 mov r2,r0
 398 00de 0B46     	 mov r3,r1
 399 00e0 1046     	 mov r0,r2
 400 00e2 1946     	 mov r1,r3
 401 00e4 FFF7FEFF 	 bl __aeabi_d2f
 402 00e8 0146     	 mov r1,r0
 403 00ea 314A     	 ldr r2,.L13+40
 404 00ec FB68     	 ldr r3,[r7,#12]
 405 00ee 9B00     	 lsls r3,r3,#2
 406 00f0 1344     	 add r3,r3,r2
 407 00f2 1960     	 str r1,[r3]
  46:../VCU_OUT/ADS7961_LIB_2.c **** 
  47:../VCU_OUT/ADS7961_LIB_2.c **** 		adc_vout = 0;
 408              	 .loc 2 47 0 discriminator 2
 409 00f4 4FF00003 	 mov r3,#0
 410 00f8 7B60     	 str r3,[r7,#4]
  48:../VCU_OUT/ADS7961_LIB_2.c **** 		adc_vout = (ADS3_avg_receive_data[i] / TOTAL_SAMPLES) * (VREF /RESOLUTION);
 411              	 .loc 2 48 0 discriminator 2
 412 00fa 284A     	 ldr r2,.L13+20
 413 00fc FB68     	 ldr r3,[r7,#12]
 414 00fe 52F82330 	 ldr r3,[r2,r3,lsl#2]
 415 0102 294A     	 ldr r2,.L13+32
 416 0104 A2FB0323 	 umull r2,r3,r2,r3
 417 0108 1B09     	 lsrs r3,r3,#4
 418 010a 1846     	 mov r0,r3
 419 010c FFF7FEFF 	 bl __aeabi_ui2d
 420 0110 0246     	 mov r2,r0
 421 0112 0B46     	 mov r3,r1
 422 0114 1046     	 mov r0,r2
 423 0116 1946     	 mov r1,r3
 424 0118 4FF00002 	 mov r2,#0
 425 011c 234B     	 ldr r3,.L13+36
 426 011e FFF7FEFF 	 bl __aeabi_dmul
 427 0122 0246     	 mov r2,r0
 428 0124 0B46     	 mov r3,r1
 429 0126 1046     	 mov r0,r2
 430 0128 1946     	 mov r1,r3
 431 012a FFF7FEFF 	 bl __aeabi_d2f
 432 012e 0346     	 mov r3,r0
 433 0130 7B60     	 str r3,[r7,#4]
  49:../VCU_OUT/ADS7961_LIB_2.c **** 		adc3_current[i] = (adc_vout / ADC_GAIN) / RSHUNT;
 434              	 .loc 2 49 0 discriminator 2
 435 0132 7868     	 ldr r0,[r7,#4]
 436 0134 FFF7FEFF 	 bl __aeabi_f2d
 437 0138 0246     	 mov r2,r0
 438 013a 0B46     	 mov r3,r1
 439 013c 1046     	 mov r0,r2
 440 013e 1946     	 mov r1,r3
 441 0140 11A3     	 adr r3,.L13
 442 0142 D3E90023 	 ldrd r2,[r3]
 443 0146 FFF7FEFF 	 bl __aeabi_ddiv
 444 014a 0246     	 mov r2,r0
 445 014c 0B46     	 mov r3,r1
 446 014e 1046     	 mov r0,r2
 447 0150 1946     	 mov r1,r3
 448 0152 0FA3     	 adr r3,.L13+8
 449 0154 D3E90023 	 ldrd r2,[r3]
 450 0158 FFF7FEFF 	 bl __aeabi_ddiv
 451 015c 0246     	 mov r2,r0
 452 015e 0B46     	 mov r3,r1
 453 0160 1046     	 mov r0,r2
 454 0162 1946     	 mov r1,r3
 455 0164 FFF7FEFF 	 bl __aeabi_d2f
 456 0168 0146     	 mov r1,r0
 457 016a 124A     	 ldr r2,.L13+44
 458 016c FB68     	 ldr r3,[r7,#12]
 459 016e 9B00     	 lsls r3,r3,#2
 460 0170 1344     	 add r3,r3,r2
 461 0172 1960     	 str r1,[r3]
 462              	.LBE4:
  36:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 463              	 .loc 2 36 0 discriminator 2
 464 0174 FB68     	 ldr r3,[r7,#12]
 465 0176 0133     	 adds r3,r3,#1
 466 0178 FB60     	 str r3,[r7,#12]
 467              	.L9:
  36:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 468              	 .loc 2 36 0 is_stmt 0 discriminator 1
 469 017a FB68     	 ldr r3,[r7,#12]
 470 017c 0F2B     	 cmp r3,#15
 471 017e 7FF74FAF 	 ble .L12
 472              	.LBE3:
  50:../VCU_OUT/ADS7961_LIB_2.c **** 	}
  51:../VCU_OUT/ADS7961_LIB_2.c **** }
 473              	 .loc 2 51 0 is_stmt 1
 474 0182 1437     	 adds r7,r7,#20
 475              	.LCFI20:
 476              	 .cfi_def_cfa_offset 12
 477 0184 BD46     	 mov sp,r7
 478              	.LCFI21:
 479              	 .cfi_def_cfa_register 13
 480              	 
 481 0186 90BD     	 pop {r4,r7,pc}
 482              	.L14:
 483              	 .align 3
 484              	.L13:
 485 0188 33333333 	 .word 858993459
 486 018c 33E36240 	 .word 1080222515
 487 0190 FCA9F1D2 	 .word -755914244
 488 0194 4D62403F 	 .word 1061184077
 489 0198 00000000 	 .word ADS2_avg_receive_data
 490 019c 00000000 	 .word ADS3_avg_receive_data
 491 01a0 00000000 	 .word ADS2_receive_data
 492 01a4 00000000 	 .word ADS3_receive_data
 493 01a8 1F85EB51 	 .word 1374389535
 494 01ac 0000843F 	 .word 1065615360
 495 01b0 00000000 	 .word adc2_current
 496 01b4 00000000 	 .word adc3_current
 497              	 .cfi_endproc
 498              	.LFE606:
 500              	 .section .text.SPI_ADC_ProcessModeChange,"ax",%progbits
 501              	 .align 2
 502              	 .global SPI_ADC_ProcessModeChange
 503              	 .thumb
 504              	 .thumb_func
 506              	SPI_ADC_ProcessModeChange:
 507              	.LFB607:
  52:../VCU_OUT/ADS7961_LIB_2.c **** 
  53:../VCU_OUT/ADS7961_LIB_2.c **** void SPI_ADC_ProcessModeChange(uint8_t ADCMode)
  54:../VCU_OUT/ADS7961_LIB_2.c **** {
 508              	 .loc 2 54 0
 509              	 .cfi_startproc
 510              	 
 511              	 
 512 0000 80B5     	 push {r7,lr}
 513              	.LCFI22:
 514              	 .cfi_def_cfa_offset 8
 515              	 .cfi_offset 7,-8
 516              	 .cfi_offset 14,-4
 517 0002 82B0     	 sub sp,sp,#8
 518              	.LCFI23:
 519              	 .cfi_def_cfa_offset 16
 520 0004 00AF     	 add r7,sp,#0
 521              	.LCFI24:
 522              	 .cfi_def_cfa_register 7
 523 0006 0346     	 mov r3,r0
 524 0008 FB71     	 strb r3,[r7,#7]
  55:../VCU_OUT/ADS7961_LIB_2.c **** 	if(ADC_AUTO1 == ADCMode)
 525              	 .loc 2 55 0
 526 000a FB79     	 ldrb r3,[r7,#7]
 527 000c 002B     	 cmp r3,#0
 528 000e 0DD0     	 beq .L16
  56:../VCU_OUT/ADS7961_LIB_2.c **** 	{
  57:../VCU_OUT/ADS7961_LIB_2.c **** 		//change operating mode to AUTO1
  58:../VCU_OUT/ADS7961_LIB_2.c **** 	}
  59:../VCU_OUT/ADS7961_LIB_2.c **** 	else if(ADC_AUTO2 == ADCMode)
 529              	 .loc 2 59 0
 530 0010 FB79     	 ldrb r3,[r7,#7]
 531 0012 012B     	 cmp r3,#1
 532 0014 08D1     	 bne .L17
  60:../VCU_OUT/ADS7961_LIB_2.c **** 	{
  61:../VCU_OUT/ADS7961_LIB_2.c **** 		//read only ADC3 right now later on add ADC2
  62:../VCU_OUT/ADS7961_LIB_2.c **** 		SPI_ADS7961_AUTO_MODE2(ADS3_Port2,ADS3_Pin);//pass Ads cs port and pin
 533              	 .loc 2 62 0
 534 0016 0220     	 movs r0,#2
 535 0018 0621     	 movs r1,#6
 536 001a FFF7FEFF 	 bl SPI_ADS7961_AUTO_MODE2
  63:../VCU_OUT/ADS7961_LIB_2.c **** 		SPI_ADS7961_AUTO_MODE2(ADS2_Port5 ,ADS2_Pin);//pass Ads cs port and pin
 537              	 .loc 2 63 0
 538 001e 0520     	 movs r0,#5
 539 0020 0621     	 movs r1,#6
 540 0022 FFF7FEFF 	 bl SPI_ADS7961_AUTO_MODE2
 541 0026 01E0     	 b .L16
 542              	.L17:
  64:../VCU_OUT/ADS7961_LIB_2.c **** 	}
  65:../VCU_OUT/ADS7961_LIB_2.c **** 	else //manual mode
  66:../VCU_OUT/ADS7961_LIB_2.c **** 	{
  67:../VCU_OUT/ADS7961_LIB_2.c **** 		//configure manual mode
  68:../VCU_OUT/ADS7961_LIB_2.c **** 		SPI_ADC_MANUAL_MODE();
 543              	 .loc 2 68 0
 544 0028 FFF7FEFF 	 bl SPI_ADC_MANUAL_MODE
 545              	.L16:
  69:../VCU_OUT/ADS7961_LIB_2.c **** 	}
  70:../VCU_OUT/ADS7961_LIB_2.c **** 
  71:../VCU_OUT/ADS7961_LIB_2.c **** 	//do not call this right now you can call this when it is in use.
  72:../VCU_OUT/ADS7961_LIB_2.c **** 	convert_raw_data_into_current();
 546              	 .loc 2 72 0
 547 002c FFF7FEFF 	 bl convert_raw_data_into_current
  73:../VCU_OUT/ADS7961_LIB_2.c **** }
 548              	 .loc 2 73 0
 549 0030 0837     	 adds r7,r7,#8
 550              	.LCFI25:
 551              	 .cfi_def_cfa_offset 8
 552 0032 BD46     	 mov sp,r7
 553              	.LCFI26:
 554              	 .cfi_def_cfa_register 13
 555              	 
 556 0034 80BD     	 pop {r7,pc}
 557              	 .cfi_endproc
 558              	.LFE607:
 560 0036 00BF     	 .section .text.SPI_ADC_MANUAL_MODE,"ax",%progbits
 561              	 .align 2
 562              	 .global SPI_ADC_MANUAL_MODE
 563              	 .thumb
 564              	 .thumb_func
 566              	SPI_ADC_MANUAL_MODE:
 567              	.LFB608:
  74:../VCU_OUT/ADS7961_LIB_2.c **** 
  75:../VCU_OUT/ADS7961_LIB_2.c **** void SPI_ADC_MANUAL_MODE(void)
  76:../VCU_OUT/ADS7961_LIB_2.c **** {
 568              	 .loc 2 76 0
 569              	 .cfi_startproc
 570              	 
 571              	 
 572 0000 80B5     	 push {r7,lr}
 573              	.LCFI27:
 574              	 .cfi_def_cfa_offset 8
 575              	 .cfi_offset 7,-8
 576              	 .cfi_offset 14,-4
 577 0002 00AF     	 add r7,sp,#0
 578              	.LCFI28:
 579              	 .cfi_def_cfa_register 7
  77:../VCU_OUT/ADS7961_LIB_2.c **** 	//ADC_Read_AllChannel(ADS2_Port5 ,ADS2_Pin);//pass Ads cs port and pin
  78:../VCU_OUT/ADS7961_LIB_2.c **** 	//ADC_Read_AllChannel(ADS3_Port2,ADS3_Pin);//pass Ads cs port and pin
  79:../VCU_OUT/ADS7961_LIB_2.c **** 	ADC_Read_by_Channel(ADS3_Port2,ADS3_Pin,12);//pass Ads cs port , pin and channel
 580              	 .loc 2 79 0
 581 0004 0220     	 movs r0,#2
 582 0006 0621     	 movs r1,#6
 583 0008 0C22     	 movs r2,#12
 584 000a FFF7FEFF 	 bl ADC_Read_by_Channel
  80:../VCU_OUT/ADS7961_LIB_2.c **** }
 585              	 .loc 2 80 0
 586 000e 80BD     	 pop {r7,pc}
 587              	 .cfi_endproc
 588              	.LFE608:
 590              	 .section .text.ADS7861_MANUAL_MODE_PKT,"ax",%progbits
 591              	 .align 2
 592              	 .global ADS7861_MANUAL_MODE_PKT
 593              	 .thumb
 594              	 .thumb_func
 596              	ADS7861_MANUAL_MODE_PKT:
 597              	.LFB609:
  81:../VCU_OUT/ADS7961_LIB_2.c **** 
  82:../VCU_OUT/ADS7961_LIB_2.c **** uint16_t ADS7861_MANUAL_MODE_PKT(uint16_t channel) {
 598              	 .loc 2 82 0
 599              	 .cfi_startproc
 600              	 
 601              	 
 602              	 
 603 0000 80B4     	 push {r7}
 604              	.LCFI29:
 605              	 .cfi_def_cfa_offset 4
 606              	 .cfi_offset 7,-4
 607 0002 85B0     	 sub sp,sp,#20
 608              	.LCFI30:
 609              	 .cfi_def_cfa_offset 24
 610 0004 00AF     	 add r7,sp,#0
 611              	.LCFI31:
 612              	 .cfi_def_cfa_register 7
 613 0006 0346     	 mov r3,r0
 614 0008 FB80     	 strh r3,[r7,#6]
  83:../VCU_OUT/ADS7961_LIB_2.c **** 
  84:../VCU_OUT/ADS7961_LIB_2.c **** 	ADS7961Frame_t transmitPkt;
  85:../VCU_OUT/ADS7961_LIB_2.c **** 	transmitPkt.Bit.operating_mode=1;
 615              	 .loc 2 85 0
 616 000a 7B7B     	 ldrb r3,[r7,#13]
 617 000c 0122     	 movs r2,#1
 618 000e 62F30713 	 bfi r3,r2,#4,#4
 619 0012 7B73     	 strb r3,[r7,#13]
  86:../VCU_OUT/ADS7961_LIB_2.c **** 	transmitPkt.Bit.enable_D0_to_D6=0;
 620              	 .loc 2 86 0
 621 0014 7B7B     	 ldrb r3,[r7,#13]
 622 0016 6FF3C303 	 bfc r3,#3,#1
 623 001a 7B73     	 strb r3,[r7,#13]
  87:../VCU_OUT/ADS7961_LIB_2.c **** 	transmitPkt.Bit.channel_selection=channel;
 624              	 .loc 2 87 0
 625 001c FB88     	 ldrh r3,[r7,#6]
 626 001e DBB2     	 uxtb r3,r3
 627 0020 03F00F03 	 and r3,r3,#15
 628 0024 DAB2     	 uxtb r2,r3
 629 0026 BB89     	 ldrh r3,[r7,#12]
 630 0028 62F3CA13 	 bfi r3,r2,#7,#4
 631 002c BB81     	 strh r3,[r7,#12]
  88:../VCU_OUT/ADS7961_LIB_2.c **** 	transmitPkt.Bit.input_range=0;
 632              	 .loc 2 88 0
 633 002e 3B7B     	 ldrb r3,[r7,#12]
 634 0030 6FF38613 	 bfc r3,#6,#1
 635 0034 3B73     	 strb r3,[r7,#12]
  89:../VCU_OUT/ADS7961_LIB_2.c **** 	transmitPkt.Bit.device_operation=0;
 636              	 .loc 2 89 0
 637 0036 3B7B     	 ldrb r3,[r7,#12]
 638 0038 6FF34513 	 bfc r3,#5,#1
 639 003c 3B73     	 strb r3,[r7,#12]
  90:../VCU_OUT/ADS7961_LIB_2.c **** 	transmitPkt.Bit.output_mode=0;
 640              	 .loc 2 90 0
 641 003e 3B7B     	 ldrb r3,[r7,#12]
 642 0040 6FF30413 	 bfc r3,#4,#1
 643 0044 3B73     	 strb r3,[r7,#12]
  91:../VCU_OUT/ADS7961_LIB_2.c **** 	transmitPkt.Bit.GPIO_Output=0;
 644              	 .loc 2 91 0
 645 0046 3B7B     	 ldrb r3,[r7,#12]
 646 0048 6FF30303 	 bfc r3,#0,#4
 647 004c 3B73     	 strb r3,[r7,#12]
  92:../VCU_OUT/ADS7961_LIB_2.c **** 	return  transmitPkt.F_Data;
 648              	 .loc 2 92 0
 649 004e BB89     	 ldrh r3,[r7,#12]
  93:../VCU_OUT/ADS7961_LIB_2.c **** }
 650              	 .loc 2 93 0
 651 0050 1846     	 mov r0,r3
 652 0052 1437     	 adds r7,r7,#20
 653              	.LCFI32:
 654              	 .cfi_def_cfa_offset 4
 655 0054 BD46     	 mov sp,r7
 656              	.LCFI33:
 657              	 .cfi_def_cfa_register 13
 658              	 
 659 0056 5DF8047B 	 ldr r7,[sp],#4
 660              	.LCFI34:
 661              	 .cfi_restore 7
 662              	 .cfi_def_cfa_offset 0
 663 005a 7047     	 bx lr
 664              	 .cfi_endproc
 665              	.LFE609:
 667              	 .section .text.ADC_Read_AllChannel,"ax",%progbits
 668              	 .align 2
 669              	 .global ADC_Read_AllChannel
 670              	 .thumb
 671              	 .thumb_func
 673              	ADC_Read_AllChannel:
 674              	.LFB610:
  94:../VCU_OUT/ADS7961_LIB_2.c **** 
  95:../VCU_OUT/ADS7961_LIB_2.c **** void ADC_Read_AllChannel(uint8_t temp_port_num, const uint8_t pin_number)
  96:../VCU_OUT/ADS7961_LIB_2.c **** {
 675              	 .loc 2 96 0
 676              	 .cfi_startproc
 677              	 
 678              	 
 679 0000 80B5     	 push {r7,lr}
 680              	.LCFI35:
 681              	 .cfi_def_cfa_offset 8
 682              	 .cfi_offset 7,-8
 683              	 .cfi_offset 14,-4
 684 0002 92B0     	 sub sp,sp,#72
 685              	.LCFI36:
 686              	 .cfi_def_cfa_offset 80
 687 0004 00AF     	 add r7,sp,#0
 688              	.LCFI37:
 689              	 .cfi_def_cfa_register 7
 690 0006 0346     	 mov r3,r0
 691 0008 0A46     	 mov r2,r1
 692 000a FB71     	 strb r3,[r7,#7]
 693 000c 1346     	 mov r3,r2
 694 000e BB71     	 strb r3,[r7,#6]
  97:../VCU_OUT/ADS7961_LIB_2.c **** 	XMC_GPIO_PORT_t * temp_ptr;
  98:../VCU_OUT/ADS7961_LIB_2.c **** 
  99:../VCU_OUT/ADS7961_LIB_2.c **** 	if (temp_port_num == 5) {
 695              	 .loc 2 99 0
 696 0010 FB79     	 ldrb r3,[r7,#7]
 697 0012 052B     	 cmp r3,#5
 698 0014 10D1     	 bne .L22
 100:../VCU_OUT/ADS7961_LIB_2.c **** 		temp_ptr = XMC_GPIO_PORT5;
 699              	 .loc 2 100 0
 700 0016 604B     	 ldr r3,.L46
 701 0018 7B64     	 str r3,[r7,#68]
 702              	.LBB6:
 101:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int re_as_loop = 0; re_as_loop < 16; re_as_loop++) {
 703              	 .loc 2 101 0
 704 001a 0023     	 movs r3,#0
 705 001c 3B64     	 str r3,[r7,#64]
 706 001e 07E0     	 b .L23
 707              	.L24:
 102:../VCU_OUT/ADS7961_LIB_2.c **** 			ADS2_avg_receive_data[re_as_loop] = 0;
 708              	 .loc 2 102 0 discriminator 3
 709 0020 5E4A     	 ldr r2,.L46+4
 710 0022 3B6C     	 ldr r3,[r7,#64]
 711 0024 0021     	 movs r1,#0
 712 0026 42F82310 	 str r1,[r2,r3,lsl#2]
 101:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int re_as_loop = 0; re_as_loop < 16; re_as_loop++) {
 713              	 .loc 2 101 0 discriminator 3
 714 002a 3B6C     	 ldr r3,[r7,#64]
 715 002c 0133     	 adds r3,r3,#1
 716 002e 3B64     	 str r3,[r7,#64]
 717              	.L23:
 101:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int re_as_loop = 0; re_as_loop < 16; re_as_loop++) {
 718              	 .loc 2 101 0 is_stmt 0 discriminator 1
 719 0030 3B6C     	 ldr r3,[r7,#64]
 720 0032 0F2B     	 cmp r3,#15
 721 0034 F4DD     	 ble .L24
 722              	.LBE6:
 723 0036 12E0     	 b .L25
 724              	.L22:
 103:../VCU_OUT/ADS7961_LIB_2.c **** 		}
 104:../VCU_OUT/ADS7961_LIB_2.c **** 
 105:../VCU_OUT/ADS7961_LIB_2.c **** 	} else if (temp_port_num == 2) {
 725              	 .loc 2 105 0 is_stmt 1
 726 0038 FB79     	 ldrb r3,[r7,#7]
 727 003a 022B     	 cmp r3,#2
 728 003c 0FD1     	 bne .L25
 106:../VCU_OUT/ADS7961_LIB_2.c **** 		temp_ptr = XMC_GPIO_PORT2;
 729              	 .loc 2 106 0
 730 003e 584B     	 ldr r3,.L46+8
 731 0040 7B64     	 str r3,[r7,#68]
 732              	.LBB7:
 107:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int re_as_loop = 0; re_as_loop < 16; re_as_loop++) {
 733              	 .loc 2 107 0
 734 0042 0023     	 movs r3,#0
 735 0044 FB63     	 str r3,[r7,#60]
 736 0046 07E0     	 b .L26
 737              	.L27:
 108:../VCU_OUT/ADS7961_LIB_2.c **** 			ADS3_avg_receive_data[re_as_loop] = 0;
 738              	 .loc 2 108 0 discriminator 3
 739 0048 564A     	 ldr r2,.L46+12
 740 004a FB6B     	 ldr r3,[r7,#60]
 741 004c 0021     	 movs r1,#0
 742 004e 42F82310 	 str r1,[r2,r3,lsl#2]
 107:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int re_as_loop = 0; re_as_loop < 16; re_as_loop++) {
 743              	 .loc 2 107 0 discriminator 3
 744 0052 FB6B     	 ldr r3,[r7,#60]
 745 0054 0133     	 adds r3,r3,#1
 746 0056 FB63     	 str r3,[r7,#60]
 747              	.L26:
 107:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int re_as_loop = 0; re_as_loop < 16; re_as_loop++) {
 748              	 .loc 2 107 0 is_stmt 0 discriminator 1
 749 0058 FB6B     	 ldr r3,[r7,#60]
 750 005a 0F2B     	 cmp r3,#15
 751 005c F4DD     	 ble .L27
 752              	.L25:
 753              	.LBE7:
 754              	.LBB8:
 109:../VCU_OUT/ADS7961_LIB_2.c **** 		}
 110:../VCU_OUT/ADS7961_LIB_2.c **** 
 111:../VCU_OUT/ADS7961_LIB_2.c **** 	} else if (temp_port_num == 3) {
 112:../VCU_OUT/ADS7961_LIB_2.c **** 
 113:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 114:../VCU_OUT/ADS7961_LIB_2.c **** 
 115:../VCU_OUT/ADS7961_LIB_2.c **** 	for (int i = 0; i < TOTAL_SAMPLES; i++) {
 755              	 .loc 2 115 0 is_stmt 1
 756 005e 0023     	 movs r3,#0
 757 0060 BB63     	 str r3,[r7,#56]
 758 0062 91E0     	 b .L28
 759              	.L45:
 760              	.LBB9:
 116:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int j = 0; j < 16; j++) {
 761              	 .loc 2 116 0
 762 0064 0023     	 movs r3,#0
 763 0066 7B63     	 str r3,[r7,#52]
 764 0068 87E0     	 b .L29
 765              	.L44:
 766              	.LBB10:
 117:../VCU_OUT/ADS7961_LIB_2.c **** 			int pkt = ADS7861_MANUAL_MODE_PKT(j);
 767              	 .loc 2 117 0
 768 006a 7B6B     	 ldr r3,[r7,#52]
 769 006c 9BB2     	 uxth r3,r3
 770 006e 1846     	 mov r0,r3
 771 0070 FFF7FEFF 	 bl ADS7861_MANUAL_MODE_PKT
 772 0074 0346     	 mov r3,r0
 773 0076 7B61     	 str r3,[r7,#20]
 118:../VCU_OUT/ADS7961_LIB_2.c **** 			uint8_t SendData[2] = { (pkt >> 8), (pkt & 0xFF) };
 774              	 .loc 2 118 0
 775 0078 7B69     	 ldr r3,[r7,#20]
 776 007a 1B12     	 asrs r3,r3,#8
 777 007c DBB2     	 uxtb r3,r3
 778 007e 3B74     	 strb r3,[r7,#16]
 779 0080 7B69     	 ldr r3,[r7,#20]
 780 0082 DBB2     	 uxtb r3,r3
 781 0084 7B74     	 strb r3,[r7,#17]
 119:../VCU_OUT/ADS7961_LIB_2.c **** 			uint8_t ReadData[2];
 120:../VCU_OUT/ADS7961_LIB_2.c **** 			XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 782              	 .loc 2 120 0
 783 0086 BB79     	 ldrb r3,[r7,#6]
 784 0088 786C     	 ldr r0,[r7,#68]
 785 008a 1946     	 mov r1,r3
 786 008c FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 121:../VCU_OUT/ADS7961_LIB_2.c **** 			XMC_GPIO_SetOutputLow((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 787              	 .loc 2 121 0
 788 0090 BB79     	 ldrb r3,[r7,#6]
 789 0092 786C     	 ldr r0,[r7,#68]
 790 0094 1946     	 mov r1,r3
 791 0096 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 792              	.LBB11:
 122:../VCU_OUT/ADS7961_LIB_2.c **** 			for (int i = 0; i > 16; i++)
 793              	 .loc 2 122 0
 794 009a 0023     	 movs r3,#0
 795 009c 3B63     	 str r3,[r7,#48]
 796 009e 02E0     	 b .L30
 797              	.L31:
 798              	 .loc 2 122 0 is_stmt 0 discriminator 3
 799 00a0 3B6B     	 ldr r3,[r7,#48]
 800 00a2 0133     	 adds r3,r3,#1
 801 00a4 3B63     	 str r3,[r7,#48]
 802              	.L30:
 803              	 .loc 2 122 0 discriminator 1
 804 00a6 3B6B     	 ldr r3,[r7,#48]
 805 00a8 102B     	 cmp r3,#16
 806 00aa F9DC     	 bgt .L31
 807              	.LBE11:
 123:../VCU_OUT/ADS7961_LIB_2.c **** 				;
 124:../VCU_OUT/ADS7961_LIB_2.c **** 			SPI_MASTER_Transmit(&SPI_MASTER_0, SendData, 2);
 808              	 .loc 2 124 0 is_stmt 1
 809 00ac 07F11003 	 add r3,r7,#16
 810 00b0 3D48     	 ldr r0,.L46+16
 811 00b2 1946     	 mov r1,r3
 812 00b4 0222     	 movs r2,#2
 813 00b6 FFF7FEFF 	 bl SPI_MASTER_Transmit
 814              	.LBB12:
 125:../VCU_OUT/ADS7961_LIB_2.c **** 			for (int i = 0; i > 9; i++)
 815              	 .loc 2 125 0
 816 00ba 0023     	 movs r3,#0
 817 00bc FB62     	 str r3,[r7,#44]
 818 00be 02E0     	 b .L32
 819              	.L33:
 820              	 .loc 2 125 0 is_stmt 0 discriminator 3
 821 00c0 FB6A     	 ldr r3,[r7,#44]
 822 00c2 0133     	 adds r3,r3,#1
 823 00c4 FB62     	 str r3,[r7,#44]
 824              	.L32:
 825              	 .loc 2 125 0 discriminator 1
 826 00c6 FB6A     	 ldr r3,[r7,#44]
 827 00c8 092B     	 cmp r3,#9
 828 00ca F9DC     	 bgt .L33
 829              	.LBE12:
 126:../VCU_OUT/ADS7961_LIB_2.c **** 				;
 127:../VCU_OUT/ADS7961_LIB_2.c **** 			XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 830              	 .loc 2 127 0 is_stmt 1
 831 00cc BB79     	 ldrb r3,[r7,#6]
 832 00ce 786C     	 ldr r0,[r7,#68]
 833 00d0 1946     	 mov r1,r3
 834 00d2 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 835              	.LBB13:
 128:../VCU_OUT/ADS7961_LIB_2.c **** 			;
 129:../VCU_OUT/ADS7961_LIB_2.c **** 			for (int i = 0; i > 2; i++)
 836              	 .loc 2 129 0
 837 00d6 0023     	 movs r3,#0
 838 00d8 BB62     	 str r3,[r7,#40]
 839 00da 02E0     	 b .L34
 840              	.L35:
 841              	 .loc 2 129 0 is_stmt 0 discriminator 3
 842 00dc BB6A     	 ldr r3,[r7,#40]
 843 00de 0133     	 adds r3,r3,#1
 844 00e0 BB62     	 str r3,[r7,#40]
 845              	.L34:
 846              	 .loc 2 129 0 discriminator 1
 847 00e2 BB6A     	 ldr r3,[r7,#40]
 848 00e4 022B     	 cmp r3,#2
 849 00e6 F9DC     	 bgt .L35
 850              	.LBE13:
 130:../VCU_OUT/ADS7961_LIB_2.c **** 				;
 131:../VCU_OUT/ADS7961_LIB_2.c **** 			XMC_GPIO_SetOutputLow((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 851              	 .loc 2 131 0 is_stmt 1
 852 00e8 BB79     	 ldrb r3,[r7,#6]
 853 00ea 786C     	 ldr r0,[r7,#68]
 854 00ec 1946     	 mov r1,r3
 855 00ee FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 856              	.LBB14:
 132:../VCU_OUT/ADS7961_LIB_2.c **** 			for (int i = 0; i > 9; i++)
 857              	 .loc 2 132 0
 858 00f2 0023     	 movs r3,#0
 859 00f4 7B62     	 str r3,[r7,#36]
 860 00f6 02E0     	 b .L36
 861              	.L37:
 862              	 .loc 2 132 0 is_stmt 0 discriminator 3
 863 00f8 7B6A     	 ldr r3,[r7,#36]
 864 00fa 0133     	 adds r3,r3,#1
 865 00fc 7B62     	 str r3,[r7,#36]
 866              	.L36:
 867              	 .loc 2 132 0 discriminator 1
 868 00fe 7B6A     	 ldr r3,[r7,#36]
 869 0100 092B     	 cmp r3,#9
 870 0102 F9DC     	 bgt .L37
 871              	.LBE14:
 133:../VCU_OUT/ADS7961_LIB_2.c **** 				;
 134:../VCU_OUT/ADS7961_LIB_2.c **** 			SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 2);
 872              	 .loc 2 134 0 is_stmt 1
 873 0104 07F10C03 	 add r3,r7,#12
 874 0108 2748     	 ldr r0,.L46+16
 875 010a 1946     	 mov r1,r3
 876 010c 0222     	 movs r2,#2
 877 010e FFF7FEFF 	 bl SPI_MASTER_Receive
 878              	.LBB15:
 135:../VCU_OUT/ADS7961_LIB_2.c **** 			for (int i = 0; i > 2; i++)
 879              	 .loc 2 135 0
 880 0112 0023     	 movs r3,#0
 881 0114 3B62     	 str r3,[r7,#32]
 882 0116 02E0     	 b .L38
 883              	.L39:
 884              	 .loc 2 135 0 is_stmt 0 discriminator 3
 885 0118 3B6A     	 ldr r3,[r7,#32]
 886 011a 0133     	 adds r3,r3,#1
 887 011c 3B62     	 str r3,[r7,#32]
 888              	.L38:
 889              	 .loc 2 135 0 discriminator 1
 890 011e 3B6A     	 ldr r3,[r7,#32]
 891 0120 022B     	 cmp r3,#2
 892 0122 F9DC     	 bgt .L39
 893              	.LBE15:
 136:../VCU_OUT/ADS7961_LIB_2.c **** 				;
 137:../VCU_OUT/ADS7961_LIB_2.c **** 			XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 894              	 .loc 2 137 0 is_stmt 1
 895 0124 BB79     	 ldrb r3,[r7,#6]
 896 0126 786C     	 ldr r0,[r7,#68]
 897 0128 1946     	 mov r1,r3
 898 012a FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 899              	.LBB16:
 138:../VCU_OUT/ADS7961_LIB_2.c **** 			;
 139:../VCU_OUT/ADS7961_LIB_2.c **** 			for (int i = 0; i > 9; i++)
 900              	 .loc 2 139 0
 901 012e 0023     	 movs r3,#0
 902 0130 FB61     	 str r3,[r7,#28]
 903 0132 02E0     	 b .L40
 904              	.L41:
 905              	 .loc 2 139 0 is_stmt 0 discriminator 3
 906 0134 FB69     	 ldr r3,[r7,#28]
 907 0136 0133     	 adds r3,r3,#1
 908 0138 FB61     	 str r3,[r7,#28]
 909              	.L40:
 910              	 .loc 2 139 0 discriminator 1
 911 013a FB69     	 ldr r3,[r7,#28]
 912 013c 092B     	 cmp r3,#9
 913 013e F9DC     	 bgt .L41
 914              	.LBE16:
 140:../VCU_OUT/ADS7961_LIB_2.c **** 				;
 141:../VCU_OUT/ADS7961_LIB_2.c **** 			XMC_GPIO_SetOutputLow((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 915              	 .loc 2 141 0 is_stmt 1
 916 0140 BB79     	 ldrb r3,[r7,#6]
 917 0142 786C     	 ldr r0,[r7,#68]
 918 0144 1946     	 mov r1,r3
 919 0146 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 920              	.LBB17:
 142:../VCU_OUT/ADS7961_LIB_2.c **** 			for (int i = 0; i > 9; i++)
 921              	 .loc 2 142 0
 922 014a 0023     	 movs r3,#0
 923 014c BB61     	 str r3,[r7,#24]
 924 014e 02E0     	 b .L42
 925              	.L43:
 926              	 .loc 2 142 0 is_stmt 0 discriminator 3
 927 0150 BB69     	 ldr r3,[r7,#24]
 928 0152 0133     	 adds r3,r3,#1
 929 0154 BB61     	 str r3,[r7,#24]
 930              	.L42:
 931              	 .loc 2 142 0 discriminator 1
 932 0156 BB69     	 ldr r3,[r7,#24]
 933 0158 092B     	 cmp r3,#9
 934 015a F9DC     	 bgt .L43
 935              	.LBE17:
 143:../VCU_OUT/ADS7961_LIB_2.c **** 				;
 144:../VCU_OUT/ADS7961_LIB_2.c **** 			SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 2);
 936              	 .loc 2 144 0 is_stmt 1
 937 015c 07F10C03 	 add r3,r7,#12
 938 0160 1148     	 ldr r0,.L46+16
 939 0162 1946     	 mov r1,r3
 940 0164 0222     	 movs r2,#2
 941 0166 FFF7FEFF 	 bl SPI_MASTER_Receive
 145:../VCU_OUT/ADS7961_LIB_2.c **** 
 146:../VCU_OUT/ADS7961_LIB_2.c **** 			XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 942              	 .loc 2 146 0
 943 016a BB79     	 ldrb r3,[r7,#6]
 944 016c 786C     	 ldr r0,[r7,#68]
 945 016e 1946     	 mov r1,r3
 946 0170 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 947              	.LBE10:
 116:../VCU_OUT/ADS7961_LIB_2.c **** 			int pkt = ADS7861_MANUAL_MODE_PKT(j);
 948              	 .loc 2 116 0
 949 0174 7B6B     	 ldr r3,[r7,#52]
 950 0176 0133     	 adds r3,r3,#1
 951 0178 7B63     	 str r3,[r7,#52]
 952              	.L29:
 116:../VCU_OUT/ADS7961_LIB_2.c **** 			int pkt = ADS7861_MANUAL_MODE_PKT(j);
 953              	 .loc 2 116 0 is_stmt 0 discriminator 2
 954 017a 7B6B     	 ldr r3,[r7,#52]
 955 017c 0F2B     	 cmp r3,#15
 956 017e 7FF774AF 	 ble .L44
 957              	.LBE9:
 115:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int j = 0; j < 16; j++) {
 958              	 .loc 2 115 0 is_stmt 1 discriminator 2
 959 0182 BB6B     	 ldr r3,[r7,#56]
 960 0184 0133     	 adds r3,r3,#1
 961 0186 BB63     	 str r3,[r7,#56]
 962              	.L28:
 115:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int j = 0; j < 16; j++) {
 963              	 .loc 2 115 0 is_stmt 0 discriminator 1
 964 0188 BB6B     	 ldr r3,[r7,#56]
 965 018a 312B     	 cmp r3,#49
 966 018c 7FF76AAF 	 ble .L45
 967              	.LBE8:
 147:../VCU_OUT/ADS7961_LIB_2.c **** 			;
 148:../VCU_OUT/ADS7961_LIB_2.c **** 
 149:../VCU_OUT/ADS7961_LIB_2.c **** 			if (temp_port_num == 5) {
 150:../VCU_OUT/ADS7961_LIB_2.c **** //				ADS2_receive_data[j] = ((ReadData[0] & 0x0F) << 4) | ((ReadData[1] & 0xF0) >> 4);
 151:../VCU_OUT/ADS7961_LIB_2.c **** //				ADS2_recive_channel[j] = ((ReadData[0] & 0xF0) >> 4);
 152:../VCU_OUT/ADS7961_LIB_2.c **** 
 153:../VCU_OUT/ADS7961_LIB_2.c **** //				ADS2_avg_receive_data[j] += ADS2_receive_data[j];
 154:../VCU_OUT/ADS7961_LIB_2.c **** 			} else if (temp_port_num == 2) {
 155:../VCU_OUT/ADS7961_LIB_2.c **** //				ADS3_receive_data[j] = ((ReadData[0] & 0x0F) << 4) | ((ReadData[1] & 0xF0) >> 4);
 156:../VCU_OUT/ADS7961_LIB_2.c **** //				ADS3_recive_channel[j] = ((ReadData[0] & 0xF0) >> 4);
 157:../VCU_OUT/ADS7961_LIB_2.c **** 
 158:../VCU_OUT/ADS7961_LIB_2.c **** //				ADS3_avg_receive_data[j] += ADS3_receive_data[j];
 159:../VCU_OUT/ADS7961_LIB_2.c **** 			}
 160:../VCU_OUT/ADS7961_LIB_2.c **** 		}
 161:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 162:../VCU_OUT/ADS7961_LIB_2.c **** }
 968              	 .loc 2 162 0 is_stmt 1
 969 0190 4837     	 adds r7,r7,#72
 970              	.LCFI38:
 971              	 .cfi_def_cfa_offset 8
 972 0192 BD46     	 mov sp,r7
 973              	.LCFI39:
 974              	 .cfi_def_cfa_register 13
 975              	 
 976 0194 80BD     	 pop {r7,pc}
 977              	.L47:
 978 0196 00BF     	 .align 2
 979              	.L46:
 980 0198 00850248 	 .word 1208124672
 981 019c 00000000 	 .word ADS2_avg_receive_data
 982 01a0 00820248 	 .word 1208123904
 983 01a4 00000000 	 .word ADS3_avg_receive_data
 984 01a8 00000000 	 .word SPI_MASTER_0
 985              	 .cfi_endproc
 986              	.LFE610:
 988              	 .section .text.SPI_ADS7961_AUTO2_Init,"ax",%progbits
 989              	 .align 2
 990              	 .global SPI_ADS7961_AUTO2_Init
 991              	 .thumb
 992              	 .thumb_func
 994              	SPI_ADS7961_AUTO2_Init:
 995              	.LFB611:
 163:../VCU_OUT/ADS7961_LIB_2.c **** 
 164:../VCU_OUT/ADS7961_LIB_2.c **** void SPI_ADS7961_AUTO2_Init(uint8_t temp_port_num ,uint8_t pin_number)
 165:../VCU_OUT/ADS7961_LIB_2.c **** {
 996              	 .loc 2 165 0
 997              	 .cfi_startproc
 998              	 
 999              	 
 1000 0000 80B5     	 push {r7,lr}
 1001              	.LCFI40:
 1002              	 .cfi_def_cfa_offset 8
 1003              	 .cfi_offset 7,-8
 1004              	 .cfi_offset 14,-4
 1005 0002 8CB0     	 sub sp,sp,#48
 1006              	.LCFI41:
 1007              	 .cfi_def_cfa_offset 56
 1008 0004 00AF     	 add r7,sp,#0
 1009              	.LCFI42:
 1010              	 .cfi_def_cfa_register 7
 1011 0006 0346     	 mov r3,r0
 1012 0008 0A46     	 mov r2,r1
 1013 000a FB71     	 strb r3,[r7,#7]
 1014 000c 1346     	 mov r3,r2
 1015 000e BB71     	 strb r3,[r7,#6]
 166:../VCU_OUT/ADS7961_LIB_2.c **** 	XMC_GPIO_PORT_t * temp_ptr;
 167:../VCU_OUT/ADS7961_LIB_2.c **** 
 168:../VCU_OUT/ADS7961_LIB_2.c **** 	if(temp_port_num == 5)
 1016              	 .loc 2 168 0
 1017 0010 FB79     	 ldrb r3,[r7,#7]
 1018 0012 052B     	 cmp r3,#5
 1019 0014 07D1     	 bne .L49
 169:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 170:../VCU_OUT/ADS7961_LIB_2.c **** 		temp_ptr = XMC_GPIO_PORT5;
 1020              	 .loc 2 170 0
 1021 0016 484B     	 ldr r3,.L63
 1022 0018 FB62     	 str r3,[r7,#44]
 171:../VCU_OUT/ADS7961_LIB_2.c **** 		memset(ADS2_avg_receive_data, 0, sizeof(ADS2_avg_receive_data));
 1023              	 .loc 2 171 0
 1024 001a 4848     	 ldr r0,.L63+4
 1025 001c 0021     	 movs r1,#0
 1026 001e 4022     	 movs r2,#64
 1027 0020 FFF7FEFF 	 bl memset
 1028 0024 09E0     	 b .L50
 1029              	.L49:
 172:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 173:../VCU_OUT/ADS7961_LIB_2.c **** 	else if(temp_port_num == 2)
 1030              	 .loc 2 173 0
 1031 0026 FB79     	 ldrb r3,[r7,#7]
 1032 0028 022B     	 cmp r3,#2
 1033 002a 06D1     	 bne .L50
 174:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 175:../VCU_OUT/ADS7961_LIB_2.c **** 		temp_ptr = XMC_GPIO_PORT2;
 1034              	 .loc 2 175 0
 1035 002c 444B     	 ldr r3,.L63+8
 1036 002e FB62     	 str r3,[r7,#44]
 176:../VCU_OUT/ADS7961_LIB_2.c **** 		memset(ADS3_avg_receive_data, 0, sizeof(ADS3_avg_receive_data));
 1037              	 .loc 2 176 0
 1038 0030 4448     	 ldr r0,.L63+12
 1039 0032 0021     	 movs r1,#0
 1040 0034 4022     	 movs r2,#64
 1041 0036 FFF7FEFF 	 bl memset
 1042              	.L50:
 177:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 178:../VCU_OUT/ADS7961_LIB_2.c **** 
 179:../VCU_OUT/ADS7961_LIB_2.c **** 	uint8_t SendData[2] = { 0x3C, 0x00 }; //{MODE_CONTROL_AUTO2 >> 8, MODE_CONTROL_AUTO2 && 0xFF};
 1043              	 .loc 2 179 0
 1044 003a 3C23     	 movs r3,#60
 1045 003c 3B75     	 strb r3,[r7,#20]
 1046 003e 0023     	 movs r3,#0
 1047 0040 7B75     	 strb r3,[r7,#21]
 180:../VCU_OUT/ADS7961_LIB_2.c **** 	uint8_t SendData1[2];
 181:../VCU_OUT/ADS7961_LIB_2.c **** 
 182:../VCU_OUT/ADS7961_LIB_2.c **** 	if(temp_port_num == 5)
 1048              	 .loc 2 182 0
 1049 0042 FB79     	 ldrb r3,[r7,#7]
 1050 0044 052B     	 cmp r3,#5
 1051 0046 04D1     	 bne .L51
 183:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 184:../VCU_OUT/ADS7961_LIB_2.c **** 		SendData1[0] = 0x93;   //{PROGRAM_REGISTER_AUTO2 >>8, PROGRAM_REGISTER_AUTO2 && 0xFF};
 1052              	 .loc 2 184 0
 1053 0048 9323     	 movs r3,#147
 1054 004a 3B74     	 strb r3,[r7,#16]
 185:../VCU_OUT/ADS7961_LIB_2.c **** 		SendData1[1] =  0xC0;
 1055              	 .loc 2 185 0
 1056 004c C023     	 movs r3,#192
 1057 004e 7B74     	 strb r3,[r7,#17]
 1058 0050 06E0     	 b .L52
 1059              	.L51:
 186:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 187:../VCU_OUT/ADS7961_LIB_2.c **** 	else if(temp_port_num == 2)
 1060              	 .loc 2 187 0
 1061 0052 FB79     	 ldrb r3,[r7,#7]
 1062 0054 022B     	 cmp r3,#2
 1063 0056 03D1     	 bne .L52
 188:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 189:../VCU_OUT/ADS7961_LIB_2.c **** 		SendData1[0] = 0x93;   //{PROGRAM_REGISTER_AUTO2 >>8, PROGRAM_REGISTER_AUTO2 && 0xFF};
 1064              	 .loc 2 189 0
 1065 0058 9323     	 movs r3,#147
 1066 005a 3B74     	 strb r3,[r7,#16]
 190:../VCU_OUT/ADS7961_LIB_2.c **** 		SendData1[1] =  0x00;
 1067              	 .loc 2 190 0
 1068 005c 0023     	 movs r3,#0
 1069 005e 7B74     	 strb r3,[r7,#17]
 1070              	.L52:
 191:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 192:../VCU_OUT/ADS7961_LIB_2.c **** 	uint8_t SendData2[2] = {0x00,0x00} ; //{CONTINUE_MODE_PREVIOUS >>8, CONTINUE_MODE_PREVIOUS && 0xFF
 1071              	 .loc 2 192 0
 1072 0060 0023     	 movs r3,#0
 1073 0062 3B73     	 strb r3,[r7,#12]
 1074 0064 0023     	 movs r3,#0
 1075 0066 7B73     	 strb r3,[r7,#13]
 193:../VCU_OUT/ADS7961_LIB_2.c **** 
 194:../VCU_OUT/ADS7961_LIB_2.c **** 	XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *)temp_ptr,pin_number);
 1076              	 .loc 2 194 0
 1077 0068 BB79     	 ldrb r3,[r7,#6]
 1078 006a F86A     	 ldr r0,[r7,#44]
 1079 006c 1946     	 mov r1,r3
 1080 006e FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 195:../VCU_OUT/ADS7961_LIB_2.c **** 
 196:../VCU_OUT/ADS7961_LIB_2.c **** 	XMC_GPIO_SetOutputLow((XMC_GPIO_PORT_t *)temp_ptr,pin_number);
 1081              	 .loc 2 196 0
 1082 0072 BB79     	 ldrb r3,[r7,#6]
 1083 0074 F86A     	 ldr r0,[r7,#44]
 1084 0076 1946     	 mov r1,r3
 1085 0078 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 1086              	.LBB18:
 197:../VCU_OUT/ADS7961_LIB_2.c **** 	for (int i = 0; i > 9; i++);
 1087              	 .loc 2 197 0
 1088 007c 0023     	 movs r3,#0
 1089 007e BB62     	 str r3,[r7,#40]
 1090 0080 02E0     	 b .L53
 1091              	.L54:
 1092              	 .loc 2 197 0 is_stmt 0 discriminator 3
 1093 0082 BB6A     	 ldr r3,[r7,#40]
 1094 0084 0133     	 adds r3,r3,#1
 1095 0086 BB62     	 str r3,[r7,#40]
 1096              	.L53:
 1097              	 .loc 2 197 0 discriminator 1
 1098 0088 BB6A     	 ldr r3,[r7,#40]
 1099 008a 092B     	 cmp r3,#9
 1100 008c F9DC     	 bgt .L54
 1101              	.LBE18:
 198:../VCU_OUT/ADS7961_LIB_2.c **** 	SPI_MASTER_Transmit(&SPI_MASTER_0, SendData1, 2);
 1102              	 .loc 2 198 0 is_stmt 1
 1103 008e 07F11003 	 add r3,r7,#16
 1104 0092 2D48     	 ldr r0,.L63+16
 1105 0094 1946     	 mov r1,r3
 1106 0096 0222     	 movs r2,#2
 1107 0098 FFF7FEFF 	 bl SPI_MASTER_Transmit
 199:../VCU_OUT/ADS7961_LIB_2.c **** 	XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *)temp_ptr,pin_number);
 1108              	 .loc 2 199 0
 1109 009c BB79     	 ldrb r3,[r7,#6]
 1110 009e F86A     	 ldr r0,[r7,#44]
 1111 00a0 1946     	 mov r1,r3
 1112 00a2 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 200:../VCU_OUT/ADS7961_LIB_2.c **** 
 201:../VCU_OUT/ADS7961_LIB_2.c ****     XMC_GPIO_SetOutputLow((XMC_GPIO_PORT_t *)temp_ptr,pin_number);
 1113              	 .loc 2 201 0
 1114 00a6 BB79     	 ldrb r3,[r7,#6]
 1115 00a8 F86A     	 ldr r0,[r7,#44]
 1116 00aa 1946     	 mov r1,r3
 1117 00ac FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 1118              	.LBB19:
 202:../VCU_OUT/ADS7961_LIB_2.c **** 	for (int i = 0; i > 9; i++);
 1119              	 .loc 2 202 0
 1120 00b0 0023     	 movs r3,#0
 1121 00b2 7B62     	 str r3,[r7,#36]
 1122 00b4 02E0     	 b .L55
 1123              	.L56:
 1124              	 .loc 2 202 0 is_stmt 0 discriminator 3
 1125 00b6 7B6A     	 ldr r3,[r7,#36]
 1126 00b8 0133     	 adds r3,r3,#1
 1127 00ba 7B62     	 str r3,[r7,#36]
 1128              	.L55:
 1129              	 .loc 2 202 0 discriminator 1
 1130 00bc 7B6A     	 ldr r3,[r7,#36]
 1131 00be 092B     	 cmp r3,#9
 1132 00c0 F9DC     	 bgt .L56
 1133              	.LBE19:
 203:../VCU_OUT/ADS7961_LIB_2.c **** 	SPI_MASTER_Transmit(&SPI_MASTER_0, SendData, 2);
 1134              	 .loc 2 203 0 is_stmt 1
 1135 00c2 07F11403 	 add r3,r7,#20
 1136 00c6 2048     	 ldr r0,.L63+16
 1137 00c8 1946     	 mov r1,r3
 1138 00ca 0222     	 movs r2,#2
 1139 00cc FFF7FEFF 	 bl SPI_MASTER_Transmit
 1140              	.LBB20:
 204:../VCU_OUT/ADS7961_LIB_2.c **** 	for (int i = 0; i > 9; i++);
 1141              	 .loc 2 204 0
 1142 00d0 0023     	 movs r3,#0
 1143 00d2 3B62     	 str r3,[r7,#32]
 1144 00d4 02E0     	 b .L57
 1145              	.L58:
 1146              	 .loc 2 204 0 is_stmt 0 discriminator 3
 1147 00d6 3B6A     	 ldr r3,[r7,#32]
 1148 00d8 0133     	 adds r3,r3,#1
 1149 00da 3B62     	 str r3,[r7,#32]
 1150              	.L57:
 1151              	 .loc 2 204 0 discriminator 1
 1152 00dc 3B6A     	 ldr r3,[r7,#32]
 1153 00de 092B     	 cmp r3,#9
 1154 00e0 F9DC     	 bgt .L58
 1155              	.LBE20:
 205:../VCU_OUT/ADS7961_LIB_2.c **** 	XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *)temp_ptr,pin_number);
 1156              	 .loc 2 205 0 is_stmt 1
 1157 00e2 BB79     	 ldrb r3,[r7,#6]
 1158 00e4 F86A     	 ldr r0,[r7,#44]
 1159 00e6 1946     	 mov r1,r3
 1160 00e8 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 206:../VCU_OUT/ADS7961_LIB_2.c **** 
 207:../VCU_OUT/ADS7961_LIB_2.c **** 	XMC_GPIO_SetOutputLow((XMC_GPIO_PORT_t *)temp_ptr,pin_number);
 1161              	 .loc 2 207 0
 1162 00ec BB79     	 ldrb r3,[r7,#6]
 1163 00ee F86A     	 ldr r0,[r7,#44]
 1164 00f0 1946     	 mov r1,r3
 1165 00f2 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 1166              	.LBB21:
 208:../VCU_OUT/ADS7961_LIB_2.c **** 	for (int i = 0; i > 9; i++);
 1167              	 .loc 2 208 0
 1168 00f6 0023     	 movs r3,#0
 1169 00f8 FB61     	 str r3,[r7,#28]
 1170 00fa 02E0     	 b .L59
 1171              	.L60:
 1172              	 .loc 2 208 0 is_stmt 0 discriminator 3
 1173 00fc FB69     	 ldr r3,[r7,#28]
 1174 00fe 0133     	 adds r3,r3,#1
 1175 0100 FB61     	 str r3,[r7,#28]
 1176              	.L59:
 1177              	 .loc 2 208 0 discriminator 1
 1178 0102 FB69     	 ldr r3,[r7,#28]
 1179 0104 092B     	 cmp r3,#9
 1180 0106 F9DC     	 bgt .L60
 1181              	.LBE21:
 209:../VCU_OUT/ADS7961_LIB_2.c **** 	// for CONTINUE MODE PREVIOUS
 210:../VCU_OUT/ADS7961_LIB_2.c **** 	SPI_MASTER_Transmit(&SPI_MASTER_0, SendData2, 2);
 1182              	 .loc 2 210 0 is_stmt 1
 1183 0108 07F10C03 	 add r3,r7,#12
 1184 010c 0E48     	 ldr r0,.L63+16
 1185 010e 1946     	 mov r1,r3
 1186 0110 0222     	 movs r2,#2
 1187 0112 FFF7FEFF 	 bl SPI_MASTER_Transmit
 1188              	.LBB22:
 211:../VCU_OUT/ADS7961_LIB_2.c **** 	for (int i = 0; i > 9; i++);
 1189              	 .loc 2 211 0
 1190 0116 0023     	 movs r3,#0
 1191 0118 BB61     	 str r3,[r7,#24]
 1192 011a 02E0     	 b .L61
 1193              	.L62:
 1194              	 .loc 2 211 0 is_stmt 0 discriminator 3
 1195 011c BB69     	 ldr r3,[r7,#24]
 1196 011e 0133     	 adds r3,r3,#1
 1197 0120 BB61     	 str r3,[r7,#24]
 1198              	.L61:
 1199              	 .loc 2 211 0 discriminator 1
 1200 0122 BB69     	 ldr r3,[r7,#24]
 1201 0124 092B     	 cmp r3,#9
 1202 0126 F9DC     	 bgt .L62
 1203              	.LBE22:
 212:../VCU_OUT/ADS7961_LIB_2.c **** 
 213:../VCU_OUT/ADS7961_LIB_2.c **** 	XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *)temp_ptr,pin_number);
 1204              	 .loc 2 213 0 is_stmt 1
 1205 0128 BB79     	 ldrb r3,[r7,#6]
 1206 012a F86A     	 ldr r0,[r7,#44]
 1207 012c 1946     	 mov r1,r3
 1208 012e FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 214:../VCU_OUT/ADS7961_LIB_2.c **** }
 1209              	 .loc 2 214 0
 1210 0132 3037     	 adds r7,r7,#48
 1211              	.LCFI43:
 1212              	 .cfi_def_cfa_offset 8
 1213 0134 BD46     	 mov sp,r7
 1214              	.LCFI44:
 1215              	 .cfi_def_cfa_register 13
 1216              	 
 1217 0136 80BD     	 pop {r7,pc}
 1218              	.L64:
 1219              	 .align 2
 1220              	.L63:
 1221 0138 00850248 	 .word 1208124672
 1222 013c 00000000 	 .word ADS2_avg_receive_data
 1223 0140 00820248 	 .word 1208123904
 1224 0144 00000000 	 .word ADS3_avg_receive_data
 1225 0148 00000000 	 .word SPI_MASTER_0
 1226              	 .cfi_endproc
 1227              	.LFE611:
 1229              	 .section .text.SPI_ADS7961_AUTO_MODE2,"ax",%progbits
 1230              	 .align 2
 1231              	 .global SPI_ADS7961_AUTO_MODE2
 1232              	 .thumb
 1233              	 .thumb_func
 1235              	SPI_ADS7961_AUTO_MODE2:
 1236              	.LFB612:
 215:../VCU_OUT/ADS7961_LIB_2.c **** 
 216:../VCU_OUT/ADS7961_LIB_2.c **** //
 217:../VCU_OUT/ADS7961_LIB_2.c **** void SPI_ADS7961_AUTO_MODE2(uint8_t temp_port_num, uint8_t pin_number)
 218:../VCU_OUT/ADS7961_LIB_2.c **** {
 1237              	 .loc 2 218 0
 1238              	 .cfi_startproc
 1239              	 
 1240              	 
 1241 0000 90B5     	 push {r4,r7,lr}
 1242              	.LCFI45:
 1243              	 .cfi_def_cfa_offset 12
 1244              	 .cfi_offset 4,-12
 1245              	 .cfi_offset 7,-8
 1246              	 .cfi_offset 14,-4
 1247 0002 8BB0     	 sub sp,sp,#44
 1248              	.LCFI46:
 1249              	 .cfi_def_cfa_offset 56
 1250 0004 00AF     	 add r7,sp,#0
 1251              	.LCFI47:
 1252              	 .cfi_def_cfa_register 7
 1253 0006 0346     	 mov r3,r0
 1254 0008 0A46     	 mov r2,r1
 1255 000a FB71     	 strb r3,[r7,#7]
 1256 000c 1346     	 mov r3,r2
 1257 000e BB71     	 strb r3,[r7,#6]
 219:../VCU_OUT/ADS7961_LIB_2.c **** 	uint8_t loop = 16;
 1258              	 .loc 2 219 0
 1259 0010 1023     	 movs r3,#16
 1260 0012 87F82730 	 strb r3,[r7,#39]
 220:../VCU_OUT/ADS7961_LIB_2.c **** 	uint8_t ReadData[2];
 221:../VCU_OUT/ADS7961_LIB_2.c **** //	if(flag==false)
 222:../VCU_OUT/ADS7961_LIB_2.c **** //	{
 223:../VCU_OUT/ADS7961_LIB_2.c **** 	SPI_ADS7961_AUTO2_Init(temp_port_num, pin_number);
 1261              	 .loc 2 223 0
 1262 0016 FA79     	 ldrb r2,[r7,#7]
 1263 0018 BB79     	 ldrb r3,[r7,#6]
 1264 001a 1046     	 mov r0,r2
 1265 001c 1946     	 mov r1,r3
 1266 001e FFF7FEFF 	 bl SPI_ADS7961_AUTO2_Init
 224:../VCU_OUT/ADS7961_LIB_2.c **** 	flag = true;
 1267              	 .loc 2 224 0
 1268 0022 524B     	 ldr r3,.L82
 1269 0024 0122     	 movs r2,#1
 1270 0026 1A70     	 strb r2,[r3]
 225:../VCU_OUT/ADS7961_LIB_2.c **** //	}
 226:../VCU_OUT/ADS7961_LIB_2.c **** 
 227:../VCU_OUT/ADS7961_LIB_2.c **** 	XMC_GPIO_PORT_t * temp_ptr;
 228:../VCU_OUT/ADS7961_LIB_2.c **** 
 229:../VCU_OUT/ADS7961_LIB_2.c **** 	if (temp_port_num == 5)
 1271              	 .loc 2 229 0
 1272 0028 FB79     	 ldrb r3,[r7,#7]
 1273 002a 052B     	 cmp r3,#5
 1274 002c 02D1     	 bne .L66
 230:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 231:../VCU_OUT/ADS7961_LIB_2.c **** 		temp_ptr = XMC_GPIO_PORT5;
 1275              	 .loc 2 231 0
 1276 002e 504B     	 ldr r3,.L82+4
 1277 0030 3B62     	 str r3,[r7,#32]
 1278 0032 07E0     	 b .L67
 1279              	.L66:
 232:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 233:../VCU_OUT/ADS7961_LIB_2.c **** 	else if (temp_port_num == 2)
 1280              	 .loc 2 233 0
 1281 0034 FB79     	 ldrb r3,[r7,#7]
 1282 0036 022B     	 cmp r3,#2
 1283 0038 04D1     	 bne .L67
 234:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 235:../VCU_OUT/ADS7961_LIB_2.c **** 		temp_ptr = XMC_GPIO_PORT2;
 1284              	 .loc 2 235 0
 1285 003a 4E4B     	 ldr r3,.L82+8
 1286 003c 3B62     	 str r3,[r7,#32]
 236:../VCU_OUT/ADS7961_LIB_2.c **** 		loop = 13;
 1287              	 .loc 2 236 0
 1288 003e 0D23     	 movs r3,#13
 1289 0040 87F82730 	 strb r3,[r7,#39]
 1290              	.L67:
 237:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 238:../VCU_OUT/ADS7961_LIB_2.c **** 
 239:../VCU_OUT/ADS7961_LIB_2.c **** 	if(adc2_array_counter > 49)
 1291              	 .loc 2 239 0
 1292 0044 4C4B     	 ldr r3,.L82+12
 1293 0046 1B78     	 ldrb r3,[r3]
 1294 0048 312B     	 cmp r3,#49
 1295 004a 02D9     	 bls .L68
 240:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 241:../VCU_OUT/ADS7961_LIB_2.c **** 		adc2_array_counter = 0;
 1296              	 .loc 2 241 0
 1297 004c 4A4B     	 ldr r3,.L82+12
 1298 004e 0022     	 movs r2,#0
 1299 0050 1A70     	 strb r2,[r3]
 1300              	.L68:
 242:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 243:../VCU_OUT/ADS7961_LIB_2.c **** 
 244:../VCU_OUT/ADS7961_LIB_2.c **** 	if(adc3_array_counter > 49)
 1301              	 .loc 2 244 0
 1302 0052 4A4B     	 ldr r3,.L82+16
 1303 0054 1B78     	 ldrb r3,[r3]
 1304 0056 312B     	 cmp r3,#49
 1305 0058 02D9     	 bls .L69
 245:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 246:../VCU_OUT/ADS7961_LIB_2.c **** 		adc3_array_counter = 0;
 1306              	 .loc 2 246 0
 1307 005a 484B     	 ldr r3,.L82+16
 1308 005c 0022     	 movs r2,#0
 1309 005e 1A70     	 strb r2,[r3]
 1310              	.L69:
 1311              	.LBB23:
 247:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 248:../VCU_OUT/ADS7961_LIB_2.c **** 
 249:../VCU_OUT/ADS7961_LIB_2.c **** 	//take 5 samples in one cycle
 250:../VCU_OUT/ADS7961_LIB_2.c **** 	for (int i = 0; i < 5; i++)
 1312              	 .loc 2 250 0
 1313 0060 0023     	 movs r3,#0
 1314 0062 FB61     	 str r3,[r7,#28]
 1315 0064 7BE0     	 b .L70
 1316              	.L81:
 1317              	.LBB24:
 251:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 252:../VCU_OUT/ADS7961_LIB_2.c **** 		for (uint8_t channel_count = 0; channel_count < loop; channel_count++)
 1318              	 .loc 2 252 0
 1319 0066 0023     	 movs r3,#0
 1320 0068 FB76     	 strb r3,[r7,#27]
 1321 006a 5DE0     	 b .L71
 1322              	.L78:
 253:../VCU_OUT/ADS7961_LIB_2.c **** 		{
 254:../VCU_OUT/ADS7961_LIB_2.c **** 			XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 1323              	 .loc 2 254 0
 1324 006c BB79     	 ldrb r3,[r7,#6]
 1325 006e 386A     	 ldr r0,[r7,#32]
 1326 0070 1946     	 mov r1,r3
 1327 0072 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 255:../VCU_OUT/ADS7961_LIB_2.c **** 			//for (int i = 0; i > 9; i++);
 256:../VCU_OUT/ADS7961_LIB_2.c **** 
 257:../VCU_OUT/ADS7961_LIB_2.c **** 			XMC_GPIO_SetOutputLow((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 1328              	 .loc 2 257 0
 1329 0076 BB79     	 ldrb r3,[r7,#6]
 1330 0078 386A     	 ldr r0,[r7,#32]
 1331 007a 1946     	 mov r1,r3
 1332 007c FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 1333              	.LBB25:
 258:../VCU_OUT/ADS7961_LIB_2.c **** 			for (int i = 0; i > 2; i++);
 1334              	 .loc 2 258 0
 1335 0080 0023     	 movs r3,#0
 1336 0082 7B61     	 str r3,[r7,#20]
 1337 0084 02E0     	 b .L72
 1338              	.L73:
 1339              	 .loc 2 258 0 is_stmt 0 discriminator 3
 1340 0086 7B69     	 ldr r3,[r7,#20]
 1341 0088 0133     	 adds r3,r3,#1
 1342 008a 7B61     	 str r3,[r7,#20]
 1343              	.L72:
 1344              	 .loc 2 258 0 discriminator 1
 1345 008c 7B69     	 ldr r3,[r7,#20]
 1346 008e 022B     	 cmp r3,#2
 1347 0090 F9DC     	 bgt .L73
 1348              	.LBE25:
 259:../VCU_OUT/ADS7961_LIB_2.c **** 			SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 2);
 1349              	 .loc 2 259 0 is_stmt 1
 1350 0092 07F10C03 	 add r3,r7,#12
 1351 0096 3A48     	 ldr r0,.L82+20
 1352 0098 1946     	 mov r1,r3
 1353 009a 0222     	 movs r2,#2
 1354 009c FFF7FEFF 	 bl SPI_MASTER_Receive
 1355              	.LBB26:
 260:../VCU_OUT/ADS7961_LIB_2.c **** 			for (int i = 0; i > 2; i++);
 1356              	 .loc 2 260 0
 1357 00a0 0023     	 movs r3,#0
 1358 00a2 3B61     	 str r3,[r7,#16]
 1359 00a4 02E0     	 b .L74
 1360              	.L75:
 1361              	 .loc 2 260 0 is_stmt 0 discriminator 3
 1362 00a6 3B69     	 ldr r3,[r7,#16]
 1363 00a8 0133     	 adds r3,r3,#1
 1364 00aa 3B61     	 str r3,[r7,#16]
 1365              	.L74:
 1366              	 .loc 2 260 0 discriminator 1
 1367 00ac 3B69     	 ldr r3,[r7,#16]
 1368 00ae 022B     	 cmp r3,#2
 1369 00b0 F9DC     	 bgt .L75
 1370              	.LBE26:
 261:../VCU_OUT/ADS7961_LIB_2.c **** 			XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 1371              	 .loc 2 261 0 is_stmt 1
 1372 00b2 BB79     	 ldrb r3,[r7,#6]
 1373 00b4 386A     	 ldr r0,[r7,#32]
 1374 00b6 1946     	 mov r1,r3
 1375 00b8 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 262:../VCU_OUT/ADS7961_LIB_2.c **** 
 263:../VCU_OUT/ADS7961_LIB_2.c **** 			if (temp_port_num == 5)
 1376              	 .loc 2 263 0
 1377 00bc FB79     	 ldrb r3,[r7,#7]
 1378 00be 052B     	 cmp r3,#5
 1379 00c0 16D1     	 bne .L76
 264:../VCU_OUT/ADS7961_LIB_2.c **** 			{
 265:../VCU_OUT/ADS7961_LIB_2.c **** 				ADS2_receive_data[channel_count][adc2_array_counter] = ((ReadData[0] & 0x0F) << 4) | ((ReadData
 1380              	 .loc 2 265 0
 1381 00c2 FB7E     	 ldrb r3,[r7,#27]
 1382 00c4 2C4A     	 ldr r2,.L82+12
 1383 00c6 1278     	 ldrb r2,[r2]
 1384 00c8 1446     	 mov r4,r2
 1385 00ca 3A7B     	 ldrb r2,[r7,#12]
 1386 00cc 1201     	 lsls r2,r2,#4
 1387 00ce D1B2     	 uxtb r1,r2
 1388 00d0 7A7B     	 ldrb r2,[r7,#13]
 1389 00d2 1209     	 lsrs r2,r2,#4
 1390 00d4 D2B2     	 uxtb r2,r2
 1391 00d6 D2B2     	 uxtb r2,r2
 1392 00d8 0A43     	 orrs r2,r2,r1
 1393 00da D2B2     	 uxtb r2,r2
 1394 00dc D0B2     	 uxtb r0,r2
 1395 00de 294A     	 ldr r2,.L82+24
 1396 00e0 3221     	 movs r1,#50
 1397 00e2 01FB03F3 	 mul r3,r1,r3
 1398 00e6 2344     	 add r3,r3,r4
 1399 00e8 1344     	 add r3,r3,r2
 1400 00ea 0246     	 mov r2,r0
 1401 00ec 1A70     	 strb r2,[r3]
 1402 00ee 18E0     	 b .L77
 1403              	.L76:
 266:../VCU_OUT/ADS7961_LIB_2.c **** //				ADS2_recive_channel[channel_count] = ((ReadData[0] & 0xF0) >> 4); //uncomment channel for deb
 267:../VCU_OUT/ADS7961_LIB_2.c **** 
 268:../VCU_OUT/ADS7961_LIB_2.c **** //				ADS2_avg_receive_data[channel_count] += ADS2_receive_data[channel_count];
 269:../VCU_OUT/ADS7961_LIB_2.c **** 			}
 270:../VCU_OUT/ADS7961_LIB_2.c **** 			else if (temp_port_num == 2)
 1404              	 .loc 2 270 0
 1405 00f0 FB79     	 ldrb r3,[r7,#7]
 1406 00f2 022B     	 cmp r3,#2
 1407 00f4 15D1     	 bne .L77
 271:../VCU_OUT/ADS7961_LIB_2.c **** 			{
 272:../VCU_OUT/ADS7961_LIB_2.c **** 				ADS3_receive_data[channel_count][adc3_array_counter] = ((ReadData[0] & 0x0F) << 4) | ((ReadData
 1408              	 .loc 2 272 0
 1409 00f6 FB7E     	 ldrb r3,[r7,#27]
 1410 00f8 204A     	 ldr r2,.L82+16
 1411 00fa 1278     	 ldrb r2,[r2]
 1412 00fc 1446     	 mov r4,r2
 1413 00fe 3A7B     	 ldrb r2,[r7,#12]
 1414 0100 1201     	 lsls r2,r2,#4
 1415 0102 D1B2     	 uxtb r1,r2
 1416 0104 7A7B     	 ldrb r2,[r7,#13]
 1417 0106 1209     	 lsrs r2,r2,#4
 1418 0108 D2B2     	 uxtb r2,r2
 1419 010a D2B2     	 uxtb r2,r2
 1420 010c 0A43     	 orrs r2,r2,r1
 1421 010e D2B2     	 uxtb r2,r2
 1422 0110 D0B2     	 uxtb r0,r2
 1423 0112 1D4A     	 ldr r2,.L82+28
 1424 0114 3221     	 movs r1,#50
 1425 0116 01FB03F3 	 mul r3,r1,r3
 1426 011a 2344     	 add r3,r3,r4
 1427 011c 1344     	 add r3,r3,r2
 1428 011e 0246     	 mov r2,r0
 1429 0120 1A70     	 strb r2,[r3]
 1430              	.L77:
 252:../VCU_OUT/ADS7961_LIB_2.c **** 		{
 1431              	 .loc 2 252 0 discriminator 2
 1432 0122 FB7E     	 ldrb r3,[r7,#27]
 1433 0124 0133     	 adds r3,r3,#1
 1434 0126 FB76     	 strb r3,[r7,#27]
 1435              	.L71:
 252:../VCU_OUT/ADS7961_LIB_2.c **** 		{
 1436              	 .loc 2 252 0 is_stmt 0 discriminator 1
 1437 0128 FA7E     	 ldrb r2,[r7,#27]
 1438 012a 97F82730 	 ldrb r3,[r7,#39]
 1439 012e 9A42     	 cmp r2,r3
 1440 0130 9CD3     	 bcc .L78
 1441              	.LBE24:
 273:../VCU_OUT/ADS7961_LIB_2.c **** //				ADS3_recive_channel[channel_count] = ((ReadData[0] & 0xF0) >> 4); //uncomment channel for deb
 274:../VCU_OUT/ADS7961_LIB_2.c **** 
 275:../VCU_OUT/ADS7961_LIB_2.c **** //				ADS3_avg_receive_data[channel_count] += ADS3_receive_data[channel_count];
 276:../VCU_OUT/ADS7961_LIB_2.c **** 			}
 277:../VCU_OUT/ADS7961_LIB_2.c **** 		}
 278:../VCU_OUT/ADS7961_LIB_2.c **** 
 279:../VCU_OUT/ADS7961_LIB_2.c **** 		if (temp_port_num == 5)
 1442              	 .loc 2 279 0 is_stmt 1
 1443 0132 FB79     	 ldrb r3,[r7,#7]
 1444 0134 052B     	 cmp r3,#5
 1445 0136 06D1     	 bne .L79
 280:../VCU_OUT/ADS7961_LIB_2.c **** 		{
 281:../VCU_OUT/ADS7961_LIB_2.c **** 			adc2_array_counter++;
 1446              	 .loc 2 281 0
 1447 0138 0F4B     	 ldr r3,.L82+12
 1448 013a 1B78     	 ldrb r3,[r3]
 1449 013c 0133     	 adds r3,r3,#1
 1450 013e DAB2     	 uxtb r2,r3
 1451 0140 0D4B     	 ldr r3,.L82+12
 1452 0142 1A70     	 strb r2,[r3]
 1453 0144 08E0     	 b .L80
 1454              	.L79:
 282:../VCU_OUT/ADS7961_LIB_2.c **** 		}
 283:../VCU_OUT/ADS7961_LIB_2.c **** 		else if (temp_port_num == 2)
 1455              	 .loc 2 283 0
 1456 0146 FB79     	 ldrb r3,[r7,#7]
 1457 0148 022B     	 cmp r3,#2
 1458 014a 05D1     	 bne .L80
 284:../VCU_OUT/ADS7961_LIB_2.c **** 		{
 285:../VCU_OUT/ADS7961_LIB_2.c **** 			adc3_array_counter++;
 1459              	 .loc 2 285 0
 1460 014c 0B4B     	 ldr r3,.L82+16
 1461 014e 1B78     	 ldrb r3,[r3]
 1462 0150 0133     	 adds r3,r3,#1
 1463 0152 DAB2     	 uxtb r2,r3
 1464 0154 094B     	 ldr r3,.L82+16
 1465 0156 1A70     	 strb r2,[r3]
 1466              	.L80:
 250:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 1467              	 .loc 2 250 0 discriminator 2
 1468 0158 FB69     	 ldr r3,[r7,#28]
 1469 015a 0133     	 adds r3,r3,#1
 1470 015c FB61     	 str r3,[r7,#28]
 1471              	.L70:
 250:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 1472              	 .loc 2 250 0 is_stmt 0 discriminator 1
 1473 015e FB69     	 ldr r3,[r7,#28]
 1474 0160 042B     	 cmp r3,#4
 1475 0162 80DD     	 ble .L81
 1476              	.LBE23:
 286:../VCU_OUT/ADS7961_LIB_2.c **** 		}
 287:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 288:../VCU_OUT/ADS7961_LIB_2.c **** }
 1477              	 .loc 2 288 0 is_stmt 1
 1478 0164 2C37     	 adds r7,r7,#44
 1479              	.LCFI48:
 1480              	 .cfi_def_cfa_offset 12
 1481 0166 BD46     	 mov sp,r7
 1482              	.LCFI49:
 1483              	 .cfi_def_cfa_register 13
 1484              	 
 1485 0168 90BD     	 pop {r4,r7,pc}
 1486              	.L83:
 1487 016a 00BF     	 .align 2
 1488              	.L82:
 1489 016c 00000000 	 .word flag
 1490 0170 00850248 	 .word 1208124672
 1491 0174 00820248 	 .word 1208123904
 1492 0178 00000000 	 .word adc2_array_counter
 1493 017c 00000000 	 .word adc3_array_counter
 1494 0180 00000000 	 .word SPI_MASTER_0
 1495 0184 00000000 	 .word ADS2_receive_data
 1496 0188 00000000 	 .word ADS3_receive_data
 1497              	 .cfi_endproc
 1498              	.LFE612:
 1500              	 .section .text.ADC_Read_by_Channel,"ax",%progbits
 1501              	 .align 2
 1502              	 .global ADC_Read_by_Channel
 1503              	 .thumb
 1504              	 .thumb_func
 1506              	ADC_Read_by_Channel:
 1507              	.LFB613:
 289:../VCU_OUT/ADS7961_LIB_2.c **** 
 290:../VCU_OUT/ADS7961_LIB_2.c **** void ADC_Read_by_Channel(uint8_t temp_port_num, uint8_t pin_number, uint8_t channel)
 291:../VCU_OUT/ADS7961_LIB_2.c **** {
 1508              	 .loc 2 291 0
 1509              	 .cfi_startproc
 1510              	 
 1511              	 
 1512 0000 80B5     	 push {r7,lr}
 1513              	.LCFI50:
 1514              	 .cfi_def_cfa_offset 8
 1515              	 .cfi_offset 7,-8
 1516              	 .cfi_offset 14,-4
 1517 0002 8EB0     	 sub sp,sp,#56
 1518              	.LCFI51:
 1519              	 .cfi_def_cfa_offset 64
 1520 0004 00AF     	 add r7,sp,#0
 1521              	.LCFI52:
 1522              	 .cfi_def_cfa_register 7
 1523 0006 0346     	 mov r3,r0
 1524 0008 FB71     	 strb r3,[r7,#7]
 1525 000a 0B46     	 mov r3,r1
 1526 000c BB71     	 strb r3,[r7,#6]
 1527 000e 1346     	 mov r3,r2
 1528 0010 7B71     	 strb r3,[r7,#5]
 292:../VCU_OUT/ADS7961_LIB_2.c **** 	XMC_GPIO_PORT_t * temp_ptr;
 293:../VCU_OUT/ADS7961_LIB_2.c **** 
 294:../VCU_OUT/ADS7961_LIB_2.c **** 	if (temp_port_num == 5)
 1529              	 .loc 2 294 0
 1530 0012 FB79     	 ldrb r3,[r7,#7]
 1531 0014 052B     	 cmp r3,#5
 1532 0016 07D1     	 bne .L85
 295:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 296:../VCU_OUT/ADS7961_LIB_2.c **** 		temp_ptr = XMC_GPIO_PORT2;
 1533              	 .loc 2 296 0
 1534 0018 514B     	 ldr r3,.L103
 1535 001a 7B63     	 str r3,[r7,#52]
 297:../VCU_OUT/ADS7961_LIB_2.c **** 		ADS2_avg_receive_data[channel] = 0;
 1536              	 .loc 2 297 0
 1537 001c 7B79     	 ldrb r3,[r7,#5]
 1538 001e 514A     	 ldr r2,.L103+4
 1539 0020 0021     	 movs r1,#0
 1540 0022 42F82310 	 str r1,[r2,r3,lsl#2]
 1541 0026 09E0     	 b .L86
 1542              	.L85:
 298:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 299:../VCU_OUT/ADS7961_LIB_2.c **** 	else if (temp_port_num == 2)
 1543              	 .loc 2 299 0
 1544 0028 FB79     	 ldrb r3,[r7,#7]
 1545 002a 022B     	 cmp r3,#2
 1546 002c 06D1     	 bne .L86
 300:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 301:../VCU_OUT/ADS7961_LIB_2.c **** 		temp_ptr = XMC_GPIO_PORT2;
 1547              	 .loc 2 301 0
 1548 002e 4C4B     	 ldr r3,.L103
 1549 0030 7B63     	 str r3,[r7,#52]
 302:../VCU_OUT/ADS7961_LIB_2.c **** 		ADS3_avg_receive_data[channel] = 0;
 1550              	 .loc 2 302 0
 1551 0032 7B79     	 ldrb r3,[r7,#5]
 1552 0034 4C4A     	 ldr r2,.L103+8
 1553 0036 0021     	 movs r1,#0
 1554 0038 42F82310 	 str r1,[r2,r3,lsl#2]
 1555              	.L86:
 1556              	.LBB27:
 303:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 304:../VCU_OUT/ADS7961_LIB_2.c **** 
 305:../VCU_OUT/ADS7961_LIB_2.c **** 	for (int i = 0; i < TOTAL_SAMPLES; i++)
 1557              	 .loc 2 305 0
 1558 003c 0023     	 movs r3,#0
 1559 003e 3B63     	 str r3,[r7,#48]
 1560 0040 87E0     	 b .L87
 1561              	.L102:
 1562              	.LBB28:
 306:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 307:../VCU_OUT/ADS7961_LIB_2.c **** 		int pkt = ADS7861_MANUAL_MODE_PKT(channel);
 1563              	 .loc 2 307 0
 1564 0042 7B79     	 ldrb r3,[r7,#5]
 1565 0044 9BB2     	 uxth r3,r3
 1566 0046 1846     	 mov r0,r3
 1567 0048 FFF7FEFF 	 bl ADS7861_MANUAL_MODE_PKT
 1568 004c 0346     	 mov r3,r0
 1569 004e 3B61     	 str r3,[r7,#16]
 308:../VCU_OUT/ADS7961_LIB_2.c **** 		uint8_t SendData[2] = { (pkt >> 8), (pkt & 0xFF) };
 1570              	 .loc 2 308 0
 1571 0050 3B69     	 ldr r3,[r7,#16]
 1572 0052 1B12     	 asrs r3,r3,#8
 1573 0054 DBB2     	 uxtb r3,r3
 1574 0056 3B73     	 strb r3,[r7,#12]
 1575 0058 3B69     	 ldr r3,[r7,#16]
 1576 005a DBB2     	 uxtb r3,r3
 1577 005c 7B73     	 strb r3,[r7,#13]
 309:../VCU_OUT/ADS7961_LIB_2.c **** 		uint8_t ReadData[2];
 310:../VCU_OUT/ADS7961_LIB_2.c **** 		XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 1578              	 .loc 2 310 0
 1579 005e BB79     	 ldrb r3,[r7,#6]
 1580 0060 786B     	 ldr r0,[r7,#52]
 1581 0062 1946     	 mov r1,r3
 1582 0064 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 311:../VCU_OUT/ADS7961_LIB_2.c **** 		XMC_GPIO_SetOutputLow((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 1583              	 .loc 2 311 0
 1584 0068 BB79     	 ldrb r3,[r7,#6]
 1585 006a 786B     	 ldr r0,[r7,#52]
 1586 006c 1946     	 mov r1,r3
 1587 006e FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 1588              	.LBB29:
 312:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int i = 0; i > 16; i++)
 1589              	 .loc 2 312 0
 1590 0072 0023     	 movs r3,#0
 1591 0074 FB62     	 str r3,[r7,#44]
 1592 0076 02E0     	 b .L88
 1593              	.L89:
 1594              	 .loc 2 312 0 is_stmt 0 discriminator 3
 1595 0078 FB6A     	 ldr r3,[r7,#44]
 1596 007a 0133     	 adds r3,r3,#1
 1597 007c FB62     	 str r3,[r7,#44]
 1598              	.L88:
 1599              	 .loc 2 312 0 discriminator 1
 1600 007e FB6A     	 ldr r3,[r7,#44]
 1601 0080 102B     	 cmp r3,#16
 1602 0082 F9DC     	 bgt .L89
 1603              	.LBE29:
 313:../VCU_OUT/ADS7961_LIB_2.c **** 			;
 314:../VCU_OUT/ADS7961_LIB_2.c **** 		SPI_MASTER_Transmit(&SPI_MASTER_0, SendData, 2);
 1604              	 .loc 2 314 0 is_stmt 1
 1605 0084 07F10C03 	 add r3,r7,#12
 1606 0088 3848     	 ldr r0,.L103+12
 1607 008a 1946     	 mov r1,r3
 1608 008c 0222     	 movs r2,#2
 1609 008e FFF7FEFF 	 bl SPI_MASTER_Transmit
 1610              	.LBB30:
 315:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int i = 0; i > 9; i++)
 1611              	 .loc 2 315 0
 1612 0092 0023     	 movs r3,#0
 1613 0094 BB62     	 str r3,[r7,#40]
 1614 0096 02E0     	 b .L90
 1615              	.L91:
 1616              	 .loc 2 315 0 is_stmt 0 discriminator 3
 1617 0098 BB6A     	 ldr r3,[r7,#40]
 1618 009a 0133     	 adds r3,r3,#1
 1619 009c BB62     	 str r3,[r7,#40]
 1620              	.L90:
 1621              	 .loc 2 315 0 discriminator 1
 1622 009e BB6A     	 ldr r3,[r7,#40]
 1623 00a0 092B     	 cmp r3,#9
 1624 00a2 F9DC     	 bgt .L91
 1625              	.LBE30:
 316:../VCU_OUT/ADS7961_LIB_2.c **** 			;
 317:../VCU_OUT/ADS7961_LIB_2.c **** 		XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 1626              	 .loc 2 317 0 is_stmt 1
 1627 00a4 BB79     	 ldrb r3,[r7,#6]
 1628 00a6 786B     	 ldr r0,[r7,#52]
 1629 00a8 1946     	 mov r1,r3
 1630 00aa FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 1631              	.LBB31:
 318:../VCU_OUT/ADS7961_LIB_2.c **** 		;
 319:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int i = 0; i > 2; i++)
 1632              	 .loc 2 319 0
 1633 00ae 0023     	 movs r3,#0
 1634 00b0 7B62     	 str r3,[r7,#36]
 1635 00b2 02E0     	 b .L92
 1636              	.L93:
 1637              	 .loc 2 319 0 is_stmt 0 discriminator 3
 1638 00b4 7B6A     	 ldr r3,[r7,#36]
 1639 00b6 0133     	 adds r3,r3,#1
 1640 00b8 7B62     	 str r3,[r7,#36]
 1641              	.L92:
 1642              	 .loc 2 319 0 discriminator 1
 1643 00ba 7B6A     	 ldr r3,[r7,#36]
 1644 00bc 022B     	 cmp r3,#2
 1645 00be F9DC     	 bgt .L93
 1646              	.LBE31:
 320:../VCU_OUT/ADS7961_LIB_2.c **** 			;
 321:../VCU_OUT/ADS7961_LIB_2.c **** 		XMC_GPIO_SetOutputLow((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 1647              	 .loc 2 321 0 is_stmt 1
 1648 00c0 BB79     	 ldrb r3,[r7,#6]
 1649 00c2 786B     	 ldr r0,[r7,#52]
 1650 00c4 1946     	 mov r1,r3
 1651 00c6 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 1652              	.LBB32:
 322:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int i = 0; i > 9; i++)
 1653              	 .loc 2 322 0
 1654 00ca 0023     	 movs r3,#0
 1655 00cc 3B62     	 str r3,[r7,#32]
 1656 00ce 02E0     	 b .L94
 1657              	.L95:
 1658              	 .loc 2 322 0 is_stmt 0 discriminator 3
 1659 00d0 3B6A     	 ldr r3,[r7,#32]
 1660 00d2 0133     	 adds r3,r3,#1
 1661 00d4 3B62     	 str r3,[r7,#32]
 1662              	.L94:
 1663              	 .loc 2 322 0 discriminator 1
 1664 00d6 3B6A     	 ldr r3,[r7,#32]
 1665 00d8 092B     	 cmp r3,#9
 1666 00da F9DC     	 bgt .L95
 1667              	.LBE32:
 323:../VCU_OUT/ADS7961_LIB_2.c **** 			;
 324:../VCU_OUT/ADS7961_LIB_2.c **** 		SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 2);
 1668              	 .loc 2 324 0 is_stmt 1
 1669 00dc 07F10803 	 add r3,r7,#8
 1670 00e0 2248     	 ldr r0,.L103+12
 1671 00e2 1946     	 mov r1,r3
 1672 00e4 0222     	 movs r2,#2
 1673 00e6 FFF7FEFF 	 bl SPI_MASTER_Receive
 1674              	.LBB33:
 325:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int i = 0; i > 2; i++)
 1675              	 .loc 2 325 0
 1676 00ea 0023     	 movs r3,#0
 1677 00ec FB61     	 str r3,[r7,#28]
 1678 00ee 02E0     	 b .L96
 1679              	.L97:
 1680              	 .loc 2 325 0 is_stmt 0 discriminator 3
 1681 00f0 FB69     	 ldr r3,[r7,#28]
 1682 00f2 0133     	 adds r3,r3,#1
 1683 00f4 FB61     	 str r3,[r7,#28]
 1684              	.L96:
 1685              	 .loc 2 325 0 discriminator 1
 1686 00f6 FB69     	 ldr r3,[r7,#28]
 1687 00f8 022B     	 cmp r3,#2
 1688 00fa F9DC     	 bgt .L97
 1689              	.LBE33:
 326:../VCU_OUT/ADS7961_LIB_2.c **** 			;
 327:../VCU_OUT/ADS7961_LIB_2.c **** 		XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 1690              	 .loc 2 327 0 is_stmt 1
 1691 00fc BB79     	 ldrb r3,[r7,#6]
 1692 00fe 786B     	 ldr r0,[r7,#52]
 1693 0100 1946     	 mov r1,r3
 1694 0102 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 1695              	.LBB34:
 328:../VCU_OUT/ADS7961_LIB_2.c **** 		;
 329:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int i = 0; i > 9; i++)
 1696              	 .loc 2 329 0
 1697 0106 0023     	 movs r3,#0
 1698 0108 BB61     	 str r3,[r7,#24]
 1699 010a 02E0     	 b .L98
 1700              	.L99:
 1701              	 .loc 2 329 0 is_stmt 0 discriminator 3
 1702 010c BB69     	 ldr r3,[r7,#24]
 1703 010e 0133     	 adds r3,r3,#1
 1704 0110 BB61     	 str r3,[r7,#24]
 1705              	.L98:
 1706              	 .loc 2 329 0 discriminator 1
 1707 0112 BB69     	 ldr r3,[r7,#24]
 1708 0114 092B     	 cmp r3,#9
 1709 0116 F9DC     	 bgt .L99
 1710              	.LBE34:
 330:../VCU_OUT/ADS7961_LIB_2.c **** 			;
 331:../VCU_OUT/ADS7961_LIB_2.c **** 
 332:../VCU_OUT/ADS7961_LIB_2.c **** 		XMC_GPIO_SetOutputLow((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 1711              	 .loc 2 332 0 is_stmt 1
 1712 0118 BB79     	 ldrb r3,[r7,#6]
 1713 011a 786B     	 ldr r0,[r7,#52]
 1714 011c 1946     	 mov r1,r3
 1715 011e FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 1716              	.LBB35:
 333:../VCU_OUT/ADS7961_LIB_2.c **** 		for (int i = 0; i > 9; i++)
 1717              	 .loc 2 333 0
 1718 0122 0023     	 movs r3,#0
 1719 0124 7B61     	 str r3,[r7,#20]
 1720 0126 02E0     	 b .L100
 1721              	.L101:
 1722              	 .loc 2 333 0 is_stmt 0 discriminator 3
 1723 0128 7B69     	 ldr r3,[r7,#20]
 1724 012a 0133     	 adds r3,r3,#1
 1725 012c 7B61     	 str r3,[r7,#20]
 1726              	.L100:
 1727              	 .loc 2 333 0 discriminator 1
 1728 012e 7B69     	 ldr r3,[r7,#20]
 1729 0130 092B     	 cmp r3,#9
 1730 0132 F9DC     	 bgt .L101
 1731              	.LBE35:
 334:../VCU_OUT/ADS7961_LIB_2.c **** 			;
 335:../VCU_OUT/ADS7961_LIB_2.c **** 		SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 2);
 1732              	 .loc 2 335 0 is_stmt 1
 1733 0134 07F10803 	 add r3,r7,#8
 1734 0138 0C48     	 ldr r0,.L103+12
 1735 013a 1946     	 mov r1,r3
 1736 013c 0222     	 movs r2,#2
 1737 013e FFF7FEFF 	 bl SPI_MASTER_Receive
 336:../VCU_OUT/ADS7961_LIB_2.c **** 
 337:../VCU_OUT/ADS7961_LIB_2.c **** 		XMC_GPIO_SetOutputHigh((XMC_GPIO_PORT_t *) temp_ptr, pin_number);
 1738              	 .loc 2 337 0
 1739 0142 BB79     	 ldrb r3,[r7,#6]
 1740 0144 786B     	 ldr r0,[r7,#52]
 1741 0146 1946     	 mov r1,r3
 1742 0148 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 1743              	.LBE28:
 305:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 1744              	 .loc 2 305 0
 1745 014c 3B6B     	 ldr r3,[r7,#48]
 1746 014e 0133     	 adds r3,r3,#1
 1747 0150 3B63     	 str r3,[r7,#48]
 1748              	.L87:
 305:../VCU_OUT/ADS7961_LIB_2.c **** 	{
 1749              	 .loc 2 305 0 is_stmt 0 discriminator 2
 1750 0152 3B6B     	 ldr r3,[r7,#48]
 1751 0154 312B     	 cmp r3,#49
 1752 0156 7FF774AF 	 ble .L102
 1753              	.LBE27:
 338:../VCU_OUT/ADS7961_LIB_2.c **** 		;
 339:../VCU_OUT/ADS7961_LIB_2.c **** 
 340:../VCU_OUT/ADS7961_LIB_2.c **** 		if (temp_port_num == 5) {
 341:../VCU_OUT/ADS7961_LIB_2.c **** //			ADS2_receive_data[channel] = ((ReadData[0] & 0x0F) << 4) | ((ReadData[1] & 0xF0) >> 4);
 342:../VCU_OUT/ADS7961_LIB_2.c **** //			ADS2_recive_channel[channel] = ((ReadData[0] & 0xF0) >> 4);
 343:../VCU_OUT/ADS7961_LIB_2.c **** 
 344:../VCU_OUT/ADS7961_LIB_2.c **** //			ADS2_avg_receive_data[channel] += ADS2_receive_data[channel];
 345:../VCU_OUT/ADS7961_LIB_2.c **** 		} else if (temp_port_num == 2) {
 346:../VCU_OUT/ADS7961_LIB_2.c **** //			ADS3_receive_data[channel] = ((ReadData[0] & 0x0F) << 4) | ((ReadData[1] & 0xF0) >> 4);
 347:../VCU_OUT/ADS7961_LIB_2.c **** //			ADS3_recive_channel[channel] = ((ReadData[0] & 0xF0) >> 4);
 348:../VCU_OUT/ADS7961_LIB_2.c **** 
 349:../VCU_OUT/ADS7961_LIB_2.c **** //			ADS3_avg_receive_data[channel] += ADS3_receive_data[channel];
 350:../VCU_OUT/ADS7961_LIB_2.c **** 		}
 351:../VCU_OUT/ADS7961_LIB_2.c **** 	}
 352:../VCU_OUT/ADS7961_LIB_2.c **** }
 1754              	 .loc 2 352 0 is_stmt 1
 1755 015a 3837     	 adds r7,r7,#56
 1756              	.LCFI53:
 1757              	 .cfi_def_cfa_offset 8
 1758 015c BD46     	 mov sp,r7
 1759              	.LCFI54:
 1760              	 .cfi_def_cfa_register 13
 1761              	 
 1762 015e 80BD     	 pop {r7,pc}
 1763              	.L104:
 1764              	 .align 2
 1765              	.L103:
 1766 0160 00820248 	 .word 1208123904
 1767 0164 00000000 	 .word ADS2_avg_receive_data
 1768 0168 00000000 	 .word ADS3_avg_receive_data
 1769 016c 00000000 	 .word SPI_MASTER_0
 1770              	 .cfi_endproc
 1771              	.LFE613:
 1773              	 .text
 1774              	.Letext0:
 1775              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1776              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1777              	 .file 5 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 1778              	 .file 6 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc4_gpio.h"
 1779              	 .file 7 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_usic.h"
 1780              	 .file 8 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_dma.h"
 1781              	 .file 9 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/GLOBAL_DMA/global_dma.h"
 1782              	 .file 10 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_spi.h"
 1783              	 .file 11 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER/spi_master.h"
 1784              	 .file 12 "../VCU_OUT/ADS7961_LIB_2.h"
 1785              	 .file 13 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Include/cmsis_gcc.h"
 1786              	 .file 14 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Include/core_cm4.h"
 1787              	 .file 15 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 1788              	 .file 16 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/SPI_MASTER/spi_master_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ADS7961_LIB_2.c
    {standard input}:20     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:24     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:68     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:72     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
                            *COM*:00000001 ADS_MODE
    {standard input}:120    .bss.DROPPED_IN_12V:00000000 DROPPED_IN_12V
    {standard input}:117    .bss.DROPPED_IN_12V:00000000 $d
                            *COM*:00000002 ADCModeAUTO2Frame
                            *COM*:00000010 ADS1_receive_data
                            *COM*:00000010 ADS1_recive_channel
                            *COM*:00000040 ADS1_avg_receive_data
                            *COM*:00000320 ADS2_receive_data
                            *COM*:00000040 ADS2_avg_receive_data
                            *COM*:00000320 ADS3_receive_data
                            *COM*:00000040 ADS3_avg_receive_data
    {standard input}:134    .bss.flag:00000000 flag
    {standard input}:135    .bss.flag:00000000 $d
                            *COM*:00000040 adc2_current
                            *COM*:00000040 adc3_current
                            *COM*:00000078 temp
    {standard input}:143    .bss.adc2_array_counter:00000000 adc2_array_counter
    {standard input}:144    .bss.adc2_array_counter:00000000 $d
    {standard input}:149    .bss.adc3_array_counter:00000000 adc3_array_counter
    {standard input}:150    .bss.adc3_array_counter:00000000 $d
    {standard input}:157    .text.DROPPED_IN_12_volt:00000000 $t
    {standard input}:162    .text.DROPPED_IN_12_volt:00000000 DROPPED_IN_12_volt
    {standard input}:259    .text.DROPPED_IN_12_volt:00000090 $d
    {standard input}:269    .text.convert_raw_data_into_current:00000000 $t
    {standard input}:274    .text.convert_raw_data_into_current:00000000 convert_raw_data_into_current
    {standard input}:485    .text.convert_raw_data_into_current:00000188 $d
    {standard input}:501    .text.SPI_ADC_ProcessModeChange:00000000 $t
    {standard input}:506    .text.SPI_ADC_ProcessModeChange:00000000 SPI_ADC_ProcessModeChange
    {standard input}:1235   .text.SPI_ADS7961_AUTO_MODE2:00000000 SPI_ADS7961_AUTO_MODE2
    {standard input}:566    .text.SPI_ADC_MANUAL_MODE:00000000 SPI_ADC_MANUAL_MODE
    {standard input}:561    .text.SPI_ADC_MANUAL_MODE:00000000 $t
    {standard input}:1506   .text.ADC_Read_by_Channel:00000000 ADC_Read_by_Channel
    {standard input}:591    .text.ADS7861_MANUAL_MODE_PKT:00000000 $t
    {standard input}:596    .text.ADS7861_MANUAL_MODE_PKT:00000000 ADS7861_MANUAL_MODE_PKT
    {standard input}:668    .text.ADC_Read_AllChannel:00000000 $t
    {standard input}:673    .text.ADC_Read_AllChannel:00000000 ADC_Read_AllChannel
    {standard input}:980    .text.ADC_Read_AllChannel:00000198 $d
    {standard input}:989    .text.SPI_ADS7961_AUTO2_Init:00000000 $t
    {standard input}:994    .text.SPI_ADS7961_AUTO2_Init:00000000 SPI_ADS7961_AUTO2_Init
    {standard input}:1221   .text.SPI_ADS7961_AUTO2_Init:00000138 $d
    {standard input}:1230   .text.SPI_ADS7961_AUTO_MODE2:00000000 $t
    {standard input}:1489   .text.SPI_ADS7961_AUTO_MODE2:0000016c $d
    {standard input}:1501   .text.ADC_Read_by_Channel:00000000 $t
    {standard input}:1766   .text.ADC_Read_by_Channel:00000160 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_dmul
__aeabi_d2f
__aeabi_f2d
__aeabi_ddiv
memset
SPI_MASTER_Transmit
SPI_MASTER_Receive
SPI_MASTER_0
