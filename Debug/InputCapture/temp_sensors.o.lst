   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "temp_sensors.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.I2C_MASTER_IsTxBusy,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	I2C_MASTER_IsTxBusy:
  25              	.LFB286:
  26              	 .file 1 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER/i2c_master.h"
   1:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
   2:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @file i2c_master.h
   3:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @date 2021-01-08
   4:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
   5:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * NOTE:
   6:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * regenerated.
   8:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
   9:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
  10:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @cond
  11:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  12:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER v4.1.34 Configures USIC channel to transmit & receive data using I2C protocol.
  13:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  14:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  15:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * All rights reserved.
  16:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  17:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  18:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * following conditions are met:
  19:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  20:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  21:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * disclaimer.
  22:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  23:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  24:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * following disclaimer in the documentation and/or other materials provided with the distribution.
  25:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  26:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  27:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * products derived from this software without specific prior written permission.
  28:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  29:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  30:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  31:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  32:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  33:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  34:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  35:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  37:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  38:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  39:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  40:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  41:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Change History
  42:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * --------------
  43:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  44:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-02-16:
  45:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Initial version<br>
  46:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  47:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-06-10:
  48:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - AbortTransmit and AbortReceive API return type modified. <br>
  49:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  50:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-08-31:
  51:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - DMA support APIs added
  52:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-10-20:
  53:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Code snippets updated
  54:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2016-08-18:
  55:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Documentation of slave address formatting improved.
  56:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2017-11-17:
  57:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added tx_irqn and rx_irqn to I2C_MASTER_CONFIG_t
  58:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2017-12-20:
  59:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added I2C_MASTER_FlushTxFifo(), I2C_MASTER_FlushRxFifo(), I2C_MASTER_DisableOutputs(), I2C
  60:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  61:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2019-16-09:
  62:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added I2C_MASTER_START_TRANSMIT_RETRIES to control the wait to see the START symbol in the
  63:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added I2C_MASTER_STATUS_BUS_ERROR as possible return value from I2C_MASTER_StartTransmitIR
  64:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  65:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2021-01-08:
  66:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Modified check for minimum XMCLib version
  67:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  68:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcond
  69:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  70:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
  71:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  72:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifndef I2C_MASTER_H
  73:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_H
  74:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  75:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  76:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  77:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  78:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * HEADER FILES
  79:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  80:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "xmc_gpio.h"
  81:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "xmc_i2c.h"
  82:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "i2c_master_conf.h"
  83:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  84:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if(UC_FAMILY == XMC4)
  85:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
  86:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "GLOBAL_DMA/global_dma.h"
  87:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  88:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  89:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  90:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "DAVE_Common.h"
  91:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  92:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  93:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef void(*i2c_master_fptr_cbhandler)(void);
  94:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  95:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  96:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * MACROS
  97:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  98:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_XMC_LIB_MAJOR_VERSION 2
  99:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_XMC_LIB_MINOR_VERSION 0
 100:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_XMC_LIB_PATCH_VERSION 0
 101:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 102:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if !((XMC_LIB_MAJOR_VERSION > I2C_MASTER_XMC_LIB_MAJOR_VERSION) ||\
 103:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****       ((XMC_LIB_MAJOR_VERSION == I2C_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > I2C_
 104:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****       ((XMC_LIB_MAJOR_VERSION == I2C_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == I2C
 105:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #error "I2C_MASTER requires XMC Peripheral Library v2.0.0 or higher"
 106:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 107:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 108:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifndef I2C_MASTER_START_TRANSMIT_RETRIES
 109:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_START_TRANSMIT_RETRIES (0x7fff)
 110:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 111:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 112:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 113:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * ENUMS
 114:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
 115:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 116:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_enumerations
 117:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 118:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 119:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 120:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Initialization status.
 121:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 122:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_STATUS
 123:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 124:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_SUCCESS = 0U,           /*!< I2C_MASTER SUCCESS */
 125:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_FAILURE = 1U,           /*!< I2C_MASTER FAILURE */
 126:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_BUSY = 2U,              /*!< I2C_MASTER BUSY */
 127:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_UNSUPPORTED_MODE = 3U,  /*!< I2C_MASTER UNSUPPORTED MODE */
 128:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_BUS_ERROR = 4U          /*!< I2C_MASTER BUS_ERROR */
 129:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_STATUS_t;
 130:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 131:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 132:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Direction
 133:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 134:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_DIRECTION
 135:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 136:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_DIRECTION_TRANSMIT = 0U,   /*!< Direction indicates transmit */
 137:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_DIRECTION_RECEIVE = 1U     /*!< Direction indicates receive */
 138:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_DIRECTION_t;
 139:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 140:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 141:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 142:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 143:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_TRANSFER_MODE
 144:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 145:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 146:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 147:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 148:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_TRANSFER_MODE_t;
 149:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 150:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @}
 151:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 152:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 153:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** * DATA STRUCTURES
 154:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** ***************************************************************************************************
 155:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 156:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 157:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_datastructures
 158:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 159:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 160:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 161:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Structure for DMA configuration.
 162:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 163:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
 164:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_DMA_CONFIG
 165:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 166:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   const XMC_DMA_CH_CONFIG_t * dma_ch_config;   /**< Pointer to the DMA channel configuration.*/
 167:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   GLOBAL_DMA_t * global_dma;                   /**< Global DMA handle */
 168:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t dma_channel;                         /**< DMA channel number */
 169:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_DMA_CONFIG_t;
 170:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 171:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 172:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Constant structure for holding the configuration parameters of I2C channel.
 173:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 174:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_CONFIG
 175:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 176:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    const XMC_I2C_CH_CONFIG_t *brg_config;             /*!< Basic I2C configuration from the GUI wit
 177:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 178:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const transmit_dma_config; /**< Pointer to the DMA channel confi
 179:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                                    data transmission.*/
 180:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 181:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 182:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const receive_dma_config;  /**< Pointer to the DMA channel confi
 183:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                                    data reception.*/
 184:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 185:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_config;         /*!< Function pointer to configure the MUX va
 186:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_enable_io;      /*!< Function pointer to enable SDA/SCL outpu
 187:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_disable_io;     /*!< Function pointer to disable SDA/SCL outp
 188:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 189:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler tx_cbhandler;            /*!< Function pointer to hold the callback fu
 190:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when the transmission is complete
 191:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler rx_cbhandler;            /*!< Function pointer to hold the callback fu
 192:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when the reception is complete*/
 193:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler nack_cbhandler;          /*!< Function pointer to hold the callback fu
 194:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when nack is received*/
 195:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler arbitration_cbhandler;   /*!< Function pointer to hold the callback fu
 196:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when arbitration lost is occured*
 197:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler error_cbhandler;         /*!< Function pointer to hold the callback fu
 198:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when error is detected.*/
 199:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t transmit_mode;          /**< Mode used for transmitting data. Data ca
 200:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 201:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t receive_mode;           /**< Mode used for receiving data. Data can b
 202:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 203:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 204:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t txFIFO_size;               /*!< TxFIFO size configuration*/
 205:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t rxFIFO_size;               /*!< RxFIFO size configuration*/
 206:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 207:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    IRQn_Type tx_irqn;
 208:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    IRQn_Type rx_irqn; 
 209:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_CONFIG_t;
 210:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 211:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 212:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Structure to hold the dynamic variables for the I2C_MASTER communication.
 213:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 214:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_RUNTIME
 215:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 216:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t * tx_data;                     /*!< Pointer to the transmit data buffer*/
 217:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t * rx_data;                     /*!< Pointer to the receive data buffer*/
 218:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t tx_data_count;                /*!< Number of bytes of data to be transmitted*/
 219:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t tx_data_index;       /*!< Index to the byte to be transmitted next in the tx_da
 220:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_data_count;                /*!< Number of bytes of data to be received*/
 221:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 222:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_dma_data_count;            /*!< Number of bytes of data to be received-DMA mode*/
 223:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_dma_data_index;            /*!< Index of bytes of data to be received-DMA mode*/
 224:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 225:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t rx_data_index;       /*!< Indicates the number of bytes currently available in 
 226:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t direction;           /*!< Indicates TRANSMIT/RECEIVE */
 227:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t send_stop;                    /*!< Indicates to stop the I2C */
 228:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t send_nack;                    /*!< Indicates to send nack */
 229:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t tx_ack_sr;                         /*!< Service request number assigned to transmit inter
 230:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t rx_sr;                         /*!< Service request number assigned to receive interrupts
 231:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool tx_busy;                 /*!< Status flag to indicate busy when a transmission is a
 232:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool rx_busy;                 /*!< Status flag to indicate busy when a reception is assi
 233:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool bus_acquired;            /*!< flag to indicate whether bus is acquired or not */
 234:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_RUNTIME_t;
 235:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 236:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 237:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 238:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Handler structure with pointers to dynamic and static parameters.
 239:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 240:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER
 241:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 242:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_t *channel;                    /*!< USIC channel*/
 243:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   const I2C_MASTER_CONFIG_t * const config;  /*!< I2C configuration structure pointer*/
 244:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_RUNTIME_t * const runtime;      /*!< Pointer to the structure holding all variables,
 245:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    	                                               that can change at runtime*/
 246:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_t;
 247:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 248:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 249:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @}
 250:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 251:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 252:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifdef __cplusplus
 253:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** extern "C" {
 254:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 255:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 256:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 257:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 258:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_apidoc
 259:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 260:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 261:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 262:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 263:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * API PROTOTYPES
 264:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
 265:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 266:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Get I2C_MASTER APP version.
 267:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return \a DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 268:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 269:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description: </b><br>
 270:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The function can be used to check application software compatibility with a
 271:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * specific version of the APP.
 272:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 273:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 274:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 275:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 276:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 277:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 278:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_APP_VERSION_t version;
 279:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_Init();
 280:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    version = I2C_MASTER_GetAppVersion();
 281:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(version.major != 4U)
 282:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 283:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 284:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 285:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 286:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 287:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 288:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 289:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 290:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** DAVE_APP_VERSION_t I2C_MASTER_GetAppVersion(void);
 291:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 292:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief This function initializes the I2C_MASTER APP based on user provided configuration.
 293:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 294:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
 295:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 296:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description: </b><br>
 297:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C configurations like channel selection,baud rate setting,
 298:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * FIFO configuration etc are done in this API.
 299:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Protocol specific interrupts can also be enabled using the I2C_MASTER_Init
 300:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * function.
 301:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 302:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 303:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 304:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 305:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * #include "DAVE.h"
 306:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * int main(void)
 307:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * {
 308:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   // Initializing the modules and the multiplexer
 309:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_Init(); // I2C_MASTER_Init will be called from DAVE_Init()
 310:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1)
 311:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {}
 312:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 313:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 314:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 315:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 316:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 317:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 318:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Init(const I2C_MASTER_t *const handle);
 319:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 320:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 321:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 322:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief  Receives the data from I2C slave device.
 323:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 324:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start Flag to indicate that the start condition need to be send.
 325:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address I2C slave device address.
 326:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data buffer to receive data.
 327:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  count The number of bytes to be received from slave.
 328:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 329:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_nack The flag to indicate that the NACK condition need to be send for the last byte
 330:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 331:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 332:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_Receive API can be used in Interrupt and Direct modes.\n
 333:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 334:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 335:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 336:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).\n
 337:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 338:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 339:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 340:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 341:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 342:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 343:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_READ 10
 344:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_TRANSMIT 10
 345:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 346:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 347:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 348:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 349:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 350:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 351:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
 352:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 353:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 354:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t data = 0x55;
 355:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_data;
 356:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 357:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 358:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 359:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_STATUS_t init_status;  
 360:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   init_status = DAVE_Init();
 361:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 362:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 363:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
 364:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
 365:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 366:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 367:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 368:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,&data,1,true);
 369:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 370:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 371:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Read data from IO EXPANDER
 372:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 373:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 374:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 375:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0,true,SLAVE_ADDRESS,&rx_data,1,true,true);
 376:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 377:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 378:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1)
 379:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   { }
 380:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  return 0;
 381:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 382:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 383:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 384:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 385:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 386:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Receive(I2C_MASTER_t *handle, bool send_start, const uint32_t addres
 387:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                        uint8_t * data, const uint32_t count, bool send_stop, bool s
 388:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 389:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 390:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Transmits data to I2C slave device.
 391:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 392:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 393:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start The flag to indicate that the start condition need to be send.
 394:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address I2C slave device address.
 395:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data buffer containing the data to transmit.
 396:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size The number of bytes to be send to slave.
 397:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 398:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 399:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 400:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 401:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_Transmit API can be used in Interrupt and Direct modes.\n
 402:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 403:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 404:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 405:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write). \n
 406:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 407:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 
 408:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 409:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 410:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 411:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 412:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 413:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 414:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 415:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 416:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 417:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
 418:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 419:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 420:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 421:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 422:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 423:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 424:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 425:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 426:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 427:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 428:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = IO_STATE;//memory which need to be read from slave
 429:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
 430:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 431:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 432:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 433:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
 434:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 435:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 436:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 437:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 438:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 439:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 440:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 441:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 442:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 443:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 444:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 445:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Transmit(I2C_MASTER_t *handle, bool send_start, const uint32_t addre
 446:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                uint8_t *data, const uint32_t size, bool send_stop);
 447:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 448:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 449:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Get the I2C flag status.
 450:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 451:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 452:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 453:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *			 	      bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be used to selec
 454:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    multiple flags.
 455:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 456:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t Flag status.
 457:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 458:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 459:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 460:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 461:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 462:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 463:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 464:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 465:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 466:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 467:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 468:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 469:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 470:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 471:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 472:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 473:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 474:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
 475:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 476:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 477:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 478:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 479:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 480:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 481:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 482:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 483:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 484:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 485:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 486:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** uint32_t I2C_MASTER_GetFlagStatus(const I2C_MASTER_t *handle, uint32_t flagtype);
 487:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 488:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 489:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Clear the I2C flag status.
 490:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 491:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 492:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 493:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    The bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be 
 494:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    multiple flags.
 495:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 496:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None <BR>
 497:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 498:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 499:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 500:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 501:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 502:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 503:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 504:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 505:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 506:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 507:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 508:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 509:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 510:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 511:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 512:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 513:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
 514:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 515:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 516:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 517:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 518:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 519:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 520:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 521:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 522:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 523:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 524:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 525:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** void I2C_MASTER_ClearFlag(const I2C_MASTER_t *handle, uint32_t flagtype);
 526:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 527:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 528:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Aborts the ongoing data transmission.
 529:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 530:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 531:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 532:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 533:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If there is a transmission in progress, it will be stopped. Once the transmission is stopped, 
 534:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * user can start a new transmission without delay.
 535:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 536:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 537:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 538:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 539:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 540:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 541:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 542:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 543:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 544:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buf[50] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
 545:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 546:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 547:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 548:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 549:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 550:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 551:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 552:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 553:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_AbortTransmit(&I2C_MASTER_0);
 554:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
 555:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 556:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 557:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 558:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
 559:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 560:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 561:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 562:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 563:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 564:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 565:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 566:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 567:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 568:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortTransmit(const I2C_MASTER_t *const handle);
 569:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 570:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 571:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** * @brief Stops the active data reception request.
 572:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 573:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 574:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 575:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 576:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a reception is in progress, it will be stopped. When a reception request
 577:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * is active, user will not be able to place a new receive request till the active
 578:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * reception is complete. This API can stop the progressing reception to make
 579:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * a new receive request.
 580:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 581:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 582:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 583:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 584:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 585:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 586:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 587:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 588:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 589:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 590:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t rx_buf[25];
 591:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t tx_buf[2];
 592:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_STATUS_t init_status;
 593:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   init_status = DAVE_Init();
 594:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 595:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 596:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //send the address from which data to be transfered
 597:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     tx_buf[0] = 0;
 598:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 599:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 600:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 601:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_AbortReceive(&I2C_MASTER_0);
 602:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_SendStop(&I2C_MASTER_0);
 603:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 604:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 605:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 606:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 607:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 608:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1U)
 609:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 610:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 611:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 612:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 1U;
 613:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 614:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 615:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 616:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 617:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 618:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortReceive(const I2C_MASTER_t *const handle);
 619:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 620:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 621:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1U) || defined(DOXYGEN)
 622:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 623:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for transmitting data over I2C channel using DMA.
 624:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 625:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 626:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  block_size size of the block
 627:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  addr    address\n
 628:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 629:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 630:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 631:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 632:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 633:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 634:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 635:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * request is registered.
 636:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 637:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 638:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 639:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. The function uses AP
 640:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * structure to store the status of transmission.
 641:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 642:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Actual data transmission happens through DMA channel.
 643:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * A maximum of 4095 bytes can be transmitted in one API call. This limit is because of the DMA sin
 644:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 645:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 646:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 647:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the completion of data transmission.
 648:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 649:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * calls to this API.
 650:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 651:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_StartTransmitDMA API can be used in DMA mode.
 652:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit should be configured as "DMA" mode in advanced settings tab. \n
 653:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 654:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 655:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 656:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 657:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 658:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 659:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 660:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 661:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 662:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 663:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 664:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 665:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 666:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 667:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 668:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 669:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 670:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 671:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 672:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 673:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 674:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 675:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 676:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 677:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
 678:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 679:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 680:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 681:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 682:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 683:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 684:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // trigger the DMA
 685:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitDMA(&I2C_MASTER_0, sizeof(Send_Data), Send_Data);
 686:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 687:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 688:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 689:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 690:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 691:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 692:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 693:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 694:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 695:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 696:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 697:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 698:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 699:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 700:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitDMA(const I2C_MASTER_t *const handle, uint32_t block_si
 701:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 702:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 703:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1U) || defined(DOXYGEN)
 704:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 705:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel using DMA.
 706:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 707:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 708:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 709:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param block_size  size of the block
 710:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  addr  address \n
 711:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 712:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 713:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 714:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 715:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 716:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 717:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 718:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 719:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured callback function will be executed.
 720:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 721:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When all the requested number of data bytes are received, the configured callback function will 
 722:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, the user has to poll for the value of the variable, \a
 723:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * handle->runtime->rx_busy to be false. The value is updated to \a false when all the requested nu
 724:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * are received.
 725:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * A maximum of 4095 bytes can be received in one API call. This limit is because of the DMA single
 726:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 727:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveDMA API can be used only in DMA mode
 728:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive should be configured as "DMA" mode in advanced settings tab \n
 729:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 730:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 731:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 732:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 733:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 734:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 735:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 736:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 737:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 738:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 739:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Pre condition:
 740:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Transmit mode and receive mode should be configured to "DMA" in advanced settings tab
 741:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 742:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t ReadData[256];
 743:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 744:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 745:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 746:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 747:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 748:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 749:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 750:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 751:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 752:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 753:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 754:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 755:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 756:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
 757:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 758:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 759:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 760:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 761:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 762:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 763:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
 764:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 765:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 766:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 767:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 768:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 769:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  
 770:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveDMA(&I2C_MASTER_0, 200, ReadData);
 771:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 772:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 773:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 774:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 775:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 776:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 777:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 778:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 779:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 780:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 781:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 782:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  @endcode
 783:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 784:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 785:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveDMA(const I2C_MASTER_t *const handle, uint32_t block_siz
 786:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 787:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 788:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1U)
 789:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 790:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for transmitting data over I2C_MASTER channel.
 791:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 792:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 793:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start flag to indicate the start condition
 794:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address slave address
 795:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data    pointer to buffer
 796:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size    number of bytes
 797:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop flag to indicate the stop condition\n
 798:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum supported by uint32_t.
 799:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 800:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 801:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 802:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 803:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 804:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 805:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * request is registered.
 806:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 807:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 808:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure a callback fu
 809:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. If transmit FIFO is 
 810:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the trigger limit is set to 1. So the transmit interrupt will be generated when all the data in 
 811:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * from FIFO. The function uses APP handle's runtime structure to store the data pointer, count, da
 812:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * status of transmission. This function only registers a data transmission request if there is no 
 813:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * in progress.
 814:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Actual data transmission happens in the transmit interrupt service routine. A trigger is generat
 815:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interrupt to start loading the data. If transmit FIFO is configured, the data is filled into the
 816:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit interrupt will be generated next time when the transmit FIFO is empty. At this point of
 817:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * some more data to be transmitted, it is loaded to the FIFO again. When FIFO is not enabled, data
 818:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * byte at a time. On transmission of each byte an interrupt is generated and the next byte is tran
 819:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interrupt service routine. Callback function is executed when all the data bytes are transmitted
 820:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of t
 821:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * structure( \a handle->runtime->tx_busy ) to check for the completion of data transmission.<br>
 822:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartTransmitIRQ API can be used only in Interrupt mode.
 823:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit should be configured as "Interrupt" mode in advanced settings tab.\n
 824:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 825:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 826:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 827:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).
 828:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 829:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 830:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 831:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 832:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 833:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 834:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 835:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 836:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 837:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 838:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 839:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 840:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 841:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 842:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 843:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
 844:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 845:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 846:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 847:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,64,true);
 848:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 849:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 850:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 851:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 852:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 853:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 854:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 855:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 856:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 857:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 858:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 859:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 860:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 861:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                 uint8_t *data, const uint32_t size, bool send_stop)
 862:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 863:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1U)
 864:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 865:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel.
 866:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 867:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 868:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 869:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start flag to indicate the start condition
 870:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address slave address
 871:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data    pointer to buffer
 872:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  count    number of bytes
 873:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop flag to indicate the stop condition
 874:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_nack flag to indicate the nack condition\n
 875:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum value supported by type uint32_t.
 876:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 877:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 878:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 879:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 880:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 881:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 882:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 883:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 884:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured callback function will be executed. Based on the UI configuration, either standard re
 885:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * receive FIFO is used for data reception. An interrupt is configured for reading received data fr
 886:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * function only registers a request to receive a number of data bytes from a USIC channel. If FIFO
 887:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.  When all
 888:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * of data bytes are received, the configured callback function will be executed. If a callback fun
 889:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured, the user has to poll for the value of the variable, \a handle->runtime->rx_busy to b
 890:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * is updated to \a false when all the requested number of data bytes are received.<br>
 891:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveIRQ API can be used only in Interrupt mode.
 892:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive should be configured as "Interrupt" mode in advanced settings tab.\n
 893:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 894:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 895:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 896:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).
 897:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 898:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 899:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 900:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 901:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 902:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_buffer[64];
 903:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 904:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 905:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 906:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 907:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 908:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 909:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 910:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 911:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 912:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
 913:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 914:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 915:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 916:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,rx_buffer,64,true, true);
 917:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 918:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 919:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 920:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 921:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 922:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 923:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 924:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 925:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 926:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 927:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 928:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                uint8_t * data, const uint32_t count, bool send_stop
 929:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 930:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 931:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 932:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 933:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Gets the transmit FIFO event flags.
 934:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 935:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 936:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 937:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t: Status of the STBI and TBERI bits in TRBSR register in
 938:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                      their bit positions.\n
 939:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                      \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t for the bitmask of event
 940:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 941:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 942:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function reads the value of TRBSR register. It masks the standard transmit buffer interrupt flag
 943:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * buffer error flag before providing the value.
 944:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * User has to mask the bits of interest before checking the status.
 945:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: Enable transmit fifo in Advanced settings tab. <br>
 946:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 947:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 948:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 949:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 950:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 951:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 952:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 953:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 954:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 955:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 956:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 957:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 958:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 959:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 960:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
 961:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
 962:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 963:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 964:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
 965:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
 966:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
 967:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
 968:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
 969:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 970:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 971:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 972:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 973:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 974:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 975:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 976:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 977:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 978:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 979:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 980:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 981:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 982:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetTXFIFOStatus(const I2C_MASTER_t* const handle)
 983:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 984:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetTXFIFOStatus: invalid handle", (handle != NULL));
 985:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_TXFIFO_GetEvent(handle->channel);
 986:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 987:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 988:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 989:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Configures trigger limit for the transmit FIFO.
 990:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 991:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 992:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size   FIFO size
 993:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  limit Value of transmit FIFO filling level, transition below which the interrupt should 
 994:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               \bRange: 0 to transmit FIFO size.\n
 995:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               e.g, If transmit FIFO size is 16, and limit is configured as 8, FIFO standard tran
 996:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               will be generated when the FIFO filling level drops from 8 to 7.\n
 997:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 998:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
 999:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1000:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1001:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit FIFO trigger limit is configured by setting its value in the TBCTR register.
1002:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit FIFO is configured to generate interrupt when the FIFO filling level drops
1003:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * below the trigger limit.
1004:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1005:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1006:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1007:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1008:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1009:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1010:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1011:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
1012:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1013:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1014:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1015:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1016:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1017:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1018:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1019:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit, draining level as 10
1020:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1021:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // Execution will happen two times in the interrupt handler as the limit is set to 10
1022:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, Send_Data, 16, true);
1023:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1024:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1025:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1026:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1027:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1028:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1029:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1030:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1031:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1032:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1033:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1034:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1035:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1036:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1037:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetTXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1038:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                              const uint32_t limit)
1039:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1040:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetTXFIFOTriggerLimit: invalid handle", (handle != NULL));
1041:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1042:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1043:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1044:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Configures trigger limit for the receive FIFO.
1045:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1046:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1047:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size   FIFO size
1048:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  limit Value of receive FIFO filling level, transition above which the interrupt should b
1049:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               \bRange: 0 to receive FIFO size.\n
1050:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               e.g, If receive FIFO size is 16, and limit is configured as 8, FIFO receive buffer
1051:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               will be generated when the FIFO filling level rises from 8 to 9.\n
1052:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1053:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1054:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1055:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1056:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive FIFO trigger limit is configured by setting its value in the RBCTR register.
1057:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive FIFO is configured to generate interrupt when the FIFO filling level rises
1058:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * above the trigger limit.
1059:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1060:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1061:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1062:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1063:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1064:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1065:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1066:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1067:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Rx_Data[256];
1068:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1069:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1070:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1071:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1072:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1073:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1074:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1075:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure receive fifo trigger limit to filling level as 10
1076:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1077:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // Execution will happen two times in the receive interrupt handler as the limit is set to 
1078:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, Rx_Data, 16, true, true);
1079:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
1080:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1081:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1082:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1083:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1084:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1085:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1086:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1087:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1088:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1089:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1090:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1091:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1092:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1093:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetRXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1094:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                              const uint32_t limit)
1095:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1096:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetRXFIFOTriggerLimit: invalid handle", (handle != NULL));
1097:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1098:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1099:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1100:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1101:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Checks if the transmit FIFO is full.
1102:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1103:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1104:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1105:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool Status of transmit FIFO filling level.
1106:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *              \bRange: \atrue- if transmit FIFO is full.<br>
1107:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                       \afalse- if transmit FIFO is not full.<br>
1108:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1109:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while filling
1110:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * data to the transmit FIFO.
1111:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: Transmit should be "Direct" mode in advanced settings tab.<br>
1112:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1113:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1114:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1115:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1116:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1117:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1118:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1119:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1120:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t send_data[] = "Infineon Technologies";
1121:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1122:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1123:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1124:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();           // Initialization of DAVE APPs
1125:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1126:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1127:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1128:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1129:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1130:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1131:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1132:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1133:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1134:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &send_data[0], 10, false);
1135:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Wait when Tx FIFO is full
1136:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  while(!I2C_MASTER_IsTXFIFOFull(&I2C_MASTER_0))
1137:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1138:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_Transmit(&I2C_MASTER_0, false, SLAVE_ADDRESS, &send_data[0], 10, false);
1139:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1140:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  while(1U)
1141:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1142:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1143:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
1144:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1145:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1146:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTXFIFOFull(const I2C_MASTER_t* const handle)
1147:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1148:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTXFIFOFull: invalid handle", (handle != NULL));
1149:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_TXFIFO_IsFull(handle->channel);
1150:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1151:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1152:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1153:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Checks if the receive FIFO is empty.
1154:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1155:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1156:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1157:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool Status of receive FIFO filling level.
1158:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *              \bRange: \atrue- if receive FIFO is empty.<br>
1159:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                       \afalse- if receive FIFO still has data.<br>
1160:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1161:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while reading data from the receive FIFO
1162:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1163:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1164:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1165:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1166:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1167:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1168:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1169:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1170:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1171:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1172:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1173:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1174:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1175:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1176:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1177:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1178:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1179:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1180:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1181:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1182:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1183:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1184:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1185:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1186:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1187:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1188:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1189:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1190:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1191:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1192:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1193:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1194:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1195:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1196:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1197:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1198:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1199:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1200:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1201:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1202:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1203:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1204:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1205:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1206:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1U)
1207:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
1208:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1209:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1210:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1211:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1212:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsRXFIFOEmpty(const I2C_MASTER_t* const handle)
1213:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1214:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsRXFIFOEmpty: invalid handle", (handle != NULL));
1215:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel);
1216:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1217:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1218:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1219:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Gets the status of event flags related to receive FIFO.
1220:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1221:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1222:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1223:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1224:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t: Status of standard receive buffer event, alternative receive buffer event and 
1225:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * error event in their bit positions in TRBSR register.\n
1226:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for event bitmasks. Multiple events' status c
1227:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * comparison using \a OR operation.
1228:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1229:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1230:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * It provides the status of standard receive buffer event, alternative receive buffer event and re
1231:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * event.
1232:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function masks the TRBSR register with the bitmask of SRBI, ARBI and RBERI flags. User has to ma
1233:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interest before checking the status.
1234:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1235:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1236:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1237:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1238:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1239:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   #define SLAVE_ADDRESS 0xA0
1240:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t mem_address[2];
1241:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   int main(void)
1242:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
1243:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     DAVE_STATUS_t init_status;
1244:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1245:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     init_status = DAVE_Init();
1246:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     if(init_status == DAVE_STATUS_SUCCESS)
1247:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1248:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       mem_address[0] = 0x00;//memory which need to be read from slave
1249:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       //Configure receive fifo trigger limit as 10
1250:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1251:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1252:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1253:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1254:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1255:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0
1256:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1257:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1258:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1259:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     else
1260:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1261:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1262:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1263:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1264:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1265:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1266:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      return 1U;
1267:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1268:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1269:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1270:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1271:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetRXFIFOStatus(const I2C_MASTER_t* const handle)
1272:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1273:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetRXFIFOStatus: invalid handle", (handle != NULL));
1274:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_RXFIFO_GetEvent(handle->channel);
1275:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1276:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1277:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1278:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to
1279:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * transmit FIFO.
1280:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1281:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1282:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1283:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flag Value with event bits at their bit positions in TRBSR register to be cleared.\n
1284:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t. Multiple events can be combined 
1285:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \a OR operation.
1286:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1287:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return    None
1288:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1289:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1290:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function clears a status bit in TRBSR register using the TRBSCR register. But the function does 
1291:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * value with the bit positions restricted to transmit FIFO status bits. User should ensure that th
1292:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * appropriately masked.
1293:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1294:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1295:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1296:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1297:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1298:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1299:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1300:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1301:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1302:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1303:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1304:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1305:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1306:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1307:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00; //memory which need to be read from slave
1308:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
1309:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1310:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1311:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1312:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
1313:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1314:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
1315:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1316:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
1317:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1318:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1319:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1320:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1321:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1322:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1323:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1324:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1325:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1326:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1327:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1328:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1329:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1330:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearTXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1331:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1332:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearTXFIFOStatus: invalid handle", (handle != NULL));
1333:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_TXFIFO_ClearEvent(handle->channel, flag);
1334:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1335:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1336:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1337:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to receive FIFO. It should be used 
1338:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * of standard receive buffer interrupt, alternative receive buffer interrupt and receive buffer er
1339:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1340:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1341:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1342:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flag Value with event bits at the bit positions in TRBSR register to be cleared.\n
1343:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for providing events.
1344:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             Multiple events can be input by using \a OR operation.
1345:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1346:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return    None
1347:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1348:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1349:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function clears a status bit in TRBSR using the TRBSCR register.
1350:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The function does not mask the input value to clear only receive buffer
1351:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * events. So user should appropriately mask the input value before calling
1352:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the function.
1353:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1354:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1355:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1356:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1357:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1358:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1359:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1360:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1361:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1362:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1363:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1364:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1365:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1366:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1367:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
1368:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure receive fifo trigger limit as 10
1369:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1370:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1371:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1372:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1373:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1374:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0)
1375:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1376:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1377:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1378:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1379:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1380:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1381:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1382:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1383:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1384:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1385:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1386:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1387:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1388:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1389:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1390:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearRXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1391:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1392:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearRXFIFOStatus: invalid handle", (handle != NULL));
1393:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_RXFIFO_ClearEvent(handle->channel, flag);
1394:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1395:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1396:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1397:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Provides the received data from receive buffer.
1398:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1399:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1400:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint8_t: Data read from RBUF.\n
1401:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1402:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1403:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This can be used in receive mode "Direct" to read the received data.
1404:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If Rx FIFO is not configured, function reads the value of RBUF register.
1405:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Otherwise it reads the data from OUTR register.
1406:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1407:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1408:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1409:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1410:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1411:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1412:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1413:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1414:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[10];
1415:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0,loc_index = 0;
1416:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1417:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1418:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1419:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1420:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1421:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1422:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1423:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1424:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1425:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1426:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1427:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1428:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1429:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1430:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1431:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1432:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1433:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1434:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1435:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1436:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        // wait for ACK
1437:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1438:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1439:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1440:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1441:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1442:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         index++;
1443:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1444:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1445:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1446:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1447:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1448:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1449:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1450:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1451:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1452:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1453:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1454:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1455:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1456:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1457:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1458:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1459:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1460:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1461:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1462:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /* Wrapper to the LLD API for reading back the value of the RBUF or OUTR register */
1463:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint8_t I2C_MASTER_GetReceivedByte(I2C_MASTER_t * const handle)
1464:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1465:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetReceivedByte: invalid handle", (handle != NULL));
1466:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   return (uint8_t)XMC_I2C_CH_GetReceivedData(handle->channel);
1467:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1468:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1469:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1470:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Transmits single byte using I2C protocol.
1471:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1472:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1473:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  byte data byte to transmit. \n
1474:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1475:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 
1476:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1477:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1478:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1479:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1480:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1481:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1482:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1483:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1484:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1485:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1486:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1487:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1488:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1489:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1490:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1491:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1492:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1493:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1494:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1495:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1496:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1497:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1498:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1499:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1500:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1501:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // wait for ACK
1502:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1503:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1504:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1505:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1506:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1507:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // wait for ACK
1508:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1509:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1510:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1511:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1512:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1513:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1514:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1515:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1516:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_TransmitByte(I2C_MASTER_t * const handle, uint8_t byte)
1517:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1518:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_TransmitByte: invalid handle", (handle != NULL));
1519:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterTransmit(handle->channel, byte);
1520:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1521:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1522:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Enables the selected protocol events for interrupt generation.
1523:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1524:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1525:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  event  Protocol events to be enabled for interrupt generation. \n
1526:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1527:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         combined using the bitwise OR operation.\n
1528:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1529:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1530:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1531:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Enables the events by configuring CCR or PCR register based on the event.
1532:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the event is enabled, an interrupt can be generated on occurrence of the event.
1533:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The API should be used only for \a Direct mode related events. Using this API for non \a Direct 
1534:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * may not yield expected result.
1535:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1536:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1537:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1538:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1539:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1540:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1541:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1542:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1543:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1544:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1545:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1546:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1547:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1548:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1549:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1550:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1551:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1552:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1553:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1554:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1555:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1556:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_EnableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1557:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1558:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1559:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1560:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1561:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1562:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1563:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_EnableEvent(I2C_MASTER_t * const handle, uint32_t event)
1564:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1565:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_EnableEvent: invalid handle", (handle != NULL));
1566:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_EnableEvent(handle->channel, event);
1567:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1568:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1569:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Disables selected events from generating interrupt.
1570:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1571:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1572:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  event  Events to be disabled from generating interrupt. \n
1573:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1574:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         combined using the bitwise OR operation.\n
1575:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1576:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1577:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1578:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Events are disabled by clearing their respective bits in either CCR, TBCTR or RBCTR.
1579:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1580:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1581:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1582:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1583:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1584:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1585:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1586:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1587:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1588:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1589:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1590:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1591:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1592:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1593:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1594:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1595:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1596:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1597:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1598:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1599:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1600:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_DisableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1601:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1602:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1603:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1604:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1605:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1606:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1607:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1608:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_DisableEvent(I2C_MASTER_t * const handle, uint32_t event)
1609:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1610:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_DisableEvent: invalid handle", (handle != NULL));
1611:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_DisableEvent(handle->channel, event);
1612:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1613:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1614:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1615:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Receives the ACK from slave
1616:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1617:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1618:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1619:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1620:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * After transmitting a byte, master receives the ack from slave.<br>
1621:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1622:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1623:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1624:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1625:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1626:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1627:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1628:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1629:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1630:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1631:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1632:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1633:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1634:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1635:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1636:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1637:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1638:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1639:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1640:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1641:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1642:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1643:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1644:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1645:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1646:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1647:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1648:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1649:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1650:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1651:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1652:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1653:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1654:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1655:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1656:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1657:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1658:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1659:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1660:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1661:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1662:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1663:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1664:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1665:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1666:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1667:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1668:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1669:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1670:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1671:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1672:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1673:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1674:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1675:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1676:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1677:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1678:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveACK(I2C_MASTER_t * const handle)
1679:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1680:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveACK: invalid handle", (handle != NULL));
1681:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterReceiveAck(handle->channel);
1682:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1683:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1684:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Receives the NACK from slave
1685:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1686:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1687:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1688:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1689:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * After transmitting a byte, master receives the nack from slave.<br>
1690:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1691:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1692:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1693:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1694:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1695:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1696:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1697:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1698:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1699:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1700:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint32_t index = 0, loc_index = 0;
1701:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1702:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1703:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1704:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1705:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1706:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1707:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1708:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1709:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1710:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1711:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1712:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1713:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1714:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1715:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1716:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1717:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1718:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1719:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1720:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1721:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1722:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1723:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1724:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1725:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1726:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1727:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1728:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1729:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // only for the last byte
1730:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ReceiveNACK(&I2C_MASTER_0);
1731:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1732:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1733:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1734:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1735:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1736:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1737:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1738:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1739:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1740:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1741:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1742:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1743:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1744:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1745:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1746:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1747:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1748:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveNACK(I2C_MASTER_t * const handle)
1749:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1750:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveNACK: invalid handle", (handle != NULL));
1751:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterReceiveNack(handle->channel);
1752:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1753:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1754:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends stop command to slave
1755:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1756:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1757:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1758:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1759:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * At the end of transmission, sends a stop command to slave <br>
1760:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.<br>
1761:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1762:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1763:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1764:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1765:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1766:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1767:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1768:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1769:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1770:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1771:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1772:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1773:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1774:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1775:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1776:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1777:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1778:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1779:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //send the address to which data to be transfered
1780:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1781:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1782:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1783:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1784:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1785:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1786:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
1787:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1788:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1789:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1790:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1791:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1792:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1793:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1794:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1795:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1796:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1797:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1798:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1799:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStop(I2C_MASTER_t * const handle)
1800:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1801:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStop: invalid handle", (handle != NULL));
1802:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED);
1803:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterStop(handle->channel);
1804:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1805:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1806:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends start command to slave
1807:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1808:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param address slave address
1809:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param cmd     command
1810:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1811:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1812:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1813:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Before start of transmission, sends a start command to slave. \n
1814:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1815:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1816:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1817:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1818:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1819:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1820:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1821:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1822:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
1823:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1824:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1825:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1826:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1827:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1828:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1829:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1830:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1831:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1832:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1833:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1834:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1835:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1836:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1837:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //send the address to which data to be transfered
1838:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1839:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1840:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1841:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1842:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1843:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1844:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1845:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1846:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       XMC_DEBUG("main: Application initialization failed");
1847:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while(1U)
1848:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       {
1849:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       }
1850:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1851:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1852:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1853:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1854:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1855:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStart(I2C_MASTER_t * const handle, const uint32_t address,
1856:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                  const XMC_I2C_CH_CMD_t cmd)
1857:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1858:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStart: invalid handle", (handle != NULL));
1859:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED);
1860:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterStart(handle->channel, (uint16_t)address, cmd);
1861:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1862:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1863:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends repeated start command to slave
1864:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1865:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param address slave address
1866:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param cmd     command
1867:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1868:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1869:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1870:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Before start of transmission, sends a repeatedstart command to slave if bus acquired is true.\n
1871:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1872:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1873:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1874:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1875:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1876:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1877:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1878:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1879:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1880:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1881:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1882:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1883:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1884:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rx_buf[256];
1885:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1886:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1887:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1888:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1889:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterStart(I2C_MASTER_0.channel, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1890:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1891:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1892:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1893:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1894:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1895:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //send the address to which data to be transfered
1896:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1897:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1898:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1899:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1900:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1901:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1902:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1903:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1904:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1905:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1906:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1907:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1908:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 	   memset(rx_buf,0,16);
1909:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, false, SLAVE_ADDRESS, rx_buf, 16, true, true);
1910:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1911:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1912:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1913:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1914:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1915:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1916:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1917:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1918:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 1U;
1919:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1920:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1921:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1922:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendRepeatedStart(I2C_MASTER_t * const handle, const uint32_t addre
1923:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                          const XMC_I2C_CH_CMD_t cmd)
1924:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1925:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendRepeatedStart: invalid handle", (handle != NULL));
1926:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEI
1927:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterRepeatedStart(handle->channel, (uint16_t)address, cmd);
1928:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1929:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1930:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1931:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends the txbusy flag
1932:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1933:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool : status of txbusy flag
1934:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  
1935:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1936:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1937:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
1938:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1939:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
1940:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
1941:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
1942:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
1943:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
1944:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
1945:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1946:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
1947:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1948:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1949:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1950:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1951:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1952:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1953:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1954:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1955:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
1956:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
1957:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1958:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1959:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1960:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
1961:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1962:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1963:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
1964:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
1965:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1966:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
1967:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1968:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1969:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
1970:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1971:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1972:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTxBusy(I2C_MASTER_t * const handle)
1973:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
  27              	 .loc 1 1973 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1974:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTxBusy: invalid handle", (handle != NULL));
1975:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   return handle->runtime->tx_busy;
  43              	 .loc 1 1975 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 9B68     	 ldr r3,[r3,#8]
  46 000c 93F82630 	 ldrb r3,[r3,#38]
  47 0010 DBB2     	 uxtb r3,r3
1976:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
  48              	 .loc 1 1976 0
  49 0012 1846     	 mov r0,r3
  50 0014 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0016 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0018 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001c 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE286:
  65 001e 00BF     	 .section .text.I2C_MASTER_IsRxBusy,"ax",%progbits
  66              	 .align 2
  67              	 .thumb
  68              	 .thumb_func
  70              	I2C_MASTER_IsRxBusy:
  71              	.LFB287:
1977:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1978:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1979:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends the rxbusy flag
1980:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1981:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool : status of rxbusy flag
1982:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1983:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1984:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
1985:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1986:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_READ 10
1987:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_TRANSMIT 10
1988:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1989:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
1990:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
1991:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
1992:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
1993:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
1994:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
1995:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1996:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1997:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t data = 0x55;
1998:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_data;
1999:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
2000:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
2001:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
2002:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
2003:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
2004:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
2005:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
2006:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = IO_STATE;//memory which need to be read from slave
2007:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
2008:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
2009:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
2010:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
2011:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,&data,1,true);
2012:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
2013:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
2014:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Read data from IO EXPANDER
2015:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
2016:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
2017:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
2018:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Receive(&I2C_MASTER_0,true,SLAVE_ADDRESS,&rx_data,1,true,true);
2019:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
2020:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
2021:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(1)
2022:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     { }
2023:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
2024:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
2025:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
2026:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
2027:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
2028:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
2029:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
2030:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsRxBusy(I2C_MASTER_t * const handle)
2031:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
  72              	 .loc 1 2031 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77 0000 80B4     	 push {r7}
  78              	.LCFI6:
  79              	 .cfi_def_cfa_offset 4
  80              	 .cfi_offset 7,-4
  81 0002 83B0     	 sub sp,sp,#12
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 16
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 7860     	 str r0,[r7,#4]
2032:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsRxBusy: invalid handle", (handle != NULL));
2033:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   return handle->runtime->rx_busy;
  88              	 .loc 1 2033 0
  89 0008 7B68     	 ldr r3,[r7,#4]
  90 000a 9B68     	 ldr r3,[r3,#8]
  91 000c 93F82730 	 ldrb r3,[r3,#39]
  92 0010 DBB2     	 uxtb r3,r3
2034:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
  93              	 .loc 1 2034 0
  94 0012 1846     	 mov r0,r3
  95 0014 0C37     	 adds r7,r7,#12
  96              	.LCFI9:
  97              	 .cfi_def_cfa_offset 4
  98 0016 BD46     	 mov sp,r7
  99              	.LCFI10:
 100              	 .cfi_def_cfa_register 13
 101              	 
 102 0018 5DF8047B 	 ldr r7,[sp],#4
 103              	.LCFI11:
 104              	 .cfi_restore 7
 105              	 .cfi_def_cfa_offset 0
 106 001c 7047     	 bx lr
 107              	 .cfi_endproc
 108              	.LFE287:
 110              	 .comm cluster_door_in,4,4
 111              	 .comm Vcu_OutPuts,3,4
 112              	 .comm Combi_Switch_IN,8,4
 113              	 .comm Seat_Switch_IN,3,4
 114              	 .comm Door_Switch_IN,7,4
 115              	 .comm Relay_Control_Switch_OUT,47,4
 116              	 .comm Hvac_IN,24,4
 117              	 .comm Switch_Ios_IN,20,4
 118              	 .comm Motor_controller_OUT,5,4
 119              	 .comm Lights_OUT,8,4
 120              	 .comm Sensors_OUT,8,4
 121              	 .comm Aux_Inputs,6,4
 122              	 .comm Instrument_Cluster_OUT,18,4
 123              	 .comm Seat_Belt_OUT,3,4
 124              	 .comm Gear_OUT,4,4
 125              	 .comm Instrumetcluster_DriveMode_OUT,4,4
 126              	 .comm Door_Switch_OUT,7,4
 127              	 .comm instrument_cluster_doorsvar,7,4
 128              	 .comm cluster_door_out,4,4
 129              	 .comm current_time,8,4
 130              	 .comm timeval,8,4
 131              	 .comm GPS_data_val,16,4
 132              	 .comm epoch,4,4
 133              	 .comm ambient_temp,1,1
 134 001e 00BF     	 .section .rodata
 135              	 .align 2
 136              	.LC0:
 137 0000 696E2074 	 .ascii "in temp\000"
 137      656D7000 
 138              	 .align 2
 139              	.LC1:
 140 0008 65786974 	 .ascii "exit temp\000"
 140      2074656D 
 140      7000
 141 0012 0000     	 .section .text.U18_read_temp,"ax",%progbits
 142              	 .align 2
 143              	 .global U18_read_temp
 144              	 .thumb
 145              	 .thumb_func
 147              	U18_read_temp:
 148              	.LFB605:
 149              	 .file 2 "../InputCapture/temp_sensors.c"
   1:../InputCapture/temp_sensors.c **** /*
   2:../InputCapture/temp_sensors.c ****  * temp_sensors.c
   3:../InputCapture/temp_sensors.c **** 
   4:../InputCapture/temp_sensors.c ****  *
   5:../InputCapture/temp_sensors.c ****  *  Created on: 14-Jul-2023
   6:../InputCapture/temp_sensors.c ****  *      Author: Suchit Sawant
   7:../InputCapture/temp_sensors.c ****  */
   8:../InputCapture/temp_sensors.c **** #include "DAVE.h"
   9:../InputCapture/temp_sensors.c **** #include "Vcu_config.h"
  10:../InputCapture/temp_sensors.c **** 
  11:../InputCapture/temp_sensors.c **** #define U18_address 0X94
  12:../InputCapture/temp_sensors.c **** #define U6_address 0x90
  13:../InputCapture/temp_sensors.c **** #define U9_address 0x92
  14:../InputCapture/temp_sensors.c **** 
  15:../InputCapture/temp_sensors.c **** 
  16:../InputCapture/temp_sensors.c **** void U18_read_temp(void)
  17:../InputCapture/temp_sensors.c **** {
 150              	 .loc 2 17 0
 151              	 .cfi_startproc
 152              	 
 153              	 
 154 0000 80B5     	 push {r7,lr}
 155              	.LCFI12:
 156              	 .cfi_def_cfa_offset 8
 157              	 .cfi_offset 7,-8
 158              	 .cfi_offset 14,-4
 159 0002 00AF     	 add r7,sp,#0
 160              	.LCFI13:
 161              	 .cfi_def_cfa_register 7
  18:../InputCapture/temp_sensors.c **** 	uart_debugg("in temp");
 162              	 .loc 2 18 0
 163 0004 0548     	 ldr r0,.L6
 164 0006 FFF7FEFF 	 bl uart_debugg
  19:../InputCapture/temp_sensors.c **** 	U18_MotorTemp_read();
 165              	 .loc 2 19 0
 166 000a FFF7FEFF 	 bl U18_MotorTemp_read
  20:../InputCapture/temp_sensors.c **** 	U18_CabinTemp_read();
 167              	 .loc 2 20 0
 168 000e FFF7FEFF 	 bl U18_CabinTemp_read
  21:../InputCapture/temp_sensors.c **** 	//U18_McTemp_read();
  22:../InputCapture/temp_sensors.c **** 	//U18_BatteryTemp_read();
  23:../InputCapture/temp_sensors.c **** 	//U18_throttle_read();
  24:../InputCapture/temp_sensors.c **** 	uart_debugg("exit temp");
 169              	 .loc 2 24 0
 170 0012 0348     	 ldr r0,.L6+4
 171 0014 FFF7FEFF 	 bl uart_debugg
  25:../InputCapture/temp_sensors.c **** }
 172              	 .loc 2 25 0
 173 0018 80BD     	 pop {r7,pc}
 174              	.L7:
 175 001a 00BF     	 .align 2
 176              	.L6:
 177 001c 00000000 	 .word .LC0
 178 0020 08000000 	 .word .LC1
 179              	 .cfi_endproc
 180              	.LFE605:
 182              	 .section .text.U18_48v_read,"ax",%progbits
 183              	 .align 2
 184              	 .global U18_48v_read
 185              	 .thumb
 186              	 .thumb_func
 188              	U18_48v_read:
 189              	.LFB606:
  26:../InputCapture/temp_sensors.c **** 
  27:../InputCapture/temp_sensors.c **** void U18_48v_read(void)
  28:../InputCapture/temp_sensors.c **** {
 190              	 .loc 2 28 0
 191              	 .cfi_startproc
 192              	 
 193              	 
 194 0000 90B5     	 push {r4,r7,lr}
 195              	.LCFI14:
 196              	 .cfi_def_cfa_offset 12
 197              	 .cfi_offset 4,-12
 198              	 .cfi_offset 7,-8
 199              	 .cfi_offset 14,-4
 200 0002 89B0     	 sub sp,sp,#36
 201              	.LCFI15:
 202              	 .cfi_def_cfa_offset 48
 203 0004 04AF     	 add r7,sp,#16
 204              	.LCFI16:
 205              	 .cfi_def_cfa 7,32
  29:../InputCapture/temp_sensors.c **** 	bool start = true, stop = false, ack = false;
 206              	 .loc 2 29 0
 207 0006 0123     	 movs r3,#1
 208 0008 FB73     	 strb r3,[r7,#15]
 209 000a 0023     	 movs r3,#0
 210 000c BB73     	 strb r3,[r7,#14]
 211 000e 0023     	 movs r3,#0
 212 0010 7B73     	 strb r3,[r7,#13]
  30:../InputCapture/temp_sensors.c **** 	uint8_t rx_buff[2];
  31:../InputCapture/temp_sensors.c **** 	uint8_t command_byte= 0x0f;
 213              	 .loc 2 31 0
 214 0012 0F23     	 movs r3,#15
 215 0014 FB71     	 strb r3,[r7,#7]
  32:../InputCapture/temp_sensors.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_1, start, U18_address, &command_byte, 1, stop);
 216              	 .loc 2 32 0
 217 0016 FA7B     	 ldrb r2,[r7,#15]
 218 0018 FC1D     	 adds r4,r7,#7
 219 001a 0123     	 movs r3,#1
 220 001c 0093     	 str r3,[sp]
 221 001e BB7B     	 ldrb r3,[r7,#14]
 222 0020 0193     	 str r3,[sp,#4]
 223 0022 1048     	 ldr r0,.L10
 224 0024 1146     	 mov r1,r2
 225 0026 9422     	 movs r2,#148
 226 0028 2346     	 mov r3,r4
 227 002a FFF7FEFF 	 bl I2C_MASTER_Transmit
  33:../InputCapture/temp_sensors.c **** 	while(I2C_MASTER_IsTxBusy(&I2C_MASTER_1));
 228              	 .loc 2 33 0
 229 002e 00BF     	 nop
 230              	.L9:
 231              	 .loc 2 33 0 is_stmt 0 discriminator 1
 232 0030 0C48     	 ldr r0,.L10
 233 0032 FFF7FEFF 	 bl I2C_MASTER_IsTxBusy
 234 0036 0346     	 mov r3,r0
 235 0038 002B     	 cmp r3,#0
 236 003a F9D1     	 bne .L9
  34:../InputCapture/temp_sensors.c **** 	start = false;
 237              	 .loc 2 34 0 is_stmt 1
 238 003c 0023     	 movs r3,#0
 239 003e FB73     	 strb r3,[r7,#15]
  35:../InputCapture/temp_sensors.c **** 	I2C_MASTER_Receive(&I2C_MASTER_1, start, U18_address, rx_buff, 2, stop, ack);
 240              	 .loc 2 35 0
 241 0040 FA7B     	 ldrb r2,[r7,#15]
 242 0042 07F10804 	 add r4,r7,#8
 243 0046 0223     	 movs r3,#2
 244 0048 0093     	 str r3,[sp]
 245 004a BB7B     	 ldrb r3,[r7,#14]
 246 004c 0193     	 str r3,[sp,#4]
 247 004e 7B7B     	 ldrb r3,[r7,#13]
 248 0050 0293     	 str r3,[sp,#8]
 249 0052 0448     	 ldr r0,.L10
 250 0054 1146     	 mov r1,r2
 251 0056 9422     	 movs r2,#148
 252 0058 2346     	 mov r3,r4
 253 005a FFF7FEFF 	 bl I2C_MASTER_Receive
  36:../InputCapture/temp_sensors.c **** 
  37:../InputCapture/temp_sensors.c **** 	//rx_buff &= 0x0fff;
  38:../InputCapture/temp_sensors.c **** }
 254              	 .loc 2 38 0
 255 005e 1437     	 adds r7,r7,#20
 256              	.LCFI17:
 257              	 .cfi_def_cfa_offset 12
 258 0060 BD46     	 mov sp,r7
 259              	.LCFI18:
 260              	 .cfi_def_cfa_register 13
 261              	 
 262 0062 90BD     	 pop {r4,r7,pc}
 263              	.L11:
 264              	 .align 2
 265              	.L10:
 266 0064 00000000 	 .word I2C_MASTER_1
 267              	 .cfi_endproc
 268              	.LFE606:
 270              	 .global __aeabi_f2d
 271              	 .global __aeabi_d2f
 272              	 .section .text.U18_MotorTemp_read,"ax",%progbits
 273              	 .align 2
 274              	 .global U18_MotorTemp_read
 275              	 .thumb
 276              	 .thumb_func
 278              	U18_MotorTemp_read:
 279              	.LFB607:
  39:../InputCapture/temp_sensors.c **** void U18_MotorTemp_read(void)
  40:../InputCapture/temp_sensors.c **** {
 280              	 .loc 2 40 0
 281              	 .cfi_startproc
 282              	 
 283              	 
 284 0000 90B5     	 push {r4,r7,lr}
 285              	.LCFI19:
 286              	 .cfi_def_cfa_offset 12
 287              	 .cfi_offset 4,-12
 288              	 .cfi_offset 7,-8
 289              	 .cfi_offset 14,-4
 290 0002 91B0     	 sub sp,sp,#68
 291              	.LCFI20:
 292              	 .cfi_def_cfa_offset 80
 293 0004 04AF     	 add r7,sp,#16
 294              	.LCFI21:
 295              	 .cfi_def_cfa 7,64
  41:../InputCapture/temp_sensors.c **** 	/*bool start = true, stop = true;
  42:../InputCapture/temp_sensors.c **** 	uint8_t command_byte= 0x1f;
  43:../InputCapture/temp_sensors.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_1, start, U38_address, &command_byte, 1, stop);
  44:../InputCapture/temp_sensors.c **** 	while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));*/
  45:../InputCapture/temp_sensors.c **** 
  46:../InputCapture/temp_sensors.c **** 
  47:../InputCapture/temp_sensors.c **** 	bool start = true, stop = 0, ack = true;
 296              	 .loc 2 47 0
 297 0006 0123     	 movs r3,#1
 298 0008 87F82F30 	 strb r3,[r7,#47]
 299 000c 0023     	 movs r3,#0
 300 000e 87F82E30 	 strb r3,[r7,#46]
 301 0012 0123     	 movs r3,#1
 302 0014 87F82D30 	 strb r3,[r7,#45]
  48:../InputCapture/temp_sensors.c **** 	float ans = 0, Resistance = 0;
 303              	 .loc 2 48 0
 304 0018 4FF00003 	 mov r3,#0
 305 001c BB62     	 str r3,[r7,#40]
 306 001e 4FF00003 	 mov r3,#0
 307 0022 7B62     	 str r3,[r7,#36]
  49:../InputCapture/temp_sensors.c **** 	unsigned int SERIESRESISTOR = 10000, NOMINAL_RESISTANCE = 10000, BCOEFFICIENT = 3950, NOMINAL_TEMP
 308              	 .loc 2 49 0
 309 0024 42F21073 	 movw r3,#10000
 310 0028 3B62     	 str r3,[r7,#32]
 311 002a 42F21073 	 movw r3,#10000
 312 002e FB61     	 str r3,[r7,#28]
 313 0030 40F66E73 	 movw r3,#3950
 314 0034 BB61     	 str r3,[r7,#24]
 315 0036 1923     	 movs r3,#25
 316 0038 7B61     	 str r3,[r7,#20]
  50:../InputCapture/temp_sensors.c **** 	uint8_t command_byte= 0x9f, rx_buff[2] = {0};
 317              	 .loc 2 50 0
 318 003a 9F23     	 movs r3,#159
 319 003c FB72     	 strb r3,[r7,#11]
 320 003e 0023     	 movs r3,#0
 321 0040 3B81     	 strh r3,[r7,#8]
  51:../InputCapture/temp_sensors.c **** 	uint16_t rx = 0;
 322              	 .loc 2 51 0
 323 0042 0023     	 movs r3,#0
 324 0044 7B82     	 strh r3,[r7,#18]
  52:../InputCapture/temp_sensors.c **** 
  53:../InputCapture/temp_sensors.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_1, start, U18_address, &command_byte, 1, stop);
 325              	 .loc 2 53 0
 326 0046 97F82F20 	 ldrb r2,[r7,#47]
 327 004a 07F10B04 	 add r4,r7,#11
 328 004e 0123     	 movs r3,#1
 329 0050 0093     	 str r3,[sp]
 330 0052 97F82E30 	 ldrb r3,[r7,#46]
 331 0056 0193     	 str r3,[sp,#4]
 332 0058 5248     	 ldr r0,.L15
 333 005a 1146     	 mov r1,r2
 334 005c 9422     	 movs r2,#148
 335 005e 2346     	 mov r3,r4
 336 0060 FFF7FEFF 	 bl I2C_MASTER_Transmit
  54:../InputCapture/temp_sensors.c **** 	while(I2C_MASTER_IsTxBusy(&I2C_MASTER_1));
 337              	 .loc 2 54 0
 338 0064 00BF     	 nop
 339              	.L13:
 340              	 .loc 2 54 0 is_stmt 0 discriminator 1
 341 0066 4F48     	 ldr r0,.L15
 342 0068 FFF7FEFF 	 bl I2C_MASTER_IsTxBusy
 343 006c 0346     	 mov r3,r0
 344 006e 002B     	 cmp r3,#0
 345 0070 F9D1     	 bne .L13
  55:../InputCapture/temp_sensors.c **** 
  56:../InputCapture/temp_sensors.c **** 	stop = true;
 346              	 .loc 2 56 0 is_stmt 1
 347 0072 0123     	 movs r3,#1
 348 0074 87F82E30 	 strb r3,[r7,#46]
  57:../InputCapture/temp_sensors.c **** 
  58:../InputCapture/temp_sensors.c **** 	I2C_MASTER_Receive(&I2C_MASTER_1, start, U18_address, rx_buff, 2, stop, ack);
 349              	 .loc 2 58 0
 350 0078 97F82F20 	 ldrb r2,[r7,#47]
 351 007c 07F10804 	 add r4,r7,#8
 352 0080 0223     	 movs r3,#2
 353 0082 0093     	 str r3,[sp]
 354 0084 97F82E30 	 ldrb r3,[r7,#46]
 355 0088 0193     	 str r3,[sp,#4]
 356 008a 97F82D30 	 ldrb r3,[r7,#45]
 357 008e 0293     	 str r3,[sp,#8]
 358 0090 4448     	 ldr r0,.L15
 359 0092 1146     	 mov r1,r2
 360 0094 9422     	 movs r2,#148
 361 0096 2346     	 mov r3,r4
 362 0098 FFF7FEFF 	 bl I2C_MASTER_Receive
  59:../InputCapture/temp_sensors.c **** 	while(I2C_MASTER_IsRxBusy(&I2C_MASTER_1));
 363              	 .loc 2 59 0
 364 009c 00BF     	 nop
 365              	.L14:
 366              	 .loc 2 59 0 is_stmt 0 discriminator 1
 367 009e 4148     	 ldr r0,.L15
 368 00a0 FFF7FEFF 	 bl I2C_MASTER_IsRxBusy
 369 00a4 0346     	 mov r3,r0
 370 00a6 002B     	 cmp r3,#0
 371 00a8 F9D1     	 bne .L14
  60:../InputCapture/temp_sensors.c **** 
  61:../InputCapture/temp_sensors.c **** 	rx = ((uint16_t)rx_buff[0] << 8) | rx_buff[1];
 372              	 .loc 2 61 0 is_stmt 1
 373 00aa 3B7A     	 ldrb r3,[r7,#8]
 374 00ac 1B02     	 lsls r3,r3,#8
 375 00ae 9AB2     	 uxth r2,r3
 376 00b0 7B7A     	 ldrb r3,[r7,#9]
 377 00b2 9BB2     	 uxth r3,r3
 378 00b4 1343     	 orrs r3,r3,r2
 379 00b6 9BB2     	 uxth r3,r3
 380 00b8 7B82     	 strh r3,[r7,#18]
  62:../InputCapture/temp_sensors.c **** 	rx &= 0x0fff;
 381              	 .loc 2 62 0
 382 00ba 7B8A     	 ldrh r3,[r7,#18]
 383 00bc C3F30B03 	 ubfx r3,r3,#0,#12
 384 00c0 7B82     	 strh r3,[r7,#18]
  63:../InputCapture/temp_sensors.c **** 
  64:../InputCapture/temp_sensors.c **** 	Resistance = ((float)4095.0/(float)rx) - 1;
 385              	 .loc 2 64 0
 386 00c2 7B8A     	 ldrh r3,[r7,#18]
 387 00c4 07EE903A 	 fmsr s15,r3
 388 00c8 F8EE677A 	 fuitos s15,s15
 389 00cc 9FED367A 	 flds s14,.L15+4
 390 00d0 C7EE277A 	 fdivs s15,s14,s15
 391 00d4 B7EE007A 	 fconsts s14,#112
 392 00d8 77EEC77A 	 fsubs s15,s15,s14
 393 00dc C7ED097A 	 fsts s15,[r7,#36]
  65:../InputCapture/temp_sensors.c **** 	Resistance = ((float)10000.0/(float)Resistance);
 394              	 .loc 2 65 0
 395 00e0 9FED327A 	 flds s14,.L15+8
 396 00e4 D7ED097A 	 flds s15,[r7,#36]
 397 00e8 C7EE277A 	 fdivs s15,s14,s15
 398 00ec C7ED097A 	 fsts s15,[r7,#36]
  66:../InputCapture/temp_sensors.c **** 
  67:../InputCapture/temp_sensors.c **** 	Resistance /= (float)2;
 399              	 .loc 2 67 0
 400 00f0 D7ED097A 	 flds s15,[r7,#36]
 401 00f4 B0EE007A 	 fconsts s14,#0
 402 00f8 C7EE877A 	 fdivs s15,s15,s14
 403 00fc C7ED097A 	 fsts s15,[r7,#36]
  68:../InputCapture/temp_sensors.c **** 
  69:../InputCapture/temp_sensors.c **** 	float steinhart;
  70:../InputCapture/temp_sensors.c **** 
  71:../InputCapture/temp_sensors.c **** 	steinhart = (float)Resistance / (float)10000.0; // (R/Ro)
 404              	 .loc 2 71 0
 405 0100 D7ED097A 	 flds s15,[r7,#36]
 406 0104 9FED297A 	 flds s14,.L15+8
 407 0108 C7EE877A 	 fdivs s15,s15,s14
 408 010c C7ED037A 	 fsts s15,[r7,#12]
  72:../InputCapture/temp_sensors.c **** 	steinhart = (float)log(steinhart); // ln(R/Ro)
 409              	 .loc 2 72 0
 410 0110 F868     	 ldr r0,[r7,#12]
 411 0112 FFF7FEFF 	 bl __aeabi_f2d
 412 0116 0246     	 mov r2,r0
 413 0118 0B46     	 mov r3,r1
 414 011a 1046     	 mov r0,r2
 415 011c 1946     	 mov r1,r3
 416 011e FFF7FEFF 	 bl log
 417 0122 0246     	 mov r2,r0
 418 0124 0B46     	 mov r3,r1
 419 0126 1046     	 mov r0,r2
 420 0128 1946     	 mov r1,r3
 421 012a FFF7FEFF 	 bl __aeabi_d2f
 422 012e 0346     	 mov r3,r0
 423 0130 FB60     	 str r3,[r7,#12]
  73:../InputCapture/temp_sensors.c **** 	steinhart /= (float)3950.0;
 424              	 .loc 2 73 0
 425 0132 D7ED037A 	 flds s15,[r7,#12]
 426 0136 9FED1E7A 	 flds s14,.L15+12
 427 013a C7EE877A 	 fdivs s15,s15,s14
 428 013e C7ED037A 	 fsts s15,[r7,#12]
  74:../InputCapture/temp_sensors.c **** 	steinhart += (float)1.0 / (NOMINAL_TEMPERATURE + (float)273.15); // + (1/To)
 429              	 .loc 2 74 0
 430 0142 7B69     	 ldr r3,[r7,#20]
 431 0144 07EE903A 	 fmsr s15,r3
 432 0148 F8EE677A 	 fuitos s15,s15
 433 014c 9FED197A 	 flds s14,.L15+16
 434 0150 77EE877A 	 fadds s15,s15,s14
 435 0154 B7EE007A 	 fconsts s14,#112
 436 0158 C7EE277A 	 fdivs s15,s14,s15
 437 015c 97ED037A 	 flds s14,[r7,#12]
 438 0160 77EE277A 	 fadds s15,s14,s15
 439 0164 C7ED037A 	 fsts s15,[r7,#12]
  75:../InputCapture/temp_sensors.c **** 
  76:../InputCapture/temp_sensors.c **** 	steinhart = (float)1.0 / steinhart;
 440              	 .loc 2 76 0
 441 0168 B7EE007A 	 fconsts s14,#112
 442 016c D7ED037A 	 flds s15,[r7,#12]
 443 0170 C7EE277A 	 fdivs s15,s14,s15
 444 0174 C7ED037A 	 fsts s15,[r7,#12]
  77:../InputCapture/temp_sensors.c **** 	ambient_temp =	steinhart -= (float)273.15;
 445              	 .loc 2 77 0
 446 0178 D7ED037A 	 flds s15,[r7,#12]
 447 017c 9FED0D7A 	 flds s14,.L15+16
 448 0180 77EEC77A 	 fsubs s15,s15,s14
 449 0184 C7ED037A 	 fsts s15,[r7,#12]
 450 0188 D7ED037A 	 flds s15,[r7,#12]
 451 018c FCEEE77A 	 ftouizs s15,s15
 452 0190 C7ED017A 	 fsts s15,[r7,#4]
 453 0194 3B79     	 ldrb r3,[r7,#4]
 454 0196 DAB2     	 uxtb r2,r3
 455 0198 074B     	 ldr r3,.L15+20
 456 019a 1A70     	 strb r2,[r3]
  78:../InputCapture/temp_sensors.c **** 
  79:../InputCapture/temp_sensors.c **** }
 457              	 .loc 2 79 0
 458 019c 3437     	 adds r7,r7,#52
 459              	.LCFI22:
 460              	 .cfi_def_cfa_offset 12
 461 019e BD46     	 mov sp,r7
 462              	.LCFI23:
 463              	 .cfi_def_cfa_register 13
 464              	 
 465 01a0 90BD     	 pop {r4,r7,pc}
 466              	.L16:
 467 01a2 00BF     	 .align 2
 468              	.L15:
 469 01a4 00000000 	 .word I2C_MASTER_1
 470 01a8 00F07F45 	 .word 1166012416
 471 01ac 00401C46 	 .word 1176256512
 472 01b0 00E07645 	 .word 1165418496
 473 01b4 33938843 	 .word 1133024051
 474 01b8 00000000 	 .word ambient_temp
 475              	 .cfi_endproc
 476              	.LFE607:
 478              	 .section .text.U18_CabinTemp_read,"ax",%progbits
 479              	 .align 2
 480              	 .global U18_CabinTemp_read
 481              	 .thumb
 482              	 .thumb_func
 484              	U18_CabinTemp_read:
 485              	.LFB608:
  80:../InputCapture/temp_sensors.c **** 
  81:../InputCapture/temp_sensors.c **** void U18_CabinTemp_read(void)
  82:../InputCapture/temp_sensors.c **** {
 486              	 .loc 2 82 0
 487              	 .cfi_startproc
 488              	 
 489              	 
 490 0000 90B5     	 push {r4,r7,lr}
 491              	.LCFI24:
 492              	 .cfi_def_cfa_offset 12
 493              	 .cfi_offset 4,-12
 494              	 .cfi_offset 7,-8
 495              	 .cfi_offset 14,-4
 496 0002 8FB0     	 sub sp,sp,#60
 497              	.LCFI25:
 498              	 .cfi_def_cfa_offset 72
 499 0004 04AF     	 add r7,sp,#16
 500              	.LCFI26:
 501              	 .cfi_def_cfa 7,56
  83:../InputCapture/temp_sensors.c **** 
  84:../InputCapture/temp_sensors.c **** 	bool start = true, stop = 0, ack = true;
 502              	 .loc 2 84 0
 503 0006 0123     	 movs r3,#1
 504 0008 87F82730 	 strb r3,[r7,#39]
 505 000c 0023     	 movs r3,#0
 506 000e 87F82630 	 strb r3,[r7,#38]
 507 0012 0123     	 movs r3,#1
 508 0014 87F82530 	 strb r3,[r7,#37]
  85:../InputCapture/temp_sensors.c **** 	float ans = 0, Resistance = 0;
 509              	 .loc 2 85 0
 510 0018 4FF00003 	 mov r3,#0
 511 001c 3B62     	 str r3,[r7,#32]
 512 001e 4FF00003 	 mov r3,#0
 513 0022 FB61     	 str r3,[r7,#28]
  86:../InputCapture/temp_sensors.c **** 	unsigned int SERIESRESISTOR = 10000, NOMINAL_RESISTANCE = 10000, BCOEFFICIENT = 3950, NOMINAL_TEMP
 514              	 .loc 2 86 0
 515 0024 42F21073 	 movw r3,#10000
 516 0028 BB61     	 str r3,[r7,#24]
 517 002a 42F21073 	 movw r3,#10000
 518 002e 7B61     	 str r3,[r7,#20]
 519 0030 40F66E73 	 movw r3,#3950
 520 0034 3B61     	 str r3,[r7,#16]
 521 0036 1923     	 movs r3,#25
 522 0038 FB60     	 str r3,[r7,#12]
  87:../InputCapture/temp_sensors.c **** 	uint8_t command_byte= 0xdc, rx_buff[2] = {0};
 523              	 .loc 2 87 0
 524 003a DC23     	 movs r3,#220
 525 003c FB70     	 strb r3,[r7,#3]
 526 003e 0023     	 movs r3,#0
 527 0040 3B80     	 strh r3,[r7]
  88:../InputCapture/temp_sensors.c **** 	uint16_t rx = 0;
 528              	 .loc 2 88 0
 529 0042 0023     	 movs r3,#0
 530 0044 7B81     	 strh r3,[r7,#10]
  89:../InputCapture/temp_sensors.c **** 
  90:../InputCapture/temp_sensors.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_1, start, U18_address, &command_byte, 1, stop);
 531              	 .loc 2 90 0
 532 0046 97F82720 	 ldrb r2,[r7,#39]
 533 004a FC1C     	 adds r4,r7,#3
 534 004c 0123     	 movs r3,#1
 535 004e 0093     	 str r3,[sp]
 536 0050 97F82630 	 ldrb r3,[r7,#38]
 537 0054 0193     	 str r3,[sp,#4]
 538 0056 4D48     	 ldr r0,.L20
 539 0058 1146     	 mov r1,r2
 540 005a 9422     	 movs r2,#148
 541 005c 2346     	 mov r3,r4
 542 005e FFF7FEFF 	 bl I2C_MASTER_Transmit
  91:../InputCapture/temp_sensors.c **** 	while(I2C_MASTER_IsTxBusy(&I2C_MASTER_1));
 543              	 .loc 2 91 0
 544 0062 00BF     	 nop
 545              	.L18:
 546              	 .loc 2 91 0 is_stmt 0 discriminator 1
 547 0064 4948     	 ldr r0,.L20
 548 0066 FFF7FEFF 	 bl I2C_MASTER_IsTxBusy
 549 006a 0346     	 mov r3,r0
 550 006c 002B     	 cmp r3,#0
 551 006e F9D1     	 bne .L18
  92:../InputCapture/temp_sensors.c **** 
  93:../InputCapture/temp_sensors.c **** 	stop = true;
 552              	 .loc 2 93 0 is_stmt 1
 553 0070 0123     	 movs r3,#1
 554 0072 87F82630 	 strb r3,[r7,#38]
  94:../InputCapture/temp_sensors.c **** 
  95:../InputCapture/temp_sensors.c **** 	I2C_MASTER_Receive(&I2C_MASTER_1, start, U18_address, rx_buff, 2, stop, ack);
 555              	 .loc 2 95 0
 556 0076 97F82720 	 ldrb r2,[r7,#39]
 557 007a 3C46     	 mov r4,r7
 558 007c 0223     	 movs r3,#2
 559 007e 0093     	 str r3,[sp]
 560 0080 97F82630 	 ldrb r3,[r7,#38]
 561 0084 0193     	 str r3,[sp,#4]
 562 0086 97F82530 	 ldrb r3,[r7,#37]
 563 008a 0293     	 str r3,[sp,#8]
 564 008c 3F48     	 ldr r0,.L20
 565 008e 1146     	 mov r1,r2
 566 0090 9422     	 movs r2,#148
 567 0092 2346     	 mov r3,r4
 568 0094 FFF7FEFF 	 bl I2C_MASTER_Receive
  96:../InputCapture/temp_sensors.c **** 	while(I2C_MASTER_IsRxBusy(&I2C_MASTER_1));
 569              	 .loc 2 96 0
 570 0098 00BF     	 nop
 571              	.L19:
 572              	 .loc 2 96 0 is_stmt 0 discriminator 1
 573 009a 3C48     	 ldr r0,.L20
 574 009c FFF7FEFF 	 bl I2C_MASTER_IsRxBusy
 575 00a0 0346     	 mov r3,r0
 576 00a2 002B     	 cmp r3,#0
 577 00a4 F9D1     	 bne .L19
  97:../InputCapture/temp_sensors.c **** 
  98:../InputCapture/temp_sensors.c **** 	rx = ((uint16_t)rx_buff[0] << 8) | rx_buff[1];
 578              	 .loc 2 98 0 is_stmt 1
 579 00a6 3B78     	 ldrb r3,[r7]
 580 00a8 1B02     	 lsls r3,r3,#8
 581 00aa 9AB2     	 uxth r2,r3
 582 00ac 7B78     	 ldrb r3,[r7,#1]
 583 00ae 9BB2     	 uxth r3,r3
 584 00b0 1343     	 orrs r3,r3,r2
 585 00b2 9BB2     	 uxth r3,r3
 586 00b4 7B81     	 strh r3,[r7,#10]
  99:../InputCapture/temp_sensors.c **** 	rx &= 0x0fff;
 587              	 .loc 2 99 0
 588 00b6 7B89     	 ldrh r3,[r7,#10]
 589 00b8 C3F30B03 	 ubfx r3,r3,#0,#12
 590 00bc 7B81     	 strh r3,[r7,#10]
 100:../InputCapture/temp_sensors.c **** 
 101:../InputCapture/temp_sensors.c **** 	Resistance = ((float)4095.0/(float)rx) - 1;
 591              	 .loc 2 101 0
 592 00be 7B89     	 ldrh r3,[r7,#10]
 593 00c0 07EE903A 	 fmsr s15,r3
 594 00c4 F8EE677A 	 fuitos s15,s15
 595 00c8 9FED317A 	 flds s14,.L20+4
 596 00cc C7EE277A 	 fdivs s15,s14,s15
 597 00d0 B7EE007A 	 fconsts s14,#112
 598 00d4 77EEC77A 	 fsubs s15,s15,s14
 599 00d8 C7ED077A 	 fsts s15,[r7,#28]
 102:../InputCapture/temp_sensors.c **** 	Resistance = ((float)10000.0/(float)Resistance);
 600              	 .loc 2 102 0
 601 00dc 9FED2D7A 	 flds s14,.L20+8
 602 00e0 D7ED077A 	 flds s15,[r7,#28]
 603 00e4 C7EE277A 	 fdivs s15,s14,s15
 604 00e8 C7ED077A 	 fsts s15,[r7,#28]
 103:../InputCapture/temp_sensors.c **** 
 104:../InputCapture/temp_sensors.c **** 	Resistance /= (float)2;
 605              	 .loc 2 104 0
 606 00ec D7ED077A 	 flds s15,[r7,#28]
 607 00f0 B0EE007A 	 fconsts s14,#0
 608 00f4 C7EE877A 	 fdivs s15,s15,s14
 609 00f8 C7ED077A 	 fsts s15,[r7,#28]
 105:../InputCapture/temp_sensors.c **** 
 106:../InputCapture/temp_sensors.c **** 	float steinhart;
 107:../InputCapture/temp_sensors.c **** 
 108:../InputCapture/temp_sensors.c **** 	steinhart = (float)Resistance / (float)10000.0; // (R/Ro)
 610              	 .loc 2 108 0
 611 00fc D7ED077A 	 flds s15,[r7,#28]
 612 0100 9FED247A 	 flds s14,.L20+8
 613 0104 C7EE877A 	 fdivs s15,s15,s14
 614 0108 C7ED017A 	 fsts s15,[r7,#4]
 109:../InputCapture/temp_sensors.c **** 	steinhart = (float)log(steinhart); // ln(R/Ro)
 615              	 .loc 2 109 0
 616 010c 7868     	 ldr r0,[r7,#4]
 617 010e FFF7FEFF 	 bl __aeabi_f2d
 618 0112 0246     	 mov r2,r0
 619 0114 0B46     	 mov r3,r1
 620 0116 1046     	 mov r0,r2
 621 0118 1946     	 mov r1,r3
 622 011a FFF7FEFF 	 bl log
 623 011e 0246     	 mov r2,r0
 624 0120 0B46     	 mov r3,r1
 625 0122 1046     	 mov r0,r2
 626 0124 1946     	 mov r1,r3
 627 0126 FFF7FEFF 	 bl __aeabi_d2f
 628 012a 0346     	 mov r3,r0
 629 012c 7B60     	 str r3,[r7,#4]
 110:../InputCapture/temp_sensors.c **** 	steinhart /= (float)3950.0;
 630              	 .loc 2 110 0
 631 012e D7ED017A 	 flds s15,[r7,#4]
 632 0132 9FED197A 	 flds s14,.L20+12
 633 0136 C7EE877A 	 fdivs s15,s15,s14
 634 013a C7ED017A 	 fsts s15,[r7,#4]
 111:../InputCapture/temp_sensors.c **** 	steinhart += (float)1.0 / (NOMINAL_TEMPERATURE + (float)273.15); // + (1/To)
 635              	 .loc 2 111 0
 636 013e FB68     	 ldr r3,[r7,#12]
 637 0140 07EE903A 	 fmsr s15,r3
 638 0144 F8EE677A 	 fuitos s15,s15
 639 0148 9FED147A 	 flds s14,.L20+16
 640 014c 77EE877A 	 fadds s15,s15,s14
 641 0150 B7EE007A 	 fconsts s14,#112
 642 0154 C7EE277A 	 fdivs s15,s14,s15
 643 0158 97ED017A 	 flds s14,[r7,#4]
 644 015c 77EE277A 	 fadds s15,s14,s15
 645 0160 C7ED017A 	 fsts s15,[r7,#4]
 112:../InputCapture/temp_sensors.c **** 
 113:../InputCapture/temp_sensors.c **** 	steinhart = (float)1.0 / steinhart;
 646              	 .loc 2 113 0
 647 0164 B7EE007A 	 fconsts s14,#112
 648 0168 D7ED017A 	 flds s15,[r7,#4]
 649 016c C7EE277A 	 fdivs s15,s14,s15
 650 0170 C7ED017A 	 fsts s15,[r7,#4]
 114:../InputCapture/temp_sensors.c **** 	steinhart -= (float)273.15;
 651              	 .loc 2 114 0
 652 0174 D7ED017A 	 flds s15,[r7,#4]
 653 0178 9FED087A 	 flds s14,.L20+16
 654 017c 77EEC77A 	 fsubs s15,s15,s14
 655 0180 C7ED017A 	 fsts s15,[r7,#4]
 115:../InputCapture/temp_sensors.c **** 
 116:../InputCapture/temp_sensors.c **** }
 656              	 .loc 2 116 0
 657 0184 2C37     	 adds r7,r7,#44
 658              	.LCFI27:
 659              	 .cfi_def_cfa_offset 12
 660 0186 BD46     	 mov sp,r7
 661              	.LCFI28:
 662              	 .cfi_def_cfa_register 13
 663              	 
 664 0188 90BD     	 pop {r4,r7,pc}
 665              	.L21:
 666 018a 00BF     	 .align 2
 667              	.L20:
 668 018c 00000000 	 .word I2C_MASTER_1
 669 0190 00F07F45 	 .word 1166012416
 670 0194 00401C46 	 .word 1176256512
 671 0198 00E07645 	 .word 1165418496
 672 019c 33938843 	 .word 1133024051
 673              	 .cfi_endproc
 674              	.LFE608:
 676              	 .section .text.U18_McTemp_read,"ax",%progbits
 677              	 .align 2
 678              	 .global U18_McTemp_read
 679              	 .thumb
 680              	 .thumb_func
 682              	U18_McTemp_read:
 683              	.LFB609:
 117:../InputCapture/temp_sensors.c **** 
 118:../InputCapture/temp_sensors.c **** void U18_McTemp_read(void)
 119:../InputCapture/temp_sensors.c **** {
 684              	 .loc 2 119 0
 685              	 .cfi_startproc
 686              	 
 687              	 
 688 0000 90B5     	 push {r4,r7,lr}
 689              	.LCFI29:
 690              	 .cfi_def_cfa_offset 12
 691              	 .cfi_offset 4,-12
 692              	 .cfi_offset 7,-8
 693              	 .cfi_offset 14,-4
 694 0002 8FB0     	 sub sp,sp,#60
 695              	.LCFI30:
 696              	 .cfi_def_cfa_offset 72
 697 0004 04AF     	 add r7,sp,#16
 698              	.LCFI31:
 699              	 .cfi_def_cfa 7,56
 120:../InputCapture/temp_sensors.c **** 	bool start = true, stop = 0, ack = true;
 700              	 .loc 2 120 0
 701 0006 0123     	 movs r3,#1
 702 0008 87F82730 	 strb r3,[r7,#39]
 703 000c 0023     	 movs r3,#0
 704 000e 87F82630 	 strb r3,[r7,#38]
 705 0012 0123     	 movs r3,#1
 706 0014 87F82530 	 strb r3,[r7,#37]
 121:../InputCapture/temp_sensors.c **** 	float ans = 0, Resistance = 0;
 707              	 .loc 2 121 0
 708 0018 4FF00003 	 mov r3,#0
 709 001c 3B62     	 str r3,[r7,#32]
 710 001e 4FF00003 	 mov r3,#0
 711 0022 FB61     	 str r3,[r7,#28]
 122:../InputCapture/temp_sensors.c **** 	unsigned int SERIESRESISTOR = 10000, NOMINAL_RESISTANCE = 10000, BCOEFFICIENT = 3950, NOMINAL_TEMP
 712              	 .loc 2 122 0
 713 0024 42F21073 	 movw r3,#10000
 714 0028 BB61     	 str r3,[r7,#24]
 715 002a 42F21073 	 movw r3,#10000
 716 002e 7B61     	 str r3,[r7,#20]
 717 0030 40F66E73 	 movw r3,#3950
 718 0034 3B61     	 str r3,[r7,#16]
 719 0036 1923     	 movs r3,#25
 720 0038 FB60     	 str r3,[r7,#12]
 123:../InputCapture/temp_sensors.c **** 	uint8_t command_byte= 0xac, rx_buff[2] = {0};
 721              	 .loc 2 123 0
 722 003a AC23     	 movs r3,#172
 723 003c FB70     	 strb r3,[r7,#3]
 724 003e 0023     	 movs r3,#0
 725 0040 3B80     	 strh r3,[r7]
 124:../InputCapture/temp_sensors.c **** 	uint16_t rx = 0;
 726              	 .loc 2 124 0
 727 0042 0023     	 movs r3,#0
 728 0044 7B81     	 strh r3,[r7,#10]
 125:../InputCapture/temp_sensors.c **** 
 126:../InputCapture/temp_sensors.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_1, start, U18_address, &command_byte, 1, stop);
 729              	 .loc 2 126 0
 730 0046 97F82720 	 ldrb r2,[r7,#39]
 731 004a FC1C     	 adds r4,r7,#3
 732 004c 0123     	 movs r3,#1
 733 004e 0093     	 str r3,[sp]
 734 0050 97F82630 	 ldrb r3,[r7,#38]
 735 0054 0193     	 str r3,[sp,#4]
 736 0056 4D48     	 ldr r0,.L25
 737 0058 1146     	 mov r1,r2
 738 005a 9422     	 movs r2,#148
 739 005c 2346     	 mov r3,r4
 740 005e FFF7FEFF 	 bl I2C_MASTER_Transmit
 127:../InputCapture/temp_sensors.c **** 	while(I2C_MASTER_IsTxBusy(&I2C_MASTER_1));
 741              	 .loc 2 127 0
 742 0062 00BF     	 nop
 743              	.L23:
 744              	 .loc 2 127 0 is_stmt 0 discriminator 1
 745 0064 4948     	 ldr r0,.L25
 746 0066 FFF7FEFF 	 bl I2C_MASTER_IsTxBusy
 747 006a 0346     	 mov r3,r0
 748 006c 002B     	 cmp r3,#0
 749 006e F9D1     	 bne .L23
 128:../InputCapture/temp_sensors.c **** 
 129:../InputCapture/temp_sensors.c **** 	stop = true;
 750              	 .loc 2 129 0 is_stmt 1
 751 0070 0123     	 movs r3,#1
 752 0072 87F82630 	 strb r3,[r7,#38]
 130:../InputCapture/temp_sensors.c **** 
 131:../InputCapture/temp_sensors.c **** 	I2C_MASTER_Receive(&I2C_MASTER_1, start, U18_address, rx_buff, 2, stop, ack);
 753              	 .loc 2 131 0
 754 0076 97F82720 	 ldrb r2,[r7,#39]
 755 007a 3C46     	 mov r4,r7
 756 007c 0223     	 movs r3,#2
 757 007e 0093     	 str r3,[sp]
 758 0080 97F82630 	 ldrb r3,[r7,#38]
 759 0084 0193     	 str r3,[sp,#4]
 760 0086 97F82530 	 ldrb r3,[r7,#37]
 761 008a 0293     	 str r3,[sp,#8]
 762 008c 3F48     	 ldr r0,.L25
 763 008e 1146     	 mov r1,r2
 764 0090 9422     	 movs r2,#148
 765 0092 2346     	 mov r3,r4
 766 0094 FFF7FEFF 	 bl I2C_MASTER_Receive
 132:../InputCapture/temp_sensors.c **** 	while(I2C_MASTER_IsRxBusy(&I2C_MASTER_1));
 767              	 .loc 2 132 0
 768 0098 00BF     	 nop
 769              	.L24:
 770              	 .loc 2 132 0 is_stmt 0 discriminator 1
 771 009a 3C48     	 ldr r0,.L25
 772 009c FFF7FEFF 	 bl I2C_MASTER_IsRxBusy
 773 00a0 0346     	 mov r3,r0
 774 00a2 002B     	 cmp r3,#0
 775 00a4 F9D1     	 bne .L24
 133:../InputCapture/temp_sensors.c **** 
 134:../InputCapture/temp_sensors.c **** 	rx = ((uint16_t)rx_buff[0] << 8) | rx_buff[1];
 776              	 .loc 2 134 0 is_stmt 1
 777 00a6 3B78     	 ldrb r3,[r7]
 778 00a8 1B02     	 lsls r3,r3,#8
 779 00aa 9AB2     	 uxth r2,r3
 780 00ac 7B78     	 ldrb r3,[r7,#1]
 781 00ae 9BB2     	 uxth r3,r3
 782 00b0 1343     	 orrs r3,r3,r2
 783 00b2 9BB2     	 uxth r3,r3
 784 00b4 7B81     	 strh r3,[r7,#10]
 135:../InputCapture/temp_sensors.c **** 	rx &= 0x0fff;
 785              	 .loc 2 135 0
 786 00b6 7B89     	 ldrh r3,[r7,#10]
 787 00b8 C3F30B03 	 ubfx r3,r3,#0,#12
 788 00bc 7B81     	 strh r3,[r7,#10]
 136:../InputCapture/temp_sensors.c **** 
 137:../InputCapture/temp_sensors.c **** 	Resistance = ((float)4095.0/(float)rx) - 1;
 789              	 .loc 2 137 0
 790 00be 7B89     	 ldrh r3,[r7,#10]
 791 00c0 07EE903A 	 fmsr s15,r3
 792 00c4 F8EE677A 	 fuitos s15,s15
 793 00c8 9FED317A 	 flds s14,.L25+4
 794 00cc C7EE277A 	 fdivs s15,s14,s15
 795 00d0 B7EE007A 	 fconsts s14,#112
 796 00d4 77EEC77A 	 fsubs s15,s15,s14
 797 00d8 C7ED077A 	 fsts s15,[r7,#28]
 138:../InputCapture/temp_sensors.c **** 	Resistance = ((float)10000.0/(float)Resistance);
 798              	 .loc 2 138 0
 799 00dc 9FED2D7A 	 flds s14,.L25+8
 800 00e0 D7ED077A 	 flds s15,[r7,#28]
 801 00e4 C7EE277A 	 fdivs s15,s14,s15
 802 00e8 C7ED077A 	 fsts s15,[r7,#28]
 139:../InputCapture/temp_sensors.c **** 
 140:../InputCapture/temp_sensors.c **** 	Resistance /= (float)2;
 803              	 .loc 2 140 0
 804 00ec D7ED077A 	 flds s15,[r7,#28]
 805 00f0 B0EE007A 	 fconsts s14,#0
 806 00f4 C7EE877A 	 fdivs s15,s15,s14
 807 00f8 C7ED077A 	 fsts s15,[r7,#28]
 141:../InputCapture/temp_sensors.c **** 
 142:../InputCapture/temp_sensors.c **** 	float steinhart;
 143:../InputCapture/temp_sensors.c **** 
 144:../InputCapture/temp_sensors.c **** 	steinhart = (float)Resistance / (float)10000.0; // (R/Ro)
 808              	 .loc 2 144 0
 809 00fc D7ED077A 	 flds s15,[r7,#28]
 810 0100 9FED247A 	 flds s14,.L25+8
 811 0104 C7EE877A 	 fdivs s15,s15,s14
 812 0108 C7ED017A 	 fsts s15,[r7,#4]
 145:../InputCapture/temp_sensors.c **** 	steinhart = (float)log(steinhart); // ln(R/Ro)
 813              	 .loc 2 145 0
 814 010c 7868     	 ldr r0,[r7,#4]
 815 010e FFF7FEFF 	 bl __aeabi_f2d
 816 0112 0246     	 mov r2,r0
 817 0114 0B46     	 mov r3,r1
 818 0116 1046     	 mov r0,r2
 819 0118 1946     	 mov r1,r3
 820 011a FFF7FEFF 	 bl log
 821 011e 0246     	 mov r2,r0
 822 0120 0B46     	 mov r3,r1
 823 0122 1046     	 mov r0,r2
 824 0124 1946     	 mov r1,r3
 825 0126 FFF7FEFF 	 bl __aeabi_d2f
 826 012a 0346     	 mov r3,r0
 827 012c 7B60     	 str r3,[r7,#4]
 146:../InputCapture/temp_sensors.c **** 	steinhart /= (float)3950.0;
 828              	 .loc 2 146 0
 829 012e D7ED017A 	 flds s15,[r7,#4]
 830 0132 9FED197A 	 flds s14,.L25+12
 831 0136 C7EE877A 	 fdivs s15,s15,s14
 832 013a C7ED017A 	 fsts s15,[r7,#4]
 147:../InputCapture/temp_sensors.c **** 	steinhart += (float)1.0 / (NOMINAL_TEMPERATURE + (float)273.15); // + (1/To)
 833              	 .loc 2 147 0
 834 013e FB68     	 ldr r3,[r7,#12]
 835 0140 07EE903A 	 fmsr s15,r3
 836 0144 F8EE677A 	 fuitos s15,s15
 837 0148 9FED147A 	 flds s14,.L25+16
 838 014c 77EE877A 	 fadds s15,s15,s14
 839 0150 B7EE007A 	 fconsts s14,#112
 840 0154 C7EE277A 	 fdivs s15,s14,s15
 841 0158 97ED017A 	 flds s14,[r7,#4]
 842 015c 77EE277A 	 fadds s15,s14,s15
 843 0160 C7ED017A 	 fsts s15,[r7,#4]
 148:../InputCapture/temp_sensors.c **** 
 149:../InputCapture/temp_sensors.c **** 	steinhart = (float)1.0 / steinhart;
 844              	 .loc 2 149 0
 845 0164 B7EE007A 	 fconsts s14,#112
 846 0168 D7ED017A 	 flds s15,[r7,#4]
 847 016c C7EE277A 	 fdivs s15,s14,s15
 848 0170 C7ED017A 	 fsts s15,[r7,#4]
 150:../InputCapture/temp_sensors.c **** 	steinhart -= (float)273.15;
 849              	 .loc 2 150 0
 850 0174 D7ED017A 	 flds s15,[r7,#4]
 851 0178 9FED087A 	 flds s14,.L25+16
 852 017c 77EEC77A 	 fsubs s15,s15,s14
 853 0180 C7ED017A 	 fsts s15,[r7,#4]
 151:../InputCapture/temp_sensors.c **** 
 152:../InputCapture/temp_sensors.c **** }
 854              	 .loc 2 152 0
 855 0184 2C37     	 adds r7,r7,#44
 856              	.LCFI32:
 857              	 .cfi_def_cfa_offset 12
 858 0186 BD46     	 mov sp,r7
 859              	.LCFI33:
 860              	 .cfi_def_cfa_register 13
 861              	 
 862 0188 90BD     	 pop {r4,r7,pc}
 863              	.L26:
 864 018a 00BF     	 .align 2
 865              	.L25:
 866 018c 00000000 	 .word I2C_MASTER_1
 867 0190 00F07F45 	 .word 1166012416
 868 0194 00401C46 	 .word 1176256512
 869 0198 00E07645 	 .word 1165418496
 870 019c 33938843 	 .word 1133024051
 871              	 .cfi_endproc
 872              	.LFE609:
 874              	 .section .text.U18_BatteryTemp_read,"ax",%progbits
 875              	 .align 2
 876              	 .global U18_BatteryTemp_read
 877              	 .thumb
 878              	 .thumb_func
 880              	U18_BatteryTemp_read:
 881              	.LFB610:
 153:../InputCapture/temp_sensors.c **** 
 154:../InputCapture/temp_sensors.c **** void U18_BatteryTemp_read(void)
 155:../InputCapture/temp_sensors.c **** {
 882              	 .loc 2 155 0
 883              	 .cfi_startproc
 884              	 
 885              	 
 886 0000 90B5     	 push {r4,r7,lr}
 887              	.LCFI34:
 888              	 .cfi_def_cfa_offset 12
 889              	 .cfi_offset 4,-12
 890              	 .cfi_offset 7,-8
 891              	 .cfi_offset 14,-4
 892 0002 8FB0     	 sub sp,sp,#60
 893              	.LCFI35:
 894              	 .cfi_def_cfa_offset 72
 895 0004 04AF     	 add r7,sp,#16
 896              	.LCFI36:
 897              	 .cfi_def_cfa 7,56
 156:../InputCapture/temp_sensors.c **** 
 157:../InputCapture/temp_sensors.c **** 	bool start = true, stop = 0, ack = true;
 898              	 .loc 2 157 0
 899 0006 0123     	 movs r3,#1
 900 0008 87F82730 	 strb r3,[r7,#39]
 901 000c 0023     	 movs r3,#0
 902 000e 87F82630 	 strb r3,[r7,#38]
 903 0012 0123     	 movs r3,#1
 904 0014 87F82530 	 strb r3,[r7,#37]
 158:../InputCapture/temp_sensors.c **** 	float ans = 0, Resistance = 0;
 905              	 .loc 2 158 0
 906 0018 4FF00003 	 mov r3,#0
 907 001c 3B62     	 str r3,[r7,#32]
 908 001e 4FF00003 	 mov r3,#0
 909 0022 FB61     	 str r3,[r7,#28]
 159:../InputCapture/temp_sensors.c **** 	unsigned int SERIESRESISTOR = 10000, NOMINAL_RESISTANCE = 10000, BCOEFFICIENT = 3950, NOMINAL_TEMP
 910              	 .loc 2 159 0
 911 0024 42F21073 	 movw r3,#10000
 912 0028 BB61     	 str r3,[r7,#24]
 913 002a 42F21073 	 movw r3,#10000
 914 002e 7B61     	 str r3,[r7,#20]
 915 0030 40F66E73 	 movw r3,#3950
 916 0034 3B61     	 str r3,[r7,#16]
 917 0036 1923     	 movs r3,#25
 918 0038 FB60     	 str r3,[r7,#12]
 160:../InputCapture/temp_sensors.c **** 	uint8_t command_byte= 0xec, rx_buff[2] = {0};
 919              	 .loc 2 160 0
 920 003a EC23     	 movs r3,#236
 921 003c FB70     	 strb r3,[r7,#3]
 922 003e 0023     	 movs r3,#0
 923 0040 3B80     	 strh r3,[r7]
 161:../InputCapture/temp_sensors.c **** 	uint16_t rx = 0;
 924              	 .loc 2 161 0
 925 0042 0023     	 movs r3,#0
 926 0044 7B81     	 strh r3,[r7,#10]
 162:../InputCapture/temp_sensors.c **** 
 163:../InputCapture/temp_sensors.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_1, start, U18_address, &command_byte, 1, stop);
 927              	 .loc 2 163 0
 928 0046 97F82720 	 ldrb r2,[r7,#39]
 929 004a FC1C     	 adds r4,r7,#3
 930 004c 0123     	 movs r3,#1
 931 004e 0093     	 str r3,[sp]
 932 0050 97F82630 	 ldrb r3,[r7,#38]
 933 0054 0193     	 str r3,[sp,#4]
 934 0056 4D48     	 ldr r0,.L30
 935 0058 1146     	 mov r1,r2
 936 005a 9422     	 movs r2,#148
 937 005c 2346     	 mov r3,r4
 938 005e FFF7FEFF 	 bl I2C_MASTER_Transmit
 164:../InputCapture/temp_sensors.c **** 	while(I2C_MASTER_IsTxBusy(&I2C_MASTER_1));
 939              	 .loc 2 164 0
 940 0062 00BF     	 nop
 941              	.L28:
 942              	 .loc 2 164 0 is_stmt 0 discriminator 1
 943 0064 4948     	 ldr r0,.L30
 944 0066 FFF7FEFF 	 bl I2C_MASTER_IsTxBusy
 945 006a 0346     	 mov r3,r0
 946 006c 002B     	 cmp r3,#0
 947 006e F9D1     	 bne .L28
 165:../InputCapture/temp_sensors.c **** 
 166:../InputCapture/temp_sensors.c **** 	stop = true;
 948              	 .loc 2 166 0 is_stmt 1
 949 0070 0123     	 movs r3,#1
 950 0072 87F82630 	 strb r3,[r7,#38]
 167:../InputCapture/temp_sensors.c **** 
 168:../InputCapture/temp_sensors.c **** 	I2C_MASTER_Receive(&I2C_MASTER_1, start, U18_address, rx_buff, 2, stop, ack);
 951              	 .loc 2 168 0
 952 0076 97F82720 	 ldrb r2,[r7,#39]
 953 007a 3C46     	 mov r4,r7
 954 007c 0223     	 movs r3,#2
 955 007e 0093     	 str r3,[sp]
 956 0080 97F82630 	 ldrb r3,[r7,#38]
 957 0084 0193     	 str r3,[sp,#4]
 958 0086 97F82530 	 ldrb r3,[r7,#37]
 959 008a 0293     	 str r3,[sp,#8]
 960 008c 3F48     	 ldr r0,.L30
 961 008e 1146     	 mov r1,r2
 962 0090 9422     	 movs r2,#148
 963 0092 2346     	 mov r3,r4
 964 0094 FFF7FEFF 	 bl I2C_MASTER_Receive
 169:../InputCapture/temp_sensors.c **** 	while(I2C_MASTER_IsRxBusy(&I2C_MASTER_1));
 965              	 .loc 2 169 0
 966 0098 00BF     	 nop
 967              	.L29:
 968              	 .loc 2 169 0 is_stmt 0 discriminator 1
 969 009a 3C48     	 ldr r0,.L30
 970 009c FFF7FEFF 	 bl I2C_MASTER_IsRxBusy
 971 00a0 0346     	 mov r3,r0
 972 00a2 002B     	 cmp r3,#0
 973 00a4 F9D1     	 bne .L29
 170:../InputCapture/temp_sensors.c **** 
 171:../InputCapture/temp_sensors.c **** 	rx = ((uint16_t)rx_buff[0] << 8) | rx_buff[1];
 974              	 .loc 2 171 0 is_stmt 1
 975 00a6 3B78     	 ldrb r3,[r7]
 976 00a8 1B02     	 lsls r3,r3,#8
 977 00aa 9AB2     	 uxth r2,r3
 978 00ac 7B78     	 ldrb r3,[r7,#1]
 979 00ae 9BB2     	 uxth r3,r3
 980 00b0 1343     	 orrs r3,r3,r2
 981 00b2 9BB2     	 uxth r3,r3
 982 00b4 7B81     	 strh r3,[r7,#10]
 172:../InputCapture/temp_sensors.c **** 	rx &= 0x0fff;
 983              	 .loc 2 172 0
 984 00b6 7B89     	 ldrh r3,[r7,#10]
 985 00b8 C3F30B03 	 ubfx r3,r3,#0,#12
 986 00bc 7B81     	 strh r3,[r7,#10]
 173:../InputCapture/temp_sensors.c **** 
 174:../InputCapture/temp_sensors.c **** 	Resistance = ((float)4095.0/(float)rx) - 1;
 987              	 .loc 2 174 0
 988 00be 7B89     	 ldrh r3,[r7,#10]
 989 00c0 07EE903A 	 fmsr s15,r3
 990 00c4 F8EE677A 	 fuitos s15,s15
 991 00c8 9FED317A 	 flds s14,.L30+4
 992 00cc C7EE277A 	 fdivs s15,s14,s15
 993 00d0 B7EE007A 	 fconsts s14,#112
 994 00d4 77EEC77A 	 fsubs s15,s15,s14
 995 00d8 C7ED077A 	 fsts s15,[r7,#28]
 175:../InputCapture/temp_sensors.c **** 	Resistance = ((float)10000.0/(float)Resistance);
 996              	 .loc 2 175 0
 997 00dc 9FED2D7A 	 flds s14,.L30+8
 998 00e0 D7ED077A 	 flds s15,[r7,#28]
 999 00e4 C7EE277A 	 fdivs s15,s14,s15
 1000 00e8 C7ED077A 	 fsts s15,[r7,#28]
 176:../InputCapture/temp_sensors.c **** 
 177:../InputCapture/temp_sensors.c **** 	Resistance /= (float)2;
 1001              	 .loc 2 177 0
 1002 00ec D7ED077A 	 flds s15,[r7,#28]
 1003 00f0 B0EE007A 	 fconsts s14,#0
 1004 00f4 C7EE877A 	 fdivs s15,s15,s14
 1005 00f8 C7ED077A 	 fsts s15,[r7,#28]
 178:../InputCapture/temp_sensors.c **** 
 179:../InputCapture/temp_sensors.c **** 	float steinhart;
 180:../InputCapture/temp_sensors.c **** 
 181:../InputCapture/temp_sensors.c **** 	steinhart = (float)Resistance / (float)10000.0; // (R/Ro)
 1006              	 .loc 2 181 0
 1007 00fc D7ED077A 	 flds s15,[r7,#28]
 1008 0100 9FED247A 	 flds s14,.L30+8
 1009 0104 C7EE877A 	 fdivs s15,s15,s14
 1010 0108 C7ED017A 	 fsts s15,[r7,#4]
 182:../InputCapture/temp_sensors.c **** 	steinhart = (float)log(steinhart); // ln(R/Ro)
 1011              	 .loc 2 182 0
 1012 010c 7868     	 ldr r0,[r7,#4]
 1013 010e FFF7FEFF 	 bl __aeabi_f2d
 1014 0112 0246     	 mov r2,r0
 1015 0114 0B46     	 mov r3,r1
 1016 0116 1046     	 mov r0,r2
 1017 0118 1946     	 mov r1,r3
 1018 011a FFF7FEFF 	 bl log
 1019 011e 0246     	 mov r2,r0
 1020 0120 0B46     	 mov r3,r1
 1021 0122 1046     	 mov r0,r2
 1022 0124 1946     	 mov r1,r3
 1023 0126 FFF7FEFF 	 bl __aeabi_d2f
 1024 012a 0346     	 mov r3,r0
 1025 012c 7B60     	 str r3,[r7,#4]
 183:../InputCapture/temp_sensors.c **** 	steinhart /= (float)3950.0;
 1026              	 .loc 2 183 0
 1027 012e D7ED017A 	 flds s15,[r7,#4]
 1028 0132 9FED197A 	 flds s14,.L30+12
 1029 0136 C7EE877A 	 fdivs s15,s15,s14
 1030 013a C7ED017A 	 fsts s15,[r7,#4]
 184:../InputCapture/temp_sensors.c **** 	steinhart += (float)1.0 / (NOMINAL_TEMPERATURE + (float)273.15); // + (1/To)
 1031              	 .loc 2 184 0
 1032 013e FB68     	 ldr r3,[r7,#12]
 1033 0140 07EE903A 	 fmsr s15,r3
 1034 0144 F8EE677A 	 fuitos s15,s15
 1035 0148 9FED147A 	 flds s14,.L30+16
 1036 014c 77EE877A 	 fadds s15,s15,s14
 1037 0150 B7EE007A 	 fconsts s14,#112
 1038 0154 C7EE277A 	 fdivs s15,s14,s15
 1039 0158 97ED017A 	 flds s14,[r7,#4]
 1040 015c 77EE277A 	 fadds s15,s14,s15
 1041 0160 C7ED017A 	 fsts s15,[r7,#4]
 185:../InputCapture/temp_sensors.c **** 
 186:../InputCapture/temp_sensors.c **** 	steinhart = (float)1.0 / steinhart;
 1042              	 .loc 2 186 0
 1043 0164 B7EE007A 	 fconsts s14,#112
 1044 0168 D7ED017A 	 flds s15,[r7,#4]
 1045 016c C7EE277A 	 fdivs s15,s14,s15
 1046 0170 C7ED017A 	 fsts s15,[r7,#4]
 187:../InputCapture/temp_sensors.c **** 	steinhart -= (float)273.15;
 1047              	 .loc 2 187 0
 1048 0174 D7ED017A 	 flds s15,[r7,#4]
 1049 0178 9FED087A 	 flds s14,.L30+16
 1050 017c 77EEC77A 	 fsubs s15,s15,s14
 1051 0180 C7ED017A 	 fsts s15,[r7,#4]
 188:../InputCapture/temp_sensors.c **** 
 189:../InputCapture/temp_sensors.c **** }
 1052              	 .loc 2 189 0
 1053 0184 2C37     	 adds r7,r7,#44
 1054              	.LCFI37:
 1055              	 .cfi_def_cfa_offset 12
 1056 0186 BD46     	 mov sp,r7
 1057              	.LCFI38:
 1058              	 .cfi_def_cfa_register 13
 1059              	 
 1060 0188 90BD     	 pop {r4,r7,pc}
 1061              	.L31:
 1062 018a 00BF     	 .align 2
 1063              	.L30:
 1064 018c 00000000 	 .word I2C_MASTER_1
 1065 0190 00F07F45 	 .word 1166012416
 1066 0194 00401C46 	 .word 1176256512
 1067 0198 00E07645 	 .word 1165418496
 1068 019c 33938843 	 .word 1133024051
 1069              	 .cfi_endproc
 1070              	.LFE610:
 1072              	 .section .text.U18_throttle_read,"ax",%progbits
 1073              	 .align 2
 1074              	 .global U18_throttle_read
 1075              	 .thumb
 1076              	 .thumb_func
 1078              	U18_throttle_read:
 1079              	.LFB611:
 190:../InputCapture/temp_sensors.c **** 
 191:../InputCapture/temp_sensors.c **** void U18_throttle_read(void)
 192:../InputCapture/temp_sensors.c **** {
 1080              	 .loc 2 192 0
 1081              	 .cfi_startproc
 1082              	 
 1083              	 
 1084 0000 90B5     	 push {r4,r7,lr}
 1085              	.LCFI39:
 1086              	 .cfi_def_cfa_offset 12
 1087              	 .cfi_offset 4,-12
 1088              	 .cfi_offset 7,-8
 1089              	 .cfi_offset 14,-4
 1090 0002 85B0     	 sub sp,sp,#20
 1091              	.LCFI40:
 1092              	 .cfi_def_cfa_offset 32
 1093 0004 02AF     	 add r7,sp,#8
 1094              	.LCFI41:
 1095              	 .cfi_def_cfa 7,24
 193:../InputCapture/temp_sensors.c **** 	bool start = true, stop = true;
 1096              	 .loc 2 193 0
 1097 0006 0123     	 movs r3,#1
 1098 0008 FB71     	 strb r3,[r7,#7]
 1099 000a 0123     	 movs r3,#1
 1100 000c BB71     	 strb r3,[r7,#6]
 194:../InputCapture/temp_sensors.c **** 	uint8_t command_byte= 0x3f;
 1101              	 .loc 2 194 0
 1102 000e 3F23     	 movs r3,#63
 1103 0010 7B71     	 strb r3,[r7,#5]
 195:../InputCapture/temp_sensors.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_1, start, U18_address, &command_byte, 1, stop);
 1104              	 .loc 2 195 0
 1105 0012 FA79     	 ldrb r2,[r7,#7]
 1106 0014 7C1D     	 adds r4,r7,#5
 1107 0016 0123     	 movs r3,#1
 1108 0018 0093     	 str r3,[sp]
 1109 001a BB79     	 ldrb r3,[r7,#6]
 1110 001c 0193     	 str r3,[sp,#4]
 1111 001e 0848     	 ldr r0,.L34
 1112 0020 1146     	 mov r1,r2
 1113 0022 9422     	 movs r2,#148
 1114 0024 2346     	 mov r3,r4
 1115 0026 FFF7FEFF 	 bl I2C_MASTER_Transmit
 196:../InputCapture/temp_sensors.c **** 	while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 1116              	 .loc 2 196 0
 1117 002a 00BF     	 nop
 1118              	.L33:
 1119              	 .loc 2 196 0 is_stmt 0 discriminator 1
 1120 002c 0548     	 ldr r0,.L34+4
 1121 002e FFF7FEFF 	 bl I2C_MASTER_IsTxBusy
 1122 0032 0346     	 mov r3,r0
 1123 0034 002B     	 cmp r3,#0
 1124 0036 F9D1     	 bne .L33
 197:../InputCapture/temp_sensors.c **** }
 1125              	 .loc 2 197 0 is_stmt 1
 1126 0038 0C37     	 adds r7,r7,#12
 1127              	.LCFI42:
 1128              	 .cfi_def_cfa_offset 12
 1129 003a BD46     	 mov sp,r7
 1130              	.LCFI43:
 1131              	 .cfi_def_cfa_register 13
 1132              	 
 1133 003c 90BD     	 pop {r4,r7,pc}
 1134              	.L35:
 1135 003e 00BF     	 .align 2
 1136              	.L34:
 1137 0040 00000000 	 .word I2C_MASTER_1
 1138 0044 00000000 	 .word I2C_MASTER_0
 1139              	 .cfi_endproc
 1140              	.LFE611:
 1142              	 .section .text.U6_On_board_temp_read,"ax",%progbits
 1143              	 .align 2
 1144              	 .global U6_On_board_temp_read
 1145              	 .thumb
 1146              	 .thumb_func
 1148              	U6_On_board_temp_read:
 1149              	.LFB612:
 198:../InputCapture/temp_sensors.c **** 
 199:../InputCapture/temp_sensors.c **** void U6_On_board_temp_read(void)
 200:../InputCapture/temp_sensors.c **** {
 1150              	 .loc 2 200 0
 1151              	 .cfi_startproc
 1152              	 
 1153              	 
 1154              	 
 1155 0000 80B4     	 push {r7}
 1156              	.LCFI44:
 1157              	 .cfi_def_cfa_offset 4
 1158              	 .cfi_offset 7,-4
 1159 0002 00AF     	 add r7,sp,#0
 1160              	.LCFI45:
 1161              	 .cfi_def_cfa_register 7
 201:../InputCapture/temp_sensors.c **** /*	I2C_MASTER_Transmit(&I2C_MASTER_0, start, U6_address, &command_byte, 1, stop);
 202:../InputCapture/temp_sensors.c **** 		while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));*/
 203:../InputCapture/temp_sensors.c **** 
 204:../InputCapture/temp_sensors.c **** }
 1162              	 .loc 2 204 0
 1163 0004 BD46     	 mov sp,r7
 1164              	.LCFI46:
 1165              	 .cfi_def_cfa_register 13
 1166              	 
 1167 0006 5DF8047B 	 ldr r7,[sp],#4
 1168              	.LCFI47:
 1169              	 .cfi_restore 7
 1170              	 .cfi_def_cfa_offset 0
 1171 000a 7047     	 bx lr
 1172              	 .cfi_endproc
 1173              	.LFE612:
 1175              	 .section .text.U9_On_board_temp_read,"ax",%progbits
 1176              	 .align 2
 1177              	 .global U9_On_board_temp_read
 1178              	 .thumb
 1179              	 .thumb_func
 1181              	U9_On_board_temp_read:
 1182              	.LFB613:
 205:../InputCapture/temp_sensors.c **** 
 206:../InputCapture/temp_sensors.c **** void U9_On_board_temp_read(void)
 207:../InputCapture/temp_sensors.c **** {
 1183              	 .loc 2 207 0
 1184              	 .cfi_startproc
 1185              	 
 1186              	 
 1187              	 
 1188 0000 80B4     	 push {r7}
 1189              	.LCFI48:
 1190              	 .cfi_def_cfa_offset 4
 1191              	 .cfi_offset 7,-4
 1192 0002 00AF     	 add r7,sp,#0
 1193              	.LCFI49:
 1194              	 .cfi_def_cfa_register 7
 208:../InputCapture/temp_sensors.c **** 
 209:../InputCapture/temp_sensors.c **** }
 1195              	 .loc 2 209 0
 1196 0004 BD46     	 mov sp,r7
 1197              	.LCFI50:
 1198              	 .cfi_def_cfa_register 13
 1199              	 
 1200 0006 5DF8047B 	 ldr r7,[sp],#4
 1201              	.LCFI51:
 1202              	 .cfi_restore 7
 1203              	 .cfi_def_cfa_offset 0
 1204 000a 7047     	 bx lr
 1205              	 .cfi_endproc
 1206              	.LFE613:
 1208              	 .text
 1209              	.Letext0:
 1210              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1211              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1212              	 .file 5 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 1213              	 .file 6 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_usic.h"
 1214              	 .file 7 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_i2c.h"
 1215              	 .file 8 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\sys\\types.h"
 1216              	 .file 9 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_rtc.h"
 1217              	 .file 10 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_spi.h"
 1218              	 .file 11 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Vcu_config.h"
 1219              	 .file 12 "<built-in>"
 1220              	 .file 13 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Include/cmsis_gcc.h"
 1221              	 .file 14 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Include/core_cm4.h"
 1222              	 .file 15 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 1223              	 .file 16 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER/i2c_master_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 temp_sensors.c
    {standard input}:20     .text.I2C_MASTER_IsTxBusy:00000000 $t
    {standard input}:24     .text.I2C_MASTER_IsTxBusy:00000000 I2C_MASTER_IsTxBusy
    {standard input}:66     .text.I2C_MASTER_IsRxBusy:00000000 $t
    {standard input}:70     .text.I2C_MASTER_IsRxBusy:00000000 I2C_MASTER_IsRxBusy
                            *COM*:00000004 cluster_door_in
                            *COM*:00000003 Vcu_OutPuts
                            *COM*:00000008 Combi_Switch_IN
                            *COM*:00000003 Seat_Switch_IN
                            *COM*:00000007 Door_Switch_IN
                            *COM*:0000002f Relay_Control_Switch_OUT
                            *COM*:00000018 Hvac_IN
                            *COM*:00000014 Switch_Ios_IN
                            *COM*:00000005 Motor_controller_OUT
                            *COM*:00000008 Lights_OUT
                            *COM*:00000008 Sensors_OUT
                            *COM*:00000006 Aux_Inputs
                            *COM*:00000012 Instrument_Cluster_OUT
                            *COM*:00000003 Seat_Belt_OUT
                            *COM*:00000004 Gear_OUT
                            *COM*:00000004 Instrumetcluster_DriveMode_OUT
                            *COM*:00000007 Door_Switch_OUT
                            *COM*:00000007 instrument_cluster_doorsvar
                            *COM*:00000004 cluster_door_out
                            *COM*:00000008 current_time
                            *COM*:00000008 timeval
                            *COM*:00000010 GPS_data_val
                            *COM*:00000004 epoch
                            *COM*:00000001 ambient_temp
    {standard input}:135    .rodata:00000000 $d
    {standard input}:142    .text.U18_read_temp:00000000 $t
    {standard input}:147    .text.U18_read_temp:00000000 U18_read_temp
    {standard input}:278    .text.U18_MotorTemp_read:00000000 U18_MotorTemp_read
    {standard input}:484    .text.U18_CabinTemp_read:00000000 U18_CabinTemp_read
    {standard input}:177    .text.U18_read_temp:0000001c $d
    {standard input}:183    .text.U18_48v_read:00000000 $t
    {standard input}:188    .text.U18_48v_read:00000000 U18_48v_read
    {standard input}:266    .text.U18_48v_read:00000064 $d
    {standard input}:273    .text.U18_MotorTemp_read:00000000 $t
    {standard input}:469    .text.U18_MotorTemp_read:000001a4 $d
    {standard input}:479    .text.U18_CabinTemp_read:00000000 $t
    {standard input}:668    .text.U18_CabinTemp_read:0000018c $d
    {standard input}:677    .text.U18_McTemp_read:00000000 $t
    {standard input}:682    .text.U18_McTemp_read:00000000 U18_McTemp_read
    {standard input}:866    .text.U18_McTemp_read:0000018c $d
    {standard input}:875    .text.U18_BatteryTemp_read:00000000 $t
    {standard input}:880    .text.U18_BatteryTemp_read:00000000 U18_BatteryTemp_read
    {standard input}:1064   .text.U18_BatteryTemp_read:0000018c $d
    {standard input}:1073   .text.U18_throttle_read:00000000 $t
    {standard input}:1078   .text.U18_throttle_read:00000000 U18_throttle_read
    {standard input}:1137   .text.U18_throttle_read:00000040 $d
    {standard input}:1143   .text.U6_On_board_temp_read:00000000 $t
    {standard input}:1148   .text.U6_On_board_temp_read:00000000 U6_On_board_temp_read
    {standard input}:1176   .text.U9_On_board_temp_read:00000000 $t
    {standard input}:1181   .text.U9_On_board_temp_read:00000000 U9_On_board_temp_read
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
uart_debugg
I2C_MASTER_Transmit
I2C_MASTER_Receive
I2C_MASTER_1
__aeabi_f2d
__aeabi_d2f
log
I2C_MASTER_0
