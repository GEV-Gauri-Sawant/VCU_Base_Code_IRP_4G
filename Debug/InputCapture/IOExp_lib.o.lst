   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "IOExp_lib.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.I2C_MASTER_IsTxBusy,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	I2C_MASTER_IsTxBusy:
  25              	.LFB286:
  26              	 .file 1 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER/i2c_master.h"
   1:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
   2:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @file i2c_master.h
   3:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @date 2021-01-08
   4:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
   5:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * NOTE:
   6:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * regenerated.
   8:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
   9:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
  10:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @cond
  11:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  12:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER v4.1.34 Configures USIC channel to transmit & receive data using I2C protocol.
  13:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  14:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  15:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * All rights reserved.
  16:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  17:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  18:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * following conditions are met:
  19:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  20:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  21:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * disclaimer.
  22:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  23:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  24:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * following disclaimer in the documentation and/or other materials provided with the distribution.
  25:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  26:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  27:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * products derived from this software without specific prior written permission.
  28:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  29:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  30:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  31:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  32:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  33:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  34:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  35:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  37:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  38:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  39:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  40:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  41:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Change History
  42:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * --------------
  43:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  44:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-02-16:
  45:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Initial version<br>
  46:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  47:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-06-10:
  48:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - AbortTransmit and AbortReceive API return type modified. <br>
  49:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  50:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-08-31:
  51:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - DMA support APIs added
  52:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2015-10-20:
  53:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Code snippets updated
  54:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2016-08-18:
  55:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Documentation of slave address formatting improved.
  56:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2017-11-17:
  57:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added tx_irqn and rx_irqn to I2C_MASTER_CONFIG_t
  58:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2017-12-20:
  59:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added I2C_MASTER_FlushTxFifo(), I2C_MASTER_FlushRxFifo(), I2C_MASTER_DisableOutputs(), I2C
  60:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  61:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2019-16-09:
  62:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added I2C_MASTER_START_TRANSMIT_RETRIES to control the wait to see the START symbol in the
  63:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Added I2C_MASTER_STATUS_BUS_ERROR as possible return value from I2C_MASTER_StartTransmitIR
  64:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  65:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 2021-01-08:
  66:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     - Modified check for minimum XMCLib version
  67:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  68:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcond
  69:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
  70:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
  71:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  72:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifndef I2C_MASTER_H
  73:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_H
  74:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  75:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  76:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  77:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  78:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * HEADER FILES
  79:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  80:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "xmc_gpio.h"
  81:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "xmc_i2c.h"
  82:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "i2c_master_conf.h"
  83:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  84:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if(UC_FAMILY == XMC4)
  85:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
  86:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "GLOBAL_DMA/global_dma.h"
  87:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  88:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
  89:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  90:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #include "DAVE_Common.h"
  91:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  92:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  93:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef void(*i2c_master_fptr_cbhandler)(void);
  94:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
  95:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
  96:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * MACROS
  97:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
  98:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_XMC_LIB_MAJOR_VERSION 2
  99:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_XMC_LIB_MINOR_VERSION 0
 100:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_XMC_LIB_PATCH_VERSION 0
 101:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 102:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if !((XMC_LIB_MAJOR_VERSION > I2C_MASTER_XMC_LIB_MAJOR_VERSION) ||\
 103:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****       ((XMC_LIB_MAJOR_VERSION == I2C_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > I2C_
 104:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****       ((XMC_LIB_MAJOR_VERSION == I2C_MASTER_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == I2C
 105:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #error "I2C_MASTER requires XMC Peripheral Library v2.0.0 or higher"
 106:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 107:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 108:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifndef I2C_MASTER_START_TRANSMIT_RETRIES
 109:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #define I2C_MASTER_START_TRANSMIT_RETRIES (0x7fff)
 110:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 111:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 112:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 113:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * ENUMS
 114:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
 115:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 116:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_enumerations
 117:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 118:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 119:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 120:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Initialization status.
 121:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 122:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_STATUS
 123:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 124:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_SUCCESS = 0U,           /*!< I2C_MASTER SUCCESS */
 125:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_FAILURE = 1U,           /*!< I2C_MASTER FAILURE */
 126:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_BUSY = 2U,              /*!< I2C_MASTER BUSY */
 127:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_UNSUPPORTED_MODE = 3U,  /*!< I2C_MASTER UNSUPPORTED MODE */
 128:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_STATUS_BUS_ERROR = 4U          /*!< I2C_MASTER BUS_ERROR */
 129:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_STATUS_t;
 130:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 131:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 132:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Direction
 133:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 134:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_DIRECTION
 135:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 136:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_DIRECTION_TRANSMIT = 0U,   /*!< Direction indicates transmit */
 137:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_DIRECTION_RECEIVE = 1U     /*!< Direction indicates receive */
 138:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_DIRECTION_t;
 139:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 140:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 141:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 142:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 143:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef enum I2C_MASTER_TRANSFER_MODE
 144:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 145:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 146:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 147:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 148:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_TRANSFER_MODE_t;
 149:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 150:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @}
 151:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 152:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 153:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** * DATA STRUCTURES
 154:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** ***************************************************************************************************
 155:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 156:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 157:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_datastructures
 158:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 159:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 160:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 161:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Structure for DMA configuration.
 162:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 163:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if ((I2C_MASTER_DMA_TX_ENABLED == 1) || (I2C_MASTER_DMA_RX_ENABLED == 1))
 164:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_DMA_CONFIG
 165:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 166:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   const XMC_DMA_CH_CONFIG_t * dma_ch_config;   /**< Pointer to the DMA channel configuration.*/
 167:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   GLOBAL_DMA_t * global_dma;                   /**< Global DMA handle */
 168:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t dma_channel;                         /**< DMA channel number */
 169:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_DMA_CONFIG_t;
 170:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 171:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 172:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Constant structure for holding the configuration parameters of I2C channel.
 173:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 174:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_CONFIG
 175:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 176:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    const XMC_I2C_CH_CONFIG_t *brg_config;             /*!< Basic I2C configuration from the GUI wit
 177:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1)
 178:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const transmit_dma_config; /**< Pointer to the DMA channel confi
 179:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                                    data transmission.*/
 180:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 181:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 182:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    const I2C_MASTER_DMA_CONFIG_t * const receive_dma_config;  /**< Pointer to the DMA channel confi
 183:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                                    data reception.*/
 184:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 185:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_config;         /*!< Function pointer to configure the MUX va
 186:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_enable_io;      /*!< Function pointer to enable SDA/SCL outpu
 187:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler fptr_i2c_disable_io;     /*!< Function pointer to disable SDA/SCL outp
 188:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 189:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler tx_cbhandler;            /*!< Function pointer to hold the callback fu
 190:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when the transmission is complete
 191:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler rx_cbhandler;            /*!< Function pointer to hold the callback fu
 192:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when the reception is complete*/
 193:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler nack_cbhandler;          /*!< Function pointer to hold the callback fu
 194:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when nack is received*/
 195:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler arbitration_cbhandler;   /*!< Function pointer to hold the callback fu
 196:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when arbitration lost is occured*
 197:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    i2c_master_fptr_cbhandler error_cbhandler;         /*!< Function pointer to hold the callback fu
 198:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            called when error is detected.*/
 199:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t transmit_mode;          /**< Mode used for transmitting data. Data ca
 200:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 201:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    I2C_MASTER_TRANSFER_MODE_t receive_mode;           /**< Mode used for receiving data. Data can b
 202:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                            interrupt, DMA or direct(using polling o
 203:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 204:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t txFIFO_size;               /*!< TxFIFO size configuration*/
 205:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    XMC_USIC_CH_FIFO_SIZE_t rxFIFO_size;               /*!< RxFIFO size configuration*/
 206:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 207:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    IRQn_Type tx_irqn;
 208:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    IRQn_Type rx_irqn; 
 209:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_CONFIG_t;
 210:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 211:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 212:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Structure to hold the dynamic variables for the I2C_MASTER communication.
 213:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 214:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER_RUNTIME
 215:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 216:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t * tx_data;                     /*!< Pointer to the transmit data buffer*/
 217:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t * rx_data;                     /*!< Pointer to the receive data buffer*/
 218:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t tx_data_count;                /*!< Number of bytes of data to be transmitted*/
 219:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t tx_data_index;       /*!< Index to the byte to be transmitted next in the tx_da
 220:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_data_count;                /*!< Number of bytes of data to be received*/
 221:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1)
 222:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_dma_data_count;            /*!< Number of bytes of data to be received-DMA mode*/
 223:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t rx_dma_data_index;            /*!< Index of bytes of data to be received-DMA mode*/
 224:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 225:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t rx_data_index;       /*!< Indicates the number of bytes currently available in 
 226:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile uint32_t direction;           /*!< Indicates TRANSMIT/RECEIVE */
 227:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t send_stop;                    /*!< Indicates to stop the I2C */
 228:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint32_t send_nack;                    /*!< Indicates to send nack */
 229:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t tx_ack_sr;                         /*!< Service request number assigned to transmit inter
 230:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   uint8_t rx_sr;                         /*!< Service request number assigned to receive interrupts
 231:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool tx_busy;                 /*!< Status flag to indicate busy when a transmission is a
 232:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool rx_busy;                 /*!< Status flag to indicate busy when a reception is assi
 233:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   volatile bool bus_acquired;            /*!< flag to indicate whether bus is acquired or not */
 234:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_RUNTIME_t;
 235:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 236:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 237:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 238:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Handler structure with pointers to dynamic and static parameters.
 239:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 240:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** typedef struct I2C_MASTER
 241:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 242:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_t *channel;                    /*!< USIC channel*/
 243:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   const I2C_MASTER_CONFIG_t * const config;  /*!< I2C configuration structure pointer*/
 244:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   I2C_MASTER_RUNTIME_t * const runtime;      /*!< Pointer to the structure holding all variables,
 245:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****    	                                               that can change at runtime*/
 246:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** } I2C_MASTER_t;
 247:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 248:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 249:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @}
 250:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 251:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 252:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #ifdef __cplusplus
 253:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** extern "C" {
 254:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 255:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 256:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 257:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 258:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @ingroup I2C_MASTER_apidoc
 259:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @{
 260:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 261:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 262:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**************************************************************************************************
 263:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * API PROTOTYPES
 264:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  **************************************************************************************************
 265:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 266:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Get I2C_MASTER APP version.
 267:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return \a DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 268:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 269:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description: </b><br>
 270:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The function can be used to check application software compatibility with a
 271:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * specific version of the APP.
 272:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 273:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 274:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 275:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 276:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 277:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 278:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_APP_VERSION_t version;
 279:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_Init();
 280:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    version = I2C_MASTER_GetAppVersion();
 281:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(version.major != 4U)
 282:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 283:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 284:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 285:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 286:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 287:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 288:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 289:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 290:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** DAVE_APP_VERSION_t I2C_MASTER_GetAppVersion(void);
 291:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 292:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief This function initializes the I2C_MASTER APP based on user provided configuration.
 293:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 294:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
 295:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 296:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description: </b><br>
 297:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C configurations like channel selection,baud rate setting,
 298:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * FIFO configuration etc are done in this API.
 299:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Protocol specific interrupts can also be enabled using the I2C_MASTER_Init
 300:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * function.
 301:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 302:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 303:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 304:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 305:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * #include "DAVE.h"
 306:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * int main(void)
 307:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * {
 308:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   // Initializing the modules and the multiplexer
 309:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_Init(); // I2C_MASTER_Init will be called from DAVE_Init()
 310:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1)
 311:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {}
 312:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 313:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 314:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 315:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 316:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 317:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 318:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Init(const I2C_MASTER_t *const handle);
 319:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 320:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 321:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 322:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief  Receives the data from I2C slave device.
 323:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 324:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start Flag to indicate that the start condition need to be send.
 325:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address I2C slave device address.
 326:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data buffer to receive data.
 327:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  count The number of bytes to be received from slave.
 328:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 329:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_nack The flag to indicate that the NACK condition need to be send for the last byte
 330:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 331:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 332:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_Receive API can be used in Interrupt and Direct modes.\n
 333:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 334:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 335:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 336:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).\n
 337:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 338:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 339:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 340:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 341:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 342:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 343:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_READ 10
 344:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define BYTES_TO_TRANSMIT 10
 345:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 346:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 347:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 348:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 349:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 350:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 351:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
 352:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 353:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 354:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t data = 0x55;
 355:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_data;
 356:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 357:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 358:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 359:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_STATUS_t init_status;  
 360:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   init_status = DAVE_Init();
 361:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 362:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 363:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
 364:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
 365:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 366:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 367:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 368:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,&data,1,true);
 369:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 370:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 371:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Read data from IO EXPANDER
 372:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 373:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 374:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 375:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0,true,SLAVE_ADDRESS,&rx_data,1,true,true);
 376:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 377:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 378:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1)
 379:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   { }
 380:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  return 0;
 381:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 382:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 383:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 384:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 385:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 386:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Receive(I2C_MASTER_t *handle, bool send_start, const uint32_t addres
 387:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                        uint8_t * data, const uint32_t count, bool send_stop, bool s
 388:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 389:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 390:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Transmits data to I2C slave device.
 391:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 392:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 393:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start The flag to indicate that the start condition need to be send.
 394:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address I2C slave device address.
 395:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data buffer containing the data to transmit.
 396:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size The number of bytes to be send to slave.
 397:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop The flag to indicate that the stop condition need to be send.
 398:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 399:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return @ref I2C_MASTER_STATUS_t Status.
 400:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 401:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_Transmit API can be used in Interrupt and Direct modes.\n
 402:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 403:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 404:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 405:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write). \n
 406:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 407:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 
 408:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 409:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 410:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 411:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 412:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
 413:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
 414:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
 415:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
 416:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
 417:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
 418:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 419:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 420:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 421:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 422:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 423:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 424:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 425:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 426:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 427:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 428:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = IO_STATE;//memory which need to be read from slave
 429:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
 430:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 431:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 432:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 433:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
 434:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 435:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 436:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 437:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 438:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 439:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 440:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 441:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 442:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 443:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 444:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 445:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_Transmit(I2C_MASTER_t *handle, bool send_start, const uint32_t addre
 446:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                uint8_t *data, const uint32_t size, bool send_stop);
 447:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 448:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 449:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Get the I2C flag status.
 450:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 451:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 452:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 453:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *			 	      bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be used to selec
 454:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    multiple flags.
 455:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 456:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t Flag status.
 457:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 458:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 459:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 460:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 461:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 462:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 463:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 464:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 465:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 466:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 467:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 468:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 469:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 470:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 471:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 472:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 473:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 474:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
 475:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 476:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 477:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 478:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 479:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 480:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 481:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 482:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 483:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 484:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 485:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 486:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** uint32_t I2C_MASTER_GetFlagStatus(const I2C_MASTER_t *handle, uint32_t flagtype);
 487:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 488:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 489:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Clear the I2C flag status.
 490:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 491:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C device handle of type I2C_MASTER_t*
 492:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flagtype   single or multiple flags, whose status need to be checked.
 493:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    The bitwise OR operation on elements of enum XMC_I2C_CH_STATUS_FLAG_t can be 
 494:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                    multiple flags.
 495:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 496:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None <BR>
 497:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 498:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 499:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 500:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 501:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 502:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
 503:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 504:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 505:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 506:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 507:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 508:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 509:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 510:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 511:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 512:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 513:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
 514:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 515:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 516:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 517:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 518:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {}
 519:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 520:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 0;
 521:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 522:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 523:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 524:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 525:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** void I2C_MASTER_ClearFlag(const I2C_MASTER_t *handle, uint32_t flagtype);
 526:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 527:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 528:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Aborts the ongoing data transmission.
 529:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 530:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 531:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 532:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 533:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If there is a transmission in progress, it will be stopped. Once the transmission is stopped, 
 534:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * user can start a new transmission without delay.
 535:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 536:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 537:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 538:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 539:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 540:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 541:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 542:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 543:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 544:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buf[50] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
 545:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 546:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 547:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 548:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 549:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 550:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 551:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 552:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 553:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_AbortTransmit(&I2C_MASTER_0);
 554:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
 555:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 16, true);
 556:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 557:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 558:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
 559:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 560:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 561:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 562:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 563:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 564:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 565:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 566:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 567:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 568:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortTransmit(const I2C_MASTER_t *const handle);
 569:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 570:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 571:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** * @brief Stops the active data reception request.
 572:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 573:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return I2C_MASTER_STATUS_t status
 574:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 575:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 576:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a reception is in progress, it will be stopped. When a reception request
 577:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * is active, user will not be able to place a new receive request till the active
 578:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * reception is complete. This API can stop the progressing reception to make
 579:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * a new receive request.
 580:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 581:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
 582:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 583:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 584:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 585:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 586:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 587:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 588:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 589:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 590:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t rx_buf[25];
 591:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t tx_buf[2];
 592:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   DAVE_STATUS_t init_status;
 593:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   init_status = DAVE_Init();
 594:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   if(init_status == DAVE_STATUS_SUCCESS)
 595:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 596:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //send the address from which data to be transfered
 597:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     tx_buf[0] = 0;
 598:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 599:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 600:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 601:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_AbortReceive(&I2C_MASTER_0);
 602:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_SendStop(&I2C_MASTER_0);
 603:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &tx_buf[0], 1, false);
 604:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 605:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, &rx_buf[0], 16, true, true);
 606:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 607:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 608:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1U)
 609:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
 610:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
 611:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 612:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 1U;
 613:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 614:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 615:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 616:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 617:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 618:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_AbortReceive(const I2C_MASTER_t *const handle);
 619:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 620:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 621:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_TX_ENABLED == 1U) || defined(DOXYGEN)
 622:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 623:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for transmitting data over I2C channel using DMA.
 624:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 625:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 626:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  block_size size of the block
 627:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  addr    address\n
 628:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 629:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 630:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 631:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 632:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 633:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 634:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 635:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * request is registered.
 636:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 637:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 638:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 639:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. The function uses AP
 640:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * structure to store the status of transmission.
 641:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 642:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Actual data transmission happens through DMA channel.
 643:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * A maximum of 4095 bytes can be transmitted in one API call. This limit is because of the DMA sin
 644:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 645:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 646:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 647:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the completion of data transmission.
 648:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 649:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * calls to this API.
 650:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>
 651:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * I2C_MASTER_StartTransmitDMA API can be used in DMA mode.
 652:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit should be configured as "DMA" mode in advanced settings tab. \n
 653:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 654:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 655:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 656:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 657:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 658:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 659:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 660:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 661:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 662:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 663:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
 664:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 665:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 666:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 667:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 668:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 669:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 670:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 671:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 672:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 673:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 674:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 675:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 676:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 677:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
 678:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 679:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 680:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 681:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 682:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 683:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 684:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // trigger the DMA
 685:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitDMA(&I2C_MASTER_0, sizeof(Send_Data), Send_Data);
 686:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 687:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 688:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 689:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 690:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 691:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 692:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 693:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 694:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 695:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 696:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
 697:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 698:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 699:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 700:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitDMA(const I2C_MASTER_t *const handle, uint32_t block_si
 701:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 702:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 703:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_DMA_RX_ENABLED == 1U) || defined(DOXYGEN)
 704:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 705:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel using DMA.
 706:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 707:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 708:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 709:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param block_size  size of the block
 710:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  addr  address \n
 711:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= 4095.
 712:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 713:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 714:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 715:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 716:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 717:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 718:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 719:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured callback function will be executed.
 720:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 721:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When all the requested number of data bytes are received, the configured callback function will 
 722:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, the user has to poll for the value of the variable, \a
 723:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * handle->runtime->rx_busy to be false. The value is updated to \a false when all the requested nu
 724:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * are received.
 725:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * A maximum of 4095 bytes can be received in one API call. This limit is because of the DMA single
 726:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 727:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveDMA API can be used only in DMA mode
 728:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive should be configured as "DMA" mode in advanced settings tab \n
 729:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(addr) should reserve an additional bit at the LSB for read/write indication. For example
 730:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 731:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 732:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
 733:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 734:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 735:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 736:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 737:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 738:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 739:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Pre condition:
 740:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Transmit mode and receive mode should be configured to "DMA" in advanced settings tab
 741:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 742:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t ReadData[256];
 743:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 744:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 745:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 746:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 747:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 748:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 749:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 750:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
 751:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 752:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 753:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 754:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 755:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 756:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
 757:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
 758:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 759:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 760:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 761:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 762:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 763:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
 764:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
 765:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    {
 766:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	      // wait for ACK
 767:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *	    }
 768:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
 769:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  
 770:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveDMA(&I2C_MASTER_0, 200, ReadData);
 771:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 772:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 773:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 774:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 775:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 776:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 777:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 778:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 779:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 780:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 781:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 782:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  @endcode
 783:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 784:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 785:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveDMA(const I2C_MASTER_t *const handle, uint32_t block_siz
 786:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 787:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 788:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_INTERRUPT_TX_ENABLED == 1U)
 789:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 790:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for transmitting data over I2C_MASTER channel.
 791:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 792:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 793:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start flag to indicate the start condition
 794:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address slave address
 795:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data    pointer to buffer
 796:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size    number of bytes
 797:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop flag to indicate the stop condition\n
 798:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum supported by uint32_t.
 799:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 800:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status of transmit request.\n
 801:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 802:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a transmission is in progress.\n
 803:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 804:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 805:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * request is registered.
 806:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 807:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 808:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure a callback fu
 809:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the data is fully transmitted, the callback function will be executed. If transmit FIFO is 
 810:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the trigger limit is set to 1. So the transmit interrupt will be generated when all the data in 
 811:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * from FIFO. The function uses APP handle's runtime structure to store the data pointer, count, da
 812:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * status of transmission. This function only registers a data transmission request if there is no 
 813:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * in progress.
 814:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Actual data transmission happens in the transmit interrupt service routine. A trigger is generat
 815:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interrupt to start loading the data. If transmit FIFO is configured, the data is filled into the
 816:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit interrupt will be generated next time when the transmit FIFO is empty. At this point of
 817:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * some more data to be transmitted, it is loaded to the FIFO again. When FIFO is not enabled, data
 818:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * byte at a time. On transmission of each byte an interrupt is generated and the next byte is tran
 819:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interrupt service routine. Callback function is executed when all the data bytes are transmitted
 820:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of t
 821:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * structure( \a handle->runtime->tx_busy ) to check for the completion of data transmission.<br>
 822:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartTransmitIRQ API can be used only in Interrupt mode.
 823:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit should be configured as "Interrupt" mode in advanced settings tab.\n
 824:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 825:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 826:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 827:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).
 828:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 829:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 830:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 831:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 832:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 833:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
 834:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 835:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 836:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 837:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 838:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 839:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 840:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 841:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 842:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 843:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Write data to IO EXPANDER
 844:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 845:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 846:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 847:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,64,true);
 848:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 849:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 850:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 851:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 852:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 853:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 854:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 855:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 856:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 857:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 858:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 859:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 860:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** I2C_MASTER_STATUS_t I2C_MASTER_StartTransmitIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 861:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                 uint8_t *data, const uint32_t size, bool send_stop)
 862:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 863:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #if (I2C_MASTER_INTERRUPT_RX_ENABLED == 1U)
 864:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 865:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Registers a request for receiving data over I2C_MASTER channel.
 866:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 867:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 868:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle  Pointer to I2C_MASTER_t handle structure
 869:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_start flag to indicate the start condition
 870:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  address slave address
 871:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  data    pointer to buffer
 872:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  count    number of bytes
 873:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_stop flag to indicate the stop condition
 874:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  send_nack flag to indicate the nack condition\n
 875:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: minimum= 1, maximum= maximum value supported by type uint32_t.
 876:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 877:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return  I2C_MASTER_STATUS_t: Status for receive request.\n
 878:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_SUCCESS if the request is accepted.\n
 879:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                        @ref I2C_MASTER_STATUS_BUSY if a reception is in progress.\n
 880:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 881:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 882:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 883:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received, opti
 884:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured callback function will be executed. Based on the UI configuration, either standard re
 885:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * receive FIFO is used for data reception. An interrupt is configured for reading received data fr
 886:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * function only registers a request to receive a number of data bytes from a USIC channel. If FIFO
 887:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.  When all
 888:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * of data bytes are received, the configured callback function will be executed. If a callback fun
 889:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * configured, the user has to poll for the value of the variable, \a handle->runtime->rx_busy to b
 890:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * is updated to \a false when all the requested number of data bytes are received.<br>
 891:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: I2C_MASTER_StartReceiveIRQ API can be used only in Interrupt mode.
 892:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive should be configured as "Interrupt" mode in advanced settings tab.\n
 893:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
 894:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
 895:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
 896:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).
 897:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 898:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 899:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 900:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
 901:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 902:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t rx_buffer[64];
 903:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 904:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 905:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 906:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 907:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 908:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 909:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 910:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 911:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 912:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
 913:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 914:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 915:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 916:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,rx_buffer,64,true, true);
 917:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
 918:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 919:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
 920:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
 921:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
 922:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 923:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 924:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
 925:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 926:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 927:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  I2C_MASTER_STATUS_t I2C_MASTER_StartReceiveIRQ(I2C_MASTER_t *handle, bool send_start, const uint32
 928:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****                                                uint8_t * data, const uint32_t count, bool send_stop
 929:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** #endif
 930:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 931:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 932:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 933:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Gets the transmit FIFO event flags.
 934:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 935:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 936:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 937:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t: Status of the STBI and TBERI bits in TRBSR register in
 938:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                      their bit positions.\n
 939:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                      \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t for the bitmask of event
 940:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 941:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
 942:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function reads the value of TRBSR register. It masks the standard transmit buffer interrupt flag
 943:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * buffer error flag before providing the value.
 944:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * User has to mask the bits of interest before checking the status.
 945:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: Enable transmit fifo in Advanced settings tab. <br>
 946:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
 947:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 948:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
 949:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 950:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
 951:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
 952:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
 953:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
 954:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
 955:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
 956:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
 957:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
 958:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 959:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
 960:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
 961:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
 962:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
 963:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 964:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
 965:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
 966:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
 967:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
 968:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
 969:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 970:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
 971:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
 972:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 973:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
 974:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
 975:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
 976:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
 977:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
 978:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
 979:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
 980:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 981:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
 982:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetTXFIFOStatus(const I2C_MASTER_t* const handle)
 983:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
 984:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetTXFIFOStatus: invalid handle", (handle != NULL));
 985:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_TXFIFO_GetEvent(handle->channel);
 986:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
 987:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
 988:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
 989:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Configures trigger limit for the transmit FIFO.
 990:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 991:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
 992:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size   FIFO size
 993:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  limit Value of transmit FIFO filling level, transition below which the interrupt should 
 994:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               \bRange: 0 to transmit FIFO size.\n
 995:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               e.g, If transmit FIFO size is 16, and limit is configured as 8, FIFO standard tran
 996:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               will be generated when the FIFO filling level drops from 8 to 7.\n
 997:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
 998:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
 999:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1000:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1001:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit FIFO trigger limit is configured by setting its value in the TBCTR register.
1002:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Transmit FIFO is configured to generate interrupt when the FIFO filling level drops
1003:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * below the trigger limit.
1004:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1005:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1006:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1007:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1008:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1009:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1010:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1011:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Send_Data[] = "Infineon Technologies";
1012:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1013:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1014:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1015:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1016:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1017:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1018:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1019:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit, draining level as 10
1020:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1021:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // Execution will happen two times in the interrupt handler as the limit is set to 10
1022:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, Send_Data, 16, true);
1023:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1024:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1025:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1026:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1027:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1028:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1029:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1030:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1031:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1032:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1033:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1034:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1035:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1036:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1037:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetTXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1038:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                              const uint32_t limit)
1039:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1040:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetTXFIFOTriggerLimit: invalid handle", (handle != NULL));
1041:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1042:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1043:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1044:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Configures trigger limit for the receive FIFO.
1045:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1046:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1047:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  size   FIFO size
1048:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  limit Value of receive FIFO filling level, transition above which the interrupt should b
1049:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               \bRange: 0 to receive FIFO size.\n
1050:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               e.g, If receive FIFO size is 16, and limit is configured as 8, FIFO receive buffer
1051:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *               will be generated when the FIFO filling level rises from 8 to 9.\n
1052:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1053:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1054:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1055:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1056:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive FIFO trigger limit is configured by setting its value in the RBCTR register.
1057:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Receive FIFO is configured to generate interrupt when the FIFO filling level rises
1058:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * above the trigger limit.
1059:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1060:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1061:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1062:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1063:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1064:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1065:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1066:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1067:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t Rx_Data[256];
1068:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1069:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1070:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1071:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1072:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1073:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1074:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1075:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure receive fifo trigger limit to filling level as 10
1076:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1077:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // Execution will happen two times in the receive interrupt handler as the limit is set to 
1078:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_Receive(&I2C_MASTER_0, true, SLAVE_ADDRESS, Rx_Data, 16, true, true);
1079:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsRxBusy(&I2C_MASTER_0));
1080:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1081:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1082:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1083:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1084:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1085:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1086:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1087:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1088:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1089:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1090:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1091:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1092:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1093:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SetRXFIFOTriggerLimit(I2C_MASTER_t * const handle, const uint32_t s
1094:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                              const uint32_t limit)
1095:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1096:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SetRXFIFOTriggerLimit: invalid handle", (handle != NULL));
1097:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(handle->channel, (XMC_USIC_CH_FIFO_SIZE_t)size, limit);
1098:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1099:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1100:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1101:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Checks if the transmit FIFO is full.
1102:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1103:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1104:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1105:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool Status of transmit FIFO filling level.
1106:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *              \bRange: \atrue- if transmit FIFO is full.<br>
1107:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                       \afalse- if transmit FIFO is not full.<br>
1108:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1109:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while filling
1110:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * data to the transmit FIFO.
1111:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>NOTE: </b><br>: Transmit should be "Direct" mode in advanced settings tab.<br>
1112:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1113:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1114:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1115:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1116:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1117:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1118:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1119:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1120:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t send_data[] = "Infineon Technologies";
1121:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1122:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1123:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1124:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();           // Initialization of DAVE APPs
1125:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1126:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1127:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1128:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1129:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1130:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1131:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1132:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1133:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1134:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  I2C_MASTER_Transmit(&I2C_MASTER_0, true, SLAVE_ADDRESS, &send_data[0], 10, false);
1135:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  //Wait when Tx FIFO is full
1136:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  while(!I2C_MASTER_IsTXFIFOFull(&I2C_MASTER_0))
1137:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1138:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_Transmit(&I2C_MASTER_0, false, SLAVE_ADDRESS, &send_data[0], 10, false);
1139:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1140:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  while(1U)
1141:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1142:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1143:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * }
1144:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1145:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1146:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTXFIFOFull(const I2C_MASTER_t* const handle)
1147:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1148:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTXFIFOFull: invalid handle", (handle != NULL));
1149:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_TXFIFO_IsFull(handle->channel);
1150:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1151:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1152:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1153:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Checks if the receive FIFO is empty.
1154:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1155:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1156:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1157:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool Status of receive FIFO filling level.
1158:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *              \bRange: \atrue- if receive FIFO is empty.<br>
1159:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *                       \afalse- if receive FIFO still has data.<br>
1160:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1161:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Checks the status using the register TRBSR. Can be used while reading data from the receive FIFO
1162:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1163:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1164:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1165:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1166:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1167:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1168:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1169:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1170:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1171:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1172:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1173:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1174:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1175:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1176:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1177:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1178:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1179:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1180:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1181:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1182:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1183:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1184:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1185:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1186:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1187:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1188:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1189:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1190:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1191:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1192:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1193:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1194:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1195:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1196:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1197:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1198:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1199:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1200:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1201:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1202:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1203:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1204:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1205:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1206:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   while(1U)
1207:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
1208:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1209:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1210:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1211:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1212:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsRXFIFOEmpty(const I2C_MASTER_t* const handle)
1213:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1214:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsRXFIFOEmpty: invalid handle", (handle != NULL));
1215:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_RXFIFO_IsEmpty(handle->channel);
1216:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1217:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1218:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1219:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Gets the status of event flags related to receive FIFO.
1220:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1221:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1222:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1223:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1224:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint32_t: Status of standard receive buffer event, alternative receive buffer event and 
1225:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * error event in their bit positions in TRBSR register.\n
1226:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for event bitmasks. Multiple events' status c
1227:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * comparison using \a OR operation.
1228:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1229:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1230:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * It provides the status of standard receive buffer event, alternative receive buffer event and re
1231:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * event.
1232:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function masks the TRBSR register with the bitmask of SRBI, ARBI and RBERI flags. User has to ma
1233:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * interest before checking the status.
1234:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1235:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1236:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1237:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1238:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1239:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   #define SLAVE_ADDRESS 0xA0
1240:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   uint8_t mem_address[2];
1241:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   int main(void)
1242:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   {
1243:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     DAVE_STATUS_t init_status;
1244:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1245:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     init_status = DAVE_Init();
1246:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     if(init_status == DAVE_STATUS_SUCCESS)
1247:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1248:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       mem_address[0] = 0x00;//memory which need to be read from slave
1249:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       //Configure receive fifo trigger limit as 10
1250:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1251:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1252:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1253:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1254:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1255:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0
1256:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1257:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1258:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1259:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     else
1260:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1261:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1262:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1263:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1264:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1265:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1266:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      return 1U;
1267:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1268:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1269:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1270:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1271:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint32_t I2C_MASTER_GetRXFIFOStatus(const I2C_MASTER_t* const handle)
1272:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1273:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetRXFIFOStatus: invalid handle", (handle != NULL));
1274:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   return XMC_USIC_CH_RXFIFO_GetEvent(handle->channel);
1275:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1276:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1277:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1278:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to
1279:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * transmit FIFO.
1280:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1281:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1282:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1283:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flag Value with event bits at their bit positions in TRBSR register to be cleared.\n
1284:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_TXFIFO_EVENT_t. Multiple events can be combined 
1285:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \a OR operation.
1286:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1287:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return    None
1288:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1289:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1290:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function clears a status bit in TRBSR register using the TRBSCR register. But the function does 
1291:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * value with the bit positions restricted to transmit FIFO status bits. User should ensure that th
1292:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * appropriately masked.
1293:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1294:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1295:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1296:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1297:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1298:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1299:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1300:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1301:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1302:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1303:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1304:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1305:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1306:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1307:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00; //memory which need to be read from slave
1308:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure transmit fifo trigger limit as 10
1309:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetTXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1310:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1311:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1312:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,false);
1313:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1314:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetTXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_TXFIFO_EVENT_STANDARD) == 0)
1315:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearTXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_TXFIFO_EVENT_STANDARD);
1316:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false);
1317:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1318:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1319:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1320:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1321:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1322:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1323:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1324:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1325:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1326:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1327:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1328:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1329:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1330:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearTXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1331:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1332:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearTXFIFOStatus: invalid handle", (handle != NULL));
1333:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_TXFIFO_ClearEvent(handle->channel, flag);
1334:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1335:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1336:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1337:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Function clears the specified FIFO event flag related to receive FIFO. It should be used 
1338:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * of standard receive buffer interrupt, alternative receive buffer interrupt and receive buffer er
1339:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1340:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1341:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1342:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  flag Value with event bits at the bit positions in TRBSR register to be cleared.\n
1343:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             \b Range: Use type @ref XMC_USIC_CH_RXFIFO_EVENT_t for providing events.
1344:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *             Multiple events can be input by using \a OR operation.
1345:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1346:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return    None
1347:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1348:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1349:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Function clears a status bit in TRBSR using the TRBSCR register.
1350:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The function does not mask the input value to clear only receive buffer
1351:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * events. So user should appropriately mask the input value before calling
1352:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * the function.
1353:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1354:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1355:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1356:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1357:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1358:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1359:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1360:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1361:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1362:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1363:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1364:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1365:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1366:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1367:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      mem_address[0] = 0x00;//memory which need to be read from slave
1368:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Configure receive fifo trigger limit as 10
1369:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SetRXFIFOTriggerLimit(&I2C_MASTER_0, 16, 10);
1370:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartTransmitIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1371:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1372:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,16,true, true);
1373:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait for FIFO transmit standard buffer interrupt to fill it again with remaining data
1374:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((I2C_MASTER_GetRXFIFOStatus(&I2C_MASTER_0) & XMC_USIC_CH_RXFIFO_EVENT_STANDARD) == 0)
1375:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearRXFIFOStatus(&I2C_MASTER_0, XMC_USIC_CH_RXFIFO_EVENT_STANDARD);
1376:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_StartReceiveIRQ(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,6,false, false);
1377:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1378:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1379:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1380:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1381:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1382:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1383:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1384:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1385:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1386:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1387:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1388:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1389:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1390:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ClearRXFIFOStatus(const I2C_MASTER_t* const handle, const uint32_t 
1391:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1392:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ClearRXFIFOStatus: invalid handle", (handle != NULL));
1393:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_USIC_CH_RXFIFO_ClearEvent(handle->channel, flag);
1394:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1395:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1396:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1397:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Provides the received data from receive buffer.
1398:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1399:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1400:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return uint8_t: Data read from RBUF.\n
1401:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1402:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1403:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * This can be used in receive mode "Direct" to read the received data.
1404:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * If Rx FIFO is not configured, function reads the value of RBUF register.
1405:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Otherwise it reads the data from OUTR register.
1406:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1407:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1408:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1409:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1410:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1411:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1412:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1413:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1414:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[10];
1415:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0,loc_index = 0;
1416:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1417:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1418:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1419:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1420:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1421:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1422:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1423:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1424:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1425:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1426:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1427:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1428:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1429:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1430:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1431:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1432:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1433:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1434:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1435:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1436:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        // wait for ACK
1437:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1438:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1439:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1440:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1441:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1442:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         index++;
1443:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1444:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1445:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1446:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1447:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1448:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1449:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1450:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1451:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1452:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1453:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1454:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1455:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1456:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1457:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1458:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1459:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1460:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1461:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1462:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /* Wrapper to the LLD API for reading back the value of the RBUF or OUTR register */
1463:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE uint8_t I2C_MASTER_GetReceivedByte(I2C_MASTER_t * const handle)
1464:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1465:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_GetReceivedByte: invalid handle", (handle != NULL));
1466:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   return (uint8_t)XMC_I2C_CH_GetReceivedData(handle->channel);
1467:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1468:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1469:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1470:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Transmits single byte using I2C protocol.
1471:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1472:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1473:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  byte data byte to transmit. \n
1474:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1475:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 
1476:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1477:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1478:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1479:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1480:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1481:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1482:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1483:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1484:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1485:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1486:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1487:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1488:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1489:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1490:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1491:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1492:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1493:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1494:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1495:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1496:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1497:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1498:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1499:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1500:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1501:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // wait for ACK
1502:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1503:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1504:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1505:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1506:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1507:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // wait for ACK
1508:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1509:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1510:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1511:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1512:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1513:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1514:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1515:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1516:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_TransmitByte(I2C_MASTER_t * const handle, uint8_t byte)
1517:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1518:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_TransmitByte: invalid handle", (handle != NULL));
1519:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterTransmit(handle->channel, byte);
1520:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1521:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1522:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Enables the selected protocol events for interrupt generation.
1523:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1524:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1525:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  event  Protocol events to be enabled for interrupt generation. \n
1526:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1527:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         combined using the bitwise OR operation.\n
1528:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None\n
1529:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1530:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1531:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Enables the events by configuring CCR or PCR register based on the event.
1532:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * When the event is enabled, an interrupt can be generated on occurrence of the event.
1533:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * The API should be used only for \a Direct mode related events. Using this API for non \a Direct 
1534:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * may not yield expected result.
1535:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1536:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1537:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1538:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1539:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1540:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1541:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1542:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1543:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1544:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1545:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1546:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1547:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1548:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1549:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1550:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1551:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1552:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1553:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1554:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1555:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1556:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_EnableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1557:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1558:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1559:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1560:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1561:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1562:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1563:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_EnableEvent(I2C_MASTER_t * const handle, uint32_t event)
1564:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1565:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_EnableEvent: invalid handle", (handle != NULL));
1566:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_EnableEvent(handle->channel, event);
1567:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1568:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1569:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Disables selected events from generating interrupt.
1570:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1571:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  handle I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1572:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param  event  Events to be disabled from generating interrupt. \n
1573:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         \bRange: Use type \aXMC_I2C_CH_EVENT_t to select the event. Multiple events can be
1574:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *         combined using the bitwise OR operation.\n
1575:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1576:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1577:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1578:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Events are disabled by clearing their respective bits in either CCR, TBCTR or RBCTR.
1579:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1580:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1581:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1582:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1583:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declar
1584:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1585:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1586:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1587:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t status;
1588:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1589:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    status = DAVE_Init();
1590:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1591:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(status == DAVE_STATUS_FAILURE)
1592:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1593:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("DAVE APPs initialization failed\n");
1594:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1595:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1596:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1597:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1598:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1599:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1600:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    I2C_MASTER_DisableEvent(&I2C_MASTER_0, XMC_I2C_CH_EVENT_NACK);
1601:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1U)
1602:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1603:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1604:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1605:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1606:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1607:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1608:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_DisableEvent(I2C_MASTER_t * const handle, uint32_t event)
1609:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1610:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_DisableEvent: invalid handle", (handle != NULL));
1611:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_DisableEvent(handle->channel, event);
1612:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1613:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1614:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1615:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Receives the ACK from slave
1616:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1617:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1618:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1619:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1620:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * After transmitting a byte, master receives the ack from slave.<br>
1621:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1622:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1623:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1624:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1625:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1626:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1627:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1628:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1629:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1630:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1631:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1632:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t index = 0, loc_index = 0;
1633:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1634:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1635:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1636:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1637:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1638:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1639:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1640:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1641:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1642:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1643:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1644:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1645:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1646:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1647:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1648:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1649:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1650:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1651:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1652:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1653:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1654:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1655:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1656:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1657:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1658:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1659:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1660:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1661:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1662:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1663:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1664:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1665:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1666:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1667:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1668:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1669:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1670:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1671:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1672:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1673:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1674:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1675:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1676:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1677:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1678:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveACK(I2C_MASTER_t * const handle)
1679:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1680:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveACK: invalid handle", (handle != NULL));
1681:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterReceiveAck(handle->channel);
1682:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1683:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1684:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Receives the NACK from slave
1685:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1686:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1687:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1688:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1689:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * After transmitting a byte, master receives the nack from slave.<br>
1690:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.
1691:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1692:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1693:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1694:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1695:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1696:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1697:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1698:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1699:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1700:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint32_t index = 0, loc_index = 0;
1701:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rec_data[64];
1702:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1703:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1704:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1705:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1706:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1707:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1708:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1709:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1710:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1711:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // write to address 0
1712:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_TransmitByte(&I2C_MASTER_0, 0x00);
1713:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1714:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1715:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1716:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1717:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1718:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1719:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1720:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1721:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1722:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1723:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1724:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(index < 16)
1725:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1726:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        I2C_MASTER_ReceiveACK(&I2C_MASTER_0);
1727:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        index++;
1728:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1729:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      // only for the last byte
1730:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ReceiveNACK(&I2C_MASTER_0);
1731:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //Wait when Rx FIFO is empty
1732:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(!I2C_MASTER_IsRXFIFOEmpty(&I2C_MASTER_0))
1733:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1734:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *        rec_data[loc_index++] = I2C_MASTER_GetReceivedByte(&I2C_MASTER_0);
1735:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1736:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1737:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1738:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1739:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1740:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1741:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1742:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1743:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1744:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1745:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1746:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1747:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1748:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_ReceiveNACK(I2C_MASTER_t * const handle)
1749:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1750:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_ReceiveNACK: invalid handle", (handle != NULL));
1751:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterReceiveNack(handle->channel);
1752:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1753:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1754:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends stop command to slave
1755:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1756:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1757:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1758:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1759:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * At the end of transmission, sends a stop command to slave <br>
1760:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet.<br>
1761:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1762:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1763:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1764:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1765:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1766:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1767:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1768:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1769:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1770:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1771:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1772:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1773:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1774:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(I2C_MASTER_GetFlagStatus(&I2C_MASTER_0, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED) == 0U)
1775:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1776:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       // wait for ACK
1777:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1778:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_ClearFlag(&I2C_MASTER_0,XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1779:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //send the address to which data to be transfered
1780:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1781:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1782:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1783:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1784:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1785:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1786:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStop(&I2C_MASTER_0);
1787:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1788:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1789:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1790:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1791:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1792:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1793:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1794:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1795:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1796:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1797:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1798:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1799:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStop(I2C_MASTER_t * const handle)
1800:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1801:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStop: invalid handle", (handle != NULL));
1802:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_STOP_CONDITION_RECEIVED);
1803:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterStop(handle->channel);
1804:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1805:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1806:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends start command to slave
1807:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1808:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param address slave address
1809:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param cmd     command
1810:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1811:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1812:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1813:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Before start of transmission, sends a start command to slave. \n
1814:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1815:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1816:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1817:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1818:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1819:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1820:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1821:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1822:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
1823:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1824:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1825:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1826:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1827:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1828:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1829:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1830:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1831:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      I2C_MASTER_SendStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1832:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1833:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1834:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1835:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1836:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1837:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      //send the address to which data to be transfered
1838:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1839:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1840:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1841:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1842:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1843:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1844:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1845:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1846:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       XMC_DEBUG("main: Application initialization failed");
1847:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       while(1U)
1848:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       {
1849:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *       }
1850:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1851:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 1U;
1852:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   }
1853:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1854:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1855:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendStart(I2C_MASTER_t * const handle, const uint32_t address,
1856:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                  const XMC_I2C_CH_CMD_t cmd)
1857:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1858:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendStart: invalid handle", (handle != NULL));
1859:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_START_CONDITION_RECEIVED);
1860:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterStart(handle->channel, (uint16_t)address, cmd);
1861:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1862:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1863:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends repeated start command to slave
1864:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1865:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param address slave address
1866:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param cmd     command
1867:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return None
1868:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1869:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * \par<b>Description:</b><br>
1870:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Before start of transmission, sends a repeatedstart command to slave if bus acquired is true.\n
1871:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Address(address) should reserve an additional bit at the LSB for read/write indication. For exam
1872:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * be provided as 0x0a. If the address is 10-bit, only most significant bits with the 10-bit identi
1873:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * For example, if the 10-bit address is 0x305, the address should be provided as 0xf6(prepend with
1874:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * followed by 1-bit field for read/write).<br>
1875:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Pre-requisite: Instantiate I2C_MASTER APP and generate code before using below code snippet. <br
1876:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * Example Usage:
1877:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1878:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1879:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"         //Declarations from DAVE Code Generation (includes SFR declaration)
1880:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS 0xA0
1881:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1882:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1883:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1884:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    uint8_t rx_buf[256];
1885:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1886:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1887:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1888:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1889:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_MasterStart(I2C_MASTER_0.channel, SLAVE_ADDRESS, XMC_I2C_CH_CMD_WRITE);
1890:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED
1891:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1892:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1893:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1894:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1895:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //send the address to which data to be transfered
1896:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_MasterTransmit(I2C_MASTER_0.channel, 0x00);
1897:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1898:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1899:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1900:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1901:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1902:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_SendRepeatedStart(&I2C_MASTER_0, SLAVE_ADDRESS, XMC_I2C_CH_CMD_READ);
1903:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while((XMC_I2C_CH_GetStatusFlag(I2C_MASTER_0.channel) & XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED)
1904:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     {
1905:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     }
1906:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1907:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     XMC_I2C_CH_ClearStatusFlag(I2C_MASTER_0.channel, XMC_I2C_CH_STATUS_FLAG_ACK_RECEIVED);
1908:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * 	   memset(rx_buf,0,16);
1909:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Receive(&I2C_MASTER_0, false, SLAVE_ADDRESS, rx_buf, 16, true, true);
1910:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1911:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    else
1912:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1913:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1914:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      while(1U)
1915:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      {
1916:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *      }
1917:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1918:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *   return 1U;
1919:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1920:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode
1921:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** */
1922:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE void I2C_MASTER_SendRepeatedStart(I2C_MASTER_t * const handle, const uint32_t addre
1923:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 		                                          const XMC_I2C_CH_CMD_t cmd)
1924:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
1925:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_SendRepeatedStart: invalid handle", (handle != NULL));
1926:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_ClearStatusFlag(handle->channel, XMC_I2C_CH_STATUS_FLAG_REPEATED_START_CONDITION_RECEI
1927:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_I2C_CH_MasterRepeatedStart(handle->channel, (uint16_t)address, cmd);
1928:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
1929:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1930:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** /**
1931:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @brief Sends the txbusy flag
1932:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @param handle  I2C_MASTER APP handle pointer of type @ref I2C_MASTER_t
1933:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @return bool : status of txbusy flag
1934:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  
1935:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @code
1936:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1937:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #include "DAVE.h"
1938:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  #define SLAVE_ADDRESS (0xA0)
1939:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  typedef enum PCA9502_REGADDR {
1940:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_DIR    = 0xA << 3,
1941:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_STATE  = 0xB << 3,
1942:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_INTE   = 0xC << 3,
1943:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    IO_CTRL   = 0xE << 3
1944:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  } PCA9502_REGADDR_t;
1945:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1946:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t tx_buffer[64] = {0x01,0x02,0x03,0x04,0x05};
1947:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  uint8_t mem_address[2];
1948:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1949:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  int main(void)
1950:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  {
1951:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    DAVE_STATUS_t init_status;
1952:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    init_status = DAVE_Init();
1953:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    if(init_status == DAVE_STATUS_SUCCESS)
1954:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    {
1955:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     mem_address[0] = IO_STATE;//memory which need to be read from slave
1956:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     //Write data to IO EXPANDER
1957:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,true,SLAVE_ADDRESS,mem_address,1,false);
1958:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1959:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1960:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     I2C_MASTER_Transmit(&I2C_MASTER_0,false,SLAVE_ADDRESS,tx_buffer,5,true);
1961:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *     while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
1962:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    }
1963:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    while(1)
1964:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    { }
1965:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** 
1966:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *    return 0;
1967:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *  }
1968:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1969:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  * @endcode<BR> </p>
1970:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  *
1971:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****  */
1972:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** __STATIC_INLINE bool I2C_MASTER_IsTxBusy(I2C_MASTER_t * const handle)
1973:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** {
  27              	 .loc 1 1973 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1974:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   XMC_ASSERT("I2C_MASTER_IsTxBusy: invalid handle", (handle != NULL));
1975:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h ****   return handle->runtime->tx_busy;
  43              	 .loc 1 1975 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 9B68     	 ldr r3,[r3,#8]
  46 000c 93F82630 	 ldrb r3,[r3,#38]
  47 0010 DBB2     	 uxtb r3,r3
1976:D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER\i2c_master.h **** }
  48              	 .loc 1 1976 0
  49 0012 1846     	 mov r0,r3
  50 0014 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0016 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0018 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001c 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE286:
  65 001e 00BF     	 .section .bss.I2C_SLAVE_ADDRESS,"aw",%nobits
  68              	I2C_SLAVE_ADDRESS:
  69 0000 00       	 .space 1
  70              	 .section .text.IOExp_Test_FullPORT,"ax",%progbits
  71              	 .align 2
  72              	 .global IOExp_Test_FullPORT
  73              	 .thumb
  74              	 .thumb_func
  76              	IOExp_Test_FullPORT:
  77              	.LFB605:
  78              	 .file 2 "../InputCapture/IOExp_lib.c"
   1:../InputCapture/IOExp_lib.c **** /*
   2:../InputCapture/IOExp_lib.c ****  * IOExp_lib.c
   3:../InputCapture/IOExp_lib.c ****  *
   4:../InputCapture/IOExp_lib.c ****  *  Created on: 2023 Feb 13 17:39:06
   5:../InputCapture/IOExp_lib.c ****  *  Author: Gensol
   6:../InputCapture/IOExp_lib.c ****  */
   7:../InputCapture/IOExp_lib.c **** 
   8:../InputCapture/IOExp_lib.c **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
   9:../InputCapture/IOExp_lib.c **** #include<xmc_i2c.h>
  10:../InputCapture/IOExp_lib.c **** #include<stdio.h>
  11:../InputCapture/IOExp_lib.c **** 
  12:../InputCapture/IOExp_lib.c **** //#define I2C_SLAVE_ADDRESS 0x42
  13:../InputCapture/IOExp_lib.c **** static uint8_t I2C_SLAVE_ADDRESS;
  14:../InputCapture/IOExp_lib.c **** 
  15:../InputCapture/IOExp_lib.c **** #define INPUT_REG_PORT0 0x00
  16:../InputCapture/IOExp_lib.c **** #define INPUT_REG_PORT1	0x01
  17:../InputCapture/IOExp_lib.c **** #define OUTPUT_REG_PORT0 0x02
  18:../InputCapture/IOExp_lib.c **** #define OUTPUT_REG_PORT1 0x03
  19:../InputCapture/IOExp_lib.c **** #define CONFIG_REG_PORT0 0x06
  20:../InputCapture/IOExp_lib.c **** #define CONFIG_REG_PORT1 0x07
  21:../InputCapture/IOExp_lib.c **** 
  22:../InputCapture/IOExp_lib.c **** #define PIN_LOW  false
  23:../InputCapture/IOExp_lib.c **** #define PIN_HIGH true
  24:../InputCapture/IOExp_lib.c **** 
  25:../InputCapture/IOExp_lib.c **** /* This test case configures Port 0 of IO Expander as output
  26:../InputCapture/IOExp_lib.c ****  * and Port 1 as input and check the signals transmission from Port 0 on Port 1 */
  27:../InputCapture/IOExp_lib.c **** void IOExp_Test_FullPORT(void)
  28:../InputCapture/IOExp_lib.c **** {
  79              	 .loc 2 28 0
  80              	 .cfi_startproc
  81              	 
  82              	 
  83 0000 B0B5     	 push {r4,r5,r7,lr}
  84              	.LCFI6:
  85              	 .cfi_def_cfa_offset 16
  86              	 .cfi_offset 4,-16
  87              	 .cfi_offset 5,-12
  88              	 .cfi_offset 7,-8
  89              	 .cfi_offset 14,-4
  90 0002 92B0     	 sub sp,sp,#72
  91              	.LCFI7:
  92              	 .cfi_def_cfa_offset 88
  93 0004 04AF     	 add r7,sp,#16
  94              	.LCFI8:
  95              	 .cfi_def_cfa 7,72
  29:../InputCapture/IOExp_lib.c **** 	bool send_start = true, send_stop = true;
  96              	 .loc 2 29 0
  97 0006 0123     	 movs r3,#1
  98 0008 87F83630 	 strb r3,[r7,#54]
  99 000c 0123     	 movs r3,#1
 100 000e 87F83530 	 strb r3,[r7,#53]
  30:../InputCapture/IOExp_lib.c **** 	uint8_t data_ptr[20] = {0}, data_RxPtr[20] = {0}, CMD;
 101              	 .loc 2 30 0
 102 0012 07F11803 	 add r3,r7,#24
 103 0016 0022     	 movs r2,#0
 104 0018 1A60     	 str r2,[r3]
 105 001a 0433     	 adds r3,r3,#4
 106 001c 0022     	 movs r2,#0
 107 001e 1A60     	 str r2,[r3]
 108 0020 0433     	 adds r3,r3,#4
 109 0022 0022     	 movs r2,#0
 110 0024 1A60     	 str r2,[r3]
 111 0026 0433     	 adds r3,r3,#4
 112 0028 0022     	 movs r2,#0
 113 002a 1A60     	 str r2,[r3]
 114 002c 0433     	 adds r3,r3,#4
 115 002e 0022     	 movs r2,#0
 116 0030 1A60     	 str r2,[r3]
 117 0032 0433     	 adds r3,r3,#4
 118 0034 3B1D     	 adds r3,r7,#4
 119 0036 0022     	 movs r2,#0
 120 0038 1A60     	 str r2,[r3]
 121 003a 0433     	 adds r3,r3,#4
 122 003c 0022     	 movs r2,#0
 123 003e 1A60     	 str r2,[r3]
 124 0040 0433     	 adds r3,r3,#4
 125 0042 0022     	 movs r2,#0
 126 0044 1A60     	 str r2,[r3]
 127 0046 0433     	 adds r3,r3,#4
 128 0048 0022     	 movs r2,#0
 129 004a 1A60     	 str r2,[r3]
 130 004c 0433     	 adds r3,r3,#4
 131 004e 0022     	 movs r2,#0
 132 0050 1A60     	 str r2,[r3]
 133 0052 0433     	 adds r3,r3,#4
  31:../InputCapture/IOExp_lib.c **** 	uint32_t data_count;
  32:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_STATUS_t I2C_status = I2C_MASTER_STATUS_FAILURE;
 134              	 .loc 2 32 0
 135 0054 0123     	 movs r3,#1
 136 0056 87F83430 	 strb r3,[r7,#52]
  33:../InputCapture/IOExp_lib.c **** 	bool test_result = false;
 137              	 .loc 2 33 0
 138 005a 0023     	 movs r3,#0
 139 005c 87F83330 	 strb r3,[r7,#51]
  34:../InputCapture/IOExp_lib.c **** 	uint8_t pass_count=0;
 140              	 .loc 2 34 0
 141 0060 0023     	 movs r3,#0
 142 0062 87F83730 	 strb r3,[r7,#55]
  35:../InputCapture/IOExp_lib.c **** 
  36:../InputCapture/IOExp_lib.c **** 	/*********************************************TEST port 0 output, port 1 input *******************
  37:../InputCapture/IOExp_lib.c **** 	/* Configure port 0 */
  38:../InputCapture/IOExp_lib.c **** 	CMD = CONFIG_REG_PORT0;
 143              	 .loc 2 38 0
 144 0066 0623     	 movs r3,#6
 145 0068 87F83230 	 strb r3,[r7,#50]
  39:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 146              	 .loc 2 39 0
 147 006c 97F83230 	 ldrb r3,[r7,#50]
 148 0070 3B76     	 strb r3,[r7,#24]
  40:../InputCapture/IOExp_lib.c **** 	data_ptr[1] = 0x00; // data to port 0
 149              	 .loc 2 40 0
 150 0072 0023     	 movs r3,#0
 151 0074 7B76     	 strb r3,[r7,#25]
  41:../InputCapture/IOExp_lib.c **** 	data_ptr[2] = 0xFF; // data to port 1
 152              	 .loc 2 41 0
 153 0076 FF23     	 movs r3,#255
 154 0078 BB76     	 strb r3,[r7,#26]
  42:../InputCapture/IOExp_lib.c **** 	data_count = 3;
 155              	 .loc 2 42 0
 156 007a 0323     	 movs r3,#3
 157 007c FB62     	 str r3,[r7,#44]
  43:../InputCapture/IOExp_lib.c **** 
  44:../InputCapture/IOExp_lib.c **** 	/* Set Port 0 as output and port 1 as input */
  45:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 158              	 .loc 2 45 0
 159 007e CC4B     	 ldr r3,.L14
 160 0080 1B78     	 ldrb r3,[r3]
 161 0082 1D46     	 mov r5,r3
 162 0084 97F83620 	 ldrb r2,[r7,#54]
 163 0088 07F11804 	 add r4,r7,#24
 164 008c FB6A     	 ldr r3,[r7,#44]
 165 008e 0093     	 str r3,[sp]
 166 0090 97F83530 	 ldrb r3,[r7,#53]
 167 0094 0193     	 str r3,[sp,#4]
 168 0096 C748     	 ldr r0,.L14+4
 169 0098 1146     	 mov r1,r2
 170 009a 2A46     	 mov r2,r5
 171 009c 2346     	 mov r3,r4
 172 009e FFF7FEFF 	 bl I2C_MASTER_Transmit
  46:../InputCapture/IOExp_lib.c **** 
  47:../InputCapture/IOExp_lib.c **** 	//	/* Configure port 1 */
  48:../InputCapture/IOExp_lib.c **** 	//	CMD = CONFIG_REG_PORT1;
  49:../InputCapture/IOExp_lib.c **** 	//	data_ptr[0] = CMD;
  50:../InputCapture/IOExp_lib.c **** 	//	data_ptr[1] = 0xFF;
  51:../InputCapture/IOExp_lib.c **** 	//
  52:../InputCapture/IOExp_lib.c **** 	//	/* Set Port 1 as input */
  53:../InputCapture/IOExp_lib.c **** 	//	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, data_ptr, data_count, send_st
  54:../InputCapture/IOExp_lib.c **** 
  55:../InputCapture/IOExp_lib.c **** 	//make connections port 0 to port 1 pins correspondingly
  56:../InputCapture/IOExp_lib.c **** 
  57:../InputCapture/IOExp_lib.c **** 	/* port 0 pins set high */
  58:../InputCapture/IOExp_lib.c **** 	CMD = OUTPUT_REG_PORT0;
 173              	 .loc 2 58 0
 174 00a2 0223     	 movs r3,#2
 175 00a4 87F83230 	 strb r3,[r7,#50]
  59:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 176              	 .loc 2 59 0
 177 00a8 97F83230 	 ldrb r3,[r7,#50]
 178 00ac 3B76     	 strb r3,[r7,#24]
  60:../InputCapture/IOExp_lib.c **** 	data_ptr[1] = 0xFF; // data to port 0
 179              	 .loc 2 60 0
 180 00ae FF23     	 movs r3,#255
 181 00b0 7B76     	 strb r3,[r7,#25]
  61:../InputCapture/IOExp_lib.c **** 	data_count = 2;
 182              	 .loc 2 61 0
 183 00b2 0223     	 movs r3,#2
 184 00b4 FB62     	 str r3,[r7,#44]
  62:../InputCapture/IOExp_lib.c **** 
  63:../InputCapture/IOExp_lib.c **** 	/* Write port 0 all pins high */
  64:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 185              	 .loc 2 64 0
 186 00b6 BE4B     	 ldr r3,.L14
 187 00b8 1B78     	 ldrb r3,[r3]
 188 00ba 1D46     	 mov r5,r3
 189 00bc 97F83620 	 ldrb r2,[r7,#54]
 190 00c0 07F11804 	 add r4,r7,#24
 191 00c4 FB6A     	 ldr r3,[r7,#44]
 192 00c6 0093     	 str r3,[sp]
 193 00c8 97F83530 	 ldrb r3,[r7,#53]
 194 00cc 0193     	 str r3,[sp,#4]
 195 00ce B948     	 ldr r0,.L14+4
 196 00d0 1146     	 mov r1,r2
 197 00d2 2A46     	 mov r2,r5
 198 00d4 2346     	 mov r3,r4
 199 00d6 FFF7FEFF 	 bl I2C_MASTER_Transmit
  65:../InputCapture/IOExp_lib.c **** 
  66:../InputCapture/IOExp_lib.c **** 
  67:../InputCapture/IOExp_lib.c **** 	/* Read port 1 configuration */
  68:../InputCapture/IOExp_lib.c **** 	CMD = INPUT_REG_PORT1;
 200              	 .loc 2 68 0
 201 00da 0123     	 movs r3,#1
 202 00dc 87F83230 	 strb r3,[r7,#50]
  69:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 203              	 .loc 2 69 0
 204 00e0 97F83230 	 ldrb r3,[r7,#50]
 205 00e4 3B76     	 strb r3,[r7,#24]
  70:../InputCapture/IOExp_lib.c **** 	data_count = 1;
 206              	 .loc 2 70 0
 207 00e6 0123     	 movs r3,#1
 208 00e8 FB62     	 str r3,[r7,#44]
  71:../InputCapture/IOExp_lib.c **** 	send_stop = false;
 209              	 .loc 2 71 0
 210 00ea 0023     	 movs r3,#0
 211 00ec 87F83530 	 strb r3,[r7,#53]
  72:../InputCapture/IOExp_lib.c **** 
  73:../InputCapture/IOExp_lib.c **** 	/* Read port 1 */
  74:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 212              	 .loc 2 74 0
 213 00f0 AF4B     	 ldr r3,.L14
 214 00f2 1B78     	 ldrb r3,[r3]
 215 00f4 1D46     	 mov r5,r3
 216 00f6 97F83620 	 ldrb r2,[r7,#54]
 217 00fa 07F11804 	 add r4,r7,#24
 218 00fe FB6A     	 ldr r3,[r7,#44]
 219 0100 0093     	 str r3,[sp]
 220 0102 97F83530 	 ldrb r3,[r7,#53]
 221 0106 0193     	 str r3,[sp,#4]
 222 0108 AA48     	 ldr r0,.L14+4
 223 010a 1146     	 mov r1,r2
 224 010c 2A46     	 mov r2,r5
 225 010e 2346     	 mov r3,r4
 226 0110 FFF7FEFF 	 bl I2C_MASTER_Transmit
  75:../InputCapture/IOExp_lib.c **** 	while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 227              	 .loc 2 75 0
 228 0114 00BF     	 nop
 229              	.L4:
 230              	 .loc 2 75 0 is_stmt 0 discriminator 1
 231 0116 A748     	 ldr r0,.L14+4
 232 0118 FFF7FEFF 	 bl I2C_MASTER_IsTxBusy
 233 011c 0346     	 mov r3,r0
 234 011e 002B     	 cmp r3,#0
 235 0120 F9D1     	 bne .L4
  76:../InputCapture/IOExp_lib.c **** 	send_start = true;
 236              	 .loc 2 76 0 is_stmt 1
 237 0122 0123     	 movs r3,#1
 238 0124 87F83630 	 strb r3,[r7,#54]
  77:../InputCapture/IOExp_lib.c **** 	send_stop = true;
 239              	 .loc 2 77 0
 240 0128 0123     	 movs r3,#1
 241 012a 87F83530 	 strb r3,[r7,#53]
  78:../InputCapture/IOExp_lib.c **** 
  79:../InputCapture/IOExp_lib.c **** 	/* Read Port 1 pins */
  80:../InputCapture/IOExp_lib.c **** 	I2C_status = I2C_MASTER_Receive(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_RxPtr[0], data
 242              	 .loc 2 80 0
 243 012e A04B     	 ldr r3,.L14
 244 0130 1B78     	 ldrb r3,[r3]
 245 0132 1D46     	 mov r5,r3
 246 0134 97F83620 	 ldrb r2,[r7,#54]
 247 0138 3C1D     	 adds r4,r7,#4
 248 013a FB6A     	 ldr r3,[r7,#44]
 249 013c 0093     	 str r3,[sp]
 250 013e 97F83530 	 ldrb r3,[r7,#53]
 251 0142 0193     	 str r3,[sp,#4]
 252 0144 0123     	 movs r3,#1
 253 0146 0293     	 str r3,[sp,#8]
 254 0148 9A48     	 ldr r0,.L14+4
 255 014a 1146     	 mov r1,r2
 256 014c 2A46     	 mov r2,r5
 257 014e 2346     	 mov r3,r4
 258 0150 FFF7FEFF 	 bl I2C_MASTER_Receive
 259 0154 0346     	 mov r3,r0
 260 0156 87F83430 	 strb r3,[r7,#52]
  81:../InputCapture/IOExp_lib.c **** 	while(I2C_MASTER_IsTxBusy(&I2C_MASTER_0));
 261              	 .loc 2 81 0
 262 015a 00BF     	 nop
 263              	.L5:
 264              	 .loc 2 81 0 is_stmt 0 discriminator 1
 265 015c 9548     	 ldr r0,.L14+4
 266 015e FFF7FEFF 	 bl I2C_MASTER_IsTxBusy
 267 0162 0346     	 mov r3,r0
 268 0164 002B     	 cmp r3,#0
 269 0166 F9D1     	 bne .L5
  82:../InputCapture/IOExp_lib.c **** 	if(data_RxPtr[0] == 0xFF)
 270              	 .loc 2 82 0 is_stmt 1
 271 0168 3B79     	 ldrb r3,[r7,#4]
 272 016a FF2B     	 cmp r3,#255
 273 016c 07D1     	 bne .L6
  83:../InputCapture/IOExp_lib.c **** 	{
  84:../InputCapture/IOExp_lib.c **** 		test_result = true;
 274              	 .loc 2 84 0
 275 016e 0123     	 movs r3,#1
 276 0170 87F83330 	 strb r3,[r7,#51]
  85:../InputCapture/IOExp_lib.c **** 		pass_count++;
 277              	 .loc 2 85 0
 278 0174 97F83730 	 ldrb r3,[r7,#55]
 279 0178 0133     	 adds r3,r3,#1
 280 017a 87F83730 	 strb r3,[r7,#55]
 281              	.L6:
  86:../InputCapture/IOExp_lib.c **** 	}
  87:../InputCapture/IOExp_lib.c **** 
  88:../InputCapture/IOExp_lib.c **** 	/* set alternate pins of Port 0 as high and low */
  89:../InputCapture/IOExp_lib.c **** 	/* P0.0 high, P0.1 low, P0.2 high, P0.3 low, etc.. */
  90:../InputCapture/IOExp_lib.c **** 
  91:../InputCapture/IOExp_lib.c **** 	/* port 0 pins set high */
  92:../InputCapture/IOExp_lib.c **** 	CMD = OUTPUT_REG_PORT0;
 282              	 .loc 2 92 0
 283 017e 0223     	 movs r3,#2
 284 0180 87F83230 	 strb r3,[r7,#50]
  93:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 285              	 .loc 2 93 0
 286 0184 97F83230 	 ldrb r3,[r7,#50]
 287 0188 3B76     	 strb r3,[r7,#24]
  94:../InputCapture/IOExp_lib.c **** 	data_ptr[1] = 0xAA; // data to port 0
 288              	 .loc 2 94 0
 289 018a AA23     	 movs r3,#170
 290 018c 7B76     	 strb r3,[r7,#25]
  95:../InputCapture/IOExp_lib.c **** 	data_count = 2;
 291              	 .loc 2 95 0
 292 018e 0223     	 movs r3,#2
 293 0190 FB62     	 str r3,[r7,#44]
  96:../InputCapture/IOExp_lib.c **** 	send_start = true;
 294              	 .loc 2 96 0
 295 0192 0123     	 movs r3,#1
 296 0194 87F83630 	 strb r3,[r7,#54]
  97:../InputCapture/IOExp_lib.c **** 
  98:../InputCapture/IOExp_lib.c **** 	/* Write port 0 alternate pins high */
  99:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 297              	 .loc 2 99 0
 298 0198 854B     	 ldr r3,.L14
 299 019a 1B78     	 ldrb r3,[r3]
 300 019c 1D46     	 mov r5,r3
 301 019e 97F83620 	 ldrb r2,[r7,#54]
 302 01a2 07F11804 	 add r4,r7,#24
 303 01a6 FB6A     	 ldr r3,[r7,#44]
 304 01a8 0093     	 str r3,[sp]
 305 01aa 97F83530 	 ldrb r3,[r7,#53]
 306 01ae 0193     	 str r3,[sp,#4]
 307 01b0 8048     	 ldr r0,.L14+4
 308 01b2 1146     	 mov r1,r2
 309 01b4 2A46     	 mov r2,r5
 310 01b6 2346     	 mov r3,r4
 311 01b8 FFF7FEFF 	 bl I2C_MASTER_Transmit
 100:../InputCapture/IOExp_lib.c **** 
 101:../InputCapture/IOExp_lib.c **** 	/* Read port 1 configuration */
 102:../InputCapture/IOExp_lib.c **** 	CMD = INPUT_REG_PORT1;
 312              	 .loc 2 102 0
 313 01bc 0123     	 movs r3,#1
 314 01be 87F83230 	 strb r3,[r7,#50]
 103:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 315              	 .loc 2 103 0
 316 01c2 97F83230 	 ldrb r3,[r7,#50]
 317 01c6 3B76     	 strb r3,[r7,#24]
 104:../InputCapture/IOExp_lib.c **** 	data_count = 1;
 318              	 .loc 2 104 0
 319 01c8 0123     	 movs r3,#1
 320 01ca FB62     	 str r3,[r7,#44]
 105:../InputCapture/IOExp_lib.c **** 	send_stop = false;
 321              	 .loc 2 105 0
 322 01cc 0023     	 movs r3,#0
 323 01ce 87F83530 	 strb r3,[r7,#53]
 106:../InputCapture/IOExp_lib.c **** 
 107:../InputCapture/IOExp_lib.c **** 	/* Read port 1 */
 108:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 324              	 .loc 2 108 0
 325 01d2 774B     	 ldr r3,.L14
 326 01d4 1B78     	 ldrb r3,[r3]
 327 01d6 1D46     	 mov r5,r3
 328 01d8 97F83620 	 ldrb r2,[r7,#54]
 329 01dc 07F11804 	 add r4,r7,#24
 330 01e0 FB6A     	 ldr r3,[r7,#44]
 331 01e2 0093     	 str r3,[sp]
 332 01e4 97F83530 	 ldrb r3,[r7,#53]
 333 01e8 0193     	 str r3,[sp,#4]
 334 01ea 7248     	 ldr r0,.L14+4
 335 01ec 1146     	 mov r1,r2
 336 01ee 2A46     	 mov r2,r5
 337 01f0 2346     	 mov r3,r4
 338 01f2 FFF7FEFF 	 bl I2C_MASTER_Transmit
 109:../InputCapture/IOExp_lib.c **** 
 110:../InputCapture/IOExp_lib.c **** 	send_start = true;
 339              	 .loc 2 110 0
 340 01f6 0123     	 movs r3,#1
 341 01f8 87F83630 	 strb r3,[r7,#54]
 111:../InputCapture/IOExp_lib.c **** 	send_stop = true;
 342              	 .loc 2 111 0
 343 01fc 0123     	 movs r3,#1
 344 01fe 87F83530 	 strb r3,[r7,#53]
 112:../InputCapture/IOExp_lib.c **** 
 113:../InputCapture/IOExp_lib.c **** 	/* Read Port 1 pins */
 114:../InputCapture/IOExp_lib.c **** 	I2C_status = I2C_MASTER_Receive(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_RxPtr[0], data
 345              	 .loc 2 114 0
 346 0202 6B4B     	 ldr r3,.L14
 347 0204 1B78     	 ldrb r3,[r3]
 348 0206 1D46     	 mov r5,r3
 349 0208 97F83620 	 ldrb r2,[r7,#54]
 350 020c 3C1D     	 adds r4,r7,#4
 351 020e FB6A     	 ldr r3,[r7,#44]
 352 0210 0093     	 str r3,[sp]
 353 0212 97F83530 	 ldrb r3,[r7,#53]
 354 0216 0193     	 str r3,[sp,#4]
 355 0218 0123     	 movs r3,#1
 356 021a 0293     	 str r3,[sp,#8]
 357 021c 6548     	 ldr r0,.L14+4
 358 021e 1146     	 mov r1,r2
 359 0220 2A46     	 mov r2,r5
 360 0222 2346     	 mov r3,r4
 361 0224 FFF7FEFF 	 bl I2C_MASTER_Receive
 362 0228 0346     	 mov r3,r0
 363 022a 87F83430 	 strb r3,[r7,#52]
 115:../InputCapture/IOExp_lib.c **** 
 116:../InputCapture/IOExp_lib.c **** 	if(data_RxPtr[0] == 0xAA)
 364              	 .loc 2 116 0
 365 022e 3B79     	 ldrb r3,[r7,#4]
 366 0230 AA2B     	 cmp r3,#170
 367 0232 07D1     	 bne .L7
 117:../InputCapture/IOExp_lib.c **** 	{
 118:../InputCapture/IOExp_lib.c **** 		test_result = true;
 368              	 .loc 2 118 0
 369 0234 0123     	 movs r3,#1
 370 0236 87F83330 	 strb r3,[r7,#51]
 119:../InputCapture/IOExp_lib.c **** 		pass_count++;
 371              	 .loc 2 119 0
 372 023a 97F83730 	 ldrb r3,[r7,#55]
 373 023e 0133     	 adds r3,r3,#1
 374 0240 87F83730 	 strb r3,[r7,#55]
 375              	.L7:
 120:../InputCapture/IOExp_lib.c **** 	}
 121:../InputCapture/IOExp_lib.c **** 
 122:../InputCapture/IOExp_lib.c **** 	/* set alternate pins of Port 0 as high and low */
 123:../InputCapture/IOExp_lib.c **** 	/* P0.0 high, P0.1 low, P0.2 high, P0.3 low, etc.. */
 124:../InputCapture/IOExp_lib.c **** 
 125:../InputCapture/IOExp_lib.c **** 	/* port 0 pins set high */
 126:../InputCapture/IOExp_lib.c **** 	CMD = OUTPUT_REG_PORT0;
 376              	 .loc 2 126 0
 377 0244 0223     	 movs r3,#2
 378 0246 87F83230 	 strb r3,[r7,#50]
 127:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 379              	 .loc 2 127 0
 380 024a 97F83230 	 ldrb r3,[r7,#50]
 381 024e 3B76     	 strb r3,[r7,#24]
 128:../InputCapture/IOExp_lib.c **** 	data_ptr[1] = 0x55; // data to port 0
 382              	 .loc 2 128 0
 383 0250 5523     	 movs r3,#85
 384 0252 7B76     	 strb r3,[r7,#25]
 129:../InputCapture/IOExp_lib.c **** 	data_count = 2;
 385              	 .loc 2 129 0
 386 0254 0223     	 movs r3,#2
 387 0256 FB62     	 str r3,[r7,#44]
 130:../InputCapture/IOExp_lib.c **** 	send_start = true;
 388              	 .loc 2 130 0
 389 0258 0123     	 movs r3,#1
 390 025a 87F83630 	 strb r3,[r7,#54]
 131:../InputCapture/IOExp_lib.c **** 
 132:../InputCapture/IOExp_lib.c **** 	/* Write port 0 alternate pins high */
 133:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 391              	 .loc 2 133 0
 392 025e 544B     	 ldr r3,.L14
 393 0260 1B78     	 ldrb r3,[r3]
 394 0262 1D46     	 mov r5,r3
 395 0264 97F83620 	 ldrb r2,[r7,#54]
 396 0268 07F11804 	 add r4,r7,#24
 397 026c FB6A     	 ldr r3,[r7,#44]
 398 026e 0093     	 str r3,[sp]
 399 0270 97F83530 	 ldrb r3,[r7,#53]
 400 0274 0193     	 str r3,[sp,#4]
 401 0276 4F48     	 ldr r0,.L14+4
 402 0278 1146     	 mov r1,r2
 403 027a 2A46     	 mov r2,r5
 404 027c 2346     	 mov r3,r4
 405 027e FFF7FEFF 	 bl I2C_MASTER_Transmit
 134:../InputCapture/IOExp_lib.c **** 
 135:../InputCapture/IOExp_lib.c **** 	/* Read port 1 configuration */
 136:../InputCapture/IOExp_lib.c **** 	CMD = INPUT_REG_PORT1;
 406              	 .loc 2 136 0
 407 0282 0123     	 movs r3,#1
 408 0284 87F83230 	 strb r3,[r7,#50]
 137:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 409              	 .loc 2 137 0
 410 0288 97F83230 	 ldrb r3,[r7,#50]
 411 028c 3B76     	 strb r3,[r7,#24]
 138:../InputCapture/IOExp_lib.c **** 	data_count = 1;
 412              	 .loc 2 138 0
 413 028e 0123     	 movs r3,#1
 414 0290 FB62     	 str r3,[r7,#44]
 139:../InputCapture/IOExp_lib.c **** 	send_stop = false;
 415              	 .loc 2 139 0
 416 0292 0023     	 movs r3,#0
 417 0294 87F83530 	 strb r3,[r7,#53]
 140:../InputCapture/IOExp_lib.c **** 
 141:../InputCapture/IOExp_lib.c **** 	/* Read port 1 */
 142:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 418              	 .loc 2 142 0
 419 0298 454B     	 ldr r3,.L14
 420 029a 1B78     	 ldrb r3,[r3]
 421 029c 1D46     	 mov r5,r3
 422 029e 97F83620 	 ldrb r2,[r7,#54]
 423 02a2 07F11804 	 add r4,r7,#24
 424 02a6 FB6A     	 ldr r3,[r7,#44]
 425 02a8 0093     	 str r3,[sp]
 426 02aa 97F83530 	 ldrb r3,[r7,#53]
 427 02ae 0193     	 str r3,[sp,#4]
 428 02b0 4048     	 ldr r0,.L14+4
 429 02b2 1146     	 mov r1,r2
 430 02b4 2A46     	 mov r2,r5
 431 02b6 2346     	 mov r3,r4
 432 02b8 FFF7FEFF 	 bl I2C_MASTER_Transmit
 143:../InputCapture/IOExp_lib.c **** 
 144:../InputCapture/IOExp_lib.c **** 	send_start = true;
 433              	 .loc 2 144 0
 434 02bc 0123     	 movs r3,#1
 435 02be 87F83630 	 strb r3,[r7,#54]
 145:../InputCapture/IOExp_lib.c **** 	send_stop = true;
 436              	 .loc 2 145 0
 437 02c2 0123     	 movs r3,#1
 438 02c4 87F83530 	 strb r3,[r7,#53]
 146:../InputCapture/IOExp_lib.c **** 
 147:../InputCapture/IOExp_lib.c **** 	/* Read Port 1 pins */
 148:../InputCapture/IOExp_lib.c **** 	I2C_status = I2C_MASTER_Receive(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_RxPtr[0], data
 439              	 .loc 2 148 0
 440 02c8 394B     	 ldr r3,.L14
 441 02ca 1B78     	 ldrb r3,[r3]
 442 02cc 1D46     	 mov r5,r3
 443 02ce 97F83620 	 ldrb r2,[r7,#54]
 444 02d2 3C1D     	 adds r4,r7,#4
 445 02d4 FB6A     	 ldr r3,[r7,#44]
 446 02d6 0093     	 str r3,[sp]
 447 02d8 97F83530 	 ldrb r3,[r7,#53]
 448 02dc 0193     	 str r3,[sp,#4]
 449 02de 0123     	 movs r3,#1
 450 02e0 0293     	 str r3,[sp,#8]
 451 02e2 3448     	 ldr r0,.L14+4
 452 02e4 1146     	 mov r1,r2
 453 02e6 2A46     	 mov r2,r5
 454 02e8 2346     	 mov r3,r4
 455 02ea FFF7FEFF 	 bl I2C_MASTER_Receive
 456 02ee 0346     	 mov r3,r0
 457 02f0 87F83430 	 strb r3,[r7,#52]
 149:../InputCapture/IOExp_lib.c **** 
 150:../InputCapture/IOExp_lib.c **** 	if(data_RxPtr[0] == 0x55)
 458              	 .loc 2 150 0
 459 02f4 3B79     	 ldrb r3,[r7,#4]
 460 02f6 552B     	 cmp r3,#85
 461 02f8 07D1     	 bne .L8
 151:../InputCapture/IOExp_lib.c **** 	{
 152:../InputCapture/IOExp_lib.c **** 		test_result = true;
 462              	 .loc 2 152 0
 463 02fa 0123     	 movs r3,#1
 464 02fc 87F83330 	 strb r3,[r7,#51]
 153:../InputCapture/IOExp_lib.c **** 		pass_count++;
 465              	 .loc 2 153 0
 466 0300 97F83730 	 ldrb r3,[r7,#55]
 467 0304 0133     	 adds r3,r3,#1
 468 0306 87F83730 	 strb r3,[r7,#55]
 469              	.L8:
 154:../InputCapture/IOExp_lib.c **** 	}
 155:../InputCapture/IOExp_lib.c **** 
 156:../InputCapture/IOExp_lib.c **** 
 157:../InputCapture/IOExp_lib.c **** 	/********************************************* END TEST 1 ****************************************
 158:../InputCapture/IOExp_lib.c **** 
 159:../InputCapture/IOExp_lib.c **** 	/*********************************************TEST port 0 output, port 1 input *******************
 160:../InputCapture/IOExp_lib.c **** 	/* Configure port 1 */
 161:../InputCapture/IOExp_lib.c **** 	CMD = CONFIG_REG_PORT1;
 470              	 .loc 2 161 0
 471 030a 0723     	 movs r3,#7
 472 030c 87F83230 	 strb r3,[r7,#50]
 162:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 473              	 .loc 2 162 0
 474 0310 97F83230 	 ldrb r3,[r7,#50]
 475 0314 3B76     	 strb r3,[r7,#24]
 163:../InputCapture/IOExp_lib.c **** 	data_ptr[1] = 0x00; // data to port 1
 476              	 .loc 2 163 0
 477 0316 0023     	 movs r3,#0
 478 0318 7B76     	 strb r3,[r7,#25]
 164:../InputCapture/IOExp_lib.c **** 	data_ptr[2] = 0xFF; // data to port 0
 479              	 .loc 2 164 0
 480 031a FF23     	 movs r3,#255
 481 031c BB76     	 strb r3,[r7,#26]
 165:../InputCapture/IOExp_lib.c **** 	data_count = 3;
 482              	 .loc 2 165 0
 483 031e 0323     	 movs r3,#3
 484 0320 FB62     	 str r3,[r7,#44]
 166:../InputCapture/IOExp_lib.c **** 
 167:../InputCapture/IOExp_lib.c **** 	/* Set Port 1 as output and port 0 as input */
 168:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 485              	 .loc 2 168 0
 486 0322 234B     	 ldr r3,.L14
 487 0324 1B78     	 ldrb r3,[r3]
 488 0326 1D46     	 mov r5,r3
 489 0328 97F83620 	 ldrb r2,[r7,#54]
 490 032c 07F11804 	 add r4,r7,#24
 491 0330 FB6A     	 ldr r3,[r7,#44]
 492 0332 0093     	 str r3,[sp]
 493 0334 97F83530 	 ldrb r3,[r7,#53]
 494 0338 0193     	 str r3,[sp,#4]
 495 033a 1E48     	 ldr r0,.L14+4
 496 033c 1146     	 mov r1,r2
 497 033e 2A46     	 mov r2,r5
 498 0340 2346     	 mov r3,r4
 499 0342 FFF7FEFF 	 bl I2C_MASTER_Transmit
 169:../InputCapture/IOExp_lib.c **** 
 170:../InputCapture/IOExp_lib.c **** 	//	/* Configure port 0 */
 171:../InputCapture/IOExp_lib.c **** 	//	CMD = CONFIG_REG_PORT0;
 172:../InputCapture/IOExp_lib.c **** 	//	data_ptr[0] = CMD;
 173:../InputCapture/IOExp_lib.c **** 	//	data_ptr[1] = 0xFF;
 174:../InputCapture/IOExp_lib.c **** 	//
 175:../InputCapture/IOExp_lib.c **** 	//	/* Set Port 0 as input */
 176:../InputCapture/IOExp_lib.c **** 	//	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, data_ptr, data_count, send_st
 177:../InputCapture/IOExp_lib.c **** 
 178:../InputCapture/IOExp_lib.c **** 	//make connections port 0 to port 1 pins correspondingly
 179:../InputCapture/IOExp_lib.c **** 
 180:../InputCapture/IOExp_lib.c **** 	/* port 1 pins set high */
 181:../InputCapture/IOExp_lib.c **** 	CMD = OUTPUT_REG_PORT1;
 500              	 .loc 2 181 0
 501 0346 0323     	 movs r3,#3
 502 0348 87F83230 	 strb r3,[r7,#50]
 182:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 503              	 .loc 2 182 0
 504 034c 97F83230 	 ldrb r3,[r7,#50]
 505 0350 3B76     	 strb r3,[r7,#24]
 183:../InputCapture/IOExp_lib.c **** 	data_ptr[1] = 0xFF; // data to port 0
 506              	 .loc 2 183 0
 507 0352 FF23     	 movs r3,#255
 508 0354 7B76     	 strb r3,[r7,#25]
 184:../InputCapture/IOExp_lib.c **** 	data_count = 2;
 509              	 .loc 2 184 0
 510 0356 0223     	 movs r3,#2
 511 0358 FB62     	 str r3,[r7,#44]
 185:../InputCapture/IOExp_lib.c **** 
 186:../InputCapture/IOExp_lib.c **** 	/* Write port 1 all pins high */
 187:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 512              	 .loc 2 187 0
 513 035a 154B     	 ldr r3,.L14
 514 035c 1B78     	 ldrb r3,[r3]
 515 035e 1D46     	 mov r5,r3
 516 0360 97F83620 	 ldrb r2,[r7,#54]
 517 0364 07F11804 	 add r4,r7,#24
 518 0368 FB6A     	 ldr r3,[r7,#44]
 519 036a 0093     	 str r3,[sp]
 520 036c 97F83530 	 ldrb r3,[r7,#53]
 521 0370 0193     	 str r3,[sp,#4]
 522 0372 1048     	 ldr r0,.L14+4
 523 0374 1146     	 mov r1,r2
 524 0376 2A46     	 mov r2,r5
 525 0378 2346     	 mov r3,r4
 526 037a FFF7FEFF 	 bl I2C_MASTER_Transmit
 188:../InputCapture/IOExp_lib.c **** 
 189:../InputCapture/IOExp_lib.c **** 
 190:../InputCapture/IOExp_lib.c **** 	/* Read port 0 configuration */
 191:../InputCapture/IOExp_lib.c **** 	CMD = INPUT_REG_PORT0;
 527              	 .loc 2 191 0
 528 037e 0023     	 movs r3,#0
 529 0380 87F83230 	 strb r3,[r7,#50]
 192:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 530              	 .loc 2 192 0
 531 0384 97F83230 	 ldrb r3,[r7,#50]
 532 0388 3B76     	 strb r3,[r7,#24]
 193:../InputCapture/IOExp_lib.c **** 	data_count = 1;
 533              	 .loc 2 193 0
 534 038a 0123     	 movs r3,#1
 535 038c FB62     	 str r3,[r7,#44]
 194:../InputCapture/IOExp_lib.c **** 	send_stop = false;
 536              	 .loc 2 194 0
 537 038e 0023     	 movs r3,#0
 538 0390 87F83530 	 strb r3,[r7,#53]
 195:../InputCapture/IOExp_lib.c **** 
 196:../InputCapture/IOExp_lib.c **** 	/* Read port 0 */
 197:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 539              	 .loc 2 197 0
 540 0394 064B     	 ldr r3,.L14
 541 0396 1B78     	 ldrb r3,[r3]
 542 0398 1D46     	 mov r5,r3
 543 039a 97F83620 	 ldrb r2,[r7,#54]
 544 039e 07F11804 	 add r4,r7,#24
 545 03a2 FB6A     	 ldr r3,[r7,#44]
 546 03a4 0093     	 str r3,[sp]
 547 03a6 97F83530 	 ldrb r3,[r7,#53]
 548 03aa 0193     	 str r3,[sp,#4]
 549 03ac 04E0     	 b .L15
 550              	.L16:
 551 03ae 00BF     	 .align 2
 552              	.L14:
 553 03b0 00000000 	 .word I2C_SLAVE_ADDRESS
 554 03b4 00000000 	 .word I2C_MASTER_0
 555              	.L15:
 556 03b8 7C48     	 ldr r0,.L17
 557 03ba 1146     	 mov r1,r2
 558 03bc 2A46     	 mov r2,r5
 559 03be 2346     	 mov r3,r4
 560 03c0 FFF7FEFF 	 bl I2C_MASTER_Transmit
 198:../InputCapture/IOExp_lib.c **** 
 199:../InputCapture/IOExp_lib.c **** 	send_start = true;
 561              	 .loc 2 199 0
 562 03c4 0123     	 movs r3,#1
 563 03c6 87F83630 	 strb r3,[r7,#54]
 200:../InputCapture/IOExp_lib.c **** 	send_stop = true;
 564              	 .loc 2 200 0
 565 03ca 0123     	 movs r3,#1
 566 03cc 87F83530 	 strb r3,[r7,#53]
 201:../InputCapture/IOExp_lib.c **** 
 202:../InputCapture/IOExp_lib.c **** 	/* Read Port 1 pins */
 203:../InputCapture/IOExp_lib.c **** 	I2C_status = I2C_MASTER_Receive(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_RxPtr[0], data
 567              	 .loc 2 203 0
 568 03d0 774B     	 ldr r3,.L17+4
 569 03d2 1B78     	 ldrb r3,[r3]
 570 03d4 1D46     	 mov r5,r3
 571 03d6 97F83620 	 ldrb r2,[r7,#54]
 572 03da 3C1D     	 adds r4,r7,#4
 573 03dc FB6A     	 ldr r3,[r7,#44]
 574 03de 0093     	 str r3,[sp]
 575 03e0 97F83530 	 ldrb r3,[r7,#53]
 576 03e4 0193     	 str r3,[sp,#4]
 577 03e6 0123     	 movs r3,#1
 578 03e8 0293     	 str r3,[sp,#8]
 579 03ea 7048     	 ldr r0,.L17
 580 03ec 1146     	 mov r1,r2
 581 03ee 2A46     	 mov r2,r5
 582 03f0 2346     	 mov r3,r4
 583 03f2 FFF7FEFF 	 bl I2C_MASTER_Receive
 584 03f6 0346     	 mov r3,r0
 585 03f8 87F83430 	 strb r3,[r7,#52]
 204:../InputCapture/IOExp_lib.c **** 
 205:../InputCapture/IOExp_lib.c **** 	if(data_RxPtr[0] == 0xFF)
 586              	 .loc 2 205 0
 587 03fc 3B79     	 ldrb r3,[r7,#4]
 588 03fe FF2B     	 cmp r3,#255
 589 0400 07D1     	 bne .L9
 206:../InputCapture/IOExp_lib.c **** 	{
 207:../InputCapture/IOExp_lib.c **** 		test_result = true;
 590              	 .loc 2 207 0
 591 0402 0123     	 movs r3,#1
 592 0404 87F83330 	 strb r3,[r7,#51]
 208:../InputCapture/IOExp_lib.c **** 		pass_count++;
 593              	 .loc 2 208 0
 594 0408 97F83730 	 ldrb r3,[r7,#55]
 595 040c 0133     	 adds r3,r3,#1
 596 040e 87F83730 	 strb r3,[r7,#55]
 597              	.L9:
 209:../InputCapture/IOExp_lib.c **** 	}
 210:../InputCapture/IOExp_lib.c **** 
 211:../InputCapture/IOExp_lib.c **** 	/* set alternate pins of Port 0 as high and low */
 212:../InputCapture/IOExp_lib.c **** 	/* P0.0 high, P0.1 low, P0.2 high, P0.3 low, etc.. */
 213:../InputCapture/IOExp_lib.c **** 
 214:../InputCapture/IOExp_lib.c **** 	/* port 1 pins set high */
 215:../InputCapture/IOExp_lib.c **** 	CMD = OUTPUT_REG_PORT1;
 598              	 .loc 2 215 0
 599 0412 0323     	 movs r3,#3
 600 0414 87F83230 	 strb r3,[r7,#50]
 216:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 601              	 .loc 2 216 0
 602 0418 97F83230 	 ldrb r3,[r7,#50]
 603 041c 3B76     	 strb r3,[r7,#24]
 217:../InputCapture/IOExp_lib.c **** 	data_ptr[1] = 0xAA; // data to port 0
 604              	 .loc 2 217 0
 605 041e AA23     	 movs r3,#170
 606 0420 7B76     	 strb r3,[r7,#25]
 218:../InputCapture/IOExp_lib.c **** 	data_count = 2;
 607              	 .loc 2 218 0
 608 0422 0223     	 movs r3,#2
 609 0424 FB62     	 str r3,[r7,#44]
 219:../InputCapture/IOExp_lib.c **** 	send_start = true;
 610              	 .loc 2 219 0
 611 0426 0123     	 movs r3,#1
 612 0428 87F83630 	 strb r3,[r7,#54]
 220:../InputCapture/IOExp_lib.c **** 
 221:../InputCapture/IOExp_lib.c **** 	/* Write port 1 alternate pins high */
 222:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 613              	 .loc 2 222 0
 614 042c 604B     	 ldr r3,.L17+4
 615 042e 1B78     	 ldrb r3,[r3]
 616 0430 1D46     	 mov r5,r3
 617 0432 97F83620 	 ldrb r2,[r7,#54]
 618 0436 07F11804 	 add r4,r7,#24
 619 043a FB6A     	 ldr r3,[r7,#44]
 620 043c 0093     	 str r3,[sp]
 621 043e 97F83530 	 ldrb r3,[r7,#53]
 622 0442 0193     	 str r3,[sp,#4]
 623 0444 5948     	 ldr r0,.L17
 624 0446 1146     	 mov r1,r2
 625 0448 2A46     	 mov r2,r5
 626 044a 2346     	 mov r3,r4
 627 044c FFF7FEFF 	 bl I2C_MASTER_Transmit
 223:../InputCapture/IOExp_lib.c **** 
 224:../InputCapture/IOExp_lib.c **** 	/* Read port 0 configuration */
 225:../InputCapture/IOExp_lib.c **** 	CMD = INPUT_REG_PORT0;
 628              	 .loc 2 225 0
 629 0450 0023     	 movs r3,#0
 630 0452 87F83230 	 strb r3,[r7,#50]
 226:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 631              	 .loc 2 226 0
 632 0456 97F83230 	 ldrb r3,[r7,#50]
 633 045a 3B76     	 strb r3,[r7,#24]
 227:../InputCapture/IOExp_lib.c **** 	data_count = 1;
 634              	 .loc 2 227 0
 635 045c 0123     	 movs r3,#1
 636 045e FB62     	 str r3,[r7,#44]
 228:../InputCapture/IOExp_lib.c **** 	send_stop = false;
 637              	 .loc 2 228 0
 638 0460 0023     	 movs r3,#0
 639 0462 87F83530 	 strb r3,[r7,#53]
 229:../InputCapture/IOExp_lib.c **** 
 230:../InputCapture/IOExp_lib.c **** 	/* Read port 0 */
 231:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 640              	 .loc 2 231 0
 641 0466 524B     	 ldr r3,.L17+4
 642 0468 1B78     	 ldrb r3,[r3]
 643 046a 1D46     	 mov r5,r3
 644 046c 97F83620 	 ldrb r2,[r7,#54]
 645 0470 07F11804 	 add r4,r7,#24
 646 0474 FB6A     	 ldr r3,[r7,#44]
 647 0476 0093     	 str r3,[sp]
 648 0478 97F83530 	 ldrb r3,[r7,#53]
 649 047c 0193     	 str r3,[sp,#4]
 650 047e 4B48     	 ldr r0,.L17
 651 0480 1146     	 mov r1,r2
 652 0482 2A46     	 mov r2,r5
 653 0484 2346     	 mov r3,r4
 654 0486 FFF7FEFF 	 bl I2C_MASTER_Transmit
 232:../InputCapture/IOExp_lib.c **** 
 233:../InputCapture/IOExp_lib.c **** 	send_start = true;
 655              	 .loc 2 233 0
 656 048a 0123     	 movs r3,#1
 657 048c 87F83630 	 strb r3,[r7,#54]
 234:../InputCapture/IOExp_lib.c **** 	send_stop = true;
 658              	 .loc 2 234 0
 659 0490 0123     	 movs r3,#1
 660 0492 87F83530 	 strb r3,[r7,#53]
 235:../InputCapture/IOExp_lib.c **** 
 236:../InputCapture/IOExp_lib.c **** 	/* Read Port 0 pins */
 237:../InputCapture/IOExp_lib.c **** 	I2C_status = I2C_MASTER_Receive(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_RxPtr[0], data
 661              	 .loc 2 237 0
 662 0496 464B     	 ldr r3,.L17+4
 663 0498 1B78     	 ldrb r3,[r3]
 664 049a 1D46     	 mov r5,r3
 665 049c 97F83620 	 ldrb r2,[r7,#54]
 666 04a0 3C1D     	 adds r4,r7,#4
 667 04a2 FB6A     	 ldr r3,[r7,#44]
 668 04a4 0093     	 str r3,[sp]
 669 04a6 97F83530 	 ldrb r3,[r7,#53]
 670 04aa 0193     	 str r3,[sp,#4]
 671 04ac 0123     	 movs r3,#1
 672 04ae 0293     	 str r3,[sp,#8]
 673 04b0 3E48     	 ldr r0,.L17
 674 04b2 1146     	 mov r1,r2
 675 04b4 2A46     	 mov r2,r5
 676 04b6 2346     	 mov r3,r4
 677 04b8 FFF7FEFF 	 bl I2C_MASTER_Receive
 678 04bc 0346     	 mov r3,r0
 679 04be 87F83430 	 strb r3,[r7,#52]
 238:../InputCapture/IOExp_lib.c **** 
 239:../InputCapture/IOExp_lib.c **** 	if(data_RxPtr[0] == 0xAA)
 680              	 .loc 2 239 0
 681 04c2 3B79     	 ldrb r3,[r7,#4]
 682 04c4 AA2B     	 cmp r3,#170
 683 04c6 07D1     	 bne .L10
 240:../InputCapture/IOExp_lib.c **** 	{
 241:../InputCapture/IOExp_lib.c **** 		test_result = true;
 684              	 .loc 2 241 0
 685 04c8 0123     	 movs r3,#1
 686 04ca 87F83330 	 strb r3,[r7,#51]
 242:../InputCapture/IOExp_lib.c **** 		pass_count++;
 687              	 .loc 2 242 0
 688 04ce 97F83730 	 ldrb r3,[r7,#55]
 689 04d2 0133     	 adds r3,r3,#1
 690 04d4 87F83730 	 strb r3,[r7,#55]
 691              	.L10:
 243:../InputCapture/IOExp_lib.c **** 	}
 244:../InputCapture/IOExp_lib.c **** 
 245:../InputCapture/IOExp_lib.c **** 	/* set alternate pins of Port 0 as high and low */
 246:../InputCapture/IOExp_lib.c **** 	/* P0.0 high, P0.1 low, P0.2 high, P0.3 low, etc.. */
 247:../InputCapture/IOExp_lib.c **** 
 248:../InputCapture/IOExp_lib.c **** 	/* port 1 pins set high */
 249:../InputCapture/IOExp_lib.c **** 	CMD = OUTPUT_REG_PORT1;
 692              	 .loc 2 249 0
 693 04d8 0323     	 movs r3,#3
 694 04da 87F83230 	 strb r3,[r7,#50]
 250:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 695              	 .loc 2 250 0
 696 04de 97F83230 	 ldrb r3,[r7,#50]
 697 04e2 3B76     	 strb r3,[r7,#24]
 251:../InputCapture/IOExp_lib.c **** 	data_ptr[1] = 0x55; // data to port 1
 698              	 .loc 2 251 0
 699 04e4 5523     	 movs r3,#85
 700 04e6 7B76     	 strb r3,[r7,#25]
 252:../InputCapture/IOExp_lib.c **** 	data_count = 2;
 701              	 .loc 2 252 0
 702 04e8 0223     	 movs r3,#2
 703 04ea FB62     	 str r3,[r7,#44]
 253:../InputCapture/IOExp_lib.c **** 	send_start = true;
 704              	 .loc 2 253 0
 705 04ec 0123     	 movs r3,#1
 706 04ee 87F83630 	 strb r3,[r7,#54]
 254:../InputCapture/IOExp_lib.c **** 
 255:../InputCapture/IOExp_lib.c **** 	/* Write port 1 alternate pins high */
 256:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 707              	 .loc 2 256 0
 708 04f2 2F4B     	 ldr r3,.L17+4
 709 04f4 1B78     	 ldrb r3,[r3]
 710 04f6 1D46     	 mov r5,r3
 711 04f8 97F83620 	 ldrb r2,[r7,#54]
 712 04fc 07F11804 	 add r4,r7,#24
 713 0500 FB6A     	 ldr r3,[r7,#44]
 714 0502 0093     	 str r3,[sp]
 715 0504 97F83530 	 ldrb r3,[r7,#53]
 716 0508 0193     	 str r3,[sp,#4]
 717 050a 2848     	 ldr r0,.L17
 718 050c 1146     	 mov r1,r2
 719 050e 2A46     	 mov r2,r5
 720 0510 2346     	 mov r3,r4
 721 0512 FFF7FEFF 	 bl I2C_MASTER_Transmit
 257:../InputCapture/IOExp_lib.c **** 
 258:../InputCapture/IOExp_lib.c **** 	/* Read port 0 configuration */
 259:../InputCapture/IOExp_lib.c **** 	CMD = INPUT_REG_PORT1;
 722              	 .loc 2 259 0
 723 0516 0123     	 movs r3,#1
 724 0518 87F83230 	 strb r3,[r7,#50]
 260:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 725              	 .loc 2 260 0
 726 051c 97F83230 	 ldrb r3,[r7,#50]
 727 0520 3B76     	 strb r3,[r7,#24]
 261:../InputCapture/IOExp_lib.c **** 	data_count = 1;
 728              	 .loc 2 261 0
 729 0522 0123     	 movs r3,#1
 730 0524 FB62     	 str r3,[r7,#44]
 262:../InputCapture/IOExp_lib.c **** 	send_stop = false;
 731              	 .loc 2 262 0
 732 0526 0023     	 movs r3,#0
 733 0528 87F83530 	 strb r3,[r7,#53]
 263:../InputCapture/IOExp_lib.c **** 
 264:../InputCapture/IOExp_lib.c **** 	/* Read port 0 */
 265:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_ptr[0], data_count, send_s
 734              	 .loc 2 265 0
 735 052c 204B     	 ldr r3,.L17+4
 736 052e 1B78     	 ldrb r3,[r3]
 737 0530 1D46     	 mov r5,r3
 738 0532 97F83620 	 ldrb r2,[r7,#54]
 739 0536 07F11804 	 add r4,r7,#24
 740 053a FB6A     	 ldr r3,[r7,#44]
 741 053c 0093     	 str r3,[sp]
 742 053e 97F83530 	 ldrb r3,[r7,#53]
 743 0542 0193     	 str r3,[sp,#4]
 744 0544 1948     	 ldr r0,.L17
 745 0546 1146     	 mov r1,r2
 746 0548 2A46     	 mov r2,r5
 747 054a 2346     	 mov r3,r4
 748 054c FFF7FEFF 	 bl I2C_MASTER_Transmit
 266:../InputCapture/IOExp_lib.c **** 
 267:../InputCapture/IOExp_lib.c **** 	send_start = true;
 749              	 .loc 2 267 0
 750 0550 0123     	 movs r3,#1
 751 0552 87F83630 	 strb r3,[r7,#54]
 268:../InputCapture/IOExp_lib.c **** 	send_stop = true;
 752              	 .loc 2 268 0
 753 0556 0123     	 movs r3,#1
 754 0558 87F83530 	 strb r3,[r7,#53]
 269:../InputCapture/IOExp_lib.c **** 
 270:../InputCapture/IOExp_lib.c **** 	/* Read Port 0 pins */
 271:../InputCapture/IOExp_lib.c **** 	I2C_status = I2C_MASTER_Receive(&I2C_MASTER_0, send_start, I2C_SLAVE_ADDRESS, &data_RxPtr[0], data
 755              	 .loc 2 271 0
 756 055c 144B     	 ldr r3,.L17+4
 757 055e 1B78     	 ldrb r3,[r3]
 758 0560 1D46     	 mov r5,r3
 759 0562 97F83620 	 ldrb r2,[r7,#54]
 760 0566 3C1D     	 adds r4,r7,#4
 761 0568 FB6A     	 ldr r3,[r7,#44]
 762 056a 0093     	 str r3,[sp]
 763 056c 97F83530 	 ldrb r3,[r7,#53]
 764 0570 0193     	 str r3,[sp,#4]
 765 0572 0123     	 movs r3,#1
 766 0574 0293     	 str r3,[sp,#8]
 767 0576 0D48     	 ldr r0,.L17
 768 0578 1146     	 mov r1,r2
 769 057a 2A46     	 mov r2,r5
 770 057c 2346     	 mov r3,r4
 771 057e FFF7FEFF 	 bl I2C_MASTER_Receive
 772 0582 0346     	 mov r3,r0
 773 0584 87F83430 	 strb r3,[r7,#52]
 272:../InputCapture/IOExp_lib.c **** 
 273:../InputCapture/IOExp_lib.c **** 	if(data_RxPtr[0] == 0x55)
 774              	 .loc 2 273 0
 775 0588 3B79     	 ldrb r3,[r7,#4]
 776 058a 552B     	 cmp r3,#85
 777 058c 07D1     	 bne .L11
 274:../InputCapture/IOExp_lib.c **** 	{
 275:../InputCapture/IOExp_lib.c **** 		test_result = true;
 778              	 .loc 2 275 0
 779 058e 0123     	 movs r3,#1
 780 0590 87F83330 	 strb r3,[r7,#51]
 276:../InputCapture/IOExp_lib.c **** 		pass_count++;
 781              	 .loc 2 276 0
 782 0594 97F83730 	 ldrb r3,[r7,#55]
 783 0598 0133     	 adds r3,r3,#1
 784 059a 87F83730 	 strb r3,[r7,#55]
 785              	.L11:
 277:../InputCapture/IOExp_lib.c **** 	}
 278:../InputCapture/IOExp_lib.c **** 
 279:../InputCapture/IOExp_lib.c **** 	if(pass_count == 6)
 786              	 .loc 2 279 0
 787 059e 97F83730 	 ldrb r3,[r7,#55]
 788 05a2 062B     	 cmp r3,#6
 789 05a4 00D1     	 bne .L12
 790              	.L13:
 280:../InputCapture/IOExp_lib.c **** 	{
 281:../InputCapture/IOExp_lib.c **** 		//test passed
 282:../InputCapture/IOExp_lib.c **** 		while(1);
 791              	 .loc 2 282 0 discriminator 1
 792 05a6 FEE7     	 b .L13
 793              	.L12:
 283:../InputCapture/IOExp_lib.c **** 	}
 284:../InputCapture/IOExp_lib.c **** 	else
 285:../InputCapture/IOExp_lib.c **** 	{
 286:../InputCapture/IOExp_lib.c **** 		//test failed
 287:../InputCapture/IOExp_lib.c **** 		while(1);
 794              	 .loc 2 287 0 discriminator 2
 795 05a8 FEE7     	 b .L12
 796              	.L18:
 797 05aa 00BF     	 .align 2
 798              	.L17:
 799 05ac 00000000 	 .word I2C_MASTER_0
 800 05b0 00000000 	 .word I2C_SLAVE_ADDRESS
 801              	 .cfi_endproc
 802              	.LFE605:
 804              	 .section .text.IOExp_Configure,"ax",%progbits
 805              	 .align 2
 806              	 .global IOExp_Configure
 807              	 .thumb
 808              	 .thumb_func
 810              	IOExp_Configure:
 811              	.LFB606:
 288:../InputCapture/IOExp_lib.c **** 	}
 289:../InputCapture/IOExp_lib.c **** 
 290:../InputCapture/IOExp_lib.c **** 
 291:../InputCapture/IOExp_lib.c **** 	/********************************************* END TEST 2 ****************************************
 292:../InputCapture/IOExp_lib.c **** }
 293:../InputCapture/IOExp_lib.c **** 
 294:../InputCapture/IOExp_lib.c **** /* Configures pin input and output for corresponding ports as provided in port0 and port1 parameter
 295:../InputCapture/IOExp_lib.c **** /* IOExp_address is the device address, e.g. 0x40 */
 296:../InputCapture/IOExp_lib.c **** void IOExp_Configure(I2C_MASTER_t *handle, uint8_t IOExp_address, uint8_t port0, uint8_t port1)
 297:../InputCapture/IOExp_lib.c **** {
 812              	 .loc 2 297 0
 813              	 .cfi_startproc
 814              	 
 815              	 
 816 0000 90B5     	 push {r4,r7,lr}
 817              	.LCFI9:
 818              	 .cfi_def_cfa_offset 12
 819              	 .cfi_offset 4,-12
 820              	 .cfi_offset 7,-8
 821              	 .cfi_offset 14,-4
 822 0002 93B0     	 sub sp,sp,#76
 823              	.LCFI10:
 824              	 .cfi_def_cfa_offset 88
 825 0004 02AF     	 add r7,sp,#8
 826              	.LCFI11:
 827              	 .cfi_def_cfa 7,80
 828 0006 7860     	 str r0,[r7,#4]
 829 0008 0846     	 mov r0,r1
 830 000a 1146     	 mov r1,r2
 831 000c 1A46     	 mov r2,r3
 832 000e 0346     	 mov r3,r0
 833 0010 FB70     	 strb r3,[r7,#3]
 834 0012 0B46     	 mov r3,r1
 835 0014 BB70     	 strb r3,[r7,#2]
 836 0016 1346     	 mov r3,r2
 837 0018 7B70     	 strb r3,[r7,#1]
 298:../InputCapture/IOExp_lib.c **** 	bool send_start = true, send_stop = true;
 838              	 .loc 2 298 0
 839 001a 0123     	 movs r3,#1
 840 001c 87F83B30 	 strb r3,[r7,#59]
 841 0020 0123     	 movs r3,#1
 842 0022 87F83A30 	 strb r3,[r7,#58]
 299:../InputCapture/IOExp_lib.c **** 	uint8_t data_ptr[20] = {0}, data_RxPtr[20] = {0}, CMD;
 843              	 .loc 2 299 0
 844 0026 07F11C03 	 add r3,r7,#28
 845 002a 0022     	 movs r2,#0
 846 002c 1A60     	 str r2,[r3]
 847 002e 0433     	 adds r3,r3,#4
 848 0030 0022     	 movs r2,#0
 849 0032 1A60     	 str r2,[r3]
 850 0034 0433     	 adds r3,r3,#4
 851 0036 0022     	 movs r2,#0
 852 0038 1A60     	 str r2,[r3]
 853 003a 0433     	 adds r3,r3,#4
 854 003c 0022     	 movs r2,#0
 855 003e 1A60     	 str r2,[r3]
 856 0040 0433     	 adds r3,r3,#4
 857 0042 0022     	 movs r2,#0
 858 0044 1A60     	 str r2,[r3]
 859 0046 0433     	 adds r3,r3,#4
 860 0048 07F10803 	 add r3,r7,#8
 861 004c 0022     	 movs r2,#0
 862 004e 1A60     	 str r2,[r3]
 863 0050 0433     	 adds r3,r3,#4
 864 0052 0022     	 movs r2,#0
 865 0054 1A60     	 str r2,[r3]
 866 0056 0433     	 adds r3,r3,#4
 867 0058 0022     	 movs r2,#0
 868 005a 1A60     	 str r2,[r3]
 869 005c 0433     	 adds r3,r3,#4
 870 005e 0022     	 movs r2,#0
 871 0060 1A60     	 str r2,[r3]
 872 0062 0433     	 adds r3,r3,#4
 873 0064 0022     	 movs r2,#0
 874 0066 1A60     	 str r2,[r3]
 875 0068 0433     	 adds r3,r3,#4
 300:../InputCapture/IOExp_lib.c **** 	uint32_t data_count;
 301:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_STATUS_t I2C_status = I2C_MASTER_STATUS_FAILURE;
 876              	 .loc 2 301 0
 877 006a 0123     	 movs r3,#1
 878 006c 87F83930 	 strb r3,[r7,#57]
 302:../InputCapture/IOExp_lib.c **** 	bool test_result = false;
 879              	 .loc 2 302 0
 880 0070 0023     	 movs r3,#0
 881 0072 87F83830 	 strb r3,[r7,#56]
 303:../InputCapture/IOExp_lib.c **** 	uint8_t pass_count=0;
 882              	 .loc 2 303 0
 883 0076 0023     	 movs r3,#0
 884 0078 87F83730 	 strb r3,[r7,#55]
 304:../InputCapture/IOExp_lib.c **** 
 305:../InputCapture/IOExp_lib.c **** 	/*********************************************TEST port 0 output, port 1 input *******************
 306:../InputCapture/IOExp_lib.c **** 	/* Configure port 0 */
 307:../InputCapture/IOExp_lib.c **** 	CMD = CONFIG_REG_PORT0;
 885              	 .loc 2 307 0
 886 007c 0623     	 movs r3,#6
 887 007e 87F83630 	 strb r3,[r7,#54]
 308:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 888              	 .loc 2 308 0
 889 0082 97F83630 	 ldrb r3,[r7,#54]
 890 0086 3B77     	 strb r3,[r7,#28]
 309:../InputCapture/IOExp_lib.c **** 	data_ptr[1] = port0; // data to port 0
 891              	 .loc 2 309 0
 892 0088 BB78     	 ldrb r3,[r7,#2]
 893 008a 7B77     	 strb r3,[r7,#29]
 310:../InputCapture/IOExp_lib.c **** 	data_ptr[2] = port1; // data to port 1
 894              	 .loc 2 310 0
 895 008c 7B78     	 ldrb r3,[r7,#1]
 896 008e BB77     	 strb r3,[r7,#30]
 311:../InputCapture/IOExp_lib.c **** 	data_count = 3;
 897              	 .loc 2 311 0
 898 0090 0323     	 movs r3,#3
 899 0092 3B63     	 str r3,[r7,#48]
 900              	.LBB2:
 312:../InputCapture/IOExp_lib.c **** 
 313:../InputCapture/IOExp_lib.c **** 	for(int i = 0; i < 0xffff; i++);
 901              	 .loc 2 313 0
 902 0094 0023     	 movs r3,#0
 903 0096 FB63     	 str r3,[r7,#60]
 904 0098 02E0     	 b .L20
 905              	.L21:
 906              	 .loc 2 313 0 is_stmt 0 discriminator 3
 907 009a FB6B     	 ldr r3,[r7,#60]
 908 009c 0133     	 adds r3,r3,#1
 909 009e FB63     	 str r3,[r7,#60]
 910              	.L20:
 911              	 .loc 2 313 0 discriminator 1
 912 00a0 FB6B     	 ldr r3,[r7,#60]
 913 00a2 4FF6FE72 	 movw r2,#65534
 914 00a6 9342     	 cmp r3,r2
 915 00a8 F7DD     	 ble .L21
 916              	.LBE2:
 314:../InputCapture/IOExp_lib.c **** 	/* Set Port 0 as output and port 1 as input */
 315:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_Transmit(handle, send_start, IOExp_address/*I2C_SLAVE_ADDRESS*/, &data_ptr[0], data_cou
 917              	 .loc 2 315 0 is_stmt 1
 918 00aa FA78     	 ldrb r2,[r7,#3]
 919 00ac 97F83B10 	 ldrb r1,[r7,#59]
 920 00b0 07F11C04 	 add r4,r7,#28
 921 00b4 3B6B     	 ldr r3,[r7,#48]
 922 00b6 0093     	 str r3,[sp]
 923 00b8 97F83A30 	 ldrb r3,[r7,#58]
 924 00bc 0193     	 str r3,[sp,#4]
 925 00be 7868     	 ldr r0,[r7,#4]
 926 00c0 2346     	 mov r3,r4
 927 00c2 FFF7FEFF 	 bl I2C_MASTER_Transmit
 316:../InputCapture/IOExp_lib.c **** }
 928              	 .loc 2 316 0
 929 00c6 4437     	 adds r7,r7,#68
 930              	.LCFI12:
 931              	 .cfi_def_cfa_offset 12
 932 00c8 BD46     	 mov sp,r7
 933              	.LCFI13:
 934              	 .cfi_def_cfa_register 13
 935              	 
 936 00ca 90BD     	 pop {r4,r7,pc}
 937              	 .cfi_endproc
 938              	.LFE606:
 940              	 .section .text.IOExp_SetPIN_UPDATE,"ax",%progbits
 941              	 .align 2
 942              	 .global IOExp_SetPIN_UPDATE
 943              	 .thumb
 944              	 .thumb_func
 946              	IOExp_SetPIN_UPDATE:
 947              	.LFB607:
 317:../InputCapture/IOExp_lib.c **** 
 318:../InputCapture/IOExp_lib.c **** /* Internal function to set a pin high or low for specified IO expander
 319:../InputCapture/IOExp_lib.c ****  * return: true,  operation is successful
 320:../InputCapture/IOExp_lib.c ****  * 		   false, operation not successful */
 321:../InputCapture/IOExp_lib.c **** bool IOExp_SetPIN_UPDATE(I2C_MASTER_t *handle, uint8_t IOExp_Address, uint8_t port, uint8_t pin, bo
 322:../InputCapture/IOExp_lib.c **** {
 948              	 .loc 2 322 0
 949              	 .cfi_startproc
 950              	 
 951              	 
 952 0000 90B5     	 push {r4,r7,lr}
 953              	.LCFI14:
 954              	 .cfi_def_cfa_offset 12
 955              	 .cfi_offset 4,-12
 956              	 .cfi_offset 7,-8
 957              	 .cfi_offset 14,-4
 958 0002 91B0     	 sub sp,sp,#68
 959              	.LCFI15:
 960              	 .cfi_def_cfa_offset 80
 961 0004 04AF     	 add r7,sp,#16
 962              	.LCFI16:
 963              	 .cfi_def_cfa 7,64
 964 0006 7860     	 str r0,[r7,#4]
 965 0008 0846     	 mov r0,r1
 966 000a 1146     	 mov r1,r2
 967 000c 1A46     	 mov r2,r3
 968 000e 0346     	 mov r3,r0
 969 0010 FB70     	 strb r3,[r7,#3]
 970 0012 0B46     	 mov r3,r1
 971 0014 BB70     	 strb r3,[r7,#2]
 972 0016 1346     	 mov r3,r2
 973 0018 7B70     	 strb r3,[r7,#1]
 323:../InputCapture/IOExp_lib.c **** 	bool send_start = true, send_stop = true;
 974              	 .loc 2 323 0
 975 001a 0123     	 movs r3,#1
 976 001c 87F82730 	 strb r3,[r7,#39]
 977 0020 0123     	 movs r3,#1
 978 0022 87F82630 	 strb r3,[r7,#38]
 324:../InputCapture/IOExp_lib.c **** 	uint8_t data_ptr[20] = {0}, data_Rx[2] = {0}, CMD;
 979              	 .loc 2 324 0
 980 0026 07F10C03 	 add r3,r7,#12
 981 002a 0022     	 movs r2,#0
 982 002c 1A60     	 str r2,[r3]
 983 002e 0433     	 adds r3,r3,#4
 984 0030 0022     	 movs r2,#0
 985 0032 1A60     	 str r2,[r3]
 986 0034 0433     	 adds r3,r3,#4
 987 0036 0022     	 movs r2,#0
 988 0038 1A60     	 str r2,[r3]
 989 003a 0433     	 adds r3,r3,#4
 990 003c 0022     	 movs r2,#0
 991 003e 1A60     	 str r2,[r3]
 992 0040 0433     	 adds r3,r3,#4
 993 0042 0022     	 movs r2,#0
 994 0044 1A60     	 str r2,[r3]
 995 0046 0433     	 adds r3,r3,#4
 996 0048 0023     	 movs r3,#0
 997 004a 3B81     	 strh r3,[r7,#8]
 325:../InputCapture/IOExp_lib.c **** 	uint32_t data_count;
 326:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_STATUS_t I2C_status = I2C_MASTER_STATUS_FAILURE;
 998              	 .loc 2 326 0
 999 004c 0123     	 movs r3,#1
 1000 004e 87F82E30 	 strb r3,[r7,#46]
 327:../InputCapture/IOExp_lib.c **** 
 328:../InputCapture/IOExp_lib.c **** 	if(0 == port)
 1001              	 .loc 2 328 0
 1002 0052 BB78     	 ldrb r3,[r7,#2]
 1003 0054 002B     	 cmp r3,#0
 1004 0056 03D1     	 bne .L23
 329:../InputCapture/IOExp_lib.c **** 	{
 330:../InputCapture/IOExp_lib.c **** 		/* Read port 0 configuration */
 331:../InputCapture/IOExp_lib.c **** 		CMD = OUTPUT_REG_PORT0;
 1005              	 .loc 2 331 0
 1006 0058 0223     	 movs r3,#2
 1007 005a 87F82F30 	 strb r3,[r7,#47]
 1008 005e 02E0     	 b .L24
 1009              	.L23:
 332:../InputCapture/IOExp_lib.c **** 	}
 333:../InputCapture/IOExp_lib.c **** 	else //if(1 == port)
 334:../InputCapture/IOExp_lib.c **** 	{
 335:../InputCapture/IOExp_lib.c **** 		/* Read port 1 configuration */
 336:../InputCapture/IOExp_lib.c **** 		CMD = OUTPUT_REG_PORT1;
 1010              	 .loc 2 336 0
 1011 0060 0323     	 movs r3,#3
 1012 0062 87F82F30 	 strb r3,[r7,#47]
 1013              	.L24:
 337:../InputCapture/IOExp_lib.c **** 	}
 338:../InputCapture/IOExp_lib.c **** 
 339:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 1014              	 .loc 2 339 0
 1015 0066 97F82F30 	 ldrb r3,[r7,#47]
 1016 006a 3B73     	 strb r3,[r7,#12]
 340:../InputCapture/IOExp_lib.c **** 	data_count = 1;
 1017              	 .loc 2 340 0
 1018 006c 0123     	 movs r3,#1
 1019 006e 3B62     	 str r3,[r7,#32]
 341:../InputCapture/IOExp_lib.c **** 
 342:../InputCapture/IOExp_lib.c **** 	send_stop = false;
 1020              	 .loc 2 342 0
 1021 0070 0023     	 movs r3,#0
 1022 0072 87F82630 	 strb r3,[r7,#38]
 343:../InputCapture/IOExp_lib.c **** 	/* Read port 0 */
 344:../InputCapture/IOExp_lib.c **** 	I2C_status = I2C_MASTER_Transmit(handle, send_start, IOExp_Address, &data_ptr[0], data_count, send
 1023              	 .loc 2 344 0
 1024 0076 FA78     	 ldrb r2,[r7,#3]
 1025 0078 97F82710 	 ldrb r1,[r7,#39]
 1026 007c 07F10C04 	 add r4,r7,#12
 1027 0080 3B6A     	 ldr r3,[r7,#32]
 1028 0082 0093     	 str r3,[sp]
 1029 0084 97F82630 	 ldrb r3,[r7,#38]
 1030 0088 0193     	 str r3,[sp,#4]
 1031 008a 7868     	 ldr r0,[r7,#4]
 1032 008c 2346     	 mov r3,r4
 1033 008e FFF7FEFF 	 bl I2C_MASTER_Transmit
 1034 0092 0346     	 mov r3,r0
 1035 0094 87F82E30 	 strb r3,[r7,#46]
 345:../InputCapture/IOExp_lib.c **** 	if(I2C_MASTER_STATUS_SUCCESS == I2C_status)
 1036              	 .loc 2 345 0
 1037 0098 97F82E30 	 ldrb r3,[r7,#46]
 1038 009c 002B     	 cmp r3,#0
 1039 009e 5DD1     	 bne .L25
 346:../InputCapture/IOExp_lib.c **** 	{
 347:../InputCapture/IOExp_lib.c **** 		//send_start = true;
 348:../InputCapture/IOExp_lib.c **** 		send_start = true;
 1040              	 .loc 2 348 0
 1041 00a0 0123     	 movs r3,#1
 1042 00a2 87F82730 	 strb r3,[r7,#39]
 349:../InputCapture/IOExp_lib.c **** 		send_stop = true;
 1043              	 .loc 2 349 0
 1044 00a6 0123     	 movs r3,#1
 1045 00a8 87F82630 	 strb r3,[r7,#38]
 350:../InputCapture/IOExp_lib.c **** 
 351:../InputCapture/IOExp_lib.c **** 		/* Read Port 1 pins */
 352:../InputCapture/IOExp_lib.c **** 	//	I2C_status = I2C_MASTER_Receive(&I2C_MASTER_0, send_start, IOExp_Address, &data_Rx[0], data_cou
 353:../InputCapture/IOExp_lib.c **** 		//data_count = 2;
 354:../InputCapture/IOExp_lib.c **** 		I2C_status = I2C_MASTER_Receive(handle, send_start, IOExp_Address, &data_ptr[1], data_count, send
 1046              	 .loc 2 354 0
 1047 00ac FA78     	 ldrb r2,[r7,#3]
 1048 00ae 97F82710 	 ldrb r1,[r7,#39]
 1049 00b2 07F10C03 	 add r3,r7,#12
 1050 00b6 5C1C     	 adds r4,r3,#1
 1051 00b8 3B6A     	 ldr r3,[r7,#32]
 1052 00ba 0093     	 str r3,[sp]
 1053 00bc 97F82630 	 ldrb r3,[r7,#38]
 1054 00c0 0193     	 str r3,[sp,#4]
 1055 00c2 0123     	 movs r3,#1
 1056 00c4 0293     	 str r3,[sp,#8]
 1057 00c6 7868     	 ldr r0,[r7,#4]
 1058 00c8 2346     	 mov r3,r4
 1059 00ca FFF7FEFF 	 bl I2C_MASTER_Receive
 1060 00ce 0346     	 mov r3,r0
 1061 00d0 87F82E30 	 strb r3,[r7,#46]
 355:../InputCapture/IOExp_lib.c **** 		if(I2C_MASTER_STATUS_SUCCESS == I2C_status)
 1062              	 .loc 2 355 0
 1063 00d4 97F82E30 	 ldrb r3,[r7,#46]
 1064 00d8 002B     	 cmp r3,#0
 1065 00da 3FD1     	 bne .L25
 356:../InputCapture/IOExp_lib.c **** 		{
 357:../InputCapture/IOExp_lib.c **** 			if(PIN_HIGH == pin_level)
 1066              	 .loc 2 357 0
 1067 00dc 97F84030 	 ldrb r3,[r7,#64]
 1068 00e0 002B     	 cmp r3,#0
 1069 00e2 0CD0     	 beq .L26
 358:../InputCapture/IOExp_lib.c **** 			{
 359:../InputCapture/IOExp_lib.c **** 				/* Update output register value */
 360:../InputCapture/IOExp_lib.c **** 				data_ptr[1] |= /*data_Rx[0] |*/ (1 << pin);
 1070              	 .loc 2 360 0
 1071 00e4 7B7B     	 ldrb r3,[r7,#13]
 1072 00e6 D9B2     	 uxtb r1,r3
 1073 00e8 7B78     	 ldrb r3,[r7,#1]
 1074 00ea 0122     	 movs r2,#1
 1075 00ec 02FA03F3 	 lsl r3,r2,r3
 1076 00f0 DBB2     	 uxtb r3,r3
 1077 00f2 0A46     	 mov r2,r1
 1078 00f4 1343     	 orrs r3,r3,r2
 1079 00f6 DBB2     	 uxtb r3,r3
 1080 00f8 DBB2     	 uxtb r3,r3
 1081 00fa 7B73     	 strb r3,[r7,#13]
 1082 00fc 0DE0     	 b .L27
 1083              	.L26:
 361:../InputCapture/IOExp_lib.c **** 			}
 362:../InputCapture/IOExp_lib.c **** 			else
 363:../InputCapture/IOExp_lib.c **** 			{
 364:../InputCapture/IOExp_lib.c **** 				/* Update output register value */
 365:../InputCapture/IOExp_lib.c **** 				data_ptr[1] &= /*data_Rx[0] &*/ (~(1 << pin));
 1084              	 .loc 2 365 0
 1085 00fe 7B7B     	 ldrb r3,[r7,#13]
 1086 0100 D9B2     	 uxtb r1,r3
 1087 0102 7B78     	 ldrb r3,[r7,#1]
 1088 0104 0122     	 movs r2,#1
 1089 0106 02FA03F3 	 lsl r3,r2,r3
 1090 010a DBB2     	 uxtb r3,r3
 1091 010c DB43     	 mvns r3,r3
 1092 010e DBB2     	 uxtb r3,r3
 1093 0110 0A46     	 mov r2,r1
 1094 0112 1340     	 ands r3,r3,r2
 1095 0114 DBB2     	 uxtb r3,r3
 1096 0116 DBB2     	 uxtb r3,r3
 1097 0118 7B73     	 strb r3,[r7,#13]
 1098              	.L27:
 366:../InputCapture/IOExp_lib.c **** 			}
 367:../InputCapture/IOExp_lib.c **** 
 368:../InputCapture/IOExp_lib.c **** 			data_count = 2;
 1099              	 .loc 2 368 0
 1100 011a 0223     	 movs r3,#2
 1101 011c 3B62     	 str r3,[r7,#32]
 369:../InputCapture/IOExp_lib.c **** 			send_start = true;
 1102              	 .loc 2 369 0
 1103 011e 0123     	 movs r3,#1
 1104 0120 87F82730 	 strb r3,[r7,#39]
 1105              	.LBB3:
 370:../InputCapture/IOExp_lib.c **** 
 371:../InputCapture/IOExp_lib.c **** 			for(int i= 0; i < 0xffff; i++);
 1106              	 .loc 2 371 0
 1107 0124 0023     	 movs r3,#0
 1108 0126 BB62     	 str r3,[r7,#40]
 1109 0128 02E0     	 b .L28
 1110              	.L29:
 1111              	 .loc 2 371 0 is_stmt 0 discriminator 3
 1112 012a BB6A     	 ldr r3,[r7,#40]
 1113 012c 0133     	 adds r3,r3,#1
 1114 012e BB62     	 str r3,[r7,#40]
 1115              	.L28:
 1116              	 .loc 2 371 0 discriminator 1
 1117 0130 BB6A     	 ldr r3,[r7,#40]
 1118 0132 4FF6FE72 	 movw r2,#65534
 1119 0136 9342     	 cmp r3,r2
 1120 0138 F7DD     	 ble .L29
 1121              	.LBE3:
 372:../InputCapture/IOExp_lib.c **** 			/* update pin */
 373:../InputCapture/IOExp_lib.c **** 			I2C_status = I2C_MASTER_Transmit(handle, send_start, IOExp_Address, &data_ptr[0], data_count, se
 1122              	 .loc 2 373 0 is_stmt 1
 1123 013a FA78     	 ldrb r2,[r7,#3]
 1124 013c 97F82710 	 ldrb r1,[r7,#39]
 1125 0140 07F10C04 	 add r4,r7,#12
 1126 0144 3B6A     	 ldr r3,[r7,#32]
 1127 0146 0093     	 str r3,[sp]
 1128 0148 97F82630 	 ldrb r3,[r7,#38]
 1129 014c 0193     	 str r3,[sp,#4]
 1130 014e 7868     	 ldr r0,[r7,#4]
 1131 0150 2346     	 mov r3,r4
 1132 0152 FFF7FEFF 	 bl I2C_MASTER_Transmit
 1133 0156 0346     	 mov r3,r0
 1134 0158 87F82E30 	 strb r3,[r7,#46]
 1135              	.L25:
 374:../InputCapture/IOExp_lib.c **** 			/* data is expected to be successfully written at this point */
 375:../InputCapture/IOExp_lib.c **** 		}
 376:../InputCapture/IOExp_lib.c **** 	}
 377:../InputCapture/IOExp_lib.c **** 
 378:../InputCapture/IOExp_lib.c **** 	if(I2C_MASTER_STATUS_SUCCESS == I2C_status)
 1136              	 .loc 2 378 0
 1137 015c 97F82E30 	 ldrb r3,[r7,#46]
 1138 0160 002B     	 cmp r3,#0
 1139 0162 01D1     	 bne .L30
 379:../InputCapture/IOExp_lib.c **** 		return true;
 1140              	 .loc 2 379 0
 1141 0164 0123     	 movs r3,#1
 1142 0166 00E0     	 b .L32
 1143              	.L30:
 380:../InputCapture/IOExp_lib.c **** 	else
 381:../InputCapture/IOExp_lib.c **** 		return false;
 1144              	 .loc 2 381 0
 1145 0168 0023     	 movs r3,#0
 1146              	.L32:
 382:../InputCapture/IOExp_lib.c **** }
 1147              	 .loc 2 382 0 discriminator 1
 1148 016a 1846     	 mov r0,r3
 1149 016c 3437     	 adds r7,r7,#52
 1150              	.LCFI17:
 1151              	 .cfi_def_cfa_offset 12
 1152 016e BD46     	 mov sp,r7
 1153              	.LCFI18:
 1154              	 .cfi_def_cfa_register 13
 1155              	 
 1156 0170 90BD     	 pop {r4,r7,pc}
 1157              	 .cfi_endproc
 1158              	.LFE607:
 1160 0172 00BF     	 .section .text.IOExp_SetPIN_HIGH,"ax",%progbits
 1161              	 .align 2
 1162              	 .global IOExp_SetPIN_HIGH
 1163              	 .thumb
 1164              	 .thumb_func
 1166              	IOExp_SetPIN_HIGH:
 1167              	.LFB608:
 383:../InputCapture/IOExp_lib.c **** 
 384:../InputCapture/IOExp_lib.c **** /* Function to set a pin high for specified IO expander
 385:../InputCapture/IOExp_lib.c ****  * return: true,  operation is successful
 386:../InputCapture/IOExp_lib.c ****  * 		   false, operation not successful */
 387:../InputCapture/IOExp_lib.c **** bool IOExp_SetPIN_HIGH(I2C_MASTER_t *handle, uint8_t IOExp_Address, uint8_t port, uint8_t pin)
 388:../InputCapture/IOExp_lib.c **** {
 1168              	 .loc 2 388 0
 1169              	 .cfi_startproc
 1170              	 
 1171              	 
 1172 0000 90B5     	 push {r4,r7,lr}
 1173              	.LCFI19:
 1174              	 .cfi_def_cfa_offset 12
 1175              	 .cfi_offset 4,-12
 1176              	 .cfi_offset 7,-8
 1177              	 .cfi_offset 14,-4
 1178 0002 85B0     	 sub sp,sp,#20
 1179              	.LCFI20:
 1180              	 .cfi_def_cfa_offset 32
 1181 0004 02AF     	 add r7,sp,#8
 1182              	.LCFI21:
 1183              	 .cfi_def_cfa 7,24
 1184 0006 7860     	 str r0,[r7,#4]
 1185 0008 0846     	 mov r0,r1
 1186 000a 1146     	 mov r1,r2
 1187 000c 1A46     	 mov r2,r3
 1188 000e 0346     	 mov r3,r0
 1189 0010 FB70     	 strb r3,[r7,#3]
 1190 0012 0B46     	 mov r3,r1
 1191 0014 BB70     	 strb r3,[r7,#2]
 1192 0016 1346     	 mov r3,r2
 1193 0018 7B70     	 strb r3,[r7,#1]
 389:../InputCapture/IOExp_lib.c **** 	return IOExp_SetPIN_UPDATE(handle, IOExp_Address, port, pin, PIN_HIGH);
 1194              	 .loc 2 389 0
 1195 001a F978     	 ldrb r1,[r7,#3]
 1196 001c BA78     	 ldrb r2,[r7,#2]
 1197 001e 7C78     	 ldrb r4,[r7,#1]
 1198 0020 0123     	 movs r3,#1
 1199 0022 0093     	 str r3,[sp]
 1200 0024 7868     	 ldr r0,[r7,#4]
 1201 0026 2346     	 mov r3,r4
 1202 0028 FFF7FEFF 	 bl IOExp_SetPIN_UPDATE
 1203 002c 0346     	 mov r3,r0
 390:../InputCapture/IOExp_lib.c **** }
 1204              	 .loc 2 390 0
 1205 002e 1846     	 mov r0,r3
 1206 0030 0C37     	 adds r7,r7,#12
 1207              	.LCFI22:
 1208              	 .cfi_def_cfa_offset 12
 1209 0032 BD46     	 mov sp,r7
 1210              	.LCFI23:
 1211              	 .cfi_def_cfa_register 13
 1212              	 
 1213 0034 90BD     	 pop {r4,r7,pc}
 1214              	 .cfi_endproc
 1215              	.LFE608:
 1217 0036 00BF     	 .section .text.IOExp_SetPIN_LOW,"ax",%progbits
 1218              	 .align 2
 1219              	 .global IOExp_SetPIN_LOW
 1220              	 .thumb
 1221              	 .thumb_func
 1223              	IOExp_SetPIN_LOW:
 1224              	.LFB609:
 391:../InputCapture/IOExp_lib.c **** 
 392:../InputCapture/IOExp_lib.c **** /* Function to set a pin low for specified IO expander
 393:../InputCapture/IOExp_lib.c ****  * return: true,  operation is successful
 394:../InputCapture/IOExp_lib.c ****  * 		   false, operation not successful */
 395:../InputCapture/IOExp_lib.c **** bool IOExp_SetPIN_LOW(I2C_MASTER_t *handle, uint8_t IOExp_Address, uint8_t port, uint8_t pin)
 396:../InputCapture/IOExp_lib.c **** {
 1225              	 .loc 2 396 0
 1226              	 .cfi_startproc
 1227              	 
 1228              	 
 1229 0000 90B5     	 push {r4,r7,lr}
 1230              	.LCFI24:
 1231              	 .cfi_def_cfa_offset 12
 1232              	 .cfi_offset 4,-12
 1233              	 .cfi_offset 7,-8
 1234              	 .cfi_offset 14,-4
 1235 0002 85B0     	 sub sp,sp,#20
 1236              	.LCFI25:
 1237              	 .cfi_def_cfa_offset 32
 1238 0004 02AF     	 add r7,sp,#8
 1239              	.LCFI26:
 1240              	 .cfi_def_cfa 7,24
 1241 0006 7860     	 str r0,[r7,#4]
 1242 0008 0846     	 mov r0,r1
 1243 000a 1146     	 mov r1,r2
 1244 000c 1A46     	 mov r2,r3
 1245 000e 0346     	 mov r3,r0
 1246 0010 FB70     	 strb r3,[r7,#3]
 1247 0012 0B46     	 mov r3,r1
 1248 0014 BB70     	 strb r3,[r7,#2]
 1249 0016 1346     	 mov r3,r2
 1250 0018 7B70     	 strb r3,[r7,#1]
 397:../InputCapture/IOExp_lib.c **** 	return IOExp_SetPIN_UPDATE(handle, IOExp_Address, port, pin, PIN_LOW);
 1251              	 .loc 2 397 0
 1252 001a F978     	 ldrb r1,[r7,#3]
 1253 001c BA78     	 ldrb r2,[r7,#2]
 1254 001e 7C78     	 ldrb r4,[r7,#1]
 1255 0020 0023     	 movs r3,#0
 1256 0022 0093     	 str r3,[sp]
 1257 0024 7868     	 ldr r0,[r7,#4]
 1258 0026 2346     	 mov r3,r4
 1259 0028 FFF7FEFF 	 bl IOExp_SetPIN_UPDATE
 1260 002c 0346     	 mov r3,r0
 398:../InputCapture/IOExp_lib.c **** }
 1261              	 .loc 2 398 0
 1262 002e 1846     	 mov r0,r3
 1263 0030 0C37     	 adds r7,r7,#12
 1264              	.LCFI27:
 1265              	 .cfi_def_cfa_offset 12
 1266 0032 BD46     	 mov sp,r7
 1267              	.LCFI28:
 1268              	 .cfi_def_cfa_register 13
 1269              	 
 1270 0034 90BD     	 pop {r4,r7,pc}
 1271              	 .cfi_endproc
 1272              	.LFE609:
 1274 0036 00BF     	 .section .text.IOExp_ReadPIN_LEVEL,"ax",%progbits
 1275              	 .align 2
 1276              	 .global IOExp_ReadPIN_LEVEL
 1277              	 .thumb
 1278              	 .thumb_func
 1280              	IOExp_ReadPIN_LEVEL:
 1281              	.LFB610:
 399:../InputCapture/IOExp_lib.c **** 
 400:../InputCapture/IOExp_lib.c **** /* Function to read a pin level for specified IO expander
 401:../InputCapture/IOExp_lib.c ****  * return: true,  pin is HIGH
 402:../InputCapture/IOExp_lib.c ****  * 		   false, pin is LOW */
 403:../InputCapture/IOExp_lib.c **** //
 404:../InputCapture/IOExp_lib.c **** //bool IOExp_ReadPIN_LEVEL(uint8_t IOExp_Address, uint8_t port, uint8_t pin)
 405:../InputCapture/IOExp_lib.c **** //{
 406:../InputCapture/IOExp_lib.c **** //	bool send_start = true, send_stop = true;
 407:../InputCapture/IOExp_lib.c **** //	uint8_t data_ptr[20] = {0}, data_Rx[2] = {0}, CMD;
 408:../InputCapture/IOExp_lib.c **** //	uint32_t data_count;
 409:../InputCapture/IOExp_lib.c **** //	I2C_MASTER_STATUS_t I2C_status = I2C_MASTER_STATUS_FAILURE;
 410:../InputCapture/IOExp_lib.c **** //
 411:../InputCapture/IOExp_lib.c **** //	if(0 == port)
 412:../InputCapture/IOExp_lib.c **** //	{
 413:../InputCapture/IOExp_lib.c **** //		/* Read port 0 configuration */
 414:../InputCapture/IOExp_lib.c **** //		CMD = INPUT_REG_PORT0;
 415:../InputCapture/IOExp_lib.c **** //	}
 416:../InputCapture/IOExp_lib.c **** //	else //if(1 == port)
 417:../InputCapture/IOExp_lib.c **** //	{
 418:../InputCapture/IOExp_lib.c **** //		/* Read port 1 configuration */
 419:../InputCapture/IOExp_lib.c **** //		CMD = INPUT_REG_PORT1;
 420:../InputCapture/IOExp_lib.c **** //	}
 421:../InputCapture/IOExp_lib.c **** //
 422:../InputCapture/IOExp_lib.c **** //	data_ptr[0] = CMD;
 423:../InputCapture/IOExp_lib.c **** //	data_count = 1;
 424:../InputCapture/IOExp_lib.c **** //
 425:../InputCapture/IOExp_lib.c **** //	send_stop = false;
 426:../InputCapture/IOExp_lib.c **** //	/* Read port */
 427:../InputCapture/IOExp_lib.c **** //	I2C_status = I2C_MASTER_Transmit(&I2C_MASTER_0, send_start, IOExp_Address, &data_ptr[0], data_co
 428:../InputCapture/IOExp_lib.c **** //	if(I2C_MASTER_STATUS_SUCCESS == I2C_status)
 429:../InputCapture/IOExp_lib.c **** //	{
 430:../InputCapture/IOExp_lib.c **** //		send_start = true;
 431:../InputCapture/IOExp_lib.c **** //		send_stop = true;
 432:../InputCapture/IOExp_lib.c **** //
 433:../InputCapture/IOExp_lib.c **** //		/* Read Port pins */
 434:../InputCapture/IOExp_lib.c **** //		I2C_status = I2C_MASTER_Receive(&I2C_MASTER_0, send_start, IOExp_Address, &data_Rx[0], data_cou
 435:../InputCapture/IOExp_lib.c **** //
 436:../InputCapture/IOExp_lib.c **** //		if(I2C_MASTER_STATUS_SUCCESS == I2C_status)
 437:../InputCapture/IOExp_lib.c **** //		{
 438:../InputCapture/IOExp_lib.c **** //			return (data_Rx[0] >> pin) & 0x01;
 439:../InputCapture/IOExp_lib.c **** //		}
 440:../InputCapture/IOExp_lib.c **** //	}
 441:../InputCapture/IOExp_lib.c **** //}
 442:../InputCapture/IOExp_lib.c **** 
 443:../InputCapture/IOExp_lib.c **** 
 444:../InputCapture/IOExp_lib.c **** uint8_t* IOExp_ReadPIN_LEVEL(I2C_MASTER_t *handle, uint8_t IOExp_Address, uint8_t port)
 445:../InputCapture/IOExp_lib.c **** {
 1282              	 .loc 2 445 0
 1283              	 .cfi_startproc
 1284              	 
 1285              	 
 1286 0000 90B5     	 push {r4,r7,lr}
 1287              	.LCFI29:
 1288              	 .cfi_def_cfa_offset 12
 1289              	 .cfi_offset 4,-12
 1290              	 .cfi_offset 7,-8
 1291              	 .cfi_offset 14,-4
 1292 0002 91B0     	 sub sp,sp,#68
 1293              	.LCFI30:
 1294              	 .cfi_def_cfa_offset 80
 1295 0004 04AF     	 add r7,sp,#16
 1296              	.LCFI31:
 1297              	 .cfi_def_cfa 7,64
 1298 0006 7860     	 str r0,[r7,#4]
 1299 0008 0B46     	 mov r3,r1
 1300 000a FB70     	 strb r3,[r7,#3]
 1301 000c 1346     	 mov r3,r2
 1302 000e BB70     	 strb r3,[r7,#2]
 446:../InputCapture/IOExp_lib.c **** 	bool send_start = true, send_stop = true;
 1303              	 .loc 2 446 0
 1304 0010 0123     	 movs r3,#1
 1305 0012 87F82730 	 strb r3,[r7,#39]
 1306 0016 0123     	 movs r3,#1
 1307 0018 87F82630 	 strb r3,[r7,#38]
 447:../InputCapture/IOExp_lib.c **** 	uint8_t data_ptr[20] = {0}, /*data_Rx[2] = {0},*/ CMD;
 1308              	 .loc 2 447 0
 1309 001c 07F10C03 	 add r3,r7,#12
 1310 0020 0022     	 movs r2,#0
 1311 0022 1A60     	 str r2,[r3]
 1312 0024 0433     	 adds r3,r3,#4
 1313 0026 0022     	 movs r2,#0
 1314 0028 1A60     	 str r2,[r3]
 1315 002a 0433     	 adds r3,r3,#4
 1316 002c 0022     	 movs r2,#0
 1317 002e 1A60     	 str r2,[r3]
 1318 0030 0433     	 adds r3,r3,#4
 1319 0032 0022     	 movs r2,#0
 1320 0034 1A60     	 str r2,[r3]
 1321 0036 0433     	 adds r3,r3,#4
 1322 0038 0022     	 movs r2,#0
 1323 003a 1A60     	 str r2,[r3]
 1324 003c 0433     	 adds r3,r3,#4
 448:../InputCapture/IOExp_lib.c **** 	static uint8_t data_Rx[2] = {0, 0};
 449:../InputCapture/IOExp_lib.c **** 	uint32_t data_count;
 450:../InputCapture/IOExp_lib.c **** 	I2C_MASTER_STATUS_t I2C_status = I2C_MASTER_STATUS_FAILURE;
 1325              	 .loc 2 450 0
 1326 003e 0123     	 movs r3,#1
 1327 0040 87F82530 	 strb r3,[r7,#37]
 451:../InputCapture/IOExp_lib.c **** 
 452:../InputCapture/IOExp_lib.c **** 	if(0 == port)
 1328              	 .loc 2 452 0
 1329 0044 BB78     	 ldrb r3,[r7,#2]
 1330 0046 002B     	 cmp r3,#0
 1331 0048 03D1     	 bne .L38
 453:../InputCapture/IOExp_lib.c **** 	{
 454:../InputCapture/IOExp_lib.c **** 		/* Read port 0 configuration */
 455:../InputCapture/IOExp_lib.c **** 		CMD = INPUT_REG_PORT0;
 1332              	 .loc 2 455 0
 1333 004a 0023     	 movs r3,#0
 1334 004c 87F82F30 	 strb r3,[r7,#47]
 1335 0050 02E0     	 b .L39
 1336              	.L38:
 456:../InputCapture/IOExp_lib.c **** 	}
 457:../InputCapture/IOExp_lib.c **** 	else //if(1 == port)
 458:../InputCapture/IOExp_lib.c **** 	{
 459:../InputCapture/IOExp_lib.c **** 		/* Read port 1 configuration */
 460:../InputCapture/IOExp_lib.c **** 		CMD = INPUT_REG_PORT1;
 1337              	 .loc 2 460 0
 1338 0052 0123     	 movs r3,#1
 1339 0054 87F82F30 	 strb r3,[r7,#47]
 1340              	.L39:
 461:../InputCapture/IOExp_lib.c **** 	}
 462:../InputCapture/IOExp_lib.c **** 
 463:../InputCapture/IOExp_lib.c **** 	data_ptr[0] = CMD;
 1341              	 .loc 2 463 0
 1342 0058 97F82F30 	 ldrb r3,[r7,#47]
 1343 005c 3B73     	 strb r3,[r7,#12]
 464:../InputCapture/IOExp_lib.c **** 	data_count = 1;
 1344              	 .loc 2 464 0
 1345 005e 0123     	 movs r3,#1
 1346 0060 3B62     	 str r3,[r7,#32]
 465:../InputCapture/IOExp_lib.c **** 
 466:../InputCapture/IOExp_lib.c **** 	send_stop = true;
 1347              	 .loc 2 466 0
 1348 0062 0123     	 movs r3,#1
 1349 0064 87F82630 	 strb r3,[r7,#38]
 467:../InputCapture/IOExp_lib.c **** 	/* Read port */
 468:../InputCapture/IOExp_lib.c **** 	//for(int i = 0; i < 0xffff; i++);
 469:../InputCapture/IOExp_lib.c **** 	I2C_status = I2C_MASTER_Transmit(handle, send_start, IOExp_Address, &data_ptr[0], data_count, send
 1350              	 .loc 2 469 0
 1351 0068 FA78     	 ldrb r2,[r7,#3]
 1352 006a 97F82710 	 ldrb r1,[r7,#39]
 1353 006e 07F10C04 	 add r4,r7,#12
 1354 0072 3B6A     	 ldr r3,[r7,#32]
 1355 0074 0093     	 str r3,[sp]
 1356 0076 97F82630 	 ldrb r3,[r7,#38]
 1357 007a 0193     	 str r3,[sp,#4]
 1358 007c 7868     	 ldr r0,[r7,#4]
 1359 007e 2346     	 mov r3,r4
 1360 0080 FFF7FEFF 	 bl I2C_MASTER_Transmit
 1361 0084 0346     	 mov r3,r0
 1362 0086 87F82530 	 strb r3,[r7,#37]
 470:../InputCapture/IOExp_lib.c **** 	if(I2C_MASTER_STATUS_SUCCESS == I2C_status)
 1363              	 .loc 2 470 0
 1364 008a 97F82530 	 ldrb r3,[r7,#37]
 1365 008e 002B     	 cmp r3,#0
 1366 0090 27D1     	 bne .L40
 471:../InputCapture/IOExp_lib.c **** 	{
 472:../InputCapture/IOExp_lib.c **** 		send_start = true;
 1367              	 .loc 2 472 0
 1368 0092 0123     	 movs r3,#1
 1369 0094 87F82730 	 strb r3,[r7,#39]
 473:../InputCapture/IOExp_lib.c **** 		send_stop = true;
 1370              	 .loc 2 473 0
 1371 0098 0123     	 movs r3,#1
 1372 009a 87F82630 	 strb r3,[r7,#38]
 1373              	.LBB4:
 474:../InputCapture/IOExp_lib.c **** 		for(int i = 0; i < 0xffff; i++);
 1374              	 .loc 2 474 0
 1375 009e 0023     	 movs r3,#0
 1376 00a0 BB62     	 str r3,[r7,#40]
 1377 00a2 02E0     	 b .L41
 1378              	.L42:
 1379              	 .loc 2 474 0 is_stmt 0 discriminator 3
 1380 00a4 BB6A     	 ldr r3,[r7,#40]
 1381 00a6 0133     	 adds r3,r3,#1
 1382 00a8 BB62     	 str r3,[r7,#40]
 1383              	.L41:
 1384              	 .loc 2 474 0 discriminator 1
 1385 00aa BB6A     	 ldr r3,[r7,#40]
 1386 00ac 4FF6FE72 	 movw r2,#65534
 1387 00b0 9342     	 cmp r3,r2
 1388 00b2 F7DD     	 ble .L42
 1389              	.LBE4:
 475:../InputCapture/IOExp_lib.c **** 		/* Read Port pins */
 476:../InputCapture/IOExp_lib.c **** 		I2C_status = I2C_MASTER_Receive(handle, send_start, IOExp_Address, data_Rx, 2/*data_count*/, send
 1390              	 .loc 2 476 0 is_stmt 1
 1391 00b4 FA78     	 ldrb r2,[r7,#3]
 1392 00b6 97F82710 	 ldrb r1,[r7,#39]
 1393 00ba 0223     	 movs r3,#2
 1394 00bc 0093     	 str r3,[sp]
 1395 00be 97F82630 	 ldrb r3,[r7,#38]
 1396 00c2 0193     	 str r3,[sp,#4]
 1397 00c4 0123     	 movs r3,#1
 1398 00c6 0293     	 str r3,[sp,#8]
 1399 00c8 7868     	 ldr r0,[r7,#4]
 1400 00ca 084B     	 ldr r3,.L44
 1401 00cc FFF7FEFF 	 bl I2C_MASTER_Receive
 1402 00d0 0346     	 mov r3,r0
 1403 00d2 87F82530 	 strb r3,[r7,#37]
 477:../InputCapture/IOExp_lib.c **** 
 478:../InputCapture/IOExp_lib.c **** 		if(I2C_MASTER_STATUS_SUCCESS == I2C_status)
 1404              	 .loc 2 478 0
 1405 00d6 97F82530 	 ldrb r3,[r7,#37]
 1406 00da 002B     	 cmp r3,#0
 1407 00dc 01D1     	 bne .L40
 479:../InputCapture/IOExp_lib.c **** 		{
 480:../InputCapture/IOExp_lib.c **** 			return (data_Rx);
 1408              	 .loc 2 480 0
 1409 00de 034B     	 ldr r3,.L44
 1410 00e0 FFE7     	 b .L37
 1411              	.L40:
 1412              	.L37:
 481:../InputCapture/IOExp_lib.c **** 		}
 482:../InputCapture/IOExp_lib.c **** 	}
 483:../InputCapture/IOExp_lib.c **** }
 1413              	 .loc 2 483 0
 1414 00e2 1846     	 mov r0,r3
 1415 00e4 3437     	 adds r7,r7,#52
 1416              	.LCFI32:
 1417              	 .cfi_def_cfa_offset 12
 1418 00e6 BD46     	 mov sp,r7
 1419              	.LCFI33:
 1420              	 .cfi_def_cfa_register 13
 1421              	 
 1422 00e8 90BD     	 pop {r4,r7,pc}
 1423              	.L45:
 1424 00ea 00BF     	 .align 2
 1425              	.L44:
 1426 00ec 00000000 	 .word data_Rx.13647
 1427              	 .cfi_endproc
 1428              	.LFE610:
 1430              	 .section .bss.data_Rx.13647,"aw",%nobits
 1431              	 .align 2
 1434              	data_Rx.13647:
 1435 0000 0000     	 .space 2
 1436 0002 0000     	 .text
 1437              	.Letext0:
 1438              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1439              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1440              	 .file 5 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 1441              	 .file 6 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_usic.h"
 1442              	 .file 7 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_i2c.h"
 1443              	 .file 8 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/XMCLib/inc/xmc_spi.h"
 1444              	 .file 9 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Include/cmsis_gcc.h"
 1445              	 .file 10 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Include/core_cm4.h"
 1446              	 .file 11 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 1447              	 .file 12 "D:/Projects/VCU Firmware Main/IRP/Git Repo/VCU14_29bit_overCAN_withIRP_new4g_proto26_adding_All10sec_data/Dave/Generated/I2C_MASTER/i2c_master_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 IOExp_lib.c
    {standard input}:20     .text.I2C_MASTER_IsTxBusy:00000000 $t
    {standard input}:24     .text.I2C_MASTER_IsTxBusy:00000000 I2C_MASTER_IsTxBusy
    {standard input}:68     .bss.I2C_SLAVE_ADDRESS:00000000 I2C_SLAVE_ADDRESS
    {standard input}:69     .bss.I2C_SLAVE_ADDRESS:00000000 $d
    {standard input}:71     .text.IOExp_Test_FullPORT:00000000 $t
    {standard input}:76     .text.IOExp_Test_FullPORT:00000000 IOExp_Test_FullPORT
    {standard input}:553    .text.IOExp_Test_FullPORT:000003b0 $d
    {standard input}:556    .text.IOExp_Test_FullPORT:000003b8 $t
    {standard input}:799    .text.IOExp_Test_FullPORT:000005ac $d
    {standard input}:805    .text.IOExp_Configure:00000000 $t
    {standard input}:810    .text.IOExp_Configure:00000000 IOExp_Configure
    {standard input}:941    .text.IOExp_SetPIN_UPDATE:00000000 $t
    {standard input}:946    .text.IOExp_SetPIN_UPDATE:00000000 IOExp_SetPIN_UPDATE
    {standard input}:1161   .text.IOExp_SetPIN_HIGH:00000000 $t
    {standard input}:1166   .text.IOExp_SetPIN_HIGH:00000000 IOExp_SetPIN_HIGH
    {standard input}:1218   .text.IOExp_SetPIN_LOW:00000000 $t
    {standard input}:1223   .text.IOExp_SetPIN_LOW:00000000 IOExp_SetPIN_LOW
    {standard input}:1275   .text.IOExp_ReadPIN_LEVEL:00000000 $t
    {standard input}:1280   .text.IOExp_ReadPIN_LEVEL:00000000 IOExp_ReadPIN_LEVEL
    {standard input}:1426   .text.IOExp_ReadPIN_LEVEL:000000ec $d
    {standard input}:1434   .bss.data_Rx.13647:00000000 data_Rx.13647
    {standard input}:1431   .bss.data_Rx.13647:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
I2C_MASTER_Transmit
I2C_MASTER_Receive
I2C_MASTER_0
