   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pb_common.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.load_descriptor_values,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	load_descriptor_values:
  25              	.LFB0:
  26              	 .file 1 "../4g_module/pb_common.c"
   1:../4g_module/pb_common.c **** /* pb_common.c: Common support functions for pb_encode.c and pb_decode.c.
   2:../4g_module/pb_common.c ****  *
   3:../4g_module/pb_common.c ****  * 2014 Petteri Aimonen <jpa@kapsi.fi>
   4:../4g_module/pb_common.c ****  */
   5:../4g_module/pb_common.c **** 
   6:../4g_module/pb_common.c **** #include "pb_common.h"
   7:../4g_module/pb_common.c **** 
   8:../4g_module/pb_common.c **** static bool load_descriptor_values(pb_field_iter_t *iter)
   9:../4g_module/pb_common.c **** {
  27              	 .loc 1 9 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 8FB0     	 sub sp,sp,#60
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 64
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  10:../4g_module/pb_common.c ****     uint32_t word0;
  11:../4g_module/pb_common.c ****     uint32_t data_offset;
  12:../4g_module/pb_common.c ****     int_least8_t size_offset;
  13:../4g_module/pb_common.c **** 
  14:../4g_module/pb_common.c ****     if (iter->index >= iter->descriptor->field_count)
  43              	 .loc 1 14 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 1A89     	 ldrh r2,[r3,#8]
  46 000c 7B68     	 ldr r3,[r7,#4]
  47 000e 1B68     	 ldr r3,[r3]
  48 0010 1B8A     	 ldrh r3,[r3,#16]
  49 0012 9A42     	 cmp r2,r3
  50 0014 01D3     	 bcc .L2
  15:../4g_module/pb_common.c ****         return false;
  51              	 .loc 1 15 0
  52 0016 0023     	 movs r3,#0
  53 0018 53E1     	 b .L3
  54              	.L2:
  16:../4g_module/pb_common.c **** 
  17:../4g_module/pb_common.c ****     word0 = PB_PROGMEM_READU32(iter->descriptor->field_info[iter->field_info_index]);
  55              	 .loc 1 17 0
  56 001a 7B68     	 ldr r3,[r7,#4]
  57 001c 1B68     	 ldr r3,[r3]
  58 001e 1A68     	 ldr r2,[r3]
  59 0020 7B68     	 ldr r3,[r7,#4]
  60 0022 5B89     	 ldrh r3,[r3,#10]
  61 0024 9B00     	 lsls r3,r3,#2
  62 0026 1344     	 add r3,r3,r2
  63 0028 1B68     	 ldr r3,[r3]
  64 002a FB62     	 str r3,[r7,#44]
  18:../4g_module/pb_common.c ****     iter->type = (pb_type_t)((word0 >> 8) & 0xFF);
  65              	 .loc 1 18 0
  66 002c FB6A     	 ldr r3,[r7,#44]
  67 002e 1B0A     	 lsrs r3,r3,#8
  68 0030 DAB2     	 uxtb r2,r3
  69 0032 7B68     	 ldr r3,[r7,#4]
  70 0034 9A75     	 strb r2,[r3,#22]
  19:../4g_module/pb_common.c **** 
  20:../4g_module/pb_common.c ****     switch(word0 & 3)
  71              	 .loc 1 20 0
  72 0036 FB6A     	 ldr r3,[r7,#44]
  73 0038 03F00303 	 and r3,r3,#3
  74 003c 012B     	 cmp r3,#1
  75 003e 23D0     	 beq .L5
  76 0040 012B     	 cmp r3,#1
  77 0042 02D3     	 bcc .L6
  78 0044 022B     	 cmp r3,#2
  79 0046 53D0     	 beq .L7
  80 0048 8EE0     	 b .L19
  81              	.L6:
  21:../4g_module/pb_common.c ****     {
  22:../4g_module/pb_common.c ****         case 0: {
  23:../4g_module/pb_common.c ****             /* 1-word format */
  24:../4g_module/pb_common.c ****             iter->array_size = 1;
  82              	 .loc 1 24 0
  83 004a 7B68     	 ldr r3,[r7,#4]
  84 004c 0122     	 movs r2,#1
  85 004e 9A82     	 strh r2,[r3,#20]
  25:../4g_module/pb_common.c ****             iter->tag = (pb_size_t)((word0 >> 2) & 0x3F);
  86              	 .loc 1 25 0
  87 0050 FB6A     	 ldr r3,[r7,#44]
  88 0052 9B08     	 lsrs r3,r3,#2
  89 0054 9BB2     	 uxth r3,r3
  90 0056 03F03F03 	 and r3,r3,#63
  91 005a 9AB2     	 uxth r2,r3
  92 005c 7B68     	 ldr r3,[r7,#4]
  93 005e 1A82     	 strh r2,[r3,#16]
  26:../4g_module/pb_common.c ****             size_offset = (int_least8_t)((word0 >> 24) & 0x0F);
  94              	 .loc 1 26 0
  95 0060 FB6A     	 ldr r3,[r7,#44]
  96 0062 1B0E     	 lsrs r3,r3,#24
  97 0064 DBB2     	 uxtb r3,r3
  98 0066 03F00F03 	 and r3,r3,#15
  99 006a 87F83330 	 strb r3,[r7,#51]
  27:../4g_module/pb_common.c ****             data_offset = (word0 >> 16) & 0xFF;
 100              	 .loc 1 27 0
 101 006e FB6A     	 ldr r3,[r7,#44]
 102 0070 1B0C     	 lsrs r3,r3,#16
 103 0072 DBB2     	 uxtb r3,r3
 104 0074 7B63     	 str r3,[r7,#52]
  28:../4g_module/pb_common.c ****             iter->data_size = (pb_size_t)((word0 >> 28) & 0x0F);
 105              	 .loc 1 28 0
 106 0076 FB6A     	 ldr r3,[r7,#44]
 107 0078 1B0F     	 lsrs r3,r3,#28
 108 007a 9BB2     	 uxth r3,r3
 109 007c 03F00F03 	 and r3,r3,#15
 110 0080 9AB2     	 uxth r2,r3
 111 0082 7B68     	 ldr r3,[r7,#4]
 112 0084 5A82     	 strh r2,[r3,#18]
  29:../4g_module/pb_common.c ****             break;
 113              	 .loc 1 29 0
 114 0086 B4E0     	 b .L8
 115              	.L5:
 116              	.LBB2:
  30:../4g_module/pb_common.c ****         }
  31:../4g_module/pb_common.c **** 
  32:../4g_module/pb_common.c ****         case 1: {
  33:../4g_module/pb_common.c ****             /* 2-word format */
  34:../4g_module/pb_common.c ****             uint32_t word1 = PB_PROGMEM_READU32(iter->descriptor->field_info[iter->field_info_index
 117              	 .loc 1 34 0
 118 0088 7B68     	 ldr r3,[r7,#4]
 119 008a 1B68     	 ldr r3,[r3]
 120 008c 1A68     	 ldr r2,[r3]
 121 008e 7B68     	 ldr r3,[r7,#4]
 122 0090 5B89     	 ldrh r3,[r3,#10]
 123 0092 0133     	 adds r3,r3,#1
 124 0094 9B00     	 lsls r3,r3,#2
 125 0096 1344     	 add r3,r3,r2
 126 0098 1B68     	 ldr r3,[r3]
 127 009a BB62     	 str r3,[r7,#40]
  35:../4g_module/pb_common.c **** 
  36:../4g_module/pb_common.c ****             iter->array_size = (pb_size_t)((word0 >> 16) & 0x0FFF);
 128              	 .loc 1 36 0
 129 009c FB6A     	 ldr r3,[r7,#44]
 130 009e 1B0C     	 lsrs r3,r3,#16
 131 00a0 9BB2     	 uxth r3,r3
 132 00a2 C3F30B03 	 ubfx r3,r3,#0,#12
 133 00a6 9AB2     	 uxth r2,r3
 134 00a8 7B68     	 ldr r3,[r7,#4]
 135 00aa 9A82     	 strh r2,[r3,#20]
  37:../4g_module/pb_common.c ****             iter->tag = (pb_size_t)(((word0 >> 2) & 0x3F) | ((word1 >> 28) << 6));
 136              	 .loc 1 37 0
 137 00ac FB6A     	 ldr r3,[r7,#44]
 138 00ae 9B08     	 lsrs r3,r3,#2
 139 00b0 9BB2     	 uxth r3,r3
 140 00b2 03F03F03 	 and r3,r3,#63
 141 00b6 9AB2     	 uxth r2,r3
 142 00b8 BB6A     	 ldr r3,[r7,#40]
 143 00ba 1B0F     	 lsrs r3,r3,#28
 144 00bc 9BB2     	 uxth r3,r3
 145 00be 9B01     	 lsls r3,r3,#6
 146 00c0 9BB2     	 uxth r3,r3
 147 00c2 1343     	 orrs r3,r3,r2
 148 00c4 9AB2     	 uxth r2,r3
 149 00c6 7B68     	 ldr r3,[r7,#4]
 150 00c8 1A82     	 strh r2,[r3,#16]
  38:../4g_module/pb_common.c ****             size_offset = (int_least8_t)((word0 >> 28) & 0x0F);
 151              	 .loc 1 38 0
 152 00ca FB6A     	 ldr r3,[r7,#44]
 153 00cc 1B0F     	 lsrs r3,r3,#28
 154 00ce DBB2     	 uxtb r3,r3
 155 00d0 03F00F03 	 and r3,r3,#15
 156 00d4 87F83330 	 strb r3,[r7,#51]
  39:../4g_module/pb_common.c ****             data_offset = word1 & 0xFFFF;
 157              	 .loc 1 39 0
 158 00d8 BB6A     	 ldr r3,[r7,#40]
 159 00da 9BB2     	 uxth r3,r3
 160 00dc 7B63     	 str r3,[r7,#52]
  40:../4g_module/pb_common.c ****             iter->data_size = (pb_size_t)((word1 >> 16) & 0x0FFF);
 161              	 .loc 1 40 0
 162 00de BB6A     	 ldr r3,[r7,#40]
 163 00e0 1B0C     	 lsrs r3,r3,#16
 164 00e2 9BB2     	 uxth r3,r3
 165 00e4 C3F30B03 	 ubfx r3,r3,#0,#12
 166 00e8 9AB2     	 uxth r2,r3
 167 00ea 7B68     	 ldr r3,[r7,#4]
 168 00ec 5A82     	 strh r2,[r3,#18]
  41:../4g_module/pb_common.c ****             break;
 169              	 .loc 1 41 0
 170 00ee 80E0     	 b .L8
 171              	.L7:
 172              	.LBE2:
 173              	.LBB3:
  42:../4g_module/pb_common.c ****         }
  43:../4g_module/pb_common.c **** 
  44:../4g_module/pb_common.c ****         case 2: {
  45:../4g_module/pb_common.c ****             /* 4-word format */
  46:../4g_module/pb_common.c ****             uint32_t word1 = PB_PROGMEM_READU32(iter->descriptor->field_info[iter->field_info_index
 174              	 .loc 1 46 0
 175 00f0 7B68     	 ldr r3,[r7,#4]
 176 00f2 1B68     	 ldr r3,[r3]
 177 00f4 1A68     	 ldr r2,[r3]
 178 00f6 7B68     	 ldr r3,[r7,#4]
 179 00f8 5B89     	 ldrh r3,[r3,#10]
 180 00fa 0133     	 adds r3,r3,#1
 181 00fc 9B00     	 lsls r3,r3,#2
 182 00fe 1344     	 add r3,r3,r2
 183 0100 1B68     	 ldr r3,[r3]
 184 0102 7B62     	 str r3,[r7,#36]
  47:../4g_module/pb_common.c ****             uint32_t word2 = PB_PROGMEM_READU32(iter->descriptor->field_info[iter->field_info_index
 185              	 .loc 1 47 0
 186 0104 7B68     	 ldr r3,[r7,#4]
 187 0106 1B68     	 ldr r3,[r3]
 188 0108 1A68     	 ldr r2,[r3]
 189 010a 7B68     	 ldr r3,[r7,#4]
 190 010c 5B89     	 ldrh r3,[r3,#10]
 191 010e 0233     	 adds r3,r3,#2
 192 0110 9B00     	 lsls r3,r3,#2
 193 0112 1344     	 add r3,r3,r2
 194 0114 1B68     	 ldr r3,[r3]
 195 0116 3B62     	 str r3,[r7,#32]
  48:../4g_module/pb_common.c ****             uint32_t word3 = PB_PROGMEM_READU32(iter->descriptor->field_info[iter->field_info_index
 196              	 .loc 1 48 0
 197 0118 7B68     	 ldr r3,[r7,#4]
 198 011a 1B68     	 ldr r3,[r3]
 199 011c 1A68     	 ldr r2,[r3]
 200 011e 7B68     	 ldr r3,[r7,#4]
 201 0120 5B89     	 ldrh r3,[r3,#10]
 202 0122 0333     	 adds r3,r3,#3
 203 0124 9B00     	 lsls r3,r3,#2
 204 0126 1344     	 add r3,r3,r2
 205 0128 1B68     	 ldr r3,[r3]
 206 012a FB61     	 str r3,[r7,#28]
  49:../4g_module/pb_common.c **** 
  50:../4g_module/pb_common.c ****             iter->array_size = (pb_size_t)(word0 >> 16);
 207              	 .loc 1 50 0
 208 012c FB6A     	 ldr r3,[r7,#44]
 209 012e 1B0C     	 lsrs r3,r3,#16
 210 0130 9AB2     	 uxth r2,r3
 211 0132 7B68     	 ldr r3,[r7,#4]
 212 0134 9A82     	 strh r2,[r3,#20]
  51:../4g_module/pb_common.c ****             iter->tag = (pb_size_t)(((word0 >> 2) & 0x3F) | ((word1 >> 8) << 6));
 213              	 .loc 1 51 0
 214 0136 FB6A     	 ldr r3,[r7,#44]
 215 0138 9B08     	 lsrs r3,r3,#2
 216 013a 9BB2     	 uxth r3,r3
 217 013c 03F03F03 	 and r3,r3,#63
 218 0140 9AB2     	 uxth r2,r3
 219 0142 7B6A     	 ldr r3,[r7,#36]
 220 0144 1B0A     	 lsrs r3,r3,#8
 221 0146 9BB2     	 uxth r3,r3
 222 0148 9B01     	 lsls r3,r3,#6
 223 014a 9BB2     	 uxth r3,r3
 224 014c 1343     	 orrs r3,r3,r2
 225 014e 9AB2     	 uxth r2,r3
 226 0150 7B68     	 ldr r3,[r7,#4]
 227 0152 1A82     	 strh r2,[r3,#16]
  52:../4g_module/pb_common.c ****             size_offset = (int_least8_t)(word1 & 0xFF);
 228              	 .loc 1 52 0
 229 0154 7B6A     	 ldr r3,[r7,#36]
 230 0156 87F83330 	 strb r3,[r7,#51]
  53:../4g_module/pb_common.c ****             data_offset = word2;
 231              	 .loc 1 53 0
 232 015a 3B6A     	 ldr r3,[r7,#32]
 233 015c 7B63     	 str r3,[r7,#52]
  54:../4g_module/pb_common.c ****             iter->data_size = (pb_size_t)word3;
 234              	 .loc 1 54 0
 235 015e FB69     	 ldr r3,[r7,#28]
 236 0160 9AB2     	 uxth r2,r3
 237 0162 7B68     	 ldr r3,[r7,#4]
 238 0164 5A82     	 strh r2,[r3,#18]
  55:../4g_module/pb_common.c ****             break;
 239              	 .loc 1 55 0
 240 0166 44E0     	 b .L8
 241              	.L19:
 242              	.LBE3:
 243              	.LBB4:
  56:../4g_module/pb_common.c ****         }
  57:../4g_module/pb_common.c **** 
  58:../4g_module/pb_common.c ****         default: {
  59:../4g_module/pb_common.c ****             /* 8-word format */
  60:../4g_module/pb_common.c ****             uint32_t word1 = PB_PROGMEM_READU32(iter->descriptor->field_info[iter->field_info_index
 244              	 .loc 1 60 0
 245 0168 7B68     	 ldr r3,[r7,#4]
 246 016a 1B68     	 ldr r3,[r3]
 247 016c 1A68     	 ldr r2,[r3]
 248 016e 7B68     	 ldr r3,[r7,#4]
 249 0170 5B89     	 ldrh r3,[r3,#10]
 250 0172 0133     	 adds r3,r3,#1
 251 0174 9B00     	 lsls r3,r3,#2
 252 0176 1344     	 add r3,r3,r2
 253 0178 1B68     	 ldr r3,[r3]
 254 017a BB61     	 str r3,[r7,#24]
  61:../4g_module/pb_common.c ****             uint32_t word2 = PB_PROGMEM_READU32(iter->descriptor->field_info[iter->field_info_index
 255              	 .loc 1 61 0
 256 017c 7B68     	 ldr r3,[r7,#4]
 257 017e 1B68     	 ldr r3,[r3]
 258 0180 1A68     	 ldr r2,[r3]
 259 0182 7B68     	 ldr r3,[r7,#4]
 260 0184 5B89     	 ldrh r3,[r3,#10]
 261 0186 0233     	 adds r3,r3,#2
 262 0188 9B00     	 lsls r3,r3,#2
 263 018a 1344     	 add r3,r3,r2
 264 018c 1B68     	 ldr r3,[r3]
 265 018e 7B61     	 str r3,[r7,#20]
  62:../4g_module/pb_common.c ****             uint32_t word3 = PB_PROGMEM_READU32(iter->descriptor->field_info[iter->field_info_index
 266              	 .loc 1 62 0
 267 0190 7B68     	 ldr r3,[r7,#4]
 268 0192 1B68     	 ldr r3,[r3]
 269 0194 1A68     	 ldr r2,[r3]
 270 0196 7B68     	 ldr r3,[r7,#4]
 271 0198 5B89     	 ldrh r3,[r3,#10]
 272 019a 0333     	 adds r3,r3,#3
 273 019c 9B00     	 lsls r3,r3,#2
 274 019e 1344     	 add r3,r3,r2
 275 01a0 1B68     	 ldr r3,[r3]
 276 01a2 3B61     	 str r3,[r7,#16]
  63:../4g_module/pb_common.c ****             uint32_t word4 = PB_PROGMEM_READU32(iter->descriptor->field_info[iter->field_info_index
 277              	 .loc 1 63 0
 278 01a4 7B68     	 ldr r3,[r7,#4]
 279 01a6 1B68     	 ldr r3,[r3]
 280 01a8 1A68     	 ldr r2,[r3]
 281 01aa 7B68     	 ldr r3,[r7,#4]
 282 01ac 5B89     	 ldrh r3,[r3,#10]
 283 01ae 0433     	 adds r3,r3,#4
 284 01b0 9B00     	 lsls r3,r3,#2
 285 01b2 1344     	 add r3,r3,r2
 286 01b4 1B68     	 ldr r3,[r3]
 287 01b6 FB60     	 str r3,[r7,#12]
  64:../4g_module/pb_common.c **** 
  65:../4g_module/pb_common.c ****             iter->array_size = (pb_size_t)word4;
 288              	 .loc 1 65 0
 289 01b8 FB68     	 ldr r3,[r7,#12]
 290 01ba 9AB2     	 uxth r2,r3
 291 01bc 7B68     	 ldr r3,[r7,#4]
 292 01be 9A82     	 strh r2,[r3,#20]
  66:../4g_module/pb_common.c ****             iter->tag = (pb_size_t)(((word0 >> 2) & 0x3F) | ((word1 >> 8) << 6));
 293              	 .loc 1 66 0
 294 01c0 FB6A     	 ldr r3,[r7,#44]
 295 01c2 9B08     	 lsrs r3,r3,#2
 296 01c4 9BB2     	 uxth r3,r3
 297 01c6 03F03F03 	 and r3,r3,#63
 298 01ca 9AB2     	 uxth r2,r3
 299 01cc BB69     	 ldr r3,[r7,#24]
 300 01ce 1B0A     	 lsrs r3,r3,#8
 301 01d0 9BB2     	 uxth r3,r3
 302 01d2 9B01     	 lsls r3,r3,#6
 303 01d4 9BB2     	 uxth r3,r3
 304 01d6 1343     	 orrs r3,r3,r2
 305 01d8 9AB2     	 uxth r2,r3
 306 01da 7B68     	 ldr r3,[r7,#4]
 307 01dc 1A82     	 strh r2,[r3,#16]
  67:../4g_module/pb_common.c ****             size_offset = (int_least8_t)(word1 & 0xFF);
 308              	 .loc 1 67 0
 309 01de BB69     	 ldr r3,[r7,#24]
 310 01e0 87F83330 	 strb r3,[r7,#51]
  68:../4g_module/pb_common.c ****             data_offset = word2;
 311              	 .loc 1 68 0
 312 01e4 7B69     	 ldr r3,[r7,#20]
 313 01e6 7B63     	 str r3,[r7,#52]
  69:../4g_module/pb_common.c ****             iter->data_size = (pb_size_t)word3;
 314              	 .loc 1 69 0
 315 01e8 3B69     	 ldr r3,[r7,#16]
 316 01ea 9AB2     	 uxth r2,r3
 317 01ec 7B68     	 ldr r3,[r7,#4]
 318 01ee 5A82     	 strh r2,[r3,#18]
  70:../4g_module/pb_common.c ****             break;
 319              	 .loc 1 70 0
 320 01f0 00BF     	 nop
 321              	.L8:
 322              	.LBE4:
  71:../4g_module/pb_common.c ****         }
  72:../4g_module/pb_common.c ****     }
  73:../4g_module/pb_common.c **** 
  74:../4g_module/pb_common.c ****     if (!iter->message)
 323              	 .loc 1 74 0
 324 01f2 7B68     	 ldr r3,[r7,#4]
 325 01f4 5B68     	 ldr r3,[r3,#4]
 326 01f6 002B     	 cmp r3,#0
 327 01f8 06D1     	 bne .L9
  75:../4g_module/pb_common.c ****     {
  76:../4g_module/pb_common.c ****         /* Avoid doing arithmetic on null pointers, it is undefined */
  77:../4g_module/pb_common.c ****         iter->pField = NULL;
 328              	 .loc 1 77 0
 329 01fa 7B68     	 ldr r3,[r7,#4]
 330 01fc 0022     	 movs r2,#0
 331 01fe 9A61     	 str r2,[r3,#24]
  78:../4g_module/pb_common.c ****         iter->pSize = NULL;
 332              	 .loc 1 78 0
 333 0200 7B68     	 ldr r3,[r7,#4]
 334 0202 0022     	 movs r2,#0
 335 0204 1A62     	 str r2,[r3,#32]
 336 0206 41E0     	 b .L10
 337              	.L9:
  79:../4g_module/pb_common.c ****     }
  80:../4g_module/pb_common.c ****     else
  81:../4g_module/pb_common.c ****     {
  82:../4g_module/pb_common.c ****         iter->pField = (char*)iter->message + data_offset;
 338              	 .loc 1 82 0
 339 0208 7B68     	 ldr r3,[r7,#4]
 340 020a 5A68     	 ldr r2,[r3,#4]
 341 020c 7B6B     	 ldr r3,[r7,#52]
 342 020e 1A44     	 add r2,r2,r3
 343 0210 7B68     	 ldr r3,[r7,#4]
 344 0212 9A61     	 str r2,[r3,#24]
  83:../4g_module/pb_common.c **** 
  84:../4g_module/pb_common.c ****         if (size_offset)
 345              	 .loc 1 84 0
 346 0214 97F93330 	 ldrsb r3,[r7,#51]
 347 0218 002B     	 cmp r3,#0
 348 021a 08D0     	 beq .L11
  85:../4g_module/pb_common.c ****         {
  86:../4g_module/pb_common.c ****             iter->pSize = (char*)iter->pField - size_offset;
 349              	 .loc 1 86 0
 350 021c 7B68     	 ldr r3,[r7,#4]
 351 021e 9A69     	 ldr r2,[r3,#24]
 352 0220 97F93330 	 ldrsb r3,[r7,#51]
 353 0224 5B42     	 negs r3,r3
 354 0226 1A44     	 add r2,r2,r3
 355 0228 7B68     	 ldr r3,[r7,#4]
 356 022a 1A62     	 str r2,[r3,#32]
 357 022c 1AE0     	 b .L12
 358              	.L11:
  87:../4g_module/pb_common.c ****         }
  88:../4g_module/pb_common.c ****         else if (PB_HTYPE(iter->type) == PB_HTYPE_REPEATED &&
 359              	 .loc 1 88 0
 360 022e 7B68     	 ldr r3,[r7,#4]
 361 0230 9B7D     	 ldrb r3,[r3,#22]
 362 0232 03F03003 	 and r3,r3,#48
 363 0236 202B     	 cmp r3,#32
 364 0238 11D1     	 bne .L13
  89:../4g_module/pb_common.c ****                  (PB_ATYPE(iter->type) == PB_ATYPE_STATIC ||
 365              	 .loc 1 89 0 discriminator 1
 366 023a 7B68     	 ldr r3,[r7,#4]
 367 023c 9B7D     	 ldrb r3,[r3,#22]
 368 023e 03F0C003 	 and r3,r3,#192
  88:../4g_module/pb_common.c ****                  (PB_ATYPE(iter->type) == PB_ATYPE_STATIC ||
 369              	 .loc 1 88 0 discriminator 1
 370 0242 002B     	 cmp r3,#0
 371 0244 05D0     	 beq .L14
  90:../4g_module/pb_common.c ****                   PB_ATYPE(iter->type) == PB_ATYPE_POINTER))
 372              	 .loc 1 90 0
 373 0246 7B68     	 ldr r3,[r7,#4]
 374 0248 9B7D     	 ldrb r3,[r3,#22]
 375 024a 03F0C003 	 and r3,r3,#192
  89:../4g_module/pb_common.c ****                  (PB_ATYPE(iter->type) == PB_ATYPE_STATIC ||
 376              	 .loc 1 89 0
 377 024e 802B     	 cmp r3,#128
 378 0250 05D1     	 bne .L13
 379              	.L14:
  91:../4g_module/pb_common.c ****         {
  92:../4g_module/pb_common.c ****             /* Fixed count array */
  93:../4g_module/pb_common.c ****             iter->pSize = &iter->array_size;
 380              	 .loc 1 93 0
 381 0252 7B68     	 ldr r3,[r7,#4]
 382 0254 03F11402 	 add r2,r3,#20
 383 0258 7B68     	 ldr r3,[r7,#4]
 384 025a 1A62     	 str r2,[r3,#32]
 385 025c 02E0     	 b .L12
 386              	.L13:
  94:../4g_module/pb_common.c ****         }
  95:../4g_module/pb_common.c ****         else
  96:../4g_module/pb_common.c ****         {
  97:../4g_module/pb_common.c ****             iter->pSize = NULL;
 387              	 .loc 1 97 0
 388 025e 7B68     	 ldr r3,[r7,#4]
 389 0260 0022     	 movs r2,#0
 390 0262 1A62     	 str r2,[r3,#32]
 391              	.L12:
  98:../4g_module/pb_common.c ****         }
  99:../4g_module/pb_common.c **** 
 100:../4g_module/pb_common.c ****         if (PB_ATYPE(iter->type) == PB_ATYPE_POINTER && iter->pField != NULL)
 392              	 .loc 1 100 0
 393 0264 7B68     	 ldr r3,[r7,#4]
 394 0266 9B7D     	 ldrb r3,[r3,#22]
 395 0268 03F0C003 	 and r3,r3,#192
 396 026c 802B     	 cmp r3,#128
 397 026e 09D1     	 bne .L15
 398              	 .loc 1 100 0 is_stmt 0 discriminator 1
 399 0270 7B68     	 ldr r3,[r7,#4]
 400 0272 9B69     	 ldr r3,[r3,#24]
 401 0274 002B     	 cmp r3,#0
 402 0276 05D0     	 beq .L15
 101:../4g_module/pb_common.c ****         {
 102:../4g_module/pb_common.c ****             iter->pData = *(void**)iter->pField;
 403              	 .loc 1 102 0 is_stmt 1
 404 0278 7B68     	 ldr r3,[r7,#4]
 405 027a 9B69     	 ldr r3,[r3,#24]
 406 027c 1A68     	 ldr r2,[r3]
 407 027e 7B68     	 ldr r3,[r7,#4]
 408 0280 DA61     	 str r2,[r3,#28]
 409 0282 03E0     	 b .L10
 410              	.L15:
 103:../4g_module/pb_common.c ****         }
 104:../4g_module/pb_common.c ****         else
 105:../4g_module/pb_common.c ****         {
 106:../4g_module/pb_common.c ****             iter->pData = iter->pField;
 411              	 .loc 1 106 0
 412 0284 7B68     	 ldr r3,[r7,#4]
 413 0286 9A69     	 ldr r2,[r3,#24]
 414 0288 7B68     	 ldr r3,[r7,#4]
 415 028a DA61     	 str r2,[r3,#28]
 416              	.L10:
 107:../4g_module/pb_common.c ****         }
 108:../4g_module/pb_common.c ****     }
 109:../4g_module/pb_common.c **** 
 110:../4g_module/pb_common.c ****     if (PB_LTYPE_IS_SUBMSG(iter->type))
 417              	 .loc 1 110 0
 418 028c 7B68     	 ldr r3,[r7,#4]
 419 028e 9B7D     	 ldrb r3,[r3,#22]
 420 0290 03F00F03 	 and r3,r3,#15
 421 0294 082B     	 cmp r3,#8
 422 0296 05D0     	 beq .L16
 423              	 .loc 1 110 0 is_stmt 0 discriminator 1
 424 0298 7B68     	 ldr r3,[r7,#4]
 425 029a 9B7D     	 ldrb r3,[r3,#22]
 426 029c 03F00F03 	 and r3,r3,#15
 427 02a0 092B     	 cmp r3,#9
 428 02a2 0AD1     	 bne .L17
 429              	.L16:
 111:../4g_module/pb_common.c ****     {
 112:../4g_module/pb_common.c ****         iter->submsg_desc = iter->descriptor->submsg_info[iter->submessage_index];
 430              	 .loc 1 112 0 is_stmt 1
 431 02a4 7B68     	 ldr r3,[r7,#4]
 432 02a6 1B68     	 ldr r3,[r3]
 433 02a8 5A68     	 ldr r2,[r3,#4]
 434 02aa 7B68     	 ldr r3,[r7,#4]
 435 02ac DB89     	 ldrh r3,[r3,#14]
 436 02ae 9B00     	 lsls r3,r3,#2
 437 02b0 1344     	 add r3,r3,r2
 438 02b2 1A68     	 ldr r2,[r3]
 439 02b4 7B68     	 ldr r3,[r7,#4]
 440 02b6 5A62     	 str r2,[r3,#36]
 441 02b8 02E0     	 b .L18
 442              	.L17:
 113:../4g_module/pb_common.c ****     }
 114:../4g_module/pb_common.c ****     else
 115:../4g_module/pb_common.c ****     {
 116:../4g_module/pb_common.c ****         iter->submsg_desc = NULL;
 443              	 .loc 1 116 0
 444 02ba 7B68     	 ldr r3,[r7,#4]
 445 02bc 0022     	 movs r2,#0
 446 02be 5A62     	 str r2,[r3,#36]
 447              	.L18:
 117:../4g_module/pb_common.c ****     }
 118:../4g_module/pb_common.c **** 
 119:../4g_module/pb_common.c ****     return true;
 448              	 .loc 1 119 0
 449 02c0 0123     	 movs r3,#1
 450              	.L3:
 120:../4g_module/pb_common.c **** }
 451              	 .loc 1 120 0
 452 02c2 1846     	 mov r0,r3
 453 02c4 3C37     	 adds r7,r7,#60
 454              	.LCFI3:
 455              	 .cfi_def_cfa_offset 4
 456 02c6 BD46     	 mov sp,r7
 457              	.LCFI4:
 458              	 .cfi_def_cfa_register 13
 459              	 
 460 02c8 5DF8047B 	 ldr r7,[sp],#4
 461              	.LCFI5:
 462              	 .cfi_restore 7
 463              	 .cfi_def_cfa_offset 0
 464 02cc 7047     	 bx lr
 465              	 .cfi_endproc
 466              	.LFE0:
 468 02ce 00BF     	 .section .text.advance_iterator,"ax",%progbits
 469              	 .align 2
 470              	 .thumb
 471              	 .thumb_func
 473              	advance_iterator:
 474              	.LFB1:
 121:../4g_module/pb_common.c **** 
 122:../4g_module/pb_common.c **** static void advance_iterator(pb_field_iter_t *iter)
 123:../4g_module/pb_common.c **** {
 475              	 .loc 1 123 0
 476              	 .cfi_startproc
 477              	 
 478              	 
 479              	 
 480 0000 80B4     	 push {r7}
 481              	.LCFI6:
 482              	 .cfi_def_cfa_offset 4
 483              	 .cfi_offset 7,-4
 484 0002 85B0     	 sub sp,sp,#20
 485              	.LCFI7:
 486              	 .cfi_def_cfa_offset 24
 487 0004 00AF     	 add r7,sp,#0
 488              	.LCFI8:
 489              	 .cfi_def_cfa_register 7
 490 0006 7860     	 str r0,[r7,#4]
 124:../4g_module/pb_common.c ****     iter->index++;
 491              	 .loc 1 124 0
 492 0008 7B68     	 ldr r3,[r7,#4]
 493 000a 1B89     	 ldrh r3,[r3,#8]
 494 000c 0133     	 adds r3,r3,#1
 495 000e 9AB2     	 uxth r2,r3
 496 0010 7B68     	 ldr r3,[r7,#4]
 497 0012 1A81     	 strh r2,[r3,#8]
 125:../4g_module/pb_common.c **** 
 126:../4g_module/pb_common.c ****     if (iter->index >= iter->descriptor->field_count)
 498              	 .loc 1 126 0
 499 0014 7B68     	 ldr r3,[r7,#4]
 500 0016 1A89     	 ldrh r2,[r3,#8]
 501 0018 7B68     	 ldr r3,[r7,#4]
 502 001a 1B68     	 ldr r3,[r3]
 503 001c 1B8A     	 ldrh r3,[r3,#16]
 504 001e 9A42     	 cmp r2,r3
 505 0020 0CD3     	 bcc .L21
 127:../4g_module/pb_common.c ****     {
 128:../4g_module/pb_common.c ****         /* Restart */
 129:../4g_module/pb_common.c ****         iter->index = 0;
 506              	 .loc 1 129 0
 507 0022 7B68     	 ldr r3,[r7,#4]
 508 0024 0022     	 movs r2,#0
 509 0026 1A81     	 strh r2,[r3,#8]
 130:../4g_module/pb_common.c ****         iter->field_info_index = 0;
 510              	 .loc 1 130 0
 511 0028 7B68     	 ldr r3,[r7,#4]
 512 002a 0022     	 movs r2,#0
 513 002c 5A81     	 strh r2,[r3,#10]
 131:../4g_module/pb_common.c ****         iter->submessage_index = 0;
 514              	 .loc 1 131 0
 515 002e 7B68     	 ldr r3,[r7,#4]
 516 0030 0022     	 movs r2,#0
 517 0032 DA81     	 strh r2,[r3,#14]
 132:../4g_module/pb_common.c ****         iter->required_field_index = 0;
 518              	 .loc 1 132 0
 519 0034 7B68     	 ldr r3,[r7,#4]
 520 0036 0022     	 movs r2,#0
 521 0038 9A81     	 strh r2,[r3,#12]
 522 003a 3CE0     	 b .L20
 523              	.L21:
 524              	.LBB5:
 133:../4g_module/pb_common.c ****     }
 134:../4g_module/pb_common.c ****     else
 135:../4g_module/pb_common.c ****     {
 136:../4g_module/pb_common.c ****         /* Increment indexes based on previous field type.
 137:../4g_module/pb_common.c ****          * All field info formats have the following fields:
 138:../4g_module/pb_common.c ****          * - lowest 2 bits tell the amount of words in the descriptor (2^n words)
 139:../4g_module/pb_common.c ****          * - bits 2..7 give the lowest bits of tag number.
 140:../4g_module/pb_common.c ****          * - bits 8..15 give the field type.
 141:../4g_module/pb_common.c ****          */
 142:../4g_module/pb_common.c ****         uint32_t prev_descriptor = PB_PROGMEM_READU32(iter->descriptor->field_info[iter->field_info
 525              	 .loc 1 142 0
 526 003c 7B68     	 ldr r3,[r7,#4]
 527 003e 1B68     	 ldr r3,[r3]
 528 0040 1A68     	 ldr r2,[r3]
 529 0042 7B68     	 ldr r3,[r7,#4]
 530 0044 5B89     	 ldrh r3,[r3,#10]
 531 0046 9B00     	 lsls r3,r3,#2
 532 0048 1344     	 add r3,r3,r2
 533 004a 1B68     	 ldr r3,[r3]
 534 004c FB60     	 str r3,[r7,#12]
 143:../4g_module/pb_common.c ****         pb_type_t prev_type = (prev_descriptor >> 8) & 0xFF;
 535              	 .loc 1 143 0
 536 004e FB68     	 ldr r3,[r7,#12]
 537 0050 1B0A     	 lsrs r3,r3,#8
 538 0052 FB72     	 strb r3,[r7,#11]
 144:../4g_module/pb_common.c ****         pb_size_t descriptor_len = (pb_size_t)(1 << (prev_descriptor & 3));
 539              	 .loc 1 144 0
 540 0054 FB68     	 ldr r3,[r7,#12]
 541 0056 03F00303 	 and r3,r3,#3
 542 005a 0122     	 movs r2,#1
 543 005c 02FA03F3 	 lsl r3,r2,r3
 544 0060 3B81     	 strh r3,[r7,#8]
 145:../4g_module/pb_common.c **** 
 146:../4g_module/pb_common.c ****         /* Add to fields.
 147:../4g_module/pb_common.c ****          * The cast to pb_size_t is needed to avoid -Wconversion warning.
 148:../4g_module/pb_common.c ****          * Because the data is is constants from generator, there is no danger of overflow.
 149:../4g_module/pb_common.c ****          */
 150:../4g_module/pb_common.c ****         iter->field_info_index = (pb_size_t)(iter->field_info_index + descriptor_len);
 545              	 .loc 1 150 0
 546 0062 7B68     	 ldr r3,[r7,#4]
 547 0064 5A89     	 ldrh r2,[r3,#10]
 548 0066 3B89     	 ldrh r3,[r7,#8]
 549 0068 1344     	 add r3,r3,r2
 550 006a 9AB2     	 uxth r2,r3
 551 006c 7B68     	 ldr r3,[r7,#4]
 552 006e 5A81     	 strh r2,[r3,#10]
 151:../4g_module/pb_common.c ****         iter->required_field_index = (pb_size_t)(iter->required_field_index + (PB_HTYPE(prev_type) 
 553              	 .loc 1 151 0
 554 0070 7B68     	 ldr r3,[r7,#4]
 555 0072 9A89     	 ldrh r2,[r3,#12]
 556 0074 FB7A     	 ldrb r3,[r7,#11]
 557 0076 03F03003 	 and r3,r3,#48
 558 007a 002B     	 cmp r3,#0
 559 007c 0CBF     	 ite eq
 560 007e 0123     	 moveq r3,#1
 561 0080 0023     	 movne r3,#0
 562 0082 DBB2     	 uxtb r3,r3
 563 0084 9BB2     	 uxth r3,r3
 564 0086 1344     	 add r3,r3,r2
 565 0088 9AB2     	 uxth r2,r3
 566 008a 7B68     	 ldr r3,[r7,#4]
 567 008c 9A81     	 strh r2,[r3,#12]
 152:../4g_module/pb_common.c ****         iter->submessage_index = (pb_size_t)(iter->submessage_index + PB_LTYPE_IS_SUBMSG(prev_type)
 568              	 .loc 1 152 0
 569 008e 7B68     	 ldr r3,[r7,#4]
 570 0090 DA89     	 ldrh r2,[r3,#14]
 571 0092 FB7A     	 ldrb r3,[r7,#11]
 572 0094 03F00F03 	 and r3,r3,#15
 573 0098 082B     	 cmp r3,#8
 574 009a 04D0     	 beq .L23
 575              	 .loc 1 152 0 is_stmt 0 discriminator 2
 576 009c FB7A     	 ldrb r3,[r7,#11]
 577 009e 03F00F03 	 and r3,r3,#15
 578 00a2 092B     	 cmp r3,#9
 579 00a4 01D1     	 bne .L24
 580              	.L23:
 581              	 .loc 1 152 0 discriminator 3
 582 00a6 0123     	 movs r3,#1
 583 00a8 00E0     	 b .L25
 584              	.L24:
 585              	 .loc 1 152 0 discriminator 4
 586 00aa 0023     	 movs r3,#0
 587              	.L25:
 588              	 .loc 1 152 0 discriminator 6
 589 00ac 9BB2     	 uxth r3,r3
 590 00ae 1344     	 add r3,r3,r2
 591 00b0 9AB2     	 uxth r2,r3
 592 00b2 7B68     	 ldr r3,[r7,#4]
 593 00b4 DA81     	 strh r2,[r3,#14]
 594              	.L20:
 595              	.LBE5:
 153:../4g_module/pb_common.c ****     }
 154:../4g_module/pb_common.c **** }
 596              	 .loc 1 154 0 is_stmt 1
 597 00b6 1437     	 adds r7,r7,#20
 598              	.LCFI9:
 599              	 .cfi_def_cfa_offset 4
 600 00b8 BD46     	 mov sp,r7
 601              	.LCFI10:
 602              	 .cfi_def_cfa_register 13
 603              	 
 604 00ba 5DF8047B 	 ldr r7,[sp],#4
 605              	.LCFI11:
 606              	 .cfi_restore 7
 607              	 .cfi_def_cfa_offset 0
 608 00be 7047     	 bx lr
 609              	 .cfi_endproc
 610              	.LFE1:
 612              	 .section .text.pb_field_iter_begin,"ax",%progbits
 613              	 .align 2
 614              	 .global pb_field_iter_begin
 615              	 .thumb
 616              	 .thumb_func
 618              	pb_field_iter_begin:
 619              	.LFB2:
 155:../4g_module/pb_common.c **** 
 156:../4g_module/pb_common.c **** bool pb_field_iter_begin(pb_field_iter_t *iter, const pb_msgdesc_t *desc, void *message)
 157:../4g_module/pb_common.c **** {
 620              	 .loc 1 157 0
 621              	 .cfi_startproc
 622              	 
 623              	 
 624 0000 80B5     	 push {r7,lr}
 625              	.LCFI12:
 626              	 .cfi_def_cfa_offset 8
 627              	 .cfi_offset 7,-8
 628              	 .cfi_offset 14,-4
 629 0002 84B0     	 sub sp,sp,#16
 630              	.LCFI13:
 631              	 .cfi_def_cfa_offset 24
 632 0004 00AF     	 add r7,sp,#0
 633              	.LCFI14:
 634              	 .cfi_def_cfa_register 7
 635 0006 F860     	 str r0,[r7,#12]
 636 0008 B960     	 str r1,[r7,#8]
 637 000a 7A60     	 str r2,[r7,#4]
 158:../4g_module/pb_common.c ****     memset(iter, 0, sizeof(*iter));
 638              	 .loc 1 158 0
 639 000c F868     	 ldr r0,[r7,#12]
 640 000e 0021     	 movs r1,#0
 641 0010 2822     	 movs r2,#40
 642 0012 FFF7FEFF 	 bl memset
 159:../4g_module/pb_common.c **** 
 160:../4g_module/pb_common.c ****     iter->descriptor = desc;
 643              	 .loc 1 160 0
 644 0016 FB68     	 ldr r3,[r7,#12]
 645 0018 BA68     	 ldr r2,[r7,#8]
 646 001a 1A60     	 str r2,[r3]
 161:../4g_module/pb_common.c ****     iter->message = message;
 647              	 .loc 1 161 0
 648 001c FB68     	 ldr r3,[r7,#12]
 649 001e 7A68     	 ldr r2,[r7,#4]
 650 0020 5A60     	 str r2,[r3,#4]
 162:../4g_module/pb_common.c **** 
 163:../4g_module/pb_common.c ****     return load_descriptor_values(iter);
 651              	 .loc 1 163 0
 652 0022 F868     	 ldr r0,[r7,#12]
 653 0024 FFF7FEFF 	 bl load_descriptor_values
 654 0028 0346     	 mov r3,r0
 164:../4g_module/pb_common.c **** }
 655              	 .loc 1 164 0
 656 002a 1846     	 mov r0,r3
 657 002c 1037     	 adds r7,r7,#16
 658              	.LCFI15:
 659              	 .cfi_def_cfa_offset 8
 660 002e BD46     	 mov sp,r7
 661              	.LCFI16:
 662              	 .cfi_def_cfa_register 13
 663              	 
 664 0030 80BD     	 pop {r7,pc}
 665              	 .cfi_endproc
 666              	.LFE2:
 668 0032 00BF     	 .section .text.pb_field_iter_begin_extension,"ax",%progbits
 669              	 .align 2
 670              	 .global pb_field_iter_begin_extension
 671              	 .thumb
 672              	 .thumb_func
 674              	pb_field_iter_begin_extension:
 675              	.LFB3:
 165:../4g_module/pb_common.c **** 
 166:../4g_module/pb_common.c **** bool pb_field_iter_begin_extension(pb_field_iter_t *iter, pb_extension_t *extension)
 167:../4g_module/pb_common.c **** {
 676              	 .loc 1 167 0
 677              	 .cfi_startproc
 678              	 
 679              	 
 680 0000 80B5     	 push {r7,lr}
 681              	.LCFI17:
 682              	 .cfi_def_cfa_offset 8
 683              	 .cfi_offset 7,-8
 684              	 .cfi_offset 14,-4
 685 0002 86B0     	 sub sp,sp,#24
 686              	.LCFI18:
 687              	 .cfi_def_cfa_offset 32
 688 0004 00AF     	 add r7,sp,#0
 689              	.LCFI19:
 690              	 .cfi_def_cfa_register 7
 691 0006 7860     	 str r0,[r7,#4]
 692 0008 3960     	 str r1,[r7]
 168:../4g_module/pb_common.c ****     const pb_msgdesc_t *msg = (const pb_msgdesc_t*)extension->type->arg;
 693              	 .loc 1 168 0
 694 000a 3B68     	 ldr r3,[r7]
 695 000c 1B68     	 ldr r3,[r3]
 696 000e 9B68     	 ldr r3,[r3,#8]
 697 0010 3B61     	 str r3,[r7,#16]
 169:../4g_module/pb_common.c ****     bool status;
 170:../4g_module/pb_common.c **** 
 171:../4g_module/pb_common.c ****     uint32_t word0 = PB_PROGMEM_READU32(msg->field_info[0]);
 698              	 .loc 1 171 0
 699 0012 3B69     	 ldr r3,[r7,#16]
 700 0014 1B68     	 ldr r3,[r3]
 701 0016 1B68     	 ldr r3,[r3]
 702 0018 FB60     	 str r3,[r7,#12]
 172:../4g_module/pb_common.c ****     if (PB_ATYPE(word0 >> 8) == PB_ATYPE_POINTER)
 703              	 .loc 1 172 0
 704 001a FB68     	 ldr r3,[r7,#12]
 705 001c 1B0A     	 lsrs r3,r3,#8
 706 001e 03F0C003 	 and r3,r3,#192
 707 0022 802B     	 cmp r3,#128
 708 0024 09D1     	 bne .L29
 173:../4g_module/pb_common.c ****     {
 174:../4g_module/pb_common.c ****         /* For pointer extensions, the pointer is stored directly
 175:../4g_module/pb_common.c ****          * in the extension structure. This avoids having an extra
 176:../4g_module/pb_common.c ****          * indirection. */
 177:../4g_module/pb_common.c ****         status = pb_field_iter_begin(iter, msg, &extension->dest);
 709              	 .loc 1 177 0
 710 0026 3B68     	 ldr r3,[r7]
 711 0028 0433     	 adds r3,r3,#4
 712 002a 7868     	 ldr r0,[r7,#4]
 713 002c 3969     	 ldr r1,[r7,#16]
 714 002e 1A46     	 mov r2,r3
 715 0030 FFF7FEFF 	 bl pb_field_iter_begin
 716 0034 0346     	 mov r3,r0
 717 0036 FB75     	 strb r3,[r7,#23]
 718 0038 08E0     	 b .L30
 719              	.L29:
 178:../4g_module/pb_common.c ****     }
 179:../4g_module/pb_common.c ****     else
 180:../4g_module/pb_common.c ****     {
 181:../4g_module/pb_common.c ****         status = pb_field_iter_begin(iter, msg, extension->dest);
 720              	 .loc 1 181 0
 721 003a 3B68     	 ldr r3,[r7]
 722 003c 5B68     	 ldr r3,[r3,#4]
 723 003e 7868     	 ldr r0,[r7,#4]
 724 0040 3969     	 ldr r1,[r7,#16]
 725 0042 1A46     	 mov r2,r3
 726 0044 FFF7FEFF 	 bl pb_field_iter_begin
 727 0048 0346     	 mov r3,r0
 728 004a FB75     	 strb r3,[r7,#23]
 729              	.L30:
 182:../4g_module/pb_common.c ****     }
 183:../4g_module/pb_common.c **** 
 184:../4g_module/pb_common.c ****     iter->pSize = &extension->found;
 730              	 .loc 1 184 0
 731 004c 3B68     	 ldr r3,[r7]
 732 004e 03F10C02 	 add r2,r3,#12
 733 0052 7B68     	 ldr r3,[r7,#4]
 734 0054 1A62     	 str r2,[r3,#32]
 185:../4g_module/pb_common.c ****     return status;
 735              	 .loc 1 185 0
 736 0056 FB7D     	 ldrb r3,[r7,#23]
 186:../4g_module/pb_common.c **** }
 737              	 .loc 1 186 0
 738 0058 1846     	 mov r0,r3
 739 005a 1837     	 adds r7,r7,#24
 740              	.LCFI20:
 741              	 .cfi_def_cfa_offset 8
 742 005c BD46     	 mov sp,r7
 743              	.LCFI21:
 744              	 .cfi_def_cfa_register 13
 745              	 
 746 005e 80BD     	 pop {r7,pc}
 747              	 .cfi_endproc
 748              	.LFE3:
 750              	 .section .text.pb_field_iter_next,"ax",%progbits
 751              	 .align 2
 752              	 .global pb_field_iter_next
 753              	 .thumb
 754              	 .thumb_func
 756              	pb_field_iter_next:
 757              	.LFB4:
 187:../4g_module/pb_common.c **** 
 188:../4g_module/pb_common.c **** bool pb_field_iter_next(pb_field_iter_t *iter)
 189:../4g_module/pb_common.c **** {
 758              	 .loc 1 189 0
 759              	 .cfi_startproc
 760              	 
 761              	 
 762 0000 80B5     	 push {r7,lr}
 763              	.LCFI22:
 764              	 .cfi_def_cfa_offset 8
 765              	 .cfi_offset 7,-8
 766              	 .cfi_offset 14,-4
 767 0002 82B0     	 sub sp,sp,#8
 768              	.LCFI23:
 769              	 .cfi_def_cfa_offset 16
 770 0004 00AF     	 add r7,sp,#0
 771              	.LCFI24:
 772              	 .cfi_def_cfa_register 7
 773 0006 7860     	 str r0,[r7,#4]
 190:../4g_module/pb_common.c ****     advance_iterator(iter);
 774              	 .loc 1 190 0
 775 0008 7868     	 ldr r0,[r7,#4]
 776 000a FFF7FEFF 	 bl advance_iterator
 191:../4g_module/pb_common.c ****     (void)load_descriptor_values(iter);
 777              	 .loc 1 191 0
 778 000e 7868     	 ldr r0,[r7,#4]
 779 0010 FFF7FEFF 	 bl load_descriptor_values
 192:../4g_module/pb_common.c ****     return iter->index != 0;
 780              	 .loc 1 192 0
 781 0014 7B68     	 ldr r3,[r7,#4]
 782 0016 1B89     	 ldrh r3,[r3,#8]
 783 0018 002B     	 cmp r3,#0
 784 001a 14BF     	 ite ne
 785 001c 0123     	 movne r3,#1
 786 001e 0023     	 moveq r3,#0
 787 0020 DBB2     	 uxtb r3,r3
 193:../4g_module/pb_common.c **** }
 788              	 .loc 1 193 0
 789 0022 1846     	 mov r0,r3
 790 0024 0837     	 adds r7,r7,#8
 791              	.LCFI25:
 792              	 .cfi_def_cfa_offset 8
 793 0026 BD46     	 mov sp,r7
 794              	.LCFI26:
 795              	 .cfi_def_cfa_register 13
 796              	 
 797 0028 80BD     	 pop {r7,pc}
 798              	 .cfi_endproc
 799              	.LFE4:
 801 002a 00BF     	 .section .text.pb_field_iter_find,"ax",%progbits
 802              	 .align 2
 803              	 .global pb_field_iter_find
 804              	 .thumb
 805              	 .thumb_func
 807              	pb_field_iter_find:
 808              	.LFB5:
 194:../4g_module/pb_common.c **** 
 195:../4g_module/pb_common.c **** bool pb_field_iter_find(pb_field_iter_t *iter, uint32_t tag)
 196:../4g_module/pb_common.c **** {
 809              	 .loc 1 196 0
 810              	 .cfi_startproc
 811              	 
 812              	 
 813 0000 80B5     	 push {r7,lr}
 814              	.LCFI27:
 815              	 .cfi_def_cfa_offset 8
 816              	 .cfi_offset 7,-8
 817              	 .cfi_offset 14,-4
 818 0002 84B0     	 sub sp,sp,#16
 819              	.LCFI28:
 820              	 .cfi_def_cfa_offset 24
 821 0004 00AF     	 add r7,sp,#0
 822              	.LCFI29:
 823              	 .cfi_def_cfa_register 7
 824 0006 7860     	 str r0,[r7,#4]
 825 0008 3960     	 str r1,[r7]
 197:../4g_module/pb_common.c ****     if (iter->tag == tag)
 826              	 .loc 1 197 0
 827 000a 7B68     	 ldr r3,[r7,#4]
 828 000c 1B8A     	 ldrh r3,[r3,#16]
 829 000e 1A46     	 mov r2,r3
 830 0010 3B68     	 ldr r3,[r7]
 831 0012 9A42     	 cmp r2,r3
 832 0014 01D1     	 bne .L35
 198:../4g_module/pb_common.c ****     {
 199:../4g_module/pb_common.c ****         return true; /* Nothing to do, correct field already. */
 833              	 .loc 1 199 0
 834 0016 0123     	 movs r3,#1
 835 0018 44E0     	 b .L36
 836              	.L35:
 200:../4g_module/pb_common.c ****     }
 201:../4g_module/pb_common.c ****     else if (tag > iter->descriptor->largest_tag)
 837              	 .loc 1 201 0
 838 001a 7B68     	 ldr r3,[r7,#4]
 839 001c 1B68     	 ldr r3,[r3]
 840 001e 9B8A     	 ldrh r3,[r3,#20]
 841 0020 1A46     	 mov r2,r3
 842 0022 3B68     	 ldr r3,[r7]
 843 0024 9A42     	 cmp r2,r3
 844 0026 01D2     	 bcs .L37
 202:../4g_module/pb_common.c ****     {
 203:../4g_module/pb_common.c ****         return false;
 845              	 .loc 1 203 0
 846 0028 0023     	 movs r3,#0
 847 002a 3BE0     	 b .L36
 848              	.L37:
 849              	.LBB6:
 204:../4g_module/pb_common.c ****     }
 205:../4g_module/pb_common.c ****     else
 206:../4g_module/pb_common.c ****     {
 207:../4g_module/pb_common.c ****         pb_size_t start = iter->index;
 850              	 .loc 1 207 0
 851 002c 7B68     	 ldr r3,[r7,#4]
 852 002e 1B89     	 ldrh r3,[r3,#8]
 853 0030 FB81     	 strh r3,[r7,#14]
 208:../4g_module/pb_common.c ****         uint32_t fieldinfo;
 209:../4g_module/pb_common.c **** 
 210:../4g_module/pb_common.c ****         if (tag < iter->tag)
 854              	 .loc 1 210 0
 855 0032 7B68     	 ldr r3,[r7,#4]
 856 0034 1B8A     	 ldrh r3,[r3,#16]
 857 0036 1A46     	 mov r2,r3
 858 0038 3B68     	 ldr r3,[r7]
 859 003a 9A42     	 cmp r2,r3
 860 003c 04D9     	 bls .L38
 211:../4g_module/pb_common.c ****         {
 212:../4g_module/pb_common.c ****             /* Fields are in tag number order, so we know that tag is between
 213:../4g_module/pb_common.c ****              * 0 and our start position. Setting index to end forces
 214:../4g_module/pb_common.c ****              * advance_iterator() call below to restart from beginning. */
 215:../4g_module/pb_common.c ****             iter->index = iter->descriptor->field_count;
 861              	 .loc 1 215 0
 862 003e 7B68     	 ldr r3,[r7,#4]
 863 0040 1B68     	 ldr r3,[r3]
 864 0042 1A8A     	 ldrh r2,[r3,#16]
 865 0044 7B68     	 ldr r3,[r7,#4]
 866 0046 1A81     	 strh r2,[r3,#8]
 867              	.L38:
 216:../4g_module/pb_common.c ****         }
 217:../4g_module/pb_common.c **** 
 218:../4g_module/pb_common.c ****         do
 219:../4g_module/pb_common.c ****         {
 220:../4g_module/pb_common.c ****             /* Advance iterator but don't load values yet */
 221:../4g_module/pb_common.c ****             advance_iterator(iter);
 868              	 .loc 1 221 0
 869 0048 7868     	 ldr r0,[r7,#4]
 870 004a FFF7FEFF 	 bl advance_iterator
 222:../4g_module/pb_common.c **** 
 223:../4g_module/pb_common.c ****             /* Do fast check for tag number match */
 224:../4g_module/pb_common.c ****             fieldinfo = PB_PROGMEM_READU32(iter->descriptor->field_info[iter->field_info_index]);
 871              	 .loc 1 224 0
 872 004e 7B68     	 ldr r3,[r7,#4]
 873 0050 1B68     	 ldr r3,[r3]
 874 0052 1A68     	 ldr r2,[r3]
 875 0054 7B68     	 ldr r3,[r7,#4]
 876 0056 5B89     	 ldrh r3,[r3,#10]
 877 0058 9B00     	 lsls r3,r3,#2
 878 005a 1344     	 add r3,r3,r2
 879 005c 1B68     	 ldr r3,[r3]
 880 005e BB60     	 str r3,[r7,#8]
 225:../4g_module/pb_common.c **** 
 226:../4g_module/pb_common.c ****             if (((fieldinfo >> 2) & 0x3F) == (tag & 0x3F))
 881              	 .loc 1 226 0
 882 0060 BB68     	 ldr r3,[r7,#8]
 883 0062 9A08     	 lsrs r2,r3,#2
 884 0064 3B68     	 ldr r3,[r7]
 885 0066 5340     	 eors r3,r3,r2
 886 0068 03F03F03 	 and r3,r3,#63
 887 006c 002B     	 cmp r3,#0
 888 006e 10D1     	 bne .L39
 227:../4g_module/pb_common.c ****             {
 228:../4g_module/pb_common.c ****                 /* Good candidate, check further */
 229:../4g_module/pb_common.c ****                 (void)load_descriptor_values(iter);
 889              	 .loc 1 229 0
 890 0070 7868     	 ldr r0,[r7,#4]
 891 0072 FFF7FEFF 	 bl load_descriptor_values
 230:../4g_module/pb_common.c **** 
 231:../4g_module/pb_common.c ****                 if (iter->tag == tag &&
 892              	 .loc 1 231 0
 893 0076 7B68     	 ldr r3,[r7,#4]
 894 0078 1B8A     	 ldrh r3,[r3,#16]
 895 007a 1A46     	 mov r2,r3
 896 007c 3B68     	 ldr r3,[r7]
 897 007e 9A42     	 cmp r2,r3
 898 0080 07D1     	 bne .L39
 232:../4g_module/pb_common.c ****                     PB_LTYPE(iter->type) != PB_LTYPE_EXTENSION)
 899              	 .loc 1 232 0 discriminator 1
 900 0082 7B68     	 ldr r3,[r7,#4]
 901 0084 9B7D     	 ldrb r3,[r3,#22]
 902 0086 03F00F03 	 and r3,r3,#15
 231:../4g_module/pb_common.c ****                     PB_LTYPE(iter->type) != PB_LTYPE_EXTENSION)
 903              	 .loc 1 231 0 discriminator 1
 904 008a 0A2B     	 cmp r3,#10
 905 008c 01D0     	 beq .L39
 233:../4g_module/pb_common.c ****                 {
 234:../4g_module/pb_common.c ****                     /* Found it */
 235:../4g_module/pb_common.c ****                     return true;
 906              	 .loc 1 235 0
 907 008e 0123     	 movs r3,#1
 908 0090 08E0     	 b .L36
 909              	.L39:
 236:../4g_module/pb_common.c ****                 }
 237:../4g_module/pb_common.c ****             }
 238:../4g_module/pb_common.c ****         } while (iter->index != start);
 910              	 .loc 1 238 0
 911 0092 7B68     	 ldr r3,[r7,#4]
 912 0094 1B89     	 ldrh r3,[r3,#8]
 913 0096 FA89     	 ldrh r2,[r7,#14]
 914 0098 9A42     	 cmp r2,r3
 915 009a D5D1     	 bne .L38
 239:../4g_module/pb_common.c **** 
 240:../4g_module/pb_common.c ****         /* Searched all the way back to start, and found nothing. */
 241:../4g_module/pb_common.c ****         (void)load_descriptor_values(iter);
 916              	 .loc 1 241 0
 917 009c 7868     	 ldr r0,[r7,#4]
 918 009e FFF7FEFF 	 bl load_descriptor_values
 242:../4g_module/pb_common.c ****         return false;
 919              	 .loc 1 242 0
 920 00a2 0023     	 movs r3,#0
 921              	.L36:
 922              	.LBE6:
 243:../4g_module/pb_common.c ****     }
 244:../4g_module/pb_common.c **** }
 923              	 .loc 1 244 0
 924 00a4 1846     	 mov r0,r3
 925 00a6 1037     	 adds r7,r7,#16
 926              	.LCFI30:
 927              	 .cfi_def_cfa_offset 8
 928 00a8 BD46     	 mov sp,r7
 929              	.LCFI31:
 930              	 .cfi_def_cfa_register 13
 931              	 
 932 00aa 80BD     	 pop {r7,pc}
 933              	 .cfi_endproc
 934              	.LFE5:
 936              	 .section .text.pb_field_iter_find_extension,"ax",%progbits
 937              	 .align 2
 938              	 .global pb_field_iter_find_extension
 939              	 .thumb
 940              	 .thumb_func
 942              	pb_field_iter_find_extension:
 943              	.LFB6:
 245:../4g_module/pb_common.c **** 
 246:../4g_module/pb_common.c **** bool pb_field_iter_find_extension(pb_field_iter_t *iter)
 247:../4g_module/pb_common.c **** {
 944              	 .loc 1 247 0
 945              	 .cfi_startproc
 946              	 
 947              	 
 948 0000 80B5     	 push {r7,lr}
 949              	.LCFI32:
 950              	 .cfi_def_cfa_offset 8
 951              	 .cfi_offset 7,-8
 952              	 .cfi_offset 14,-4
 953 0002 84B0     	 sub sp,sp,#16
 954              	.LCFI33:
 955              	 .cfi_def_cfa_offset 24
 956 0004 00AF     	 add r7,sp,#0
 957              	.LCFI34:
 958              	 .cfi_def_cfa_register 7
 959 0006 7860     	 str r0,[r7,#4]
 248:../4g_module/pb_common.c ****     if (PB_LTYPE(iter->type) == PB_LTYPE_EXTENSION)
 960              	 .loc 1 248 0
 961 0008 7B68     	 ldr r3,[r7,#4]
 962 000a 9B7D     	 ldrb r3,[r3,#22]
 963 000c 03F00F03 	 and r3,r3,#15
 964 0010 0A2B     	 cmp r3,#10
 965 0012 01D1     	 bne .L41
 249:../4g_module/pb_common.c ****     {
 250:../4g_module/pb_common.c ****         return true;
 966              	 .loc 1 250 0
 967 0014 0123     	 movs r3,#1
 968 0016 22E0     	 b .L42
 969              	.L41:
 970              	.LBB7:
 251:../4g_module/pb_common.c ****     }
 252:../4g_module/pb_common.c ****     else
 253:../4g_module/pb_common.c ****     {
 254:../4g_module/pb_common.c ****         pb_size_t start = iter->index;
 971              	 .loc 1 254 0
 972 0018 7B68     	 ldr r3,[r7,#4]
 973 001a 1B89     	 ldrh r3,[r3,#8]
 974 001c FB81     	 strh r3,[r7,#14]
 975              	.L44:
 255:../4g_module/pb_common.c ****         uint32_t fieldinfo;
 256:../4g_module/pb_common.c **** 
 257:../4g_module/pb_common.c ****         do
 258:../4g_module/pb_common.c ****         {
 259:../4g_module/pb_common.c ****             /* Advance iterator but don't load values yet */
 260:../4g_module/pb_common.c ****             advance_iterator(iter);
 976              	 .loc 1 260 0
 977 001e 7868     	 ldr r0,[r7,#4]
 978 0020 FFF7FEFF 	 bl advance_iterator
 261:../4g_module/pb_common.c **** 
 262:../4g_module/pb_common.c ****             /* Do fast check for field type */
 263:../4g_module/pb_common.c ****             fieldinfo = PB_PROGMEM_READU32(iter->descriptor->field_info[iter->field_info_index]);
 979              	 .loc 1 263 0
 980 0024 7B68     	 ldr r3,[r7,#4]
 981 0026 1B68     	 ldr r3,[r3]
 982 0028 1A68     	 ldr r2,[r3]
 983 002a 7B68     	 ldr r3,[r7,#4]
 984 002c 5B89     	 ldrh r3,[r3,#10]
 985 002e 9B00     	 lsls r3,r3,#2
 986 0030 1344     	 add r3,r3,r2
 987 0032 1B68     	 ldr r3,[r3]
 988 0034 BB60     	 str r3,[r7,#8]
 264:../4g_module/pb_common.c **** 
 265:../4g_module/pb_common.c ****             if (PB_LTYPE((fieldinfo >> 8) & 0xFF) == PB_LTYPE_EXTENSION)
 989              	 .loc 1 265 0
 990 0036 BB68     	 ldr r3,[r7,#8]
 991 0038 1B0A     	 lsrs r3,r3,#8
 992 003a 03F00F03 	 and r3,r3,#15
 993 003e 0A2B     	 cmp r3,#10
 994 0040 04D1     	 bne .L43
 266:../4g_module/pb_common.c ****             {
 267:../4g_module/pb_common.c ****                 return load_descriptor_values(iter);
 995              	 .loc 1 267 0
 996 0042 7868     	 ldr r0,[r7,#4]
 997 0044 FFF7FEFF 	 bl load_descriptor_values
 998 0048 0346     	 mov r3,r0
 999 004a 08E0     	 b .L42
 1000              	.L43:
 268:../4g_module/pb_common.c ****             }
 269:../4g_module/pb_common.c ****         } while (iter->index != start);
 1001              	 .loc 1 269 0
 1002 004c 7B68     	 ldr r3,[r7,#4]
 1003 004e 1B89     	 ldrh r3,[r3,#8]
 1004 0050 FA89     	 ldrh r2,[r7,#14]
 1005 0052 9A42     	 cmp r2,r3
 1006 0054 E3D1     	 bne .L44
 270:../4g_module/pb_common.c **** 
 271:../4g_module/pb_common.c ****         /* Searched all the way back to start, and found nothing. */
 272:../4g_module/pb_common.c ****         (void)load_descriptor_values(iter);
 1007              	 .loc 1 272 0
 1008 0056 7868     	 ldr r0,[r7,#4]
 1009 0058 FFF7FEFF 	 bl load_descriptor_values
 273:../4g_module/pb_common.c ****         return false;
 1010              	 .loc 1 273 0
 1011 005c 0023     	 movs r3,#0
 1012              	.L42:
 1013              	.LBE7:
 274:../4g_module/pb_common.c ****     }
 275:../4g_module/pb_common.c **** }
 1014              	 .loc 1 275 0
 1015 005e 1846     	 mov r0,r3
 1016 0060 1037     	 adds r7,r7,#16
 1017              	.LCFI35:
 1018              	 .cfi_def_cfa_offset 8
 1019 0062 BD46     	 mov sp,r7
 1020              	.LCFI36:
 1021              	 .cfi_def_cfa_register 13
 1022              	 
 1023 0064 80BD     	 pop {r7,pc}
 1024              	 .cfi_endproc
 1025              	.LFE6:
 1027 0066 00BF     	 .section .text.pb_const_cast,"ax",%progbits
 1028              	 .align 2
 1029              	 .thumb
 1030              	 .thumb_func
 1032              	pb_const_cast:
 1033              	.LFB7:
 276:../4g_module/pb_common.c **** 
 277:../4g_module/pb_common.c **** static void *pb_const_cast(const void *p)
 278:../4g_module/pb_common.c **** {
 1034              	 .loc 1 278 0
 1035              	 .cfi_startproc
 1036              	 
 1037              	 
 1038              	 
 1039 0000 80B4     	 push {r7}
 1040              	.LCFI37:
 1041              	 .cfi_def_cfa_offset 4
 1042              	 .cfi_offset 7,-4
 1043 0002 85B0     	 sub sp,sp,#20
 1044              	.LCFI38:
 1045              	 .cfi_def_cfa_offset 24
 1046 0004 00AF     	 add r7,sp,#0
 1047              	.LCFI39:
 1048              	 .cfi_def_cfa_register 7
 1049 0006 7860     	 str r0,[r7,#4]
 279:../4g_module/pb_common.c ****     /* Note: this casts away const, in order to use the common field iterator
 280:../4g_module/pb_common.c ****      * logic for both encoding and decoding. The cast is done using union
 281:../4g_module/pb_common.c ****      * to avoid spurious compiler warnings. */
 282:../4g_module/pb_common.c ****     union {
 283:../4g_module/pb_common.c ****         void *p1;
 284:../4g_module/pb_common.c ****         const void *p2;
 285:../4g_module/pb_common.c ****     } t;
 286:../4g_module/pb_common.c ****     t.p2 = p;
 1050              	 .loc 1 286 0
 1051 0008 7B68     	 ldr r3,[r7,#4]
 1052 000a FB60     	 str r3,[r7,#12]
 287:../4g_module/pb_common.c ****     return t.p1;
 1053              	 .loc 1 287 0
 1054 000c FB68     	 ldr r3,[r7,#12]
 288:../4g_module/pb_common.c **** }
 1055              	 .loc 1 288 0
 1056 000e 1846     	 mov r0,r3
 1057 0010 1437     	 adds r7,r7,#20
 1058              	.LCFI40:
 1059              	 .cfi_def_cfa_offset 4
 1060 0012 BD46     	 mov sp,r7
 1061              	.LCFI41:
 1062              	 .cfi_def_cfa_register 13
 1063              	 
 1064 0014 5DF8047B 	 ldr r7,[sp],#4
 1065              	.LCFI42:
 1066              	 .cfi_restore 7
 1067              	 .cfi_def_cfa_offset 0
 1068 0018 7047     	 bx lr
 1069              	 .cfi_endproc
 1070              	.LFE7:
 1072 001a 00BF     	 .section .text.pb_field_iter_begin_const,"ax",%progbits
 1073              	 .align 2
 1074              	 .global pb_field_iter_begin_const
 1075              	 .thumb
 1076              	 .thumb_func
 1078              	pb_field_iter_begin_const:
 1079              	.LFB8:
 289:../4g_module/pb_common.c **** 
 290:../4g_module/pb_common.c **** bool pb_field_iter_begin_const(pb_field_iter_t *iter, const pb_msgdesc_t *desc, const void *message
 291:../4g_module/pb_common.c **** {
 1080              	 .loc 1 291 0
 1081              	 .cfi_startproc
 1082              	 
 1083              	 
 1084 0000 80B5     	 push {r7,lr}
 1085              	.LCFI43:
 1086              	 .cfi_def_cfa_offset 8
 1087              	 .cfi_offset 7,-8
 1088              	 .cfi_offset 14,-4
 1089 0002 84B0     	 sub sp,sp,#16
 1090              	.LCFI44:
 1091              	 .cfi_def_cfa_offset 24
 1092 0004 00AF     	 add r7,sp,#0
 1093              	.LCFI45:
 1094              	 .cfi_def_cfa_register 7
 1095 0006 F860     	 str r0,[r7,#12]
 1096 0008 B960     	 str r1,[r7,#8]
 1097 000a 7A60     	 str r2,[r7,#4]
 292:../4g_module/pb_common.c ****     return pb_field_iter_begin(iter, desc, pb_const_cast(message));
 1098              	 .loc 1 292 0
 1099 000c 7868     	 ldr r0,[r7,#4]
 1100 000e FFF7FEFF 	 bl pb_const_cast
 1101 0012 0346     	 mov r3,r0
 1102 0014 F868     	 ldr r0,[r7,#12]
 1103 0016 B968     	 ldr r1,[r7,#8]
 1104 0018 1A46     	 mov r2,r3
 1105 001a FFF7FEFF 	 bl pb_field_iter_begin
 1106 001e 0346     	 mov r3,r0
 293:../4g_module/pb_common.c **** }
 1107              	 .loc 1 293 0
 1108 0020 1846     	 mov r0,r3
 1109 0022 1037     	 adds r7,r7,#16
 1110              	.LCFI46:
 1111              	 .cfi_def_cfa_offset 8
 1112 0024 BD46     	 mov sp,r7
 1113              	.LCFI47:
 1114              	 .cfi_def_cfa_register 13
 1115              	 
 1116 0026 80BD     	 pop {r7,pc}
 1117              	 .cfi_endproc
 1118              	.LFE8:
 1120              	 .section .text.pb_field_iter_begin_extension_const,"ax",%progbits
 1121              	 .align 2
 1122              	 .global pb_field_iter_begin_extension_const
 1123              	 .thumb
 1124              	 .thumb_func
 1126              	pb_field_iter_begin_extension_const:
 1127              	.LFB9:
 294:../4g_module/pb_common.c **** 
 295:../4g_module/pb_common.c **** bool pb_field_iter_begin_extension_const(pb_field_iter_t *iter, const pb_extension_t *extension)
 296:../4g_module/pb_common.c **** {
 1128              	 .loc 1 296 0
 1129              	 .cfi_startproc
 1130              	 
 1131              	 
 1132 0000 80B5     	 push {r7,lr}
 1133              	.LCFI48:
 1134              	 .cfi_def_cfa_offset 8
 1135              	 .cfi_offset 7,-8
 1136              	 .cfi_offset 14,-4
 1137 0002 82B0     	 sub sp,sp,#8
 1138              	.LCFI49:
 1139              	 .cfi_def_cfa_offset 16
 1140 0004 00AF     	 add r7,sp,#0
 1141              	.LCFI50:
 1142              	 .cfi_def_cfa_register 7
 1143 0006 7860     	 str r0,[r7,#4]
 1144 0008 3960     	 str r1,[r7]
 297:../4g_module/pb_common.c ****     return pb_field_iter_begin_extension(iter, (pb_extension_t*)pb_const_cast(extension));
 1145              	 .loc 1 297 0
 1146 000a 3868     	 ldr r0,[r7]
 1147 000c FFF7FEFF 	 bl pb_const_cast
 1148 0010 0346     	 mov r3,r0
 1149 0012 7868     	 ldr r0,[r7,#4]
 1150 0014 1946     	 mov r1,r3
 1151 0016 FFF7FEFF 	 bl pb_field_iter_begin_extension
 1152 001a 0346     	 mov r3,r0
 298:../4g_module/pb_common.c **** }
 1153              	 .loc 1 298 0
 1154 001c 1846     	 mov r0,r3
 1155 001e 0837     	 adds r7,r7,#8
 1156              	.LCFI51:
 1157              	 .cfi_def_cfa_offset 8
 1158 0020 BD46     	 mov sp,r7
 1159              	.LCFI52:
 1160              	 .cfi_def_cfa_register 13
 1161              	 
 1162 0022 80BD     	 pop {r7,pc}
 1163              	 .cfi_endproc
 1164              	.LFE9:
 1166              	 .section .text.pb_default_field_callback,"ax",%progbits
 1167              	 .align 2
 1168              	 .global pb_default_field_callback
 1169              	 .thumb
 1170              	 .thumb_func
 1172              	pb_default_field_callback:
 1173              	.LFB10:
 299:../4g_module/pb_common.c **** 
 300:../4g_module/pb_common.c **** bool pb_default_field_callback(pb_istream_t *istream, pb_ostream_t *ostream, const pb_field_t *fiel
 301:../4g_module/pb_common.c **** {
 1174              	 .loc 1 301 0
 1175              	 .cfi_startproc
 1176              	 
 1177              	 
 1178 0000 80B5     	 push {r7,lr}
 1179              	.LCFI53:
 1180              	 .cfi_def_cfa_offset 8
 1181              	 .cfi_offset 7,-8
 1182              	 .cfi_offset 14,-4
 1183 0002 86B0     	 sub sp,sp,#24
 1184              	.LCFI54:
 1185              	 .cfi_def_cfa_offset 32
 1186 0004 00AF     	 add r7,sp,#0
 1187              	.LCFI55:
 1188              	 .cfi_def_cfa_register 7
 1189 0006 F860     	 str r0,[r7,#12]
 1190 0008 B960     	 str r1,[r7,#8]
 1191 000a 7A60     	 str r2,[r7,#4]
 302:../4g_module/pb_common.c ****     if (field->data_size == sizeof(pb_callback_t))
 1192              	 .loc 1 302 0
 1193 000c 7B68     	 ldr r3,[r7,#4]
 1194 000e 5B8A     	 ldrh r3,[r3,#18]
 1195 0010 082B     	 cmp r3,#8
 1196 0012 25D1     	 bne .L52
 1197              	.LBB8:
 303:../4g_module/pb_common.c ****     {
 304:../4g_module/pb_common.c ****         pb_callback_t *pCallback = (pb_callback_t*)field->pData;
 1198              	 .loc 1 304 0
 1199 0014 7B68     	 ldr r3,[r7,#4]
 1200 0016 DB69     	 ldr r3,[r3,#28]
 1201 0018 7B61     	 str r3,[r7,#20]
 305:../4g_module/pb_common.c **** 
 306:../4g_module/pb_common.c ****         if (pCallback != NULL)
 1202              	 .loc 1 306 0
 1203 001a 7B69     	 ldr r3,[r7,#20]
 1204 001c 002B     	 cmp r3,#0
 1205 001e 1FD0     	 beq .L52
 307:../4g_module/pb_common.c ****         {
 308:../4g_module/pb_common.c ****             if (istream != NULL && pCallback->funcs.decode != NULL)
 1206              	 .loc 1 308 0
 1207 0020 FB68     	 ldr r3,[r7,#12]
 1208 0022 002B     	 cmp r3,#0
 1209 0024 0CD0     	 beq .L53
 1210              	 .loc 1 308 0 is_stmt 0 discriminator 1
 1211 0026 7B69     	 ldr r3,[r7,#20]
 1212 0028 1B68     	 ldr r3,[r3]
 1213 002a 002B     	 cmp r3,#0
 1214 002c 08D0     	 beq .L53
 309:../4g_module/pb_common.c ****             {
 310:../4g_module/pb_common.c ****                 return pCallback->funcs.decode(istream, field, &pCallback->arg);
 1215              	 .loc 1 310 0 is_stmt 1
 1216 002e 7B69     	 ldr r3,[r7,#20]
 1217 0030 1B68     	 ldr r3,[r3]
 1218 0032 7A69     	 ldr r2,[r7,#20]
 1219 0034 0432     	 adds r2,r2,#4
 1220 0036 F868     	 ldr r0,[r7,#12]
 1221 0038 7968     	 ldr r1,[r7,#4]
 1222 003a 9847     	 blx r3
 1223 003c 0346     	 mov r3,r0
 1224 003e 10E0     	 b .L54
 1225              	.L53:
 311:../4g_module/pb_common.c ****             }
 312:../4g_module/pb_common.c **** 
 313:../4g_module/pb_common.c ****             if (ostream != NULL && pCallback->funcs.encode != NULL)
 1226              	 .loc 1 313 0
 1227 0040 BB68     	 ldr r3,[r7,#8]
 1228 0042 002B     	 cmp r3,#0
 1229 0044 0CD0     	 beq .L52
 1230              	 .loc 1 313 0 is_stmt 0 discriminator 1
 1231 0046 7B69     	 ldr r3,[r7,#20]
 1232 0048 1B68     	 ldr r3,[r3]
 1233 004a 002B     	 cmp r3,#0
 1234 004c 08D0     	 beq .L52
 314:../4g_module/pb_common.c ****             {
 315:../4g_module/pb_common.c ****                 return pCallback->funcs.encode(ostream, field, &pCallback->arg);
 1235              	 .loc 1 315 0 is_stmt 1
 1236 004e 7B69     	 ldr r3,[r7,#20]
 1237 0050 1B68     	 ldr r3,[r3]
 1238 0052 7A69     	 ldr r2,[r7,#20]
 1239 0054 0432     	 adds r2,r2,#4
 1240 0056 B868     	 ldr r0,[r7,#8]
 1241 0058 7968     	 ldr r1,[r7,#4]
 1242 005a 9847     	 blx r3
 1243 005c 0346     	 mov r3,r0
 1244 005e 00E0     	 b .L54
 1245              	.L52:
 1246              	.LBE8:
 316:../4g_module/pb_common.c ****             }
 317:../4g_module/pb_common.c ****         }
 318:../4g_module/pb_common.c ****     }
 319:../4g_module/pb_common.c **** 
 320:../4g_module/pb_common.c ****     return true; /* Success, but didn't do anything */
 1247              	 .loc 1 320 0
 1248 0060 0123     	 movs r3,#1
 1249              	.L54:
 321:../4g_module/pb_common.c **** 
 322:../4g_module/pb_common.c **** }
 1250              	 .loc 1 322 0
 1251 0062 1846     	 mov r0,r3
 1252 0064 1837     	 adds r7,r7,#24
 1253              	.LCFI56:
 1254              	 .cfi_def_cfa_offset 8
 1255 0066 BD46     	 mov sp,r7
 1256              	.LCFI57:
 1257              	 .cfi_def_cfa_register 13
 1258              	 
 1259 0068 80BD     	 pop {r7,pc}
 1260              	 .cfi_endproc
 1261              	.LFE10:
 1263 006a 00BF     	 .text
 1264              	.Letext0:
 1265              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1266              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1267              	 .file 4 "../4g_module/pb.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pb_common.c
    {standard input}:20     .text.load_descriptor_values:00000000 $t
    {standard input}:24     .text.load_descriptor_values:00000000 load_descriptor_values
    {standard input}:469    .text.advance_iterator:00000000 $t
    {standard input}:473    .text.advance_iterator:00000000 advance_iterator
    {standard input}:613    .text.pb_field_iter_begin:00000000 $t
    {standard input}:618    .text.pb_field_iter_begin:00000000 pb_field_iter_begin
    {standard input}:669    .text.pb_field_iter_begin_extension:00000000 $t
    {standard input}:674    .text.pb_field_iter_begin_extension:00000000 pb_field_iter_begin_extension
    {standard input}:751    .text.pb_field_iter_next:00000000 $t
    {standard input}:756    .text.pb_field_iter_next:00000000 pb_field_iter_next
    {standard input}:802    .text.pb_field_iter_find:00000000 $t
    {standard input}:807    .text.pb_field_iter_find:00000000 pb_field_iter_find
    {standard input}:937    .text.pb_field_iter_find_extension:00000000 $t
    {standard input}:942    .text.pb_field_iter_find_extension:00000000 pb_field_iter_find_extension
    {standard input}:1028   .text.pb_const_cast:00000000 $t
    {standard input}:1032   .text.pb_const_cast:00000000 pb_const_cast
    {standard input}:1073   .text.pb_field_iter_begin_const:00000000 $t
    {standard input}:1078   .text.pb_field_iter_begin_const:00000000 pb_field_iter_begin_const
    {standard input}:1121   .text.pb_field_iter_begin_extension_const:00000000 $t
    {standard input}:1126   .text.pb_field_iter_begin_extension_const:00000000 pb_field_iter_begin_extension_const
    {standard input}:1167   .text.pb_default_field_callback:00000000 $t
    {standard input}:1172   .text.pb_default_field_callback:00000000 pb_default_field_callback
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
